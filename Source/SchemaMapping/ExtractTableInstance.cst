<%@ CodeTemplate Src="..\TemplateLib\CommonSqlCode.cs" Debug="true" Inherits="MoM.Templates.CommonSqlCode" Language="C#" TargetLanguage="T-SQL"
	Description="Generates SELECT/INSERT/UPDATE/DELETE stored procedures based on one or more selected tables, or an entire database schema." ResponseEncoding="UTF-8" NoWarn="0108,0618,1572,1573,1574,0162,2002"%>
<%@ Property Name="Table" Type="SchemaExplorer.TableSchema" Optional="False" Category="Context" Description="The table to be rendered" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="System.Collections" %>
CREATE TABLE [<%=(Table.Owner)%>].[<%=(Table.Name)%>] (
<%
foreach ( ColumnSchema column in Table.Columns ){%>
	[<%= column.Name %>] <%= GetPagedHelper(column)  %> <%= column.AllowDBNull ? "NULL" : "NOT NULL" %>, 
<% } %>
)

<script runat="template">

/// <summary>
/// Get a SqlParameter statement for a column
/// </summary>
/// <param name="column">Column for which to get the Sql parameter statement</param>
/// <returns>Sql Parameter statement</returns>
public string GetPagedHelper(ColumnSchema column)
{
	string param = "[" + column.Name + "] [" + column.NativeType + "]";
	
	// user defined data types do not need size components
	if (!IsUserDefinedType(column))
	{
        switch (column.DataType)
        {
            case DbType.Decimal:
            {
                param += "(" + column.Precision + ", " + column.Scale + ")";
                break;
            }
            case DbType.AnsiString:
            case DbType.AnsiStringFixedLength:
            case DbType.String:
            case DbType.StringFixedLength:
            case DbType.Binary:
            {
                if (column.NativeType != "text" && column.NativeType != "ntext" && column.NativeType != "timestamp" && column.NativeType != "image")
                {
                    if (column.Size > 0)
                    {
                        param += "(" + column.Size + ")";
                    }
                    else
                    {
                        param += "(MAX)";
                    }
                }
                break;
            }
        }	
	}
	return param;
}
</script>
