<%--
 * $Id: OracleEntityViewProvider.cst,v 2.3 2008/09/10 13:08:04 bniemyjski Exp $
 * Last modified by $Author: bniemyjski $
 * Last modified at $Date: 2008-09-10 16:01:56 -0600 (Wed, 10 Sep 2008) $
 * $Revision: 787 $
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Description="Generate BusinessObject." ResponseEncoding="UTF-8" NoWarn="0108,0618,1572,1573,1574,0162,2002"%>

<%@ Property Name="NameSpace" Type="System.String" Category="Data" Description="Namespace." %>
<%@ Property Name="DALNameSpace" Type="System.String" Category="Data" Description="DAL Namespace." %>
<%@ Property Name="ClassName" Type="System.String" Category="Data" Description="Member Class Name." %>
<%@ Property Name="ProviderName" Type="System.String" Category="Data" Description="The name of the provider class." %>
<%@ Property Name="ProviderBaseName" Type="System.String" Category="Data" Description="Abstract repository Class Name." %>
#region Using directives

using System;
using System.Data;
using System.Collections;
using System.Diagnostics;
using Microsoft.Practices.EnterpriseLibrary.Data;
using System.ComponentModel;

using <%=NameSpace%>;
using <%=DALNameSpace%>;

#endregion

namespace <%=DALNameSpace%>.OracleClient
{
	///<summary>
	/// This class is the SqlClient Data Access Logic Component implementation for the <see cref="<%=ClassName%>"/> entity.
	///</summary>
	[DataObject]
	[CLSCompliant(true)]
	public partial class <%=ProviderName%>: <%=ProviderBaseName%>
	{		
		/// <summary>
		/// Creates a new <see cref="<%=ProviderName%>"/> instance.
		/// Uses connection string to connect to datasource.
		/// </summary>
		/// <param name="connectionString">The connection string to the database.</param>
		/// <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
		/// <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
		public <%=ProviderName%>(string connectionString, bool useStoredProcedure, string providerInvariantName): base(connectionString, useStoredProcedure, providerInvariantName){}
	}
}