using System;
using System.ComponentModel;

namespace Nettiers.AdventureWorks.Entities
{
	/// <summary>
	///		The data structure representation of the 'Address' table via interface.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	public interface IAddress 
	{
		/// <summary>			
		/// AddressID : Primary key for Address records.
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "Address"</remarks>
		System.Int32 AddressId { get; set; }
				
		
		
		/// <summary>
		/// AddressLine1 : First street address line.
		/// </summary>
		System.String  AddressLine1  { get; set; }
		
		/// <summary>
		/// AddressLine2 : Second street address line.
		/// </summary>
		System.String  AddressLine2  { get; set; }
		
		/// <summary>
		/// City : Name of the city.
		/// </summary>
		System.String  City  { get; set; }
		
		/// <summary>
		/// StateProvinceID : Unique identification number for the state or province. Foreign key to StateProvince table.
		/// </summary>
		System.Int32  StateProvinceId  { get; set; }
		
		/// <summary>
		/// PostalCode : Postal code for the street address.
		/// </summary>
		System.String  PostalCode  { get; set; }
		
		/// <summary>
		/// rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
		/// </summary>
		System.Guid  Rowguid  { get; set; }
		
		/// <summary>
		/// ModifiedDate : Date and time the record was last updated.
		/// </summary>
		System.DateTime  ModifiedDate  { get; set; }
			
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		System.Object Clone();
		
		#region Data Properties


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _customerAddressAddressId
		/// </summary>	
		TList<CustomerAddress> CustomerAddressCollection {  get;  set;}	

		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the junction table customerIdCustomerCollectionFromCustomerAddress
		/// </summary>	
		TList<Customer> CustomerIdCustomerCollection_From_CustomerAddress { get; set; }	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _salesOrderHeaderShipToAddressIdGetByBillToAddressId
		/// </summary>	
		TList<SalesOrderHeader> SalesOrderHeaderCollectionGetByBillToAddressId {  get;  set;}	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _employeeAddressAddressId
		/// </summary>	
		TList<EmployeeAddress> EmployeeAddressCollection {  get;  set;}	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _salesOrderHeaderShipToAddressIdGetByShipToAddressId
		/// </summary>	
		TList<SalesOrderHeader> SalesOrderHeaderCollectionGetByShipToAddressId {  get;  set;}	

		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the junction table vendorIdVendorCollectionFromVendorAddress
		/// </summary>	
		TList<Vendor> VendorIdVendorCollection_From_VendorAddress { get; set; }	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _vendorAddressAddressId
		/// </summary>	
		TList<VendorAddress> VendorAddressCollection {  get;  set;}	

		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the junction table employeeIdEmployeeCollectionFromEmployeeAddress
		/// </summary>	
		TList<Employee> EmployeeIdEmployeeCollection_From_EmployeeAddress { get; set; }	

		#endregion Data Properties

	}
}


