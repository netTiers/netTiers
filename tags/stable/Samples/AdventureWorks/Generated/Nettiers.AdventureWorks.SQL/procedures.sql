
USE [AdventureWorks]
GO
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritory_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritory_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritory_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the SalesTerritory table
-- Table Comment: Sales territory lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritory_Get_List

AS


				
				SELECT
					[TerritoryID],
					[Name],
					[CountryRegionCode],
					[Group],
					[SalesYTD],
					[SalesLastYear],
					[CostYTD],
					[CostLastYear],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesTerritory]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritory_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritory_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritory_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the SalesTerritory table passing page index and page count parameters
-- Table Comment: Sales territory lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritory_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[TerritoryID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [TerritoryID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [CountryRegionCode]'
				SET @SQL = @SQL + ', [Group]'
				SET @SQL = @SQL + ', [SalesYTD]'
				SET @SQL = @SQL + ', [SalesLastYear]'
				SET @SQL = @SQL + ', [CostYTD]'
				SET @SQL = @SQL + ', [CostLastYear]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[SalesTerritory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [TerritoryID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [CountryRegionCode],'
				SET @SQL = @SQL + ' [Group],'
				SET @SQL = @SQL + ' [SalesYTD],'
				SET @SQL = @SQL + ' [SalesLastYear],'
				SET @SQL = @SQL + ' [CostYTD],'
				SET @SQL = @SQL + ' [CostLastYear],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[SalesTerritory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritory_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritory_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritory_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the SalesTerritory table
-- Table Comment: Sales territory lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritory_Insert
(

	@TerritoryId int    OUTPUT,

	@Name nvarchar (50)  ,

	@CountryRegionCode nvarchar (3)  ,

	@Group nvarchar (50)  ,

	@SalesYtd money   ,

	@SalesLastYear money   ,

	@CostYtd money   ,

	@CostLastYear money   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Sales].[SalesTerritory]
					(
					[Name]
					,[CountryRegionCode]
					,[Group]
					,[SalesYTD]
					,[SalesLastYear]
					,[CostYTD]
					,[CostLastYear]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@Name
					,@CountryRegionCode
					,@Group
					,@SalesYtd
					,@SalesLastYear
					,@CostYtd
					,@CostLastYear
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @TerritoryId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritory_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritory_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritory_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the SalesTerritory table
-- Table Comment: Sales territory lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritory_Update
(

	@TerritoryId int   ,

	@Name nvarchar (50)  ,

	@CountryRegionCode nvarchar (3)  ,

	@Group nvarchar (50)  ,

	@SalesYtd money   ,

	@SalesLastYear money   ,

	@CostYtd money   ,

	@CostLastYear money   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[SalesTerritory]
				SET
					[Name] = @Name
					,[CountryRegionCode] = @CountryRegionCode
					,[Group] = @Group
					,[SalesYTD] = @SalesYtd
					,[SalesLastYear] = @SalesLastYear
					,[CostYTD] = @CostYtd
					,[CostLastYear] = @CostLastYear
					,[ModifiedDate] = @ModifiedDate
				WHERE
[TerritoryID] = @TerritoryId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritory_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritory_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritory_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the SalesTerritory table
-- Table Comment: Sales territory lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritory_Delete
(

	@TerritoryId int   
)
AS


				DELETE FROM [Sales].[SalesTerritory] WITH (ROWLOCK) 
				WHERE
					[TerritoryID] = @TerritoryId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritory_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritory_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritory_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesTerritory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritory_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[TerritoryID],
					[Name],
					[CountryRegionCode],
					[Group],
					[SalesYTD],
					[SalesLastYear],
					[CostYTD],
					[CostLastYear],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesTerritory]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritory_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritory_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritory_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesTerritory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritory_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[TerritoryID],
					[Name],
					[CountryRegionCode],
					[Group],
					[SalesYTD],
					[SalesLastYear],
					[CostYTD],
					[CostLastYear],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesTerritory]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritory_GetByTerritoryId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritory_GetByTerritoryId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritory_GetByTerritoryId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesTerritory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritory_GetByTerritoryId
(

	@TerritoryId int   
)
AS


				SELECT
					[TerritoryID],
					[Name],
					[CountryRegionCode],
					[Group],
					[SalesYTD],
					[SalesLastYear],
					[CostYTD],
					[CostLastYear],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesTerritory]
				WHERE
					[TerritoryID] = @TerritoryId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritory_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritory_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritory_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the SalesTerritory table passing nullable parameters
-- Table Comment: Sales territory lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritory_Find
(

	@SearchUsingOR bit   = null ,

	@TerritoryId int   = null ,

	@Name nvarchar (50)  = null ,

	@CountryRegionCode nvarchar (3)  = null ,

	@Group nvarchar (50)  = null ,

	@SalesYtd money   = null ,

	@SalesLastYear money   = null ,

	@CostYtd money   = null ,

	@CostLastYear money   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [TerritoryID]
	, [Name]
	, [CountryRegionCode]
	, [Group]
	, [SalesYTD]
	, [SalesLastYear]
	, [CostYTD]
	, [CostLastYear]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SalesTerritory]
    WHERE 
	 ([TerritoryID] = @TerritoryId OR @TerritoryId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([CountryRegionCode] = @CountryRegionCode OR @CountryRegionCode IS NULL)
	AND ([Group] = @Group OR @Group IS NULL)
	AND ([SalesYTD] = @SalesYtd OR @SalesYtd IS NULL)
	AND ([SalesLastYear] = @SalesLastYear OR @SalesLastYear IS NULL)
	AND ([CostYTD] = @CostYtd OR @CostYtd IS NULL)
	AND ([CostLastYear] = @CostLastYear OR @CostLastYear IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [TerritoryID]
	, [Name]
	, [CountryRegionCode]
	, [Group]
	, [SalesYTD]
	, [SalesLastYear]
	, [CostYTD]
	, [CostLastYear]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SalesTerritory]
    WHERE 
	 ([TerritoryID] = @TerritoryId AND @TerritoryId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([CountryRegionCode] = @CountryRegionCode AND @CountryRegionCode is not null)
	OR ([Group] = @Group AND @Group is not null)
	OR ([SalesYTD] = @SalesYtd AND @SalesYtd is not null)
	OR ([SalesLastYear] = @SalesLastYear AND @SalesLastYear is not null)
	OR ([CostYTD] = @CostYtd AND @CostYtd is not null)
	OR ([CostLastYear] = @CostLastYear AND @CostLastYear is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Location_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Location_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Location_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the Location table
-- Table Comment: Product inventory and manufacturing locations.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Location_Get_List

AS


				
				SELECT
					[LocationID],
					[Name],
					[CostRate],
					[Availability],
					[ModifiedDate]
				FROM
					[Production].[Location]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Location_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Location_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Location_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the Location table passing page index and page count parameters
-- Table Comment: Product inventory and manufacturing locations.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Location_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[LocationID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [LocationID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [CostRate]'
				SET @SQL = @SQL + ', [Availability]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[Location]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [LocationID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [CostRate],'
				SET @SQL = @SQL + ' [Availability],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[Location]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Location_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Location_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Location_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the Location table
-- Table Comment: Product inventory and manufacturing locations.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Location_Insert
(

	@LocationId smallint    OUTPUT,

	@Name nvarchar (50)  ,

	@CostRate smallmoney   ,

	@Availability decimal (8, 2)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[Location]
					(
					[Name]
					,[CostRate]
					,[Availability]
					,[ModifiedDate]
					)
				VALUES
					(
					@Name
					,@CostRate
					,@Availability
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @LocationId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Location_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Location_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Location_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the Location table
-- Table Comment: Product inventory and manufacturing locations.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Location_Update
(

	@LocationId smallint   ,

	@Name nvarchar (50)  ,

	@CostRate smallmoney   ,

	@Availability decimal (8, 2)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[Location]
				SET
					[Name] = @Name
					,[CostRate] = @CostRate
					,[Availability] = @Availability
					,[ModifiedDate] = @ModifiedDate
				WHERE
[LocationID] = @LocationId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Location_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Location_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Location_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the Location table
-- Table Comment: Product inventory and manufacturing locations.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Location_Delete
(

	@LocationId smallint   
)
AS


				DELETE FROM [Production].[Location] WITH (ROWLOCK) 
				WHERE
					[LocationID] = @LocationId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Location_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Location_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Location_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Location table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Location_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[LocationID],
					[Name],
					[CostRate],
					[Availability],
					[ModifiedDate]
				FROM
					[Production].[Location]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Location_GetByLocationId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Location_GetByLocationId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Location_GetByLocationId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Location table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Location_GetByLocationId
(

	@LocationId smallint   
)
AS


				SELECT
					[LocationID],
					[Name],
					[CostRate],
					[Availability],
					[ModifiedDate]
				FROM
					[Production].[Location]
				WHERE
					[LocationID] = @LocationId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Location_GetByProductIdFromProductInventory procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Location_GetByProductIdFromProductInventory') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Location_GetByProductIdFromProductInventory
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Location_GetByProductIdFromProductInventory
(

	@ProductId int   
)
AS


SELECT Production.[Location].[LocationID]
       ,Production.[Location].[Name]
       ,Production.[Location].[CostRate]
       ,Production.[Location].[Availability]
       ,Production.[Location].[ModifiedDate]
  FROM Production.[Location]
 WHERE EXISTS (SELECT 1
                 FROM Production.[ProductInventory] 
                WHERE Production.[ProductInventory].[ProductID] = @ProductId
                  AND Production.[ProductInventory].[LocationID] = Production.[Location].[LocationID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Location_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Location_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Location_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the Location table passing nullable parameters
-- Table Comment: Product inventory and manufacturing locations.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Location_Find
(

	@SearchUsingOR bit   = null ,

	@LocationId smallint   = null ,

	@Name nvarchar (50)  = null ,

	@CostRate smallmoney   = null ,

	@Availability decimal (8, 2)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [LocationID]
	, [Name]
	, [CostRate]
	, [Availability]
	, [ModifiedDate]
    FROM
	[Production].[Location]
    WHERE 
	 ([LocationID] = @LocationId OR @LocationId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([CostRate] = @CostRate OR @CostRate IS NULL)
	AND ([Availability] = @Availability OR @Availability IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [LocationID]
	, [Name]
	, [CostRate]
	, [Availability]
	, [ModifiedDate]
    FROM
	[Production].[Location]
    WHERE 
	 ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([CostRate] = @CostRate AND @CostRate is not null)
	OR ([Availability] = @Availability AND @Availability is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesReason_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesReason_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesReason_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the SalesReason table
-- Table Comment: Lookup table of customer purchase reasons.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesReason_Get_List

AS


				
				SELECT
					[SalesReasonID],
					[Name],
					[ReasonType],
					[ModifiedDate]
				FROM
					[Sales].[SalesReason]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesReason_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesReason_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesReason_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the SalesReason table passing page index and page count parameters
-- Table Comment: Lookup table of customer purchase reasons.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesReason_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SalesReasonID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SalesReasonID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [ReasonType]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[SalesReason]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SalesReasonID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [ReasonType],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[SalesReason]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesReason_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesReason_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesReason_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the SalesReason table
-- Table Comment: Lookup table of customer purchase reasons.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesReason_Insert
(

	@SalesReasonId int    OUTPUT,

	@Name nvarchar (50)  ,

	@ReasonType nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Sales].[SalesReason]
					(
					[Name]
					,[ReasonType]
					,[ModifiedDate]
					)
				VALUES
					(
					@Name
					,@ReasonType
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @SalesReasonId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesReason_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesReason_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesReason_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the SalesReason table
-- Table Comment: Lookup table of customer purchase reasons.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesReason_Update
(

	@SalesReasonId int   ,

	@Name nvarchar (50)  ,

	@ReasonType nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[SalesReason]
				SET
					[Name] = @Name
					,[ReasonType] = @ReasonType
					,[ModifiedDate] = @ModifiedDate
				WHERE
[SalesReasonID] = @SalesReasonId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesReason_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesReason_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesReason_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the SalesReason table
-- Table Comment: Lookup table of customer purchase reasons.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesReason_Delete
(

	@SalesReasonId int   
)
AS


				DELETE FROM [Sales].[SalesReason] WITH (ROWLOCK) 
				WHERE
					[SalesReasonID] = @SalesReasonId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesReason_GetBySalesReasonId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesReason_GetBySalesReasonId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesReason_GetBySalesReasonId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesReason table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesReason_GetBySalesReasonId
(

	@SalesReasonId int   
)
AS


				SELECT
					[SalesReasonID],
					[Name],
					[ReasonType],
					[ModifiedDate]
				FROM
					[Sales].[SalesReason]
				WHERE
					[SalesReasonID] = @SalesReasonId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesReason_GetBySalesOrderIdFromSalesOrderHeaderSalesReason procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesReason_GetBySalesOrderIdFromSalesOrderHeaderSalesReason') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesReason_GetBySalesOrderIdFromSalesOrderHeaderSalesReason
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesReason_GetBySalesOrderIdFromSalesOrderHeaderSalesReason
(

	@SalesOrderId int   
)
AS


SELECT Sales.[SalesReason].[SalesReasonID]
       ,Sales.[SalesReason].[Name]
       ,Sales.[SalesReason].[ReasonType]
       ,Sales.[SalesReason].[ModifiedDate]
  FROM Sales.[SalesReason]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[SalesOrderHeaderSalesReason] 
                WHERE Sales.[SalesOrderHeaderSalesReason].[SalesOrderID] = @SalesOrderId
                  AND Sales.[SalesOrderHeaderSalesReason].[SalesReasonID] = Sales.[SalesReason].[SalesReasonID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesReason_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesReason_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesReason_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the SalesReason table passing nullable parameters
-- Table Comment: Lookup table of customer purchase reasons.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesReason_Find
(

	@SearchUsingOR bit   = null ,

	@SalesReasonId int   = null ,

	@Name nvarchar (50)  = null ,

	@ReasonType nvarchar (50)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SalesReasonID]
	, [Name]
	, [ReasonType]
	, [ModifiedDate]
    FROM
	[Sales].[SalesReason]
    WHERE 
	 ([SalesReasonID] = @SalesReasonId OR @SalesReasonId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([ReasonType] = @ReasonType OR @ReasonType IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SalesReasonID]
	, [Name]
	, [ReasonType]
	, [ModifiedDate]
    FROM
	[Sales].[SalesReason]
    WHERE 
	 ([SalesReasonID] = @SalesReasonId AND @SalesReasonId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([ReasonType] = @ReasonType AND @ReasonType is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPersonQuotaHistory_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPersonQuotaHistory_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the SalesPersonQuotaHistory table
-- Table Comment: Sales performance tracking.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_Get_List

AS


				
				SELECT
					[SalesPersonID],
					[QuotaDate],
					[SalesQuota],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesPersonQuotaHistory]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPersonQuotaHistory_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPersonQuotaHistory_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the SalesPersonQuotaHistory table passing page index and page count parameters
-- Table Comment: Sales performance tracking.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SalesPersonID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SalesPersonID]'
				SET @SQL = @SQL + ', [QuotaDate]'
				SET @SQL = @SQL + ', [SalesQuota]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[SalesPersonQuotaHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SalesPersonID],'
				SET @SQL = @SQL + ' [QuotaDate],'
				SET @SQL = @SQL + ' [SalesQuota],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[SalesPersonQuotaHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPersonQuotaHistory_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPersonQuotaHistory_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the SalesPersonQuotaHistory table
-- Table Comment: Sales performance tracking.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_Insert
(

	@SalesPersonId int   ,

	@QuotaDate datetime   ,

	@SalesQuota money   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Sales].[SalesPersonQuotaHistory]
					(
					[SalesPersonID]
					,[QuotaDate]
					,[SalesQuota]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@SalesPersonId
					,@QuotaDate
					,@SalesQuota
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPersonQuotaHistory_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPersonQuotaHistory_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the SalesPersonQuotaHistory table
-- Table Comment: Sales performance tracking.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_Update
(

	@SalesPersonId int   ,

	@OriginalSalesPersonId int   ,

	@QuotaDate datetime   ,

	@OriginalQuotaDate datetime   ,

	@SalesQuota money   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[SalesPersonQuotaHistory]
				SET
					[SalesPersonID] = @SalesPersonId
					,[QuotaDate] = @QuotaDate
					,[SalesQuota] = @SalesQuota
					,[ModifiedDate] = @ModifiedDate
				WHERE
[SalesPersonID] = @OriginalSalesPersonId 
AND [QuotaDate] = @OriginalQuotaDate 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPersonQuotaHistory_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPersonQuotaHistory_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the SalesPersonQuotaHistory table
-- Table Comment: Sales performance tracking.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_Delete
(

	@SalesPersonId int   ,

	@QuotaDate datetime   
)
AS


				DELETE FROM [Sales].[SalesPersonQuotaHistory] WITH (ROWLOCK) 
				WHERE
					[SalesPersonID] = @SalesPersonId
					AND [QuotaDate] = @QuotaDate
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPersonQuotaHistory_GetBySalesPersonId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPersonQuotaHistory_GetBySalesPersonId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_GetBySalesPersonId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesPersonQuotaHistory table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_GetBySalesPersonId
(

	@SalesPersonId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesPersonID],
					[QuotaDate],
					[SalesQuota],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesPersonQuotaHistory]
				WHERE
					[SalesPersonID] = @SalesPersonId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPersonQuotaHistory_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPersonQuotaHistory_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesPersonQuotaHistory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[SalesPersonID],
					[QuotaDate],
					[SalesQuota],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesPersonQuotaHistory]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPersonQuotaHistory_GetBySalesPersonIdQuotaDate procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPersonQuotaHistory_GetBySalesPersonIdQuotaDate') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_GetBySalesPersonIdQuotaDate
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesPersonQuotaHistory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_GetBySalesPersonIdQuotaDate
(

	@SalesPersonId int   ,

	@QuotaDate datetime   
)
AS


				SELECT
					[SalesPersonID],
					[QuotaDate],
					[SalesQuota],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesPersonQuotaHistory]
				WHERE
					[SalesPersonID] = @SalesPersonId
					AND [QuotaDate] = @QuotaDate
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPersonQuotaHistory_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPersonQuotaHistory_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the SalesPersonQuotaHistory table passing nullable parameters
-- Table Comment: Sales performance tracking.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPersonQuotaHistory_Find
(

	@SearchUsingOR bit   = null ,

	@SalesPersonId int   = null ,

	@QuotaDate datetime   = null ,

	@SalesQuota money   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SalesPersonID]
	, [QuotaDate]
	, [SalesQuota]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SalesPersonQuotaHistory]
    WHERE 
	 ([SalesPersonID] = @SalesPersonId OR @SalesPersonId IS NULL)
	AND ([QuotaDate] = @QuotaDate OR @QuotaDate IS NULL)
	AND ([SalesQuota] = @SalesQuota OR @SalesQuota IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SalesPersonID]
	, [QuotaDate]
	, [SalesQuota]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SalesPersonQuotaHistory]
    WHERE 
	 ([SalesPersonID] = @SalesPersonId AND @SalesPersonId is not null)
	OR ([QuotaDate] = @QuotaDate AND @QuotaDate is not null)
	OR ([SalesQuota] = @SalesQuota AND @SalesQuota is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the SalesOrderHeader table
-- Table Comment: General sales order information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_Get_List

AS


				
				SELECT
					[SalesOrderID],
					[RevisionNumber],
					[OrderDate],
					[DueDate],
					[ShipDate],
					[Status],
					[OnlineOrderFlag],
					[SalesOrderNumber],
					[PurchaseOrderNumber],
					[AccountNumber],
					[CustomerID],
					[ContactID],
					[SalesPersonID],
					[TerritoryID],
					[BillToAddressID],
					[ShipToAddressID],
					[ShipMethodID],
					[CreditCardID],
					[CreditCardApprovalCode],
					[CurrencyRateID],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[Comment],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeader]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the SalesOrderHeader table passing page index and page count parameters
-- Table Comment: General sales order information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SalesOrderID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SalesOrderID]'
				SET @SQL = @SQL + ', [RevisionNumber]'
				SET @SQL = @SQL + ', [OrderDate]'
				SET @SQL = @SQL + ', [DueDate]'
				SET @SQL = @SQL + ', [ShipDate]'
				SET @SQL = @SQL + ', [Status]'
				SET @SQL = @SQL + ', [OnlineOrderFlag]'
				SET @SQL = @SQL + ', [SalesOrderNumber]'
				SET @SQL = @SQL + ', [PurchaseOrderNumber]'
				SET @SQL = @SQL + ', [AccountNumber]'
				SET @SQL = @SQL + ', [CustomerID]'
				SET @SQL = @SQL + ', [ContactID]'
				SET @SQL = @SQL + ', [SalesPersonID]'
				SET @SQL = @SQL + ', [TerritoryID]'
				SET @SQL = @SQL + ', [BillToAddressID]'
				SET @SQL = @SQL + ', [ShipToAddressID]'
				SET @SQL = @SQL + ', [ShipMethodID]'
				SET @SQL = @SQL + ', [CreditCardID]'
				SET @SQL = @SQL + ', [CreditCardApprovalCode]'
				SET @SQL = @SQL + ', [CurrencyRateID]'
				SET @SQL = @SQL + ', [SubTotal]'
				SET @SQL = @SQL + ', [TaxAmt]'
				SET @SQL = @SQL + ', [Freight]'
				SET @SQL = @SQL + ', [TotalDue]'
				SET @SQL = @SQL + ', [Comment]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[SalesOrderHeader]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SalesOrderID],'
				SET @SQL = @SQL + ' [RevisionNumber],'
				SET @SQL = @SQL + ' [OrderDate],'
				SET @SQL = @SQL + ' [DueDate],'
				SET @SQL = @SQL + ' [ShipDate],'
				SET @SQL = @SQL + ' [Status],'
				SET @SQL = @SQL + ' [OnlineOrderFlag],'
				SET @SQL = @SQL + ' [SalesOrderNumber],'
				SET @SQL = @SQL + ' [PurchaseOrderNumber],'
				SET @SQL = @SQL + ' [AccountNumber],'
				SET @SQL = @SQL + ' [CustomerID],'
				SET @SQL = @SQL + ' [ContactID],'
				SET @SQL = @SQL + ' [SalesPersonID],'
				SET @SQL = @SQL + ' [TerritoryID],'
				SET @SQL = @SQL + ' [BillToAddressID],'
				SET @SQL = @SQL + ' [ShipToAddressID],'
				SET @SQL = @SQL + ' [ShipMethodID],'
				SET @SQL = @SQL + ' [CreditCardID],'
				SET @SQL = @SQL + ' [CreditCardApprovalCode],'
				SET @SQL = @SQL + ' [CurrencyRateID],'
				SET @SQL = @SQL + ' [SubTotal],'
				SET @SQL = @SQL + ' [TaxAmt],'
				SET @SQL = @SQL + ' [Freight],'
				SET @SQL = @SQL + ' [TotalDue],'
				SET @SQL = @SQL + ' [Comment],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[SalesOrderHeader]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the SalesOrderHeader table
-- Table Comment: General sales order information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_Insert
(

	@SalesOrderId int    OUTPUT,

	@RevisionNumber tinyint   ,

	@OrderDate datetime   ,

	@DueDate datetime   ,

	@ShipDate datetime   ,

	@Status tinyint   ,

	@OnlineOrderFlag bit   ,

	@SalesOrderNumber nvarchar (25)   OUTPUT,

	@PurchaseOrderNumber nvarchar (25)  ,

	@AccountNumber nvarchar (15)  ,

	@CustomerId int   ,

	@ContactId int   ,

	@SalesPersonId int   ,

	@TerritoryId int   ,

	@BillToAddressId int   ,

	@ShipToAddressId int   ,

	@ShipMethodId int   ,

	@CreditCardId int   ,

	@CreditCardApprovalCode varchar (15)  ,

	@CurrencyRateId int   ,

	@SubTotal money   ,

	@TaxAmt money   ,

	@Freight money   ,

	@TotalDue money    OUTPUT,

	@Comment nvarchar (128)  ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Sales].[SalesOrderHeader]
					(
					[RevisionNumber]
					,[OrderDate]
					,[DueDate]
					,[ShipDate]
					,[Status]
					,[OnlineOrderFlag]
					,[PurchaseOrderNumber]
					,[AccountNumber]
					,[CustomerID]
					,[ContactID]
					,[SalesPersonID]
					,[TerritoryID]
					,[BillToAddressID]
					,[ShipToAddressID]
					,[ShipMethodID]
					,[CreditCardID]
					,[CreditCardApprovalCode]
					,[CurrencyRateID]
					,[SubTotal]
					,[TaxAmt]
					,[Freight]
					,[Comment]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@RevisionNumber
					,@OrderDate
					,@DueDate
					,@ShipDate
					,@Status
					,@OnlineOrderFlag
					,@PurchaseOrderNumber
					,@AccountNumber
					,@CustomerId
					,@ContactId
					,@SalesPersonId
					,@TerritoryId
					,@BillToAddressId
					,@ShipToAddressId
					,@ShipMethodId
					,@CreditCardId
					,@CreditCardApprovalCode
					,@CurrencyRateId
					,@SubTotal
					,@TaxAmt
					,@Freight
					,@Comment
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @SalesOrderId = SCOPE_IDENTITY()
									
				-- Select computed columns into output parameters
				SELECT
 @SalesOrderNumber = [SalesOrderNumber]
, @TotalDue = [TotalDue]
				FROM
					[Sales].[SalesOrderHeader]
				WHERE
[SalesOrderID] = @SalesOrderId 
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the SalesOrderHeader table
-- Table Comment: General sales order information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_Update
(

	@SalesOrderId int   ,

	@RevisionNumber tinyint   ,

	@OrderDate datetime   ,

	@DueDate datetime   ,

	@ShipDate datetime   ,

	@Status tinyint   ,

	@OnlineOrderFlag bit   ,

	@SalesOrderNumber nvarchar (25)   OUTPUT,

	@PurchaseOrderNumber nvarchar (25)  ,

	@AccountNumber nvarchar (15)  ,

	@CustomerId int   ,

	@ContactId int   ,

	@SalesPersonId int   ,

	@TerritoryId int   ,

	@BillToAddressId int   ,

	@ShipToAddressId int   ,

	@ShipMethodId int   ,

	@CreditCardId int   ,

	@CreditCardApprovalCode varchar (15)  ,

	@CurrencyRateId int   ,

	@SubTotal money   ,

	@TaxAmt money   ,

	@Freight money   ,

	@TotalDue money    OUTPUT,

	@Comment nvarchar (128)  ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[SalesOrderHeader]
				SET
					[RevisionNumber] = @RevisionNumber
					,[OrderDate] = @OrderDate
					,[DueDate] = @DueDate
					,[ShipDate] = @ShipDate
					,[Status] = @Status
					,[OnlineOrderFlag] = @OnlineOrderFlag
					,[PurchaseOrderNumber] = @PurchaseOrderNumber
					,[AccountNumber] = @AccountNumber
					,[CustomerID] = @CustomerId
					,[ContactID] = @ContactId
					,[SalesPersonID] = @SalesPersonId
					,[TerritoryID] = @TerritoryId
					,[BillToAddressID] = @BillToAddressId
					,[ShipToAddressID] = @ShipToAddressId
					,[ShipMethodID] = @ShipMethodId
					,[CreditCardID] = @CreditCardId
					,[CreditCardApprovalCode] = @CreditCardApprovalCode
					,[CurrencyRateID] = @CurrencyRateId
					,[SubTotal] = @SubTotal
					,[TaxAmt] = @TaxAmt
					,[Freight] = @Freight
					,[Comment] = @Comment
					,[ModifiedDate] = @ModifiedDate
				WHERE
[SalesOrderID] = @SalesOrderId 
				
				
				-- Select computed columns into output parameters
				SELECT
 @SalesOrderNumber = [SalesOrderNumber]
, @TotalDue = [TotalDue]
				FROM
					[Sales].[SalesOrderHeader]
				WHERE
[SalesOrderID] = @SalesOrderId 
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the SalesOrderHeader table
-- Table Comment: General sales order information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_Delete
(

	@SalesOrderId int   
)
AS


				DELETE FROM [Sales].[SalesOrderHeader] WITH (ROWLOCK) 
				WHERE
					[SalesOrderID] = @SalesOrderId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_GetByBillToAddressId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_GetByBillToAddressId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByBillToAddressId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderHeader table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByBillToAddressId
(

	@BillToAddressId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesOrderID],
					[RevisionNumber],
					[OrderDate],
					[DueDate],
					[ShipDate],
					[Status],
					[OnlineOrderFlag],
					[SalesOrderNumber],
					[PurchaseOrderNumber],
					[AccountNumber],
					[CustomerID],
					[ContactID],
					[SalesPersonID],
					[TerritoryID],
					[BillToAddressID],
					[ShipToAddressID],
					[ShipMethodID],
					[CreditCardID],
					[CreditCardApprovalCode],
					[CurrencyRateID],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[Comment],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeader]
				WHERE
					[BillToAddressID] = @BillToAddressId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_GetByShipToAddressId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_GetByShipToAddressId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByShipToAddressId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderHeader table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByShipToAddressId
(

	@ShipToAddressId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesOrderID],
					[RevisionNumber],
					[OrderDate],
					[DueDate],
					[ShipDate],
					[Status],
					[OnlineOrderFlag],
					[SalesOrderNumber],
					[PurchaseOrderNumber],
					[AccountNumber],
					[CustomerID],
					[ContactID],
					[SalesPersonID],
					[TerritoryID],
					[BillToAddressID],
					[ShipToAddressID],
					[ShipMethodID],
					[CreditCardID],
					[CreditCardApprovalCode],
					[CurrencyRateID],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[Comment],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeader]
				WHERE
					[ShipToAddressID] = @ShipToAddressId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_GetByContactId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_GetByContactId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByContactId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderHeader table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByContactId
(

	@ContactId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesOrderID],
					[RevisionNumber],
					[OrderDate],
					[DueDate],
					[ShipDate],
					[Status],
					[OnlineOrderFlag],
					[SalesOrderNumber],
					[PurchaseOrderNumber],
					[AccountNumber],
					[CustomerID],
					[ContactID],
					[SalesPersonID],
					[TerritoryID],
					[BillToAddressID],
					[ShipToAddressID],
					[ShipMethodID],
					[CreditCardID],
					[CreditCardApprovalCode],
					[CurrencyRateID],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[Comment],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeader]
				WHERE
					[ContactID] = @ContactId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_GetByCreditCardId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_GetByCreditCardId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByCreditCardId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderHeader table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByCreditCardId
(

	@CreditCardId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesOrderID],
					[RevisionNumber],
					[OrderDate],
					[DueDate],
					[ShipDate],
					[Status],
					[OnlineOrderFlag],
					[SalesOrderNumber],
					[PurchaseOrderNumber],
					[AccountNumber],
					[CustomerID],
					[ContactID],
					[SalesPersonID],
					[TerritoryID],
					[BillToAddressID],
					[ShipToAddressID],
					[ShipMethodID],
					[CreditCardID],
					[CreditCardApprovalCode],
					[CurrencyRateID],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[Comment],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeader]
				WHERE
					[CreditCardID] = @CreditCardId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_GetByCurrencyRateId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_GetByCurrencyRateId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByCurrencyRateId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderHeader table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByCurrencyRateId
(

	@CurrencyRateId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesOrderID],
					[RevisionNumber],
					[OrderDate],
					[DueDate],
					[ShipDate],
					[Status],
					[OnlineOrderFlag],
					[SalesOrderNumber],
					[PurchaseOrderNumber],
					[AccountNumber],
					[CustomerID],
					[ContactID],
					[SalesPersonID],
					[TerritoryID],
					[BillToAddressID],
					[ShipToAddressID],
					[ShipMethodID],
					[CreditCardID],
					[CreditCardApprovalCode],
					[CurrencyRateID],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[Comment],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeader]
				WHERE
					[CurrencyRateID] = @CurrencyRateId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_GetByTerritoryId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_GetByTerritoryId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByTerritoryId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderHeader table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByTerritoryId
(

	@TerritoryId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesOrderID],
					[RevisionNumber],
					[OrderDate],
					[DueDate],
					[ShipDate],
					[Status],
					[OnlineOrderFlag],
					[SalesOrderNumber],
					[PurchaseOrderNumber],
					[AccountNumber],
					[CustomerID],
					[ContactID],
					[SalesPersonID],
					[TerritoryID],
					[BillToAddressID],
					[ShipToAddressID],
					[ShipMethodID],
					[CreditCardID],
					[CreditCardApprovalCode],
					[CurrencyRateID],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[Comment],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeader]
				WHERE
					[TerritoryID] = @TerritoryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_GetByShipMethodId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_GetByShipMethodId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByShipMethodId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderHeader table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByShipMethodId
(

	@ShipMethodId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesOrderID],
					[RevisionNumber],
					[OrderDate],
					[DueDate],
					[ShipDate],
					[Status],
					[OnlineOrderFlag],
					[SalesOrderNumber],
					[PurchaseOrderNumber],
					[AccountNumber],
					[CustomerID],
					[ContactID],
					[SalesPersonID],
					[TerritoryID],
					[BillToAddressID],
					[ShipToAddressID],
					[ShipMethodID],
					[CreditCardID],
					[CreditCardApprovalCode],
					[CurrencyRateID],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[Comment],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeader]
				WHERE
					[ShipMethodID] = @ShipMethodId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderHeader table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[SalesOrderID],
					[RevisionNumber],
					[OrderDate],
					[DueDate],
					[ShipDate],
					[Status],
					[OnlineOrderFlag],
					[SalesOrderNumber],
					[PurchaseOrderNumber],
					[AccountNumber],
					[CustomerID],
					[ContactID],
					[SalesPersonID],
					[TerritoryID],
					[BillToAddressID],
					[ShipToAddressID],
					[ShipMethodID],
					[CreditCardID],
					[CreditCardApprovalCode],
					[CurrencyRateID],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[Comment],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeader]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_GetBySalesOrderNumber procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_GetBySalesOrderNumber') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetBySalesOrderNumber
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderHeader table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetBySalesOrderNumber
(

	@SalesOrderNumber nvarchar (25)  
)
AS


				SELECT
					[SalesOrderID],
					[RevisionNumber],
					[OrderDate],
					[DueDate],
					[ShipDate],
					[Status],
					[OnlineOrderFlag],
					[SalesOrderNumber],
					[PurchaseOrderNumber],
					[AccountNumber],
					[CustomerID],
					[ContactID],
					[SalesPersonID],
					[TerritoryID],
					[BillToAddressID],
					[ShipToAddressID],
					[ShipMethodID],
					[CreditCardID],
					[CreditCardApprovalCode],
					[CurrencyRateID],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[Comment],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeader]
				WHERE
					[SalesOrderNumber] = @SalesOrderNumber
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_GetByCustomerId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_GetByCustomerId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByCustomerId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderHeader table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetByCustomerId
(

	@CustomerId int   
)
AS


				SELECT
					[SalesOrderID],
					[RevisionNumber],
					[OrderDate],
					[DueDate],
					[ShipDate],
					[Status],
					[OnlineOrderFlag],
					[SalesOrderNumber],
					[PurchaseOrderNumber],
					[AccountNumber],
					[CustomerID],
					[ContactID],
					[SalesPersonID],
					[TerritoryID],
					[BillToAddressID],
					[ShipToAddressID],
					[ShipMethodID],
					[CreditCardID],
					[CreditCardApprovalCode],
					[CurrencyRateID],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[Comment],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeader]
				WHERE
					[CustomerID] = @CustomerId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_GetBySalesPersonId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_GetBySalesPersonId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetBySalesPersonId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderHeader table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetBySalesPersonId
(

	@SalesPersonId int   
)
AS


				SELECT
					[SalesOrderID],
					[RevisionNumber],
					[OrderDate],
					[DueDate],
					[ShipDate],
					[Status],
					[OnlineOrderFlag],
					[SalesOrderNumber],
					[PurchaseOrderNumber],
					[AccountNumber],
					[CustomerID],
					[ContactID],
					[SalesPersonID],
					[TerritoryID],
					[BillToAddressID],
					[ShipToAddressID],
					[ShipMethodID],
					[CreditCardID],
					[CreditCardApprovalCode],
					[CurrencyRateID],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[Comment],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeader]
				WHERE
					[SalesPersonID] = @SalesPersonId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_GetBySalesOrderId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_GetBySalesOrderId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetBySalesOrderId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderHeader table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetBySalesOrderId
(

	@SalesOrderId int   
)
AS


				SELECT
					[SalesOrderID],
					[RevisionNumber],
					[OrderDate],
					[DueDate],
					[ShipDate],
					[Status],
					[OnlineOrderFlag],
					[SalesOrderNumber],
					[PurchaseOrderNumber],
					[AccountNumber],
					[CustomerID],
					[ContactID],
					[SalesPersonID],
					[TerritoryID],
					[BillToAddressID],
					[ShipToAddressID],
					[ShipMethodID],
					[CreditCardID],
					[CreditCardApprovalCode],
					[CurrencyRateID],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[Comment],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeader]
				WHERE
					[SalesOrderID] = @SalesOrderId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_GetBySalesReasonIdFromSalesOrderHeaderSalesReason procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_GetBySalesReasonIdFromSalesOrderHeaderSalesReason') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetBySalesReasonIdFromSalesOrderHeaderSalesReason
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_GetBySalesReasonIdFromSalesOrderHeaderSalesReason
(

	@SalesReasonId int   
)
AS


SELECT Sales.[SalesOrderHeader].[SalesOrderID]
       ,Sales.[SalesOrderHeader].[RevisionNumber]
       ,Sales.[SalesOrderHeader].[OrderDate]
       ,Sales.[SalesOrderHeader].[DueDate]
       ,Sales.[SalesOrderHeader].[ShipDate]
       ,Sales.[SalesOrderHeader].[Status]
       ,Sales.[SalesOrderHeader].[OnlineOrderFlag]
       ,Sales.[SalesOrderHeader].[SalesOrderNumber]
       ,Sales.[SalesOrderHeader].[PurchaseOrderNumber]
       ,Sales.[SalesOrderHeader].[AccountNumber]
       ,Sales.[SalesOrderHeader].[CustomerID]
       ,Sales.[SalesOrderHeader].[ContactID]
       ,Sales.[SalesOrderHeader].[SalesPersonID]
       ,Sales.[SalesOrderHeader].[TerritoryID]
       ,Sales.[SalesOrderHeader].[BillToAddressID]
       ,Sales.[SalesOrderHeader].[ShipToAddressID]
       ,Sales.[SalesOrderHeader].[ShipMethodID]
       ,Sales.[SalesOrderHeader].[CreditCardID]
       ,Sales.[SalesOrderHeader].[CreditCardApprovalCode]
       ,Sales.[SalesOrderHeader].[CurrencyRateID]
       ,Sales.[SalesOrderHeader].[SubTotal]
       ,Sales.[SalesOrderHeader].[TaxAmt]
       ,Sales.[SalesOrderHeader].[Freight]
       ,Sales.[SalesOrderHeader].[TotalDue]
       ,Sales.[SalesOrderHeader].[Comment]
       ,Sales.[SalesOrderHeader].[rowguid]
       ,Sales.[SalesOrderHeader].[ModifiedDate]
  FROM Sales.[SalesOrderHeader]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[SalesOrderHeaderSalesReason] 
                WHERE Sales.[SalesOrderHeaderSalesReason].[SalesReasonID] = @SalesReasonId
                  AND Sales.[SalesOrderHeaderSalesReason].[SalesOrderID] = Sales.[SalesOrderHeader].[SalesOrderID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeader_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeader_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the SalesOrderHeader table passing nullable parameters
-- Table Comment: General sales order information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeader_Find
(

	@SearchUsingOR bit   = null ,

	@SalesOrderId int   = null ,

	@RevisionNumber tinyint   = null ,

	@OrderDate datetime   = null ,

	@DueDate datetime   = null ,

	@ShipDate datetime   = null ,

	@Status tinyint   = null ,

	@OnlineOrderFlag bit   = null ,

	@SalesOrderNumber nvarchar (25)  = null ,

	@PurchaseOrderNumber nvarchar (25)  = null ,

	@AccountNumber nvarchar (15)  = null ,

	@CustomerId int   = null ,

	@ContactId int   = null ,

	@SalesPersonId int   = null ,

	@TerritoryId int   = null ,

	@BillToAddressId int   = null ,

	@ShipToAddressId int   = null ,

	@ShipMethodId int   = null ,

	@CreditCardId int   = null ,

	@CreditCardApprovalCode varchar (15)  = null ,

	@CurrencyRateId int   = null ,

	@SubTotal money   = null ,

	@TaxAmt money   = null ,

	@Freight money   = null ,

	@TotalDue money   = null ,

	@Comment nvarchar (128)  = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SalesOrderID]
	, [RevisionNumber]
	, [OrderDate]
	, [DueDate]
	, [ShipDate]
	, [Status]
	, [OnlineOrderFlag]
	, [SalesOrderNumber]
	, [PurchaseOrderNumber]
	, [AccountNumber]
	, [CustomerID]
	, [ContactID]
	, [SalesPersonID]
	, [TerritoryID]
	, [BillToAddressID]
	, [ShipToAddressID]
	, [ShipMethodID]
	, [CreditCardID]
	, [CreditCardApprovalCode]
	, [CurrencyRateID]
	, [SubTotal]
	, [TaxAmt]
	, [Freight]
	, [TotalDue]
	, [Comment]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SalesOrderHeader]
    WHERE 
	 ([SalesOrderID] = @SalesOrderId OR @SalesOrderId IS NULL)
	AND ([RevisionNumber] = @RevisionNumber OR @RevisionNumber IS NULL)
	AND ([OrderDate] = @OrderDate OR @OrderDate IS NULL)
	AND ([DueDate] = @DueDate OR @DueDate IS NULL)
	AND ([ShipDate] = @ShipDate OR @ShipDate IS NULL)
	AND ([Status] = @Status OR @Status IS NULL)
	AND ([OnlineOrderFlag] = @OnlineOrderFlag OR @OnlineOrderFlag IS NULL)
	AND ([SalesOrderNumber] = @SalesOrderNumber OR @SalesOrderNumber IS NULL)
	AND ([PurchaseOrderNumber] = @PurchaseOrderNumber OR @PurchaseOrderNumber IS NULL)
	AND ([AccountNumber] = @AccountNumber OR @AccountNumber IS NULL)
	AND ([CustomerID] = @CustomerId OR @CustomerId IS NULL)
	AND ([ContactID] = @ContactId OR @ContactId IS NULL)
	AND ([SalesPersonID] = @SalesPersonId OR @SalesPersonId IS NULL)
	AND ([TerritoryID] = @TerritoryId OR @TerritoryId IS NULL)
	AND ([BillToAddressID] = @BillToAddressId OR @BillToAddressId IS NULL)
	AND ([ShipToAddressID] = @ShipToAddressId OR @ShipToAddressId IS NULL)
	AND ([ShipMethodID] = @ShipMethodId OR @ShipMethodId IS NULL)
	AND ([CreditCardID] = @CreditCardId OR @CreditCardId IS NULL)
	AND ([CreditCardApprovalCode] = @CreditCardApprovalCode OR @CreditCardApprovalCode IS NULL)
	AND ([CurrencyRateID] = @CurrencyRateId OR @CurrencyRateId IS NULL)
	AND ([SubTotal] = @SubTotal OR @SubTotal IS NULL)
	AND ([TaxAmt] = @TaxAmt OR @TaxAmt IS NULL)
	AND ([Freight] = @Freight OR @Freight IS NULL)
	AND ([TotalDue] = @TotalDue OR @TotalDue IS NULL)
	AND ([Comment] = @Comment OR @Comment IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SalesOrderID]
	, [RevisionNumber]
	, [OrderDate]
	, [DueDate]
	, [ShipDate]
	, [Status]
	, [OnlineOrderFlag]
	, [SalesOrderNumber]
	, [PurchaseOrderNumber]
	, [AccountNumber]
	, [CustomerID]
	, [ContactID]
	, [SalesPersonID]
	, [TerritoryID]
	, [BillToAddressID]
	, [ShipToAddressID]
	, [ShipMethodID]
	, [CreditCardID]
	, [CreditCardApprovalCode]
	, [CurrencyRateID]
	, [SubTotal]
	, [TaxAmt]
	, [Freight]
	, [TotalDue]
	, [Comment]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SalesOrderHeader]
    WHERE 
	 ([SalesOrderID] = @SalesOrderId AND @SalesOrderId is not null)
	OR ([RevisionNumber] = @RevisionNumber AND @RevisionNumber is not null)
	OR ([OrderDate] = @OrderDate AND @OrderDate is not null)
	OR ([DueDate] = @DueDate AND @DueDate is not null)
	OR ([ShipDate] = @ShipDate AND @ShipDate is not null)
	OR ([Status] = @Status AND @Status is not null)
	OR ([OnlineOrderFlag] = @OnlineOrderFlag AND @OnlineOrderFlag is not null)
	OR ([SalesOrderNumber] = @SalesOrderNumber AND @SalesOrderNumber is not null)
	OR ([PurchaseOrderNumber] = @PurchaseOrderNumber AND @PurchaseOrderNumber is not null)
	OR ([AccountNumber] = @AccountNumber AND @AccountNumber is not null)
	OR ([CustomerID] = @CustomerId AND @CustomerId is not null)
	OR ([ContactID] = @ContactId AND @ContactId is not null)
	OR ([SalesPersonID] = @SalesPersonId AND @SalesPersonId is not null)
	OR ([TerritoryID] = @TerritoryId AND @TerritoryId is not null)
	OR ([BillToAddressID] = @BillToAddressId AND @BillToAddressId is not null)
	OR ([ShipToAddressID] = @ShipToAddressId AND @ShipToAddressId is not null)
	OR ([ShipMethodID] = @ShipMethodId AND @ShipMethodId is not null)
	OR ([CreditCardID] = @CreditCardId AND @CreditCardId is not null)
	OR ([CreditCardApprovalCode] = @CreditCardApprovalCode AND @CreditCardApprovalCode is not null)
	OR ([CurrencyRateID] = @CurrencyRateId AND @CurrencyRateId is not null)
	OR ([SubTotal] = @SubTotal AND @SubTotal is not null)
	OR ([TaxAmt] = @TaxAmt AND @TaxAmt is not null)
	OR ([Freight] = @Freight AND @Freight is not null)
	OR ([TotalDue] = @TotalDue AND @TotalDue is not null)
	OR ([Comment] = @Comment AND @Comment is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the SalesOrderHeaderSalesReason table
-- Table Comment: Cross-reference table mapping sales orders to sales reason codes.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Get_List

AS


				
				SELECT
					[SalesOrderID],
					[SalesReasonID],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeaderSalesReason]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the SalesOrderHeaderSalesReason table passing page index and page count parameters
-- Table Comment: Cross-reference table mapping sales orders to sales reason codes.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SalesOrderID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SalesOrderID]'
				SET @SQL = @SQL + ', [SalesReasonID]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[SalesOrderHeaderSalesReason]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SalesOrderID],'
				SET @SQL = @SQL + ' [SalesReasonID],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[SalesOrderHeaderSalesReason]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the SalesOrderHeaderSalesReason table
-- Table Comment: Cross-reference table mapping sales orders to sales reason codes.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Insert
(

	@SalesOrderId int   ,

	@SalesReasonId int   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Sales].[SalesOrderHeaderSalesReason]
					(
					[SalesOrderID]
					,[SalesReasonID]
					,[ModifiedDate]
					)
				VALUES
					(
					@SalesOrderId
					,@SalesReasonId
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the SalesOrderHeaderSalesReason table
-- Table Comment: Cross-reference table mapping sales orders to sales reason codes.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Update
(

	@SalesOrderId int   ,

	@OriginalSalesOrderId int   ,

	@SalesReasonId int   ,

	@OriginalSalesReasonId int   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[SalesOrderHeaderSalesReason]
				SET
					[SalesOrderID] = @SalesOrderId
					,[SalesReasonID] = @SalesReasonId
					,[ModifiedDate] = @ModifiedDate
				WHERE
[SalesOrderID] = @OriginalSalesOrderId 
AND [SalesReasonID] = @OriginalSalesReasonId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the SalesOrderHeaderSalesReason table
-- Table Comment: Cross-reference table mapping sales orders to sales reason codes.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Delete
(

	@SalesOrderId int   ,

	@SalesReasonId int   
)
AS


				DELETE FROM [Sales].[SalesOrderHeaderSalesReason] WITH (ROWLOCK) 
				WHERE
					[SalesOrderID] = @SalesOrderId
					AND [SalesReasonID] = @SalesReasonId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetBySalesOrderId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetBySalesOrderId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetBySalesOrderId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderHeaderSalesReason table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetBySalesOrderId
(

	@SalesOrderId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesOrderID],
					[SalesReasonID],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeaderSalesReason]
				WHERE
					[SalesOrderID] = @SalesOrderId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetBySalesReasonId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetBySalesReasonId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetBySalesReasonId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderHeaderSalesReason table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetBySalesReasonId
(

	@SalesReasonId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesOrderID],
					[SalesReasonID],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeaderSalesReason]
				WHERE
					[SalesReasonID] = @SalesReasonId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetBySalesOrderIdSalesReasonId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetBySalesOrderIdSalesReasonId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetBySalesOrderIdSalesReasonId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderHeaderSalesReason table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_GetBySalesOrderIdSalesReasonId
(

	@SalesOrderId int   ,

	@SalesReasonId int   
)
AS


				SELECT
					[SalesOrderID],
					[SalesReasonID],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderHeaderSalesReason]
				WHERE
					[SalesOrderID] = @SalesOrderId
					AND [SalesReasonID] = @SalesReasonId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the SalesOrderHeaderSalesReason table passing nullable parameters
-- Table Comment: Cross-reference table mapping sales orders to sales reason codes.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderHeaderSalesReason_Find
(

	@SearchUsingOR bit   = null ,

	@SalesOrderId int   = null ,

	@SalesReasonId int   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SalesOrderID]
	, [SalesReasonID]
	, [ModifiedDate]
    FROM
	[Sales].[SalesOrderHeaderSalesReason]
    WHERE 
	 ([SalesOrderID] = @SalesOrderId OR @SalesOrderId IS NULL)
	AND ([SalesReasonID] = @SalesReasonId OR @SalesReasonId IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SalesOrderID]
	, [SalesReasonID]
	, [ModifiedDate]
    FROM
	[Sales].[SalesOrderHeaderSalesReason]
    WHERE 
	 ([SalesOrderID] = @SalesOrderId AND @SalesOrderId is not null)
	OR ([SalesReasonID] = @SalesReasonId AND @SalesReasonId is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModel_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModel_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModel_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ProductModel table
-- Table Comment: Product model classification.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModel_Get_List

AS


				
				SELECT
					[ProductModelID],
					[Name],
					[CatalogDescription],
					[Instructions],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductModel]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModel_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModel_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModel_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ProductModel table passing page index and page count parameters
-- Table Comment: Product model classification.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModel_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductModelID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductModelID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [CatalogDescription]'
				SET @SQL = @SQL + ', [Instructions]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[ProductModel]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductModelID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [CatalogDescription],'
				SET @SQL = @SQL + ' [Instructions],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[ProductModel]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModel_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModel_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModel_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ProductModel table
-- Table Comment: Product model classification.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModel_Insert
(

	@ProductModelId int    OUTPUT,

	@Name nvarchar (50)  ,

	@CatalogDescription xml   ,

	@Instructions xml   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Production].[ProductModel]
					(
					[Name]
					,[CatalogDescription]
					,[Instructions]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@Name
					,@CatalogDescription
					,@Instructions
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @ProductModelId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModel_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModel_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModel_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ProductModel table
-- Table Comment: Product model classification.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModel_Update
(

	@ProductModelId int   ,

	@Name nvarchar (50)  ,

	@CatalogDescription xml   ,

	@Instructions xml   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[ProductModel]
				SET
					[Name] = @Name
					,[CatalogDescription] = @CatalogDescription
					,[Instructions] = @Instructions
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ProductModelID] = @ProductModelId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModel_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModel_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModel_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ProductModel table
-- Table Comment: Product model classification.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModel_Delete
(

	@ProductModelId int   
)
AS


				DELETE FROM [Production].[ProductModel] WITH (ROWLOCK) 
				WHERE
					[ProductModelID] = @ProductModelId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModel_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModel_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModel_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductModel table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModel_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[ProductModelID],
					[Name],
					[CatalogDescription],
					[Instructions],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductModel]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModel_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModel_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModel_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductModel table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModel_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[ProductModelID],
					[Name],
					[CatalogDescription],
					[Instructions],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductModel]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModel_GetByProductModelId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModel_GetByProductModelId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModel_GetByProductModelId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductModel table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModel_GetByProductModelId
(

	@ProductModelId int   
)
AS


				SELECT
					[ProductModelID],
					[Name],
					[CatalogDescription],
					[Instructions],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductModel]
				WHERE
					[ProductModelID] = @ProductModelId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModel_GetByCatalogDescription procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModel_GetByCatalogDescription') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModel_GetByCatalogDescription
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductModel table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModel_GetByCatalogDescription
(

	@CatalogDescription xml   
)
AS


				SELECT
					[ProductModelID],
					[Name],
					[CatalogDescription],
					[Instructions],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductModel]
				WHERE
					[CatalogDescription] = @CatalogDescription
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModel_GetByInstructions procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModel_GetByInstructions') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModel_GetByInstructions
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductModel table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModel_GetByInstructions
(

	@Instructions xml   
)
AS


				SELECT
					[ProductModelID],
					[Name],
					[CatalogDescription],
					[Instructions],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductModel]
				WHERE
					[Instructions] = @Instructions
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModel_GetByIllustrationIdFromProductModelIllustration procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModel_GetByIllustrationIdFromProductModelIllustration') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModel_GetByIllustrationIdFromProductModelIllustration
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModel_GetByIllustrationIdFromProductModelIllustration
(

	@IllustrationId int   
)
AS


SELECT Production.[ProductModel].[ProductModelID]
       ,Production.[ProductModel].[Name]
       ,Production.[ProductModel].[CatalogDescription]
       ,Production.[ProductModel].[Instructions]
       ,Production.[ProductModel].[rowguid]
       ,Production.[ProductModel].[ModifiedDate]
  FROM Production.[ProductModel]
 WHERE EXISTS (SELECT 1
                 FROM Production.[ProductModelIllustration] 
                WHERE Production.[ProductModelIllustration].[IllustrationID] = @IllustrationId
                  AND Production.[ProductModelIllustration].[ProductModelID] = Production.[ProductModel].[ProductModelID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModel_GetByCultureIdFromProductModelProductDescriptionCulture procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModel_GetByCultureIdFromProductModelProductDescriptionCulture') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModel_GetByCultureIdFromProductModelProductDescriptionCulture
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModel_GetByCultureIdFromProductModelProductDescriptionCulture
(

	@CultureId nchar (6)  
)
AS


SELECT Production.[ProductModel].[ProductModelID]
       ,Production.[ProductModel].[Name]
       ,Production.[ProductModel].[CatalogDescription]
       ,Production.[ProductModel].[Instructions]
       ,Production.[ProductModel].[rowguid]
       ,Production.[ProductModel].[ModifiedDate]
  FROM Production.[ProductModel]
 WHERE EXISTS (SELECT 1
                 FROM Production.[ProductModelProductDescriptionCulture] 
                WHERE Production.[ProductModelProductDescriptionCulture].[CultureID] = @CultureId
                  AND Production.[ProductModelProductDescriptionCulture].[ProductModelID] = Production.[ProductModel].[ProductModelID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModel_GetByProductDescriptionIdFromProductModelProductDescriptionCulture procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModel_GetByProductDescriptionIdFromProductModelProductDescriptionCulture') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModel_GetByProductDescriptionIdFromProductModelProductDescriptionCulture
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModel_GetByProductDescriptionIdFromProductModelProductDescriptionCulture
(

	@ProductDescriptionId int   
)
AS


SELECT Production.[ProductModel].[ProductModelID]
       ,Production.[ProductModel].[Name]
       ,Production.[ProductModel].[CatalogDescription]
       ,Production.[ProductModel].[Instructions]
       ,Production.[ProductModel].[rowguid]
       ,Production.[ProductModel].[ModifiedDate]
  FROM Production.[ProductModel]
 WHERE EXISTS (SELECT 1
                 FROM Production.[ProductModelProductDescriptionCulture] 
                WHERE Production.[ProductModelProductDescriptionCulture].[ProductDescriptionID] = @ProductDescriptionId
                  AND Production.[ProductModelProductDescriptionCulture].[ProductModelID] = Production.[ProductModel].[ProductModelID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModel_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModel_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModel_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ProductModel table passing nullable parameters
-- Table Comment: Product model classification.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModel_Find
(

	@SearchUsingOR bit   = null ,

	@ProductModelId int   = null ,

	@Name nvarchar (50)  = null ,

	@CatalogDescription xml   = null ,

	@Instructions xml   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductModelID]
	, [Name]
	, [CatalogDescription]
	, [Instructions]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Production].[ProductModel]
    WHERE 
	 ([ProductModelID] = @ProductModelId OR @ProductModelId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductModelID]
	, [Name]
	, [CatalogDescription]
	, [Instructions]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Production].[ProductModel]
    WHERE 
	 ([ProductModelID] = @ProductModelId AND @ProductModelId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTaxRate_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTaxRate_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTaxRate_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the SalesTaxRate table
-- Table Comment: Tax rate lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTaxRate_Get_List

AS


				
				SELECT
					[SalesTaxRateID],
					[StateProvinceID],
					[TaxType],
					[TaxRate],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesTaxRate]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTaxRate_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTaxRate_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTaxRate_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the SalesTaxRate table passing page index and page count parameters
-- Table Comment: Tax rate lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTaxRate_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SalesTaxRateID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SalesTaxRateID]'
				SET @SQL = @SQL + ', [StateProvinceID]'
				SET @SQL = @SQL + ', [TaxType]'
				SET @SQL = @SQL + ', [TaxRate]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[SalesTaxRate]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SalesTaxRateID],'
				SET @SQL = @SQL + ' [StateProvinceID],'
				SET @SQL = @SQL + ' [TaxType],'
				SET @SQL = @SQL + ' [TaxRate],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[SalesTaxRate]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTaxRate_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTaxRate_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTaxRate_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the SalesTaxRate table
-- Table Comment: Tax rate lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTaxRate_Insert
(

	@SalesTaxRateId int    OUTPUT,

	@StateProvinceId int   ,

	@TaxType tinyint   ,

	@TaxRate smallmoney   ,

	@Name nvarchar (50)  ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Sales].[SalesTaxRate]
					(
					[StateProvinceID]
					,[TaxType]
					,[TaxRate]
					,[Name]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@StateProvinceId
					,@TaxType
					,@TaxRate
					,@Name
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @SalesTaxRateId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTaxRate_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTaxRate_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTaxRate_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the SalesTaxRate table
-- Table Comment: Tax rate lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTaxRate_Update
(

	@SalesTaxRateId int   ,

	@StateProvinceId int   ,

	@TaxType tinyint   ,

	@TaxRate smallmoney   ,

	@Name nvarchar (50)  ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[SalesTaxRate]
				SET
					[StateProvinceID] = @StateProvinceId
					,[TaxType] = @TaxType
					,[TaxRate] = @TaxRate
					,[Name] = @Name
					,[ModifiedDate] = @ModifiedDate
				WHERE
[SalesTaxRateID] = @SalesTaxRateId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTaxRate_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTaxRate_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTaxRate_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the SalesTaxRate table
-- Table Comment: Tax rate lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTaxRate_Delete
(

	@SalesTaxRateId int   
)
AS


				DELETE FROM [Sales].[SalesTaxRate] WITH (ROWLOCK) 
				WHERE
					[SalesTaxRateID] = @SalesTaxRateId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTaxRate_GetByStateProvinceId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTaxRate_GetByStateProvinceId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTaxRate_GetByStateProvinceId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesTaxRate table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTaxRate_GetByStateProvinceId
(

	@StateProvinceId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesTaxRateID],
					[StateProvinceID],
					[TaxType],
					[TaxRate],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesTaxRate]
				WHERE
					[StateProvinceID] = @StateProvinceId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTaxRate_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTaxRate_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTaxRate_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesTaxRate table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTaxRate_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[SalesTaxRateID],
					[StateProvinceID],
					[TaxType],
					[TaxRate],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesTaxRate]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTaxRate_GetByStateProvinceIdTaxType procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTaxRate_GetByStateProvinceIdTaxType') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTaxRate_GetByStateProvinceIdTaxType
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesTaxRate table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTaxRate_GetByStateProvinceIdTaxType
(

	@StateProvinceId int   ,

	@TaxType tinyint   
)
AS


				SELECT
					[SalesTaxRateID],
					[StateProvinceID],
					[TaxType],
					[TaxRate],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesTaxRate]
				WHERE
					[StateProvinceID] = @StateProvinceId
					AND [TaxType] = @TaxType
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTaxRate_GetBySalesTaxRateId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTaxRate_GetBySalesTaxRateId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTaxRate_GetBySalesTaxRateId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesTaxRate table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTaxRate_GetBySalesTaxRateId
(

	@SalesTaxRateId int   
)
AS


				SELECT
					[SalesTaxRateID],
					[StateProvinceID],
					[TaxType],
					[TaxRate],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesTaxRate]
				WHERE
					[SalesTaxRateID] = @SalesTaxRateId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTaxRate_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTaxRate_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTaxRate_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the SalesTaxRate table passing nullable parameters
-- Table Comment: Tax rate lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTaxRate_Find
(

	@SearchUsingOR bit   = null ,

	@SalesTaxRateId int   = null ,

	@StateProvinceId int   = null ,

	@TaxType tinyint   = null ,

	@TaxRate smallmoney   = null ,

	@Name nvarchar (50)  = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SalesTaxRateID]
	, [StateProvinceID]
	, [TaxType]
	, [TaxRate]
	, [Name]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SalesTaxRate]
    WHERE 
	 ([SalesTaxRateID] = @SalesTaxRateId OR @SalesTaxRateId IS NULL)
	AND ([StateProvinceID] = @StateProvinceId OR @StateProvinceId IS NULL)
	AND ([TaxType] = @TaxType OR @TaxType IS NULL)
	AND ([TaxRate] = @TaxRate OR @TaxRate IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SalesTaxRateID]
	, [StateProvinceID]
	, [TaxType]
	, [TaxRate]
	, [Name]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SalesTaxRate]
    WHERE 
	 ([SalesTaxRateID] = @SalesTaxRateId AND @SalesTaxRateId is not null)
	OR ([StateProvinceID] = @StateProvinceId AND @StateProvinceId is not null)
	OR ([TaxType] = @TaxType AND @TaxType is not null)
	OR ([TaxRate] = @TaxRate AND @TaxRate is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPerson_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPerson_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPerson_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the SalesPerson table
-- Table Comment: Sales representative current information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPerson_Get_List

AS


				
				SELECT
					[SalesPersonID],
					[TerritoryID],
					[SalesQuota],
					[Bonus],
					[CommissionPct],
					[SalesYTD],
					[SalesLastYear],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesPerson]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPerson_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPerson_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPerson_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the SalesPerson table passing page index and page count parameters
-- Table Comment: Sales representative current information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPerson_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SalesPersonID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SalesPersonID]'
				SET @SQL = @SQL + ', [TerritoryID]'
				SET @SQL = @SQL + ', [SalesQuota]'
				SET @SQL = @SQL + ', [Bonus]'
				SET @SQL = @SQL + ', [CommissionPct]'
				SET @SQL = @SQL + ', [SalesYTD]'
				SET @SQL = @SQL + ', [SalesLastYear]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[SalesPerson]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SalesPersonID],'
				SET @SQL = @SQL + ' [TerritoryID],'
				SET @SQL = @SQL + ' [SalesQuota],'
				SET @SQL = @SQL + ' [Bonus],'
				SET @SQL = @SQL + ' [CommissionPct],'
				SET @SQL = @SQL + ' [SalesYTD],'
				SET @SQL = @SQL + ' [SalesLastYear],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[SalesPerson]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPerson_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPerson_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPerson_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the SalesPerson table
-- Table Comment: Sales representative current information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPerson_Insert
(

	@SalesPersonId int   ,

	@TerritoryId int   ,

	@SalesQuota money   ,

	@Bonus money   ,

	@CommissionPct smallmoney   ,

	@SalesYtd money   ,

	@SalesLastYear money   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Sales].[SalesPerson]
					(
					[SalesPersonID]
					,[TerritoryID]
					,[SalesQuota]
					,[Bonus]
					,[CommissionPct]
					,[SalesYTD]
					,[SalesLastYear]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@SalesPersonId
					,@TerritoryId
					,@SalesQuota
					,@Bonus
					,@CommissionPct
					,@SalesYtd
					,@SalesLastYear
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPerson_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPerson_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPerson_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the SalesPerson table
-- Table Comment: Sales representative current information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPerson_Update
(

	@SalesPersonId int   ,

	@OriginalSalesPersonId int   ,

	@TerritoryId int   ,

	@SalesQuota money   ,

	@Bonus money   ,

	@CommissionPct smallmoney   ,

	@SalesYtd money   ,

	@SalesLastYear money   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[SalesPerson]
				SET
					[SalesPersonID] = @SalesPersonId
					,[TerritoryID] = @TerritoryId
					,[SalesQuota] = @SalesQuota
					,[Bonus] = @Bonus
					,[CommissionPct] = @CommissionPct
					,[SalesYTD] = @SalesYtd
					,[SalesLastYear] = @SalesLastYear
					,[ModifiedDate] = @ModifiedDate
				WHERE
[SalesPersonID] = @OriginalSalesPersonId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPerson_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPerson_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPerson_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the SalesPerson table
-- Table Comment: Sales representative current information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPerson_Delete
(

	@SalesPersonId int   
)
AS


				DELETE FROM [Sales].[SalesPerson] WITH (ROWLOCK) 
				WHERE
					[SalesPersonID] = @SalesPersonId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPerson_GetByTerritoryId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPerson_GetByTerritoryId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPerson_GetByTerritoryId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesPerson table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPerson_GetByTerritoryId
(

	@TerritoryId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesPersonID],
					[TerritoryID],
					[SalesQuota],
					[Bonus],
					[CommissionPct],
					[SalesYTD],
					[SalesLastYear],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesPerson]
				WHERE
					[TerritoryID] = @TerritoryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPerson_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPerson_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPerson_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesPerson table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPerson_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[SalesPersonID],
					[TerritoryID],
					[SalesQuota],
					[Bonus],
					[CommissionPct],
					[SalesYTD],
					[SalesLastYear],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesPerson]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPerson_GetBySalesPersonId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPerson_GetBySalesPersonId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPerson_GetBySalesPersonId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesPerson table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPerson_GetBySalesPersonId
(

	@SalesPersonId int   
)
AS


				SELECT
					[SalesPersonID],
					[TerritoryID],
					[SalesQuota],
					[Bonus],
					[CommissionPct],
					[SalesYTD],
					[SalesLastYear],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesPerson]
				WHERE
					[SalesPersonID] = @SalesPersonId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesPerson_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesPerson_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesPerson_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the SalesPerson table passing nullable parameters
-- Table Comment: Sales representative current information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesPerson_Find
(

	@SearchUsingOR bit   = null ,

	@SalesPersonId int   = null ,

	@TerritoryId int   = null ,

	@SalesQuota money   = null ,

	@Bonus money   = null ,

	@CommissionPct smallmoney   = null ,

	@SalesYtd money   = null ,

	@SalesLastYear money   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SalesPersonID]
	, [TerritoryID]
	, [SalesQuota]
	, [Bonus]
	, [CommissionPct]
	, [SalesYTD]
	, [SalesLastYear]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SalesPerson]
    WHERE 
	 ([SalesPersonID] = @SalesPersonId OR @SalesPersonId IS NULL)
	AND ([TerritoryID] = @TerritoryId OR @TerritoryId IS NULL)
	AND ([SalesQuota] = @SalesQuota OR @SalesQuota IS NULL)
	AND ([Bonus] = @Bonus OR @Bonus IS NULL)
	AND ([CommissionPct] = @CommissionPct OR @CommissionPct IS NULL)
	AND ([SalesYTD] = @SalesYtd OR @SalesYtd IS NULL)
	AND ([SalesLastYear] = @SalesLastYear OR @SalesLastYear IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SalesPersonID]
	, [TerritoryID]
	, [SalesQuota]
	, [Bonus]
	, [CommissionPct]
	, [SalesYTD]
	, [SalesLastYear]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SalesPerson]
    WHERE 
	 ([SalesPersonID] = @SalesPersonId AND @SalesPersonId is not null)
	OR ([TerritoryID] = @TerritoryId AND @TerritoryId is not null)
	OR ([SalesQuota] = @SalesQuota AND @SalesQuota is not null)
	OR ([Bonus] = @Bonus AND @Bonus is not null)
	OR ([CommissionPct] = @CommissionPct AND @CommissionPct is not null)
	OR ([SalesYTD] = @SalesYtd AND @SalesYtd is not null)
	OR ([SalesLastYear] = @SalesLastYear AND @SalesLastYear is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCategory_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCategory_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCategory_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ProductCategory table
-- Table Comment: High-level product categorization.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCategory_Get_List

AS


				
				SELECT
					[ProductCategoryID],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductCategory]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCategory_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCategory_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCategory_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ProductCategory table passing page index and page count parameters
-- Table Comment: High-level product categorization.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCategory_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductCategoryID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductCategoryID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[ProductCategory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductCategoryID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[ProductCategory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCategory_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCategory_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCategory_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ProductCategory table
-- Table Comment: High-level product categorization.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCategory_Insert
(

	@ProductCategoryId int    OUTPUT,

	@Name nvarchar (50)  ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Production].[ProductCategory]
					(
					[Name]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@Name
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @ProductCategoryId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCategory_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCategory_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCategory_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ProductCategory table
-- Table Comment: High-level product categorization.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCategory_Update
(

	@ProductCategoryId int   ,

	@Name nvarchar (50)  ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[ProductCategory]
				SET
					[Name] = @Name
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ProductCategoryID] = @ProductCategoryId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCategory_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCategory_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCategory_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ProductCategory table
-- Table Comment: High-level product categorization.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCategory_Delete
(

	@ProductCategoryId int   
)
AS


				DELETE FROM [Production].[ProductCategory] WITH (ROWLOCK) 
				WHERE
					[ProductCategoryID] = @ProductCategoryId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCategory_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCategory_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCategory_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductCategory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCategory_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[ProductCategoryID],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductCategory]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCategory_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCategory_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCategory_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductCategory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCategory_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[ProductCategoryID],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductCategory]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCategory_GetByProductCategoryId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCategory_GetByProductCategoryId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCategory_GetByProductCategoryId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductCategory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCategory_GetByProductCategoryId
(

	@ProductCategoryId int   
)
AS


				SELECT
					[ProductCategoryID],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductCategory]
				WHERE
					[ProductCategoryID] = @ProductCategoryId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCategory_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCategory_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCategory_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ProductCategory table passing nullable parameters
-- Table Comment: High-level product categorization.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCategory_Find
(

	@SearchUsingOR bit   = null ,

	@ProductCategoryId int   = null ,

	@Name nvarchar (50)  = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductCategoryID]
	, [Name]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Production].[ProductCategory]
    WHERE 
	 ([ProductCategoryID] = @ProductCategoryId OR @ProductCategoryId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductCategoryID]
	, [Name]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Production].[ProductCategory]
    WHERE 
	 ([ProductCategoryID] = @ProductCategoryId AND @ProductCategoryId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductSubcategory_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductSubcategory_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductSubcategory_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ProductSubcategory table
-- Table Comment: Product subcategories. See ProductCategory table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductSubcategory_Get_List

AS


				
				SELECT
					[ProductSubcategoryID],
					[ProductCategoryID],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductSubcategory]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductSubcategory_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductSubcategory_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductSubcategory_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ProductSubcategory table passing page index and page count parameters
-- Table Comment: Product subcategories. See ProductCategory table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductSubcategory_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductSubcategoryID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductSubcategoryID]'
				SET @SQL = @SQL + ', [ProductCategoryID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[ProductSubcategory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductSubcategoryID],'
				SET @SQL = @SQL + ' [ProductCategoryID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[ProductSubcategory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductSubcategory_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductSubcategory_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductSubcategory_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ProductSubcategory table
-- Table Comment: Product subcategories. See ProductCategory table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductSubcategory_Insert
(

	@ProductSubcategoryId int    OUTPUT,

	@ProductCategoryId int   ,

	@Name nvarchar (50)  ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Production].[ProductSubcategory]
					(
					[ProductCategoryID]
					,[Name]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@ProductCategoryId
					,@Name
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @ProductSubcategoryId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductSubcategory_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductSubcategory_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductSubcategory_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ProductSubcategory table
-- Table Comment: Product subcategories. See ProductCategory table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductSubcategory_Update
(

	@ProductSubcategoryId int   ,

	@ProductCategoryId int   ,

	@Name nvarchar (50)  ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[ProductSubcategory]
				SET
					[ProductCategoryID] = @ProductCategoryId
					,[Name] = @Name
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ProductSubcategoryID] = @ProductSubcategoryId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductSubcategory_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductSubcategory_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductSubcategory_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ProductSubcategory table
-- Table Comment: Product subcategories. See ProductCategory table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductSubcategory_Delete
(

	@ProductSubcategoryId int   
)
AS


				DELETE FROM [Production].[ProductSubcategory] WITH (ROWLOCK) 
				WHERE
					[ProductSubcategoryID] = @ProductSubcategoryId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductSubcategory_GetByProductCategoryId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductSubcategory_GetByProductCategoryId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductSubcategory_GetByProductCategoryId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductSubcategory table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductSubcategory_GetByProductCategoryId
(

	@ProductCategoryId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductSubcategoryID],
					[ProductCategoryID],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductSubcategory]
				WHERE
					[ProductCategoryID] = @ProductCategoryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductSubcategory_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductSubcategory_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductSubcategory_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductSubcategory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductSubcategory_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[ProductSubcategoryID],
					[ProductCategoryID],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductSubcategory]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductSubcategory_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductSubcategory_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductSubcategory_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductSubcategory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductSubcategory_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[ProductSubcategoryID],
					[ProductCategoryID],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductSubcategory]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductSubcategory_GetByProductSubcategoryId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductSubcategory_GetByProductSubcategoryId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductSubcategory_GetByProductSubcategoryId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductSubcategory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductSubcategory_GetByProductSubcategoryId
(

	@ProductSubcategoryId int   
)
AS


				SELECT
					[ProductSubcategoryID],
					[ProductCategoryID],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductSubcategory]
				WHERE
					[ProductSubcategoryID] = @ProductSubcategoryId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductSubcategory_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductSubcategory_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductSubcategory_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ProductSubcategory table passing nullable parameters
-- Table Comment: Product subcategories. See ProductCategory table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductSubcategory_Find
(

	@SearchUsingOR bit   = null ,

	@ProductSubcategoryId int   = null ,

	@ProductCategoryId int   = null ,

	@Name nvarchar (50)  = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductSubcategoryID]
	, [ProductCategoryID]
	, [Name]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Production].[ProductSubcategory]
    WHERE 
	 ([ProductSubcategoryID] = @ProductSubcategoryId OR @ProductSubcategoryId IS NULL)
	AND ([ProductCategoryID] = @ProductCategoryId OR @ProductCategoryId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductSubcategoryID]
	, [ProductCategoryID]
	, [Name]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Production].[ProductSubcategory]
    WHERE 
	 ([ProductSubcategoryID] = @ProductSubcategoryId AND @ProductSubcategoryId is not null)
	OR ([ProductCategoryID] = @ProductCategoryId AND @ProductCategoryId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the Product table
-- Table Comment: Products sold or used in the manfacturing of sold products.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_Get_List

AS


				
				SELECT
					[ProductID],
					[Name],
					[ProductNumber],
					[MakeFlag],
					[FinishedGoodsFlag],
					[Color],
					[SafetyStockLevel],
					[ReorderPoint],
					[StandardCost],
					[ListPrice],
					[Size],
					[SizeUnitMeasureCode],
					[WeightUnitMeasureCode],
					[Weight],
					[DaysToManufacture],
					[ProductLine],
					[Class],
					[Style],
					[ProductSubcategoryID],
					[ProductModelID],
					[SellStartDate],
					[SellEndDate],
					[DiscontinuedDate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[Product]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the Product table passing page index and page count parameters
-- Table Comment: Products sold or used in the manfacturing of sold products.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [ProductNumber]'
				SET @SQL = @SQL + ', [MakeFlag]'
				SET @SQL = @SQL + ', [FinishedGoodsFlag]'
				SET @SQL = @SQL + ', [Color]'
				SET @SQL = @SQL + ', [SafetyStockLevel]'
				SET @SQL = @SQL + ', [ReorderPoint]'
				SET @SQL = @SQL + ', [StandardCost]'
				SET @SQL = @SQL + ', [ListPrice]'
				SET @SQL = @SQL + ', [Size]'
				SET @SQL = @SQL + ', [SizeUnitMeasureCode]'
				SET @SQL = @SQL + ', [WeightUnitMeasureCode]'
				SET @SQL = @SQL + ', [Weight]'
				SET @SQL = @SQL + ', [DaysToManufacture]'
				SET @SQL = @SQL + ', [ProductLine]'
				SET @SQL = @SQL + ', [Class]'
				SET @SQL = @SQL + ', [Style]'
				SET @SQL = @SQL + ', [ProductSubcategoryID]'
				SET @SQL = @SQL + ', [ProductModelID]'
				SET @SQL = @SQL + ', [SellStartDate]'
				SET @SQL = @SQL + ', [SellEndDate]'
				SET @SQL = @SQL + ', [DiscontinuedDate]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[Product]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [ProductNumber],'
				SET @SQL = @SQL + ' [MakeFlag],'
				SET @SQL = @SQL + ' [FinishedGoodsFlag],'
				SET @SQL = @SQL + ' [Color],'
				SET @SQL = @SQL + ' [SafetyStockLevel],'
				SET @SQL = @SQL + ' [ReorderPoint],'
				SET @SQL = @SQL + ' [StandardCost],'
				SET @SQL = @SQL + ' [ListPrice],'
				SET @SQL = @SQL + ' [Size],'
				SET @SQL = @SQL + ' [SizeUnitMeasureCode],'
				SET @SQL = @SQL + ' [WeightUnitMeasureCode],'
				SET @SQL = @SQL + ' [Weight],'
				SET @SQL = @SQL + ' [DaysToManufacture],'
				SET @SQL = @SQL + ' [ProductLine],'
				SET @SQL = @SQL + ' [Class],'
				SET @SQL = @SQL + ' [Style],'
				SET @SQL = @SQL + ' [ProductSubcategoryID],'
				SET @SQL = @SQL + ' [ProductModelID],'
				SET @SQL = @SQL + ' [SellStartDate],'
				SET @SQL = @SQL + ' [SellEndDate],'
				SET @SQL = @SQL + ' [DiscontinuedDate],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[Product]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the Product table
-- Table Comment: Products sold or used in the manfacturing of sold products.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_Insert
(

	@ProductId int    OUTPUT,

	@Name nvarchar (50)  ,

	@ProductNumber nvarchar (25)  ,

	@MakeFlag bit   ,

	@FinishedGoodsFlag bit   ,

	@Color nvarchar (15)  ,

	@SafetyStockLevel smallint   ,

	@ReorderPoint smallint   ,

	@StandardCost money   ,

	@ListPrice money   ,

	@Size nvarchar (5)  ,

	@SizeUnitMeasureCode nchar (3)  ,

	@WeightUnitMeasureCode nchar (3)  ,

	@Weight decimal (8, 2)  ,

	@DaysToManufacture int   ,

	@ProductLine nchar (2)  ,

	@SafeNameClass nchar (2)  ,

	@Style nchar (2)  ,

	@ProductSubcategoryId int   ,

	@ProductModelId int   ,

	@SellStartDate datetime   ,

	@SellEndDate datetime   ,

	@DiscontinuedDate datetime   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Production].[Product]
					(
					[Name]
					,[ProductNumber]
					,[MakeFlag]
					,[FinishedGoodsFlag]
					,[Color]
					,[SafetyStockLevel]
					,[ReorderPoint]
					,[StandardCost]
					,[ListPrice]
					,[Size]
					,[SizeUnitMeasureCode]
					,[WeightUnitMeasureCode]
					,[Weight]
					,[DaysToManufacture]
					,[ProductLine]
					,[Class]
					,[Style]
					,[ProductSubcategoryID]
					,[ProductModelID]
					,[SellStartDate]
					,[SellEndDate]
					,[DiscontinuedDate]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@Name
					,@ProductNumber
					,@MakeFlag
					,@FinishedGoodsFlag
					,@Color
					,@SafetyStockLevel
					,@ReorderPoint
					,@StandardCost
					,@ListPrice
					,@Size
					,@SizeUnitMeasureCode
					,@WeightUnitMeasureCode
					,@Weight
					,@DaysToManufacture
					,@ProductLine
					,@SafeNameClass
					,@Style
					,@ProductSubcategoryId
					,@ProductModelId
					,@SellStartDate
					,@SellEndDate
					,@DiscontinuedDate
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @ProductId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the Product table
-- Table Comment: Products sold or used in the manfacturing of sold products.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_Update
(

	@ProductId int   ,

	@Name nvarchar (50)  ,

	@ProductNumber nvarchar (25)  ,

	@MakeFlag bit   ,

	@FinishedGoodsFlag bit   ,

	@Color nvarchar (15)  ,

	@SafetyStockLevel smallint   ,

	@ReorderPoint smallint   ,

	@StandardCost money   ,

	@ListPrice money   ,

	@Size nvarchar (5)  ,

	@SizeUnitMeasureCode nchar (3)  ,

	@WeightUnitMeasureCode nchar (3)  ,

	@Weight decimal (8, 2)  ,

	@DaysToManufacture int   ,

	@ProductLine nchar (2)  ,

	@SafeNameClass nchar (2)  ,

	@Style nchar (2)  ,

	@ProductSubcategoryId int   ,

	@ProductModelId int   ,

	@SellStartDate datetime   ,

	@SellEndDate datetime   ,

	@DiscontinuedDate datetime   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[Product]
				SET
					[Name] = @Name
					,[ProductNumber] = @ProductNumber
					,[MakeFlag] = @MakeFlag
					,[FinishedGoodsFlag] = @FinishedGoodsFlag
					,[Color] = @Color
					,[SafetyStockLevel] = @SafetyStockLevel
					,[ReorderPoint] = @ReorderPoint
					,[StandardCost] = @StandardCost
					,[ListPrice] = @ListPrice
					,[Size] = @Size
					,[SizeUnitMeasureCode] = @SizeUnitMeasureCode
					,[WeightUnitMeasureCode] = @WeightUnitMeasureCode
					,[Weight] = @Weight
					,[DaysToManufacture] = @DaysToManufacture
					,[ProductLine] = @ProductLine
					,[Class] = @SafeNameClass
					,[Style] = @Style
					,[ProductSubcategoryID] = @ProductSubcategoryId
					,[ProductModelID] = @ProductModelId
					,[SellStartDate] = @SellStartDate
					,[SellEndDate] = @SellEndDate
					,[DiscontinuedDate] = @DiscontinuedDate
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ProductID] = @ProductId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the Product table
-- Table Comment: Products sold or used in the manfacturing of sold products.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_Delete
(

	@ProductId int   
)
AS


				DELETE FROM [Production].[Product] WITH (ROWLOCK) 
				WHERE
					[ProductID] = @ProductId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_GetByProductModelId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_GetByProductModelId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_GetByProductModelId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Product table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_GetByProductModelId
(

	@ProductModelId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[Name],
					[ProductNumber],
					[MakeFlag],
					[FinishedGoodsFlag],
					[Color],
					[SafetyStockLevel],
					[ReorderPoint],
					[StandardCost],
					[ListPrice],
					[Size],
					[SizeUnitMeasureCode],
					[WeightUnitMeasureCode],
					[Weight],
					[DaysToManufacture],
					[ProductLine],
					[Class],
					[Style],
					[ProductSubcategoryID],
					[ProductModelID],
					[SellStartDate],
					[SellEndDate],
					[DiscontinuedDate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[Product]
				WHERE
					[ProductModelID] = @ProductModelId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_GetByProductSubcategoryId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_GetByProductSubcategoryId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_GetByProductSubcategoryId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Product table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_GetByProductSubcategoryId
(

	@ProductSubcategoryId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[Name],
					[ProductNumber],
					[MakeFlag],
					[FinishedGoodsFlag],
					[Color],
					[SafetyStockLevel],
					[ReorderPoint],
					[StandardCost],
					[ListPrice],
					[Size],
					[SizeUnitMeasureCode],
					[WeightUnitMeasureCode],
					[Weight],
					[DaysToManufacture],
					[ProductLine],
					[Class],
					[Style],
					[ProductSubcategoryID],
					[ProductModelID],
					[SellStartDate],
					[SellEndDate],
					[DiscontinuedDate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[Product]
				WHERE
					[ProductSubcategoryID] = @ProductSubcategoryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_GetBySizeUnitMeasureCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_GetBySizeUnitMeasureCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_GetBySizeUnitMeasureCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Product table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_GetBySizeUnitMeasureCode
(

	@SizeUnitMeasureCode nchar (3)  
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[Name],
					[ProductNumber],
					[MakeFlag],
					[FinishedGoodsFlag],
					[Color],
					[SafetyStockLevel],
					[ReorderPoint],
					[StandardCost],
					[ListPrice],
					[Size],
					[SizeUnitMeasureCode],
					[WeightUnitMeasureCode],
					[Weight],
					[DaysToManufacture],
					[ProductLine],
					[Class],
					[Style],
					[ProductSubcategoryID],
					[ProductModelID],
					[SellStartDate],
					[SellEndDate],
					[DiscontinuedDate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[Product]
				WHERE
					[SizeUnitMeasureCode] = @SizeUnitMeasureCode
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_GetByWeightUnitMeasureCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_GetByWeightUnitMeasureCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_GetByWeightUnitMeasureCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Product table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_GetByWeightUnitMeasureCode
(

	@WeightUnitMeasureCode nchar (3)  
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[Name],
					[ProductNumber],
					[MakeFlag],
					[FinishedGoodsFlag],
					[Color],
					[SafetyStockLevel],
					[ReorderPoint],
					[StandardCost],
					[ListPrice],
					[Size],
					[SizeUnitMeasureCode],
					[WeightUnitMeasureCode],
					[Weight],
					[DaysToManufacture],
					[ProductLine],
					[Class],
					[Style],
					[ProductSubcategoryID],
					[ProductModelID],
					[SellStartDate],
					[SellEndDate],
					[DiscontinuedDate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[Product]
				WHERE
					[WeightUnitMeasureCode] = @WeightUnitMeasureCode
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Product table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[ProductID],
					[Name],
					[ProductNumber],
					[MakeFlag],
					[FinishedGoodsFlag],
					[Color],
					[SafetyStockLevel],
					[ReorderPoint],
					[StandardCost],
					[ListPrice],
					[Size],
					[SizeUnitMeasureCode],
					[WeightUnitMeasureCode],
					[Weight],
					[DaysToManufacture],
					[ProductLine],
					[Class],
					[Style],
					[ProductSubcategoryID],
					[ProductModelID],
					[SellStartDate],
					[SellEndDate],
					[DiscontinuedDate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[Product]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_GetByProductNumber procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_GetByProductNumber') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_GetByProductNumber
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Product table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_GetByProductNumber
(

	@ProductNumber nvarchar (25)  
)
AS


				SELECT
					[ProductID],
					[Name],
					[ProductNumber],
					[MakeFlag],
					[FinishedGoodsFlag],
					[Color],
					[SafetyStockLevel],
					[ReorderPoint],
					[StandardCost],
					[ListPrice],
					[Size],
					[SizeUnitMeasureCode],
					[WeightUnitMeasureCode],
					[Weight],
					[DaysToManufacture],
					[ProductLine],
					[Class],
					[Style],
					[ProductSubcategoryID],
					[ProductModelID],
					[SellStartDate],
					[SellEndDate],
					[DiscontinuedDate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[Product]
				WHERE
					[ProductNumber] = @ProductNumber
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Product table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[ProductID],
					[Name],
					[ProductNumber],
					[MakeFlag],
					[FinishedGoodsFlag],
					[Color],
					[SafetyStockLevel],
					[ReorderPoint],
					[StandardCost],
					[ListPrice],
					[Size],
					[SizeUnitMeasureCode],
					[WeightUnitMeasureCode],
					[Weight],
					[DaysToManufacture],
					[ProductLine],
					[Class],
					[Style],
					[ProductSubcategoryID],
					[ProductModelID],
					[SellStartDate],
					[SellEndDate],
					[DiscontinuedDate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[Product]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Product table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_GetByProductId
(

	@ProductId int   
)
AS


				SELECT
					[ProductID],
					[Name],
					[ProductNumber],
					[MakeFlag],
					[FinishedGoodsFlag],
					[Color],
					[SafetyStockLevel],
					[ReorderPoint],
					[StandardCost],
					[ListPrice],
					[Size],
					[SizeUnitMeasureCode],
					[WeightUnitMeasureCode],
					[Weight],
					[DaysToManufacture],
					[ProductLine],
					[Class],
					[Style],
					[ProductSubcategoryID],
					[ProductModelID],
					[SellStartDate],
					[SellEndDate],
					[DiscontinuedDate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[Product]
				WHERE
					[ProductID] = @ProductId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_GetByDocumentIdFromProductDocument procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_GetByDocumentIdFromProductDocument') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_GetByDocumentIdFromProductDocument
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_GetByDocumentIdFromProductDocument
(

	@DocumentId int   
)
AS


SELECT Production.[Product].[ProductID]
       ,Production.[Product].[Name]
       ,Production.[Product].[ProductNumber]
       ,Production.[Product].[MakeFlag]
       ,Production.[Product].[FinishedGoodsFlag]
       ,Production.[Product].[Color]
       ,Production.[Product].[SafetyStockLevel]
       ,Production.[Product].[ReorderPoint]
       ,Production.[Product].[StandardCost]
       ,Production.[Product].[ListPrice]
       ,Production.[Product].[Size]
       ,Production.[Product].[SizeUnitMeasureCode]
       ,Production.[Product].[WeightUnitMeasureCode]
       ,Production.[Product].[Weight]
       ,Production.[Product].[DaysToManufacture]
       ,Production.[Product].[ProductLine]
       ,Production.[Product].[Class]
       ,Production.[Product].[Style]
       ,Production.[Product].[ProductSubcategoryID]
       ,Production.[Product].[ProductModelID]
       ,Production.[Product].[SellStartDate]
       ,Production.[Product].[SellEndDate]
       ,Production.[Product].[DiscontinuedDate]
       ,Production.[Product].[rowguid]
       ,Production.[Product].[ModifiedDate]
  FROM Production.[Product]
 WHERE EXISTS (SELECT 1
                 FROM Production.[ProductDocument] 
                WHERE Production.[ProductDocument].[DocumentID] = @DocumentId
                  AND Production.[ProductDocument].[ProductID] = Production.[Product].[ProductID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_GetByLocationIdFromProductInventory procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_GetByLocationIdFromProductInventory') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_GetByLocationIdFromProductInventory
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_GetByLocationIdFromProductInventory
(

	@LocationId smallint   
)
AS


SELECT Production.[Product].[ProductID]
       ,Production.[Product].[Name]
       ,Production.[Product].[ProductNumber]
       ,Production.[Product].[MakeFlag]
       ,Production.[Product].[FinishedGoodsFlag]
       ,Production.[Product].[Color]
       ,Production.[Product].[SafetyStockLevel]
       ,Production.[Product].[ReorderPoint]
       ,Production.[Product].[StandardCost]
       ,Production.[Product].[ListPrice]
       ,Production.[Product].[Size]
       ,Production.[Product].[SizeUnitMeasureCode]
       ,Production.[Product].[WeightUnitMeasureCode]
       ,Production.[Product].[Weight]
       ,Production.[Product].[DaysToManufacture]
       ,Production.[Product].[ProductLine]
       ,Production.[Product].[Class]
       ,Production.[Product].[Style]
       ,Production.[Product].[ProductSubcategoryID]
       ,Production.[Product].[ProductModelID]
       ,Production.[Product].[SellStartDate]
       ,Production.[Product].[SellEndDate]
       ,Production.[Product].[DiscontinuedDate]
       ,Production.[Product].[rowguid]
       ,Production.[Product].[ModifiedDate]
  FROM Production.[Product]
 WHERE EXISTS (SELECT 1
                 FROM Production.[ProductInventory] 
                WHERE Production.[ProductInventory].[LocationID] = @LocationId
                  AND Production.[ProductInventory].[ProductID] = Production.[Product].[ProductID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_GetByProductPhotoIdFromProductProductPhoto procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_GetByProductPhotoIdFromProductProductPhoto') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_GetByProductPhotoIdFromProductProductPhoto
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_GetByProductPhotoIdFromProductProductPhoto
(

	@ProductPhotoId int   
)
AS


SELECT Production.[Product].[ProductID]
       ,Production.[Product].[Name]
       ,Production.[Product].[ProductNumber]
       ,Production.[Product].[MakeFlag]
       ,Production.[Product].[FinishedGoodsFlag]
       ,Production.[Product].[Color]
       ,Production.[Product].[SafetyStockLevel]
       ,Production.[Product].[ReorderPoint]
       ,Production.[Product].[StandardCost]
       ,Production.[Product].[ListPrice]
       ,Production.[Product].[Size]
       ,Production.[Product].[SizeUnitMeasureCode]
       ,Production.[Product].[WeightUnitMeasureCode]
       ,Production.[Product].[Weight]
       ,Production.[Product].[DaysToManufacture]
       ,Production.[Product].[ProductLine]
       ,Production.[Product].[Class]
       ,Production.[Product].[Style]
       ,Production.[Product].[ProductSubcategoryID]
       ,Production.[Product].[ProductModelID]
       ,Production.[Product].[SellStartDate]
       ,Production.[Product].[SellEndDate]
       ,Production.[Product].[DiscontinuedDate]
       ,Production.[Product].[rowguid]
       ,Production.[Product].[ModifiedDate]
  FROM Production.[Product]
 WHERE EXISTS (SELECT 1
                 FROM Production.[ProductProductPhoto] 
                WHERE Production.[ProductProductPhoto].[ProductPhotoID] = @ProductPhotoId
                  AND Production.[ProductProductPhoto].[ProductID] = Production.[Product].[ProductID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_GetByVendorIdFromProductVendor procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_GetByVendorIdFromProductVendor') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_GetByVendorIdFromProductVendor
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_GetByVendorIdFromProductVendor
(

	@VendorId int   
)
AS


SELECT Production.[Product].[ProductID]
       ,Production.[Product].[Name]
       ,Production.[Product].[ProductNumber]
       ,Production.[Product].[MakeFlag]
       ,Production.[Product].[FinishedGoodsFlag]
       ,Production.[Product].[Color]
       ,Production.[Product].[SafetyStockLevel]
       ,Production.[Product].[ReorderPoint]
       ,Production.[Product].[StandardCost]
       ,Production.[Product].[ListPrice]
       ,Production.[Product].[Size]
       ,Production.[Product].[SizeUnitMeasureCode]
       ,Production.[Product].[WeightUnitMeasureCode]
       ,Production.[Product].[Weight]
       ,Production.[Product].[DaysToManufacture]
       ,Production.[Product].[ProductLine]
       ,Production.[Product].[Class]
       ,Production.[Product].[Style]
       ,Production.[Product].[ProductSubcategoryID]
       ,Production.[Product].[ProductModelID]
       ,Production.[Product].[SellStartDate]
       ,Production.[Product].[SellEndDate]
       ,Production.[Product].[DiscontinuedDate]
       ,Production.[Product].[rowguid]
       ,Production.[Product].[ModifiedDate]
  FROM Production.[Product]
 WHERE EXISTS (SELECT 1
                 FROM Purchasing.[ProductVendor] 
                WHERE Purchasing.[ProductVendor].[VendorID] = @VendorId
                  AND Purchasing.[ProductVendor].[ProductID] = Production.[Product].[ProductID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_GetBySpecialOfferIdFromSpecialOfferProduct procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_GetBySpecialOfferIdFromSpecialOfferProduct') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_GetBySpecialOfferIdFromSpecialOfferProduct
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_GetBySpecialOfferIdFromSpecialOfferProduct
(

	@SpecialOfferId int   
)
AS


SELECT Production.[Product].[ProductID]
       ,Production.[Product].[Name]
       ,Production.[Product].[ProductNumber]
       ,Production.[Product].[MakeFlag]
       ,Production.[Product].[FinishedGoodsFlag]
       ,Production.[Product].[Color]
       ,Production.[Product].[SafetyStockLevel]
       ,Production.[Product].[ReorderPoint]
       ,Production.[Product].[StandardCost]
       ,Production.[Product].[ListPrice]
       ,Production.[Product].[Size]
       ,Production.[Product].[SizeUnitMeasureCode]
       ,Production.[Product].[WeightUnitMeasureCode]
       ,Production.[Product].[Weight]
       ,Production.[Product].[DaysToManufacture]
       ,Production.[Product].[ProductLine]
       ,Production.[Product].[Class]
       ,Production.[Product].[Style]
       ,Production.[Product].[ProductSubcategoryID]
       ,Production.[Product].[ProductModelID]
       ,Production.[Product].[SellStartDate]
       ,Production.[Product].[SellEndDate]
       ,Production.[Product].[DiscontinuedDate]
       ,Production.[Product].[rowguid]
       ,Production.[Product].[ModifiedDate]
  FROM Production.[Product]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[SpecialOfferProduct] 
                WHERE Sales.[SpecialOfferProduct].[SpecialOfferID] = @SpecialOfferId
                  AND Sales.[SpecialOfferProduct].[ProductID] = Production.[Product].[ProductID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Product_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Product_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Product_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the Product table passing nullable parameters
-- Table Comment: Products sold or used in the manfacturing of sold products.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Product_Find
(

	@SearchUsingOR bit   = null ,

	@ProductId int   = null ,

	@Name nvarchar (50)  = null ,

	@ProductNumber nvarchar (25)  = null ,

	@MakeFlag bit   = null ,

	@FinishedGoodsFlag bit   = null ,

	@Color nvarchar (15)  = null ,

	@SafetyStockLevel smallint   = null ,

	@ReorderPoint smallint   = null ,

	@StandardCost money   = null ,

	@ListPrice money   = null ,

	@Size nvarchar (5)  = null ,

	@SizeUnitMeasureCode nchar (3)  = null ,

	@WeightUnitMeasureCode nchar (3)  = null ,

	@Weight decimal (8, 2)  = null ,

	@DaysToManufacture int   = null ,

	@ProductLine nchar (2)  = null ,

	@SafeNameClass nchar (2)  = null ,

	@Style nchar (2)  = null ,

	@ProductSubcategoryId int   = null ,

	@ProductModelId int   = null ,

	@SellStartDate datetime   = null ,

	@SellEndDate datetime   = null ,

	@DiscontinuedDate datetime   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductID]
	, [Name]
	, [ProductNumber]
	, [MakeFlag]
	, [FinishedGoodsFlag]
	, [Color]
	, [SafetyStockLevel]
	, [ReorderPoint]
	, [StandardCost]
	, [ListPrice]
	, [Size]
	, [SizeUnitMeasureCode]
	, [WeightUnitMeasureCode]
	, [Weight]
	, [DaysToManufacture]
	, [ProductLine]
	, [Class]
	, [Style]
	, [ProductSubcategoryID]
	, [ProductModelID]
	, [SellStartDate]
	, [SellEndDate]
	, [DiscontinuedDate]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Production].[Product]
    WHERE 
	 ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([ProductNumber] = @ProductNumber OR @ProductNumber IS NULL)
	AND ([MakeFlag] = @MakeFlag OR @MakeFlag IS NULL)
	AND ([FinishedGoodsFlag] = @FinishedGoodsFlag OR @FinishedGoodsFlag IS NULL)
	AND ([Color] = @Color OR @Color IS NULL)
	AND ([SafetyStockLevel] = @SafetyStockLevel OR @SafetyStockLevel IS NULL)
	AND ([ReorderPoint] = @ReorderPoint OR @ReorderPoint IS NULL)
	AND ([StandardCost] = @StandardCost OR @StandardCost IS NULL)
	AND ([ListPrice] = @ListPrice OR @ListPrice IS NULL)
	AND ([Size] = @Size OR @Size IS NULL)
	AND ([SizeUnitMeasureCode] = @SizeUnitMeasureCode OR @SizeUnitMeasureCode IS NULL)
	AND ([WeightUnitMeasureCode] = @WeightUnitMeasureCode OR @WeightUnitMeasureCode IS NULL)
	AND ([Weight] = @Weight OR @Weight IS NULL)
	AND ([DaysToManufacture] = @DaysToManufacture OR @DaysToManufacture IS NULL)
	AND ([ProductLine] = @ProductLine OR @ProductLine IS NULL)
	AND ([Class] = @SafeNameClass OR @SafeNameClass IS NULL)
	AND ([Style] = @Style OR @Style IS NULL)
	AND ([ProductSubcategoryID] = @ProductSubcategoryId OR @ProductSubcategoryId IS NULL)
	AND ([ProductModelID] = @ProductModelId OR @ProductModelId IS NULL)
	AND ([SellStartDate] = @SellStartDate OR @SellStartDate IS NULL)
	AND ([SellEndDate] = @SellEndDate OR @SellEndDate IS NULL)
	AND ([DiscontinuedDate] = @DiscontinuedDate OR @DiscontinuedDate IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductID]
	, [Name]
	, [ProductNumber]
	, [MakeFlag]
	, [FinishedGoodsFlag]
	, [Color]
	, [SafetyStockLevel]
	, [ReorderPoint]
	, [StandardCost]
	, [ListPrice]
	, [Size]
	, [SizeUnitMeasureCode]
	, [WeightUnitMeasureCode]
	, [Weight]
	, [DaysToManufacture]
	, [ProductLine]
	, [Class]
	, [Style]
	, [ProductSubcategoryID]
	, [ProductModelID]
	, [SellStartDate]
	, [SellEndDate]
	, [DiscontinuedDate]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Production].[Product]
    WHERE 
	 ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([ProductNumber] = @ProductNumber AND @ProductNumber is not null)
	OR ([MakeFlag] = @MakeFlag AND @MakeFlag is not null)
	OR ([FinishedGoodsFlag] = @FinishedGoodsFlag AND @FinishedGoodsFlag is not null)
	OR ([Color] = @Color AND @Color is not null)
	OR ([SafetyStockLevel] = @SafetyStockLevel AND @SafetyStockLevel is not null)
	OR ([ReorderPoint] = @ReorderPoint AND @ReorderPoint is not null)
	OR ([StandardCost] = @StandardCost AND @StandardCost is not null)
	OR ([ListPrice] = @ListPrice AND @ListPrice is not null)
	OR ([Size] = @Size AND @Size is not null)
	OR ([SizeUnitMeasureCode] = @SizeUnitMeasureCode AND @SizeUnitMeasureCode is not null)
	OR ([WeightUnitMeasureCode] = @WeightUnitMeasureCode AND @WeightUnitMeasureCode is not null)
	OR ([Weight] = @Weight AND @Weight is not null)
	OR ([DaysToManufacture] = @DaysToManufacture AND @DaysToManufacture is not null)
	OR ([ProductLine] = @ProductLine AND @ProductLine is not null)
	OR ([Class] = @SafeNameClass AND @SafeNameClass is not null)
	OR ([Style] = @Style AND @Style is not null)
	OR ([ProductSubcategoryID] = @ProductSubcategoryId AND @ProductSubcategoryId is not null)
	OR ([ProductModelID] = @ProductModelId AND @ProductModelId is not null)
	OR ([SellStartDate] = @SellStartDate AND @SellStartDate is not null)
	OR ([SellEndDate] = @SellEndDate AND @SellEndDate is not null)
	OR ([DiscontinuedDate] = @DiscontinuedDate AND @DiscontinuedDate is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritoryHistory_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritoryHistory_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the SalesTerritoryHistory table
-- Table Comment: Sales representative transfers to other sales territories.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_Get_List

AS


				
				SELECT
					[SalesPersonID],
					[TerritoryID],
					[StartDate],
					[EndDate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesTerritoryHistory]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritoryHistory_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritoryHistory_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the SalesTerritoryHistory table passing page index and page count parameters
-- Table Comment: Sales representative transfers to other sales territories.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SalesPersonID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SalesPersonID]'
				SET @SQL = @SQL + ', [TerritoryID]'
				SET @SQL = @SQL + ', [StartDate]'
				SET @SQL = @SQL + ', [EndDate]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[SalesTerritoryHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SalesPersonID],'
				SET @SQL = @SQL + ' [TerritoryID],'
				SET @SQL = @SQL + ' [StartDate],'
				SET @SQL = @SQL + ' [EndDate],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[SalesTerritoryHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritoryHistory_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritoryHistory_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the SalesTerritoryHistory table
-- Table Comment: Sales representative transfers to other sales territories.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_Insert
(

	@SalesPersonId int   ,

	@TerritoryId int   ,

	@StartDate datetime   ,

	@EndDate datetime   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Sales].[SalesTerritoryHistory]
					(
					[SalesPersonID]
					,[TerritoryID]
					,[StartDate]
					,[EndDate]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@SalesPersonId
					,@TerritoryId
					,@StartDate
					,@EndDate
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritoryHistory_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritoryHistory_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the SalesTerritoryHistory table
-- Table Comment: Sales representative transfers to other sales territories.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_Update
(

	@SalesPersonId int   ,

	@OriginalSalesPersonId int   ,

	@TerritoryId int   ,

	@OriginalTerritoryId int   ,

	@StartDate datetime   ,

	@OriginalStartDate datetime   ,

	@EndDate datetime   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[SalesTerritoryHistory]
				SET
					[SalesPersonID] = @SalesPersonId
					,[TerritoryID] = @TerritoryId
					,[StartDate] = @StartDate
					,[EndDate] = @EndDate
					,[ModifiedDate] = @ModifiedDate
				WHERE
[SalesPersonID] = @OriginalSalesPersonId 
AND [StartDate] = @OriginalStartDate 
AND [TerritoryID] = @OriginalTerritoryId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritoryHistory_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritoryHistory_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the SalesTerritoryHistory table
-- Table Comment: Sales representative transfers to other sales territories.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_Delete
(

	@SalesPersonId int   ,

	@StartDate datetime   ,

	@TerritoryId int   
)
AS


				DELETE FROM [Sales].[SalesTerritoryHistory] WITH (ROWLOCK) 
				WHERE
					[SalesPersonID] = @SalesPersonId
					AND [StartDate] = @StartDate
					AND [TerritoryID] = @TerritoryId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritoryHistory_GetBySalesPersonId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritoryHistory_GetBySalesPersonId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_GetBySalesPersonId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesTerritoryHistory table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_GetBySalesPersonId
(

	@SalesPersonId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesPersonID],
					[TerritoryID],
					[StartDate],
					[EndDate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesTerritoryHistory]
				WHERE
					[SalesPersonID] = @SalesPersonId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritoryHistory_GetByTerritoryId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritoryHistory_GetByTerritoryId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_GetByTerritoryId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesTerritoryHistory table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_GetByTerritoryId
(

	@TerritoryId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesPersonID],
					[TerritoryID],
					[StartDate],
					[EndDate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesTerritoryHistory]
				WHERE
					[TerritoryID] = @TerritoryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritoryHistory_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritoryHistory_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesTerritoryHistory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[SalesPersonID],
					[TerritoryID],
					[StartDate],
					[EndDate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesTerritoryHistory]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritoryHistory_GetBySalesPersonIdStartDateTerritoryId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritoryHistory_GetBySalesPersonIdStartDateTerritoryId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_GetBySalesPersonIdStartDateTerritoryId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesTerritoryHistory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_GetBySalesPersonIdStartDateTerritoryId
(

	@SalesPersonId int   ,

	@StartDate datetime   ,

	@TerritoryId int   
)
AS


				SELECT
					[SalesPersonID],
					[TerritoryID],
					[StartDate],
					[EndDate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesTerritoryHistory]
				WHERE
					[SalesPersonID] = @SalesPersonId
					AND [StartDate] = @StartDate
					AND [TerritoryID] = @TerritoryId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesTerritoryHistory_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesTerritoryHistory_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the SalesTerritoryHistory table passing nullable parameters
-- Table Comment: Sales representative transfers to other sales territories.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesTerritoryHistory_Find
(

	@SearchUsingOR bit   = null ,

	@SalesPersonId int   = null ,

	@TerritoryId int   = null ,

	@StartDate datetime   = null ,

	@EndDate datetime   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SalesPersonID]
	, [TerritoryID]
	, [StartDate]
	, [EndDate]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SalesTerritoryHistory]
    WHERE 
	 ([SalesPersonID] = @SalesPersonId OR @SalesPersonId IS NULL)
	AND ([TerritoryID] = @TerritoryId OR @TerritoryId IS NULL)
	AND ([StartDate] = @StartDate OR @StartDate IS NULL)
	AND ([EndDate] = @EndDate OR @EndDate IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SalesPersonID]
	, [TerritoryID]
	, [StartDate]
	, [EndDate]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SalesTerritoryHistory]
    WHERE 
	 ([SalesPersonID] = @SalesPersonId AND @SalesPersonId is not null)
	OR ([TerritoryID] = @TerritoryId AND @TerritoryId is not null)
	OR ([StartDate] = @StartDate AND @StartDate is not null)
	OR ([EndDate] = @EndDate AND @EndDate is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderDetail_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderDetail_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the PurchaseOrderDetail table
-- Table Comment: Individual products associated with a specific purchase order. See PurchaseOrderHeader.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_Get_List

AS


				
				SELECT
					[PurchaseOrderID],
					[PurchaseOrderDetailID],
					[DueDate],
					[OrderQty],
					[ProductID],
					[UnitPrice],
					[LineTotal],
					[ReceivedQty],
					[RejectedQty],
					[StockedQty],
					[ModifiedDate]
				FROM
					[Purchasing].[PurchaseOrderDetail]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderDetail_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderDetail_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the PurchaseOrderDetail table passing page index and page count parameters
-- Table Comment: Individual products associated with a specific purchase order. See PurchaseOrderHeader.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[PurchaseOrderID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [PurchaseOrderID]'
				SET @SQL = @SQL + ', [PurchaseOrderDetailID]'
				SET @SQL = @SQL + ', [DueDate]'
				SET @SQL = @SQL + ', [OrderQty]'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [UnitPrice]'
				SET @SQL = @SQL + ', [LineTotal]'
				SET @SQL = @SQL + ', [ReceivedQty]'
				SET @SQL = @SQL + ', [RejectedQty]'
				SET @SQL = @SQL + ', [StockedQty]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Purchasing].[PurchaseOrderDetail]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [PurchaseOrderID],'
				SET @SQL = @SQL + ' [PurchaseOrderDetailID],'
				SET @SQL = @SQL + ' [DueDate],'
				SET @SQL = @SQL + ' [OrderQty],'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [UnitPrice],'
				SET @SQL = @SQL + ' [LineTotal],'
				SET @SQL = @SQL + ' [ReceivedQty],'
				SET @SQL = @SQL + ' [RejectedQty],'
				SET @SQL = @SQL + ' [StockedQty],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Purchasing].[PurchaseOrderDetail]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderDetail_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderDetail_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the PurchaseOrderDetail table
-- Table Comment: Individual products associated with a specific purchase order. See PurchaseOrderHeader.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_Insert
(

	@PurchaseOrderId int   ,

	@PurchaseOrderDetailId int    OUTPUT,

	@DueDate datetime   ,

	@OrderQty smallint   ,

	@ProductId int   ,

	@UnitPrice money   ,

	@LineTotal money    OUTPUT,

	@ReceivedQty decimal (8, 2)  ,

	@RejectedQty decimal (8, 2)  ,

	@StockedQty decimal (9, 2)   OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Purchasing].[PurchaseOrderDetail]
					(
					[PurchaseOrderID]
					,[DueDate]
					,[OrderQty]
					,[ProductID]
					,[UnitPrice]
					,[ReceivedQty]
					,[RejectedQty]
					,[ModifiedDate]
					)
				VALUES
					(
					@PurchaseOrderId
					,@DueDate
					,@OrderQty
					,@ProductId
					,@UnitPrice
					,@ReceivedQty
					,@RejectedQty
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @PurchaseOrderDetailId = SCOPE_IDENTITY()
									
				-- Select computed columns into output parameters
				SELECT
 @LineTotal = [LineTotal]
, @StockedQty = [StockedQty]
				FROM
					[Purchasing].[PurchaseOrderDetail]
				WHERE
[PurchaseOrderID] = @PurchaseOrderId 
AND [PurchaseOrderDetailID] = @PurchaseOrderDetailId 
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderDetail_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderDetail_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the PurchaseOrderDetail table
-- Table Comment: Individual products associated with a specific purchase order. See PurchaseOrderHeader.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_Update
(

	@PurchaseOrderId int   ,

	@OriginalPurchaseOrderId int   ,

	@PurchaseOrderDetailId int   ,

	@DueDate datetime   ,

	@OrderQty smallint   ,

	@ProductId int   ,

	@UnitPrice money   ,

	@LineTotal money    OUTPUT,

	@ReceivedQty decimal (8, 2)  ,

	@RejectedQty decimal (8, 2)  ,

	@StockedQty decimal (9, 2)   OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Purchasing].[PurchaseOrderDetail]
				SET
					[PurchaseOrderID] = @PurchaseOrderId
					,[DueDate] = @DueDate
					,[OrderQty] = @OrderQty
					,[ProductID] = @ProductId
					,[UnitPrice] = @UnitPrice
					,[ReceivedQty] = @ReceivedQty
					,[RejectedQty] = @RejectedQty
					,[ModifiedDate] = @ModifiedDate
				WHERE
[PurchaseOrderID] = @OriginalPurchaseOrderId 
AND [PurchaseOrderDetailID] = @PurchaseOrderDetailId 
				
				
				-- Select computed columns into output parameters
				SELECT
 @LineTotal = [LineTotal]
, @StockedQty = [StockedQty]
				FROM
					[Purchasing].[PurchaseOrderDetail]
				WHERE
[PurchaseOrderID] = @PurchaseOrderId 
AND [PurchaseOrderDetailID] = @PurchaseOrderDetailId 
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderDetail_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderDetail_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the PurchaseOrderDetail table
-- Table Comment: Individual products associated with a specific purchase order. See PurchaseOrderHeader.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_Delete
(

	@PurchaseOrderId int   ,

	@PurchaseOrderDetailId int   
)
AS


				DELETE FROM [Purchasing].[PurchaseOrderDetail] WITH (ROWLOCK) 
				WHERE
					[PurchaseOrderID] = @PurchaseOrderId
					AND [PurchaseOrderDetailID] = @PurchaseOrderDetailId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderDetail_GetByPurchaseOrderId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderDetail_GetByPurchaseOrderId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_GetByPurchaseOrderId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the PurchaseOrderDetail table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_GetByPurchaseOrderId
(

	@PurchaseOrderId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[PurchaseOrderID],
					[PurchaseOrderDetailID],
					[DueDate],
					[OrderQty],
					[ProductID],
					[UnitPrice],
					[LineTotal],
					[ReceivedQty],
					[RejectedQty],
					[StockedQty],
					[ModifiedDate]
				FROM
					[Purchasing].[PurchaseOrderDetail]
				WHERE
					[PurchaseOrderID] = @PurchaseOrderId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderDetail_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderDetail_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the PurchaseOrderDetail table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_GetByProductId
(

	@ProductId int   
)
AS


				SELECT
					[PurchaseOrderID],
					[PurchaseOrderDetailID],
					[DueDate],
					[OrderQty],
					[ProductID],
					[UnitPrice],
					[LineTotal],
					[ReceivedQty],
					[RejectedQty],
					[StockedQty],
					[ModifiedDate]
				FROM
					[Purchasing].[PurchaseOrderDetail]
				WHERE
					[ProductID] = @ProductId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderDetail_GetByPurchaseOrderIdPurchaseOrderDetailId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderDetail_GetByPurchaseOrderIdPurchaseOrderDetailId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_GetByPurchaseOrderIdPurchaseOrderDetailId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the PurchaseOrderDetail table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_GetByPurchaseOrderIdPurchaseOrderDetailId
(

	@PurchaseOrderId int   ,

	@PurchaseOrderDetailId int   
)
AS


				SELECT
					[PurchaseOrderID],
					[PurchaseOrderDetailID],
					[DueDate],
					[OrderQty],
					[ProductID],
					[UnitPrice],
					[LineTotal],
					[ReceivedQty],
					[RejectedQty],
					[StockedQty],
					[ModifiedDate]
				FROM
					[Purchasing].[PurchaseOrderDetail]
				WHERE
					[PurchaseOrderID] = @PurchaseOrderId
					AND [PurchaseOrderDetailID] = @PurchaseOrderDetailId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderDetail_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderDetail_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the PurchaseOrderDetail table passing nullable parameters
-- Table Comment: Individual products associated with a specific purchase order. See PurchaseOrderHeader.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderDetail_Find
(

	@SearchUsingOR bit   = null ,

	@PurchaseOrderId int   = null ,

	@PurchaseOrderDetailId int   = null ,

	@DueDate datetime   = null ,

	@OrderQty smallint   = null ,

	@ProductId int   = null ,

	@UnitPrice money   = null ,

	@LineTotal money   = null ,

	@ReceivedQty decimal (8, 2)  = null ,

	@RejectedQty decimal (8, 2)  = null ,

	@StockedQty decimal (9, 2)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [PurchaseOrderID]
	, [PurchaseOrderDetailID]
	, [DueDate]
	, [OrderQty]
	, [ProductID]
	, [UnitPrice]
	, [LineTotal]
	, [ReceivedQty]
	, [RejectedQty]
	, [StockedQty]
	, [ModifiedDate]
    FROM
	[Purchasing].[PurchaseOrderDetail]
    WHERE 
	 ([PurchaseOrderID] = @PurchaseOrderId OR @PurchaseOrderId IS NULL)
	AND ([PurchaseOrderDetailID] = @PurchaseOrderDetailId OR @PurchaseOrderDetailId IS NULL)
	AND ([DueDate] = @DueDate OR @DueDate IS NULL)
	AND ([OrderQty] = @OrderQty OR @OrderQty IS NULL)
	AND ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([UnitPrice] = @UnitPrice OR @UnitPrice IS NULL)
	AND ([LineTotal] = @LineTotal OR @LineTotal IS NULL)
	AND ([ReceivedQty] = @ReceivedQty OR @ReceivedQty IS NULL)
	AND ([RejectedQty] = @RejectedQty OR @RejectedQty IS NULL)
	AND ([StockedQty] = @StockedQty OR @StockedQty IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [PurchaseOrderID]
	, [PurchaseOrderDetailID]
	, [DueDate]
	, [OrderQty]
	, [ProductID]
	, [UnitPrice]
	, [LineTotal]
	, [ReceivedQty]
	, [RejectedQty]
	, [StockedQty]
	, [ModifiedDate]
    FROM
	[Purchasing].[PurchaseOrderDetail]
    WHERE 
	 ([PurchaseOrderID] = @PurchaseOrderId AND @PurchaseOrderId is not null)
	OR ([PurchaseOrderDetailID] = @PurchaseOrderDetailId AND @PurchaseOrderDetailId is not null)
	OR ([DueDate] = @DueDate AND @DueDate is not null)
	OR ([OrderQty] = @OrderQty AND @OrderQty is not null)
	OR ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([UnitPrice] = @UnitPrice AND @UnitPrice is not null)
	OR ([LineTotal] = @LineTotal AND @LineTotal is not null)
	OR ([ReceivedQty] = @ReceivedQty AND @ReceivedQty is not null)
	OR ([RejectedQty] = @RejectedQty AND @RejectedQty is not null)
	OR ([StockedQty] = @StockedQty AND @StockedQty is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderDetail_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderDetail_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the SalesOrderDetail table
-- Table Comment: Individual products associated with a specific sales order. See SalesOrderHeader.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_Get_List

AS


				
				SELECT
					[SalesOrderID],
					[SalesOrderDetailID],
					[CarrierTrackingNumber],
					[OrderQty],
					[ProductID],
					[SpecialOfferID],
					[UnitPrice],
					[UnitPriceDiscount],
					[LineTotal],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderDetail]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderDetail_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderDetail_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the SalesOrderDetail table passing page index and page count parameters
-- Table Comment: Individual products associated with a specific sales order. See SalesOrderHeader.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SalesOrderID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SalesOrderID]'
				SET @SQL = @SQL + ', [SalesOrderDetailID]'
				SET @SQL = @SQL + ', [CarrierTrackingNumber]'
				SET @SQL = @SQL + ', [OrderQty]'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [SpecialOfferID]'
				SET @SQL = @SQL + ', [UnitPrice]'
				SET @SQL = @SQL + ', [UnitPriceDiscount]'
				SET @SQL = @SQL + ', [LineTotal]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[SalesOrderDetail]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SalesOrderID],'
				SET @SQL = @SQL + ' [SalesOrderDetailID],'
				SET @SQL = @SQL + ' [CarrierTrackingNumber],'
				SET @SQL = @SQL + ' [OrderQty],'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [SpecialOfferID],'
				SET @SQL = @SQL + ' [UnitPrice],'
				SET @SQL = @SQL + ' [UnitPriceDiscount],'
				SET @SQL = @SQL + ' [LineTotal],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[SalesOrderDetail]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderDetail_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderDetail_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the SalesOrderDetail table
-- Table Comment: Individual products associated with a specific sales order. See SalesOrderHeader.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_Insert
(

	@SalesOrderId int   ,

	@SalesOrderDetailId int    OUTPUT,

	@CarrierTrackingNumber nvarchar (25)  ,

	@OrderQty smallint   ,

	@ProductId int   ,

	@SpecialOfferId int   ,

	@UnitPrice money   ,

	@UnitPriceDiscount money   ,

	@LineTotal numeric (38, 6)   OUTPUT,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Sales].[SalesOrderDetail]
					(
					[SalesOrderID]
					,[CarrierTrackingNumber]
					,[OrderQty]
					,[ProductID]
					,[SpecialOfferID]
					,[UnitPrice]
					,[UnitPriceDiscount]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@SalesOrderId
					,@CarrierTrackingNumber
					,@OrderQty
					,@ProductId
					,@SpecialOfferId
					,@UnitPrice
					,@UnitPriceDiscount
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @SalesOrderDetailId = SCOPE_IDENTITY()
									
				-- Select computed columns into output parameters
				SELECT
 @LineTotal = [LineTotal]
				FROM
					[Sales].[SalesOrderDetail]
				WHERE
[SalesOrderID] = @SalesOrderId 
AND [SalesOrderDetailID] = @SalesOrderDetailId 
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderDetail_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderDetail_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the SalesOrderDetail table
-- Table Comment: Individual products associated with a specific sales order. See SalesOrderHeader.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_Update
(

	@SalesOrderId int   ,

	@OriginalSalesOrderId int   ,

	@SalesOrderDetailId int   ,

	@CarrierTrackingNumber nvarchar (25)  ,

	@OrderQty smallint   ,

	@ProductId int   ,

	@SpecialOfferId int   ,

	@UnitPrice money   ,

	@UnitPriceDiscount money   ,

	@LineTotal numeric (38, 6)   OUTPUT,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[SalesOrderDetail]
				SET
					[SalesOrderID] = @SalesOrderId
					,[CarrierTrackingNumber] = @CarrierTrackingNumber
					,[OrderQty] = @OrderQty
					,[ProductID] = @ProductId
					,[SpecialOfferID] = @SpecialOfferId
					,[UnitPrice] = @UnitPrice
					,[UnitPriceDiscount] = @UnitPriceDiscount
					,[ModifiedDate] = @ModifiedDate
				WHERE
[SalesOrderID] = @OriginalSalesOrderId 
AND [SalesOrderDetailID] = @SalesOrderDetailId 
				
				
				-- Select computed columns into output parameters
				SELECT
 @LineTotal = [LineTotal]
				FROM
					[Sales].[SalesOrderDetail]
				WHERE
[SalesOrderID] = @SalesOrderId 
AND [SalesOrderDetailID] = @SalesOrderDetailId 
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderDetail_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderDetail_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the SalesOrderDetail table
-- Table Comment: Individual products associated with a specific sales order. See SalesOrderHeader.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_Delete
(

	@SalesOrderId int   ,

	@SalesOrderDetailId int   
)
AS


				DELETE FROM [Sales].[SalesOrderDetail] WITH (ROWLOCK) 
				WHERE
					[SalesOrderID] = @SalesOrderId
					AND [SalesOrderDetailID] = @SalesOrderDetailId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderDetail_GetBySalesOrderId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderDetail_GetBySalesOrderId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_GetBySalesOrderId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderDetail table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_GetBySalesOrderId
(

	@SalesOrderId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesOrderID],
					[SalesOrderDetailID],
					[CarrierTrackingNumber],
					[OrderQty],
					[ProductID],
					[SpecialOfferID],
					[UnitPrice],
					[UnitPriceDiscount],
					[LineTotal],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderDetail]
				WHERE
					[SalesOrderID] = @SalesOrderId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderDetail_GetBySpecialOfferIdProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderDetail_GetBySpecialOfferIdProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_GetBySpecialOfferIdProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderDetail table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_GetBySpecialOfferIdProductId
(

	@SpecialOfferId int   ,

	@ProductId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SalesOrderID],
					[SalesOrderDetailID],
					[CarrierTrackingNumber],
					[OrderQty],
					[ProductID],
					[SpecialOfferID],
					[UnitPrice],
					[UnitPriceDiscount],
					[LineTotal],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderDetail]
				WHERE
					[SpecialOfferID] = @SpecialOfferId
					AND [ProductID] = @ProductId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderDetail_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderDetail_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderDetail table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[SalesOrderID],
					[SalesOrderDetailID],
					[CarrierTrackingNumber],
					[OrderQty],
					[ProductID],
					[SpecialOfferID],
					[UnitPrice],
					[UnitPriceDiscount],
					[LineTotal],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderDetail]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderDetail_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderDetail_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderDetail table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_GetByProductId
(

	@ProductId int   
)
AS


				SELECT
					[SalesOrderID],
					[SalesOrderDetailID],
					[CarrierTrackingNumber],
					[OrderQty],
					[ProductID],
					[SpecialOfferID],
					[UnitPrice],
					[UnitPriceDiscount],
					[LineTotal],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderDetail]
				WHERE
					[ProductID] = @ProductId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderDetail_GetBySalesOrderIdSalesOrderDetailId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderDetail_GetBySalesOrderIdSalesOrderDetailId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_GetBySalesOrderIdSalesOrderDetailId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SalesOrderDetail table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_GetBySalesOrderIdSalesOrderDetailId
(

	@SalesOrderId int   ,

	@SalesOrderDetailId int   
)
AS


				SELECT
					[SalesOrderID],
					[SalesOrderDetailID],
					[CarrierTrackingNumber],
					[OrderQty],
					[ProductID],
					[SpecialOfferID],
					[UnitPrice],
					[UnitPriceDiscount],
					[LineTotal],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SalesOrderDetail]
				WHERE
					[SalesOrderID] = @SalesOrderId
					AND [SalesOrderDetailID] = @SalesOrderDetailId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SalesOrderDetail_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SalesOrderDetail_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the SalesOrderDetail table passing nullable parameters
-- Table Comment: Individual products associated with a specific sales order. See SalesOrderHeader.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SalesOrderDetail_Find
(

	@SearchUsingOR bit   = null ,

	@SalesOrderId int   = null ,

	@SalesOrderDetailId int   = null ,

	@CarrierTrackingNumber nvarchar (25)  = null ,

	@OrderQty smallint   = null ,

	@ProductId int   = null ,

	@SpecialOfferId int   = null ,

	@UnitPrice money   = null ,

	@UnitPriceDiscount money   = null ,

	@LineTotal numeric (38, 6)  = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SalesOrderID]
	, [SalesOrderDetailID]
	, [CarrierTrackingNumber]
	, [OrderQty]
	, [ProductID]
	, [SpecialOfferID]
	, [UnitPrice]
	, [UnitPriceDiscount]
	, [LineTotal]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SalesOrderDetail]
    WHERE 
	 ([SalesOrderID] = @SalesOrderId OR @SalesOrderId IS NULL)
	AND ([SalesOrderDetailID] = @SalesOrderDetailId OR @SalesOrderDetailId IS NULL)
	AND ([CarrierTrackingNumber] = @CarrierTrackingNumber OR @CarrierTrackingNumber IS NULL)
	AND ([OrderQty] = @OrderQty OR @OrderQty IS NULL)
	AND ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([SpecialOfferID] = @SpecialOfferId OR @SpecialOfferId IS NULL)
	AND ([UnitPrice] = @UnitPrice OR @UnitPrice IS NULL)
	AND ([UnitPriceDiscount] = @UnitPriceDiscount OR @UnitPriceDiscount IS NULL)
	AND ([LineTotal] = @LineTotal OR @LineTotal IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SalesOrderID]
	, [SalesOrderDetailID]
	, [CarrierTrackingNumber]
	, [OrderQty]
	, [ProductID]
	, [SpecialOfferID]
	, [UnitPrice]
	, [UnitPriceDiscount]
	, [LineTotal]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SalesOrderDetail]
    WHERE 
	 ([SalesOrderID] = @SalesOrderId AND @SalesOrderId is not null)
	OR ([SalesOrderDetailID] = @SalesOrderDetailId AND @SalesOrderDetailId is not null)
	OR ([CarrierTrackingNumber] = @CarrierTrackingNumber AND @CarrierTrackingNumber is not null)
	OR ([OrderQty] = @OrderQty AND @OrderQty is not null)
	OR ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([SpecialOfferID] = @SpecialOfferId AND @SpecialOfferId is not null)
	OR ([UnitPrice] = @UnitPrice AND @UnitPrice is not null)
	OR ([UnitPriceDiscount] = @UnitPriceDiscount AND @UnitPriceDiscount is not null)
	OR ([LineTotal] = @LineTotal AND @LineTotal is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductProductPhoto_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductProductPhoto_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductProductPhoto_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ProductProductPhoto table
-- Table Comment: Cross-reference table mapping products and product photos.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductProductPhoto_Get_List

AS


				
				SELECT
					[ProductID],
					[ProductPhotoID],
					[Primary],
					[ModifiedDate]
				FROM
					[Production].[ProductProductPhoto]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductProductPhoto_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductProductPhoto_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductProductPhoto_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ProductProductPhoto table passing page index and page count parameters
-- Table Comment: Cross-reference table mapping products and product photos.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductProductPhoto_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [ProductPhotoID]'
				SET @SQL = @SQL + ', [Primary]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[ProductProductPhoto]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [ProductPhotoID],'
				SET @SQL = @SQL + ' [Primary],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[ProductProductPhoto]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductProductPhoto_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductProductPhoto_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductProductPhoto_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ProductProductPhoto table
-- Table Comment: Cross-reference table mapping products and product photos.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductProductPhoto_Insert
(

	@ProductId int   ,

	@ProductPhotoId int   ,

	@Primary bit   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[ProductProductPhoto]
					(
					[ProductID]
					,[ProductPhotoID]
					,[Primary]
					,[ModifiedDate]
					)
				VALUES
					(
					@ProductId
					,@ProductPhotoId
					,@Primary
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductProductPhoto_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductProductPhoto_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductProductPhoto_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ProductProductPhoto table
-- Table Comment: Cross-reference table mapping products and product photos.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductProductPhoto_Update
(

	@ProductId int   ,

	@OriginalProductId int   ,

	@ProductPhotoId int   ,

	@OriginalProductPhotoId int   ,

	@Primary bit   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[ProductProductPhoto]
				SET
					[ProductID] = @ProductId
					,[ProductPhotoID] = @ProductPhotoId
					,[Primary] = @Primary
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ProductID] = @OriginalProductId 
AND [ProductPhotoID] = @OriginalProductPhotoId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductProductPhoto_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductProductPhoto_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductProductPhoto_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ProductProductPhoto table
-- Table Comment: Cross-reference table mapping products and product photos.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductProductPhoto_Delete
(

	@ProductId int   ,

	@ProductPhotoId int   
)
AS


				DELETE FROM [Production].[ProductProductPhoto] WITH (ROWLOCK) 
				WHERE
					[ProductID] = @ProductId
					AND [ProductPhotoID] = @ProductPhotoId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductProductPhoto_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductProductPhoto_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductProductPhoto_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductProductPhoto table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductProductPhoto_GetByProductId
(

	@ProductId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[ProductPhotoID],
					[Primary],
					[ModifiedDate]
				FROM
					[Production].[ProductProductPhoto]
				WHERE
					[ProductID] = @ProductId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductProductPhoto_GetByProductPhotoId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductProductPhoto_GetByProductPhotoId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductProductPhoto_GetByProductPhotoId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductProductPhoto table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductProductPhoto_GetByProductPhotoId
(

	@ProductPhotoId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[ProductPhotoID],
					[Primary],
					[ModifiedDate]
				FROM
					[Production].[ProductProductPhoto]
				WHERE
					[ProductPhotoID] = @ProductPhotoId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductProductPhoto_GetByProductIdProductPhotoId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductProductPhoto_GetByProductIdProductPhotoId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductProductPhoto_GetByProductIdProductPhotoId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductProductPhoto table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductProductPhoto_GetByProductIdProductPhotoId
(

	@ProductId int   ,

	@ProductPhotoId int   
)
AS


				SELECT
					[ProductID],
					[ProductPhotoID],
					[Primary],
					[ModifiedDate]
				FROM
					[Production].[ProductProductPhoto]
				WHERE
					[ProductID] = @ProductId
					AND [ProductPhotoID] = @ProductPhotoId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductProductPhoto_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductProductPhoto_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductProductPhoto_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ProductProductPhoto table passing nullable parameters
-- Table Comment: Cross-reference table mapping products and product photos.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductProductPhoto_Find
(

	@SearchUsingOR bit   = null ,

	@ProductId int   = null ,

	@ProductPhotoId int   = null ,

	@Primary bit   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductID]
	, [ProductPhotoID]
	, [Primary]
	, [ModifiedDate]
    FROM
	[Production].[ProductProductPhoto]
    WHERE 
	 ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([ProductPhotoID] = @ProductPhotoId OR @ProductPhotoId IS NULL)
	AND ([Primary] = @Primary OR @Primary IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductID]
	, [ProductPhotoID]
	, [Primary]
	, [ModifiedDate]
    FROM
	[Production].[ProductProductPhoto]
    WHERE 
	 ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([ProductPhotoID] = @ProductPhotoId AND @ProductPhotoId is not null)
	OR ([Primary] = @Primary AND @Primary is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductReview_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductReview_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductReview_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ProductReview table
-- Table Comment: Customer reviews of products they have purchased.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductReview_Get_List

AS


				
				SELECT
					[ProductReviewID],
					[ProductID],
					[ReviewerName],
					[ReviewDate],
					[EmailAddress],
					[Rating],
					[Comments],
					[ModifiedDate]
				FROM
					[Production].[ProductReview]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductReview_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductReview_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductReview_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ProductReview table passing page index and page count parameters
-- Table Comment: Customer reviews of products they have purchased.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductReview_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductReviewID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductReviewID]'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [ReviewerName]'
				SET @SQL = @SQL + ', [ReviewDate]'
				SET @SQL = @SQL + ', [EmailAddress]'
				SET @SQL = @SQL + ', [Rating]'
				SET @SQL = @SQL + ', [Comments]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[ProductReview]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductReviewID],'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [ReviewerName],'
				SET @SQL = @SQL + ' [ReviewDate],'
				SET @SQL = @SQL + ' [EmailAddress],'
				SET @SQL = @SQL + ' [Rating],'
				SET @SQL = @SQL + ' [Comments],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[ProductReview]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductReview_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductReview_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductReview_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ProductReview table
-- Table Comment: Customer reviews of products they have purchased.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductReview_Insert
(

	@ProductReviewId int    OUTPUT,

	@ProductId int   ,

	@ReviewerName nvarchar (50)  ,

	@ReviewDate datetime   ,

	@EmailAddress nvarchar (50)  ,

	@Rating int   ,

	@Comments nvarchar (3850)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[ProductReview]
					(
					[ProductID]
					,[ReviewerName]
					,[ReviewDate]
					,[EmailAddress]
					,[Rating]
					,[Comments]
					,[ModifiedDate]
					)
				VALUES
					(
					@ProductId
					,@ReviewerName
					,@ReviewDate
					,@EmailAddress
					,@Rating
					,@Comments
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @ProductReviewId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductReview_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductReview_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductReview_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ProductReview table
-- Table Comment: Customer reviews of products they have purchased.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductReview_Update
(

	@ProductReviewId int   ,

	@ProductId int   ,

	@ReviewerName nvarchar (50)  ,

	@ReviewDate datetime   ,

	@EmailAddress nvarchar (50)  ,

	@Rating int   ,

	@Comments nvarchar (3850)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[ProductReview]
				SET
					[ProductID] = @ProductId
					,[ReviewerName] = @ReviewerName
					,[ReviewDate] = @ReviewDate
					,[EmailAddress] = @EmailAddress
					,[Rating] = @Rating
					,[Comments] = @Comments
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ProductReviewID] = @ProductReviewId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductReview_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductReview_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductReview_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ProductReview table
-- Table Comment: Customer reviews of products they have purchased.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductReview_Delete
(

	@ProductReviewId int   
)
AS


				DELETE FROM [Production].[ProductReview] WITH (ROWLOCK) 
				WHERE
					[ProductReviewID] = @ProductReviewId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductReview_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductReview_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductReview_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductReview table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductReview_GetByProductId
(

	@ProductId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductReviewID],
					[ProductID],
					[ReviewerName],
					[ReviewDate],
					[EmailAddress],
					[Rating],
					[Comments],
					[ModifiedDate]
				FROM
					[Production].[ProductReview]
				WHERE
					[ProductID] = @ProductId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductReview_GetByProductIdReviewerName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductReview_GetByProductIdReviewerName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductReview_GetByProductIdReviewerName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductReview table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductReview_GetByProductIdReviewerName
(

	@ProductId int   ,

	@ReviewerName nvarchar (50)  
)
AS


				SELECT
					[ProductReviewID],
					[ProductID],
					[ReviewerName],
					[ReviewDate],
					[EmailAddress],
					[Rating],
					[Comments],
					[ModifiedDate]
				FROM
					[Production].[ProductReview]
				WHERE
					[ProductID] = @ProductId
					AND [ReviewerName] = @ReviewerName
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductReview_GetByProductReviewId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductReview_GetByProductReviewId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductReview_GetByProductReviewId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductReview table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductReview_GetByProductReviewId
(

	@ProductReviewId int   
)
AS


				SELECT
					[ProductReviewID],
					[ProductID],
					[ReviewerName],
					[ReviewDate],
					[EmailAddress],
					[Rating],
					[Comments],
					[ModifiedDate]
				FROM
					[Production].[ProductReview]
				WHERE
					[ProductReviewID] = @ProductReviewId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductReview_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductReview_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductReview_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ProductReview table passing nullable parameters
-- Table Comment: Customer reviews of products they have purchased.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductReview_Find
(

	@SearchUsingOR bit   = null ,

	@ProductReviewId int   = null ,

	@ProductId int   = null ,

	@ReviewerName nvarchar (50)  = null ,

	@ReviewDate datetime   = null ,

	@EmailAddress nvarchar (50)  = null ,

	@Rating int   = null ,

	@Comments nvarchar (3850)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductReviewID]
	, [ProductID]
	, [ReviewerName]
	, [ReviewDate]
	, [EmailAddress]
	, [Rating]
	, [Comments]
	, [ModifiedDate]
    FROM
	[Production].[ProductReview]
    WHERE 
	 ([ProductReviewID] = @ProductReviewId OR @ProductReviewId IS NULL)
	AND ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([ReviewerName] = @ReviewerName OR @ReviewerName IS NULL)
	AND ([ReviewDate] = @ReviewDate OR @ReviewDate IS NULL)
	AND ([EmailAddress] = @EmailAddress OR @EmailAddress IS NULL)
	AND ([Rating] = @Rating OR @Rating IS NULL)
	AND ([Comments] = @Comments OR @Comments IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductReviewID]
	, [ProductID]
	, [ReviewerName]
	, [ReviewDate]
	, [EmailAddress]
	, [Rating]
	, [Comments]
	, [ModifiedDate]
    FROM
	[Production].[ProductReview]
    WHERE 
	 ([ProductReviewID] = @ProductReviewId AND @ProductReviewId is not null)
	OR ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([ReviewerName] = @ReviewerName AND @ReviewerName is not null)
	OR ([ReviewDate] = @ReviewDate AND @ReviewDate is not null)
	OR ([EmailAddress] = @EmailAddress AND @EmailAddress is not null)
	OR ([Rating] = @Rating AND @Rating is not null)
	OR ([Comments] = @Comments AND @Comments is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderHeader_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderHeader_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the PurchaseOrderHeader table
-- Table Comment: General purchase order information. See PurchaseOrderDetail.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_Get_List

AS


				
				SELECT
					[PurchaseOrderID],
					[RevisionNumber],
					[Status],
					[EmployeeID],
					[VendorID],
					[ShipMethodID],
					[OrderDate],
					[ShipDate],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[ModifiedDate]
				FROM
					[Purchasing].[PurchaseOrderHeader]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderHeader_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderHeader_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the PurchaseOrderHeader table passing page index and page count parameters
-- Table Comment: General purchase order information. See PurchaseOrderDetail.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[PurchaseOrderID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [PurchaseOrderID]'
				SET @SQL = @SQL + ', [RevisionNumber]'
				SET @SQL = @SQL + ', [Status]'
				SET @SQL = @SQL + ', [EmployeeID]'
				SET @SQL = @SQL + ', [VendorID]'
				SET @SQL = @SQL + ', [ShipMethodID]'
				SET @SQL = @SQL + ', [OrderDate]'
				SET @SQL = @SQL + ', [ShipDate]'
				SET @SQL = @SQL + ', [SubTotal]'
				SET @SQL = @SQL + ', [TaxAmt]'
				SET @SQL = @SQL + ', [Freight]'
				SET @SQL = @SQL + ', [TotalDue]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Purchasing].[PurchaseOrderHeader]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [PurchaseOrderID],'
				SET @SQL = @SQL + ' [RevisionNumber],'
				SET @SQL = @SQL + ' [Status],'
				SET @SQL = @SQL + ' [EmployeeID],'
				SET @SQL = @SQL + ' [VendorID],'
				SET @SQL = @SQL + ' [ShipMethodID],'
				SET @SQL = @SQL + ' [OrderDate],'
				SET @SQL = @SQL + ' [ShipDate],'
				SET @SQL = @SQL + ' [SubTotal],'
				SET @SQL = @SQL + ' [TaxAmt],'
				SET @SQL = @SQL + ' [Freight],'
				SET @SQL = @SQL + ' [TotalDue],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Purchasing].[PurchaseOrderHeader]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderHeader_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderHeader_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the PurchaseOrderHeader table
-- Table Comment: General purchase order information. See PurchaseOrderDetail.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_Insert
(

	@PurchaseOrderId int    OUTPUT,

	@RevisionNumber tinyint   ,

	@Status tinyint   ,

	@EmployeeId int   ,

	@VendorId int   ,

	@ShipMethodId int   ,

	@OrderDate datetime   ,

	@ShipDate datetime   ,

	@SubTotal money   ,

	@TaxAmt money   ,

	@Freight money   ,

	@TotalDue money    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Purchasing].[PurchaseOrderHeader]
					(
					[RevisionNumber]
					,[Status]
					,[EmployeeID]
					,[VendorID]
					,[ShipMethodID]
					,[OrderDate]
					,[ShipDate]
					,[SubTotal]
					,[TaxAmt]
					,[Freight]
					,[ModifiedDate]
					)
				VALUES
					(
					@RevisionNumber
					,@Status
					,@EmployeeId
					,@VendorId
					,@ShipMethodId
					,@OrderDate
					,@ShipDate
					,@SubTotal
					,@TaxAmt
					,@Freight
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @PurchaseOrderId = SCOPE_IDENTITY()
									
				-- Select computed columns into output parameters
				SELECT
 @TotalDue = [TotalDue]
				FROM
					[Purchasing].[PurchaseOrderHeader]
				WHERE
[PurchaseOrderID] = @PurchaseOrderId 
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderHeader_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderHeader_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the PurchaseOrderHeader table
-- Table Comment: General purchase order information. See PurchaseOrderDetail.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_Update
(

	@PurchaseOrderId int   ,

	@RevisionNumber tinyint   ,

	@Status tinyint   ,

	@EmployeeId int   ,

	@VendorId int   ,

	@ShipMethodId int   ,

	@OrderDate datetime   ,

	@ShipDate datetime   ,

	@SubTotal money   ,

	@TaxAmt money   ,

	@Freight money   ,

	@TotalDue money    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Purchasing].[PurchaseOrderHeader]
				SET
					[RevisionNumber] = @RevisionNumber
					,[Status] = @Status
					,[EmployeeID] = @EmployeeId
					,[VendorID] = @VendorId
					,[ShipMethodID] = @ShipMethodId
					,[OrderDate] = @OrderDate
					,[ShipDate] = @ShipDate
					,[SubTotal] = @SubTotal
					,[TaxAmt] = @TaxAmt
					,[Freight] = @Freight
					,[ModifiedDate] = @ModifiedDate
				WHERE
[PurchaseOrderID] = @PurchaseOrderId 
				
				
				-- Select computed columns into output parameters
				SELECT
 @TotalDue = [TotalDue]
				FROM
					[Purchasing].[PurchaseOrderHeader]
				WHERE
[PurchaseOrderID] = @PurchaseOrderId 
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderHeader_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderHeader_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the PurchaseOrderHeader table
-- Table Comment: General purchase order information. See PurchaseOrderDetail.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_Delete
(

	@PurchaseOrderId int   
)
AS


				DELETE FROM [Purchasing].[PurchaseOrderHeader] WITH (ROWLOCK) 
				WHERE
					[PurchaseOrderID] = @PurchaseOrderId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByShipMethodId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByShipMethodId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByShipMethodId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the PurchaseOrderHeader table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByShipMethodId
(

	@ShipMethodId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[PurchaseOrderID],
					[RevisionNumber],
					[Status],
					[EmployeeID],
					[VendorID],
					[ShipMethodID],
					[OrderDate],
					[ShipDate],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[ModifiedDate]
				FROM
					[Purchasing].[PurchaseOrderHeader]
				WHERE
					[ShipMethodID] = @ShipMethodId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByEmployeeId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByEmployeeId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByEmployeeId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the PurchaseOrderHeader table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByEmployeeId
(

	@EmployeeId int   
)
AS


				SELECT
					[PurchaseOrderID],
					[RevisionNumber],
					[Status],
					[EmployeeID],
					[VendorID],
					[ShipMethodID],
					[OrderDate],
					[ShipDate],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[ModifiedDate]
				FROM
					[Purchasing].[PurchaseOrderHeader]
				WHERE
					[EmployeeID] = @EmployeeId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByVendorId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByVendorId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByVendorId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the PurchaseOrderHeader table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByVendorId
(

	@VendorId int   
)
AS


				SELECT
					[PurchaseOrderID],
					[RevisionNumber],
					[Status],
					[EmployeeID],
					[VendorID],
					[ShipMethodID],
					[OrderDate],
					[ShipDate],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[ModifiedDate]
				FROM
					[Purchasing].[PurchaseOrderHeader]
				WHERE
					[VendorID] = @VendorId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByPurchaseOrderId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByPurchaseOrderId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByPurchaseOrderId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the PurchaseOrderHeader table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_GetByPurchaseOrderId
(

	@PurchaseOrderId int   
)
AS


				SELECT
					[PurchaseOrderID],
					[RevisionNumber],
					[Status],
					[EmployeeID],
					[VendorID],
					[ShipMethodID],
					[OrderDate],
					[ShipDate],
					[SubTotal],
					[TaxAmt],
					[Freight],
					[TotalDue],
					[ModifiedDate]
				FROM
					[Purchasing].[PurchaseOrderHeader]
				WHERE
					[PurchaseOrderID] = @PurchaseOrderId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_PurchaseOrderHeader_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_PurchaseOrderHeader_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the PurchaseOrderHeader table passing nullable parameters
-- Table Comment: General purchase order information. See PurchaseOrderDetail.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_PurchaseOrderHeader_Find
(

	@SearchUsingOR bit   = null ,

	@PurchaseOrderId int   = null ,

	@RevisionNumber tinyint   = null ,

	@Status tinyint   = null ,

	@EmployeeId int   = null ,

	@VendorId int   = null ,

	@ShipMethodId int   = null ,

	@OrderDate datetime   = null ,

	@ShipDate datetime   = null ,

	@SubTotal money   = null ,

	@TaxAmt money   = null ,

	@Freight money   = null ,

	@TotalDue money   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [PurchaseOrderID]
	, [RevisionNumber]
	, [Status]
	, [EmployeeID]
	, [VendorID]
	, [ShipMethodID]
	, [OrderDate]
	, [ShipDate]
	, [SubTotal]
	, [TaxAmt]
	, [Freight]
	, [TotalDue]
	, [ModifiedDate]
    FROM
	[Purchasing].[PurchaseOrderHeader]
    WHERE 
	 ([PurchaseOrderID] = @PurchaseOrderId OR @PurchaseOrderId IS NULL)
	AND ([RevisionNumber] = @RevisionNumber OR @RevisionNumber IS NULL)
	AND ([Status] = @Status OR @Status IS NULL)
	AND ([EmployeeID] = @EmployeeId OR @EmployeeId IS NULL)
	AND ([VendorID] = @VendorId OR @VendorId IS NULL)
	AND ([ShipMethodID] = @ShipMethodId OR @ShipMethodId IS NULL)
	AND ([OrderDate] = @OrderDate OR @OrderDate IS NULL)
	AND ([ShipDate] = @ShipDate OR @ShipDate IS NULL)
	AND ([SubTotal] = @SubTotal OR @SubTotal IS NULL)
	AND ([TaxAmt] = @TaxAmt OR @TaxAmt IS NULL)
	AND ([Freight] = @Freight OR @Freight IS NULL)
	AND ([TotalDue] = @TotalDue OR @TotalDue IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [PurchaseOrderID]
	, [RevisionNumber]
	, [Status]
	, [EmployeeID]
	, [VendorID]
	, [ShipMethodID]
	, [OrderDate]
	, [ShipDate]
	, [SubTotal]
	, [TaxAmt]
	, [Freight]
	, [TotalDue]
	, [ModifiedDate]
    FROM
	[Purchasing].[PurchaseOrderHeader]
    WHERE 
	 ([PurchaseOrderID] = @PurchaseOrderId AND @PurchaseOrderId is not null)
	OR ([RevisionNumber] = @RevisionNumber AND @RevisionNumber is not null)
	OR ([Status] = @Status AND @Status is not null)
	OR ([EmployeeID] = @EmployeeId AND @EmployeeId is not null)
	OR ([VendorID] = @VendorId AND @VendorId is not null)
	OR ([ShipMethodID] = @ShipMethodId AND @ShipMethodId is not null)
	OR ([OrderDate] = @OrderDate AND @OrderDate is not null)
	OR ([ShipDate] = @ShipDate AND @ShipDate is not null)
	OR ([SubTotal] = @SubTotal AND @SubTotal is not null)
	OR ([TaxAmt] = @TaxAmt AND @TaxAmt is not null)
	OR ([Freight] = @Freight AND @Freight is not null)
	OR ([TotalDue] = @TotalDue AND @TotalDue is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ProductVendor_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ProductVendor_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ProductVendor_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ProductVendor table
-- Table Comment: Cross-reference table mapping vendors with the products they supply.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ProductVendor_Get_List

AS


				
				SELECT
					[ProductID],
					[VendorID],
					[AverageLeadTime],
					[StandardPrice],
					[LastReceiptCost],
					[LastReceiptDate],
					[MinOrderQty],
					[MaxOrderQty],
					[OnOrderQty],
					[UnitMeasureCode],
					[ModifiedDate]
				FROM
					[Purchasing].[ProductVendor]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ProductVendor_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ProductVendor_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ProductVendor_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ProductVendor table passing page index and page count parameters
-- Table Comment: Cross-reference table mapping vendors with the products they supply.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ProductVendor_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [VendorID]'
				SET @SQL = @SQL + ', [AverageLeadTime]'
				SET @SQL = @SQL + ', [StandardPrice]'
				SET @SQL = @SQL + ', [LastReceiptCost]'
				SET @SQL = @SQL + ', [LastReceiptDate]'
				SET @SQL = @SQL + ', [MinOrderQty]'
				SET @SQL = @SQL + ', [MaxOrderQty]'
				SET @SQL = @SQL + ', [OnOrderQty]'
				SET @SQL = @SQL + ', [UnitMeasureCode]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Purchasing].[ProductVendor]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [VendorID],'
				SET @SQL = @SQL + ' [AverageLeadTime],'
				SET @SQL = @SQL + ' [StandardPrice],'
				SET @SQL = @SQL + ' [LastReceiptCost],'
				SET @SQL = @SQL + ' [LastReceiptDate],'
				SET @SQL = @SQL + ' [MinOrderQty],'
				SET @SQL = @SQL + ' [MaxOrderQty],'
				SET @SQL = @SQL + ' [OnOrderQty],'
				SET @SQL = @SQL + ' [UnitMeasureCode],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Purchasing].[ProductVendor]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ProductVendor_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ProductVendor_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ProductVendor_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ProductVendor table
-- Table Comment: Cross-reference table mapping vendors with the products they supply.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ProductVendor_Insert
(

	@ProductId int   ,

	@VendorId int   ,

	@AverageLeadTime int   ,

	@StandardPrice money   ,

	@LastReceiptCost money   ,

	@LastReceiptDate datetime   ,

	@MinOrderQty int   ,

	@MaxOrderQty int   ,

	@OnOrderQty int   ,

	@UnitMeasureCode nchar (3)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Purchasing].[ProductVendor]
					(
					[ProductID]
					,[VendorID]
					,[AverageLeadTime]
					,[StandardPrice]
					,[LastReceiptCost]
					,[LastReceiptDate]
					,[MinOrderQty]
					,[MaxOrderQty]
					,[OnOrderQty]
					,[UnitMeasureCode]
					,[ModifiedDate]
					)
				VALUES
					(
					@ProductId
					,@VendorId
					,@AverageLeadTime
					,@StandardPrice
					,@LastReceiptCost
					,@LastReceiptDate
					,@MinOrderQty
					,@MaxOrderQty
					,@OnOrderQty
					,@UnitMeasureCode
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ProductVendor_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ProductVendor_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ProductVendor_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ProductVendor table
-- Table Comment: Cross-reference table mapping vendors with the products they supply.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ProductVendor_Update
(

	@ProductId int   ,

	@OriginalProductId int   ,

	@VendorId int   ,

	@OriginalVendorId int   ,

	@AverageLeadTime int   ,

	@StandardPrice money   ,

	@LastReceiptCost money   ,

	@LastReceiptDate datetime   ,

	@MinOrderQty int   ,

	@MaxOrderQty int   ,

	@OnOrderQty int   ,

	@UnitMeasureCode nchar (3)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Purchasing].[ProductVendor]
				SET
					[ProductID] = @ProductId
					,[VendorID] = @VendorId
					,[AverageLeadTime] = @AverageLeadTime
					,[StandardPrice] = @StandardPrice
					,[LastReceiptCost] = @LastReceiptCost
					,[LastReceiptDate] = @LastReceiptDate
					,[MinOrderQty] = @MinOrderQty
					,[MaxOrderQty] = @MaxOrderQty
					,[OnOrderQty] = @OnOrderQty
					,[UnitMeasureCode] = @UnitMeasureCode
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ProductID] = @OriginalProductId 
AND [VendorID] = @OriginalVendorId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ProductVendor_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ProductVendor_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ProductVendor_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ProductVendor table
-- Table Comment: Cross-reference table mapping vendors with the products they supply.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ProductVendor_Delete
(

	@ProductId int   ,

	@VendorId int   
)
AS


				DELETE FROM [Purchasing].[ProductVendor] WITH (ROWLOCK) 
				WHERE
					[ProductID] = @ProductId
					AND [VendorID] = @VendorId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ProductVendor_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ProductVendor_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ProductVendor_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductVendor table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ProductVendor_GetByProductId
(

	@ProductId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[VendorID],
					[AverageLeadTime],
					[StandardPrice],
					[LastReceiptCost],
					[LastReceiptDate],
					[MinOrderQty],
					[MaxOrderQty],
					[OnOrderQty],
					[UnitMeasureCode],
					[ModifiedDate]
				FROM
					[Purchasing].[ProductVendor]
				WHERE
					[ProductID] = @ProductId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ProductVendor_GetByUnitMeasureCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ProductVendor_GetByUnitMeasureCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ProductVendor_GetByUnitMeasureCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductVendor table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ProductVendor_GetByUnitMeasureCode
(

	@UnitMeasureCode nchar (3)  
)
AS


				SELECT
					[ProductID],
					[VendorID],
					[AverageLeadTime],
					[StandardPrice],
					[LastReceiptCost],
					[LastReceiptDate],
					[MinOrderQty],
					[MaxOrderQty],
					[OnOrderQty],
					[UnitMeasureCode],
					[ModifiedDate]
				FROM
					[Purchasing].[ProductVendor]
				WHERE
					[UnitMeasureCode] = @UnitMeasureCode
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ProductVendor_GetByVendorId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ProductVendor_GetByVendorId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ProductVendor_GetByVendorId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductVendor table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ProductVendor_GetByVendorId
(

	@VendorId int   
)
AS


				SELECT
					[ProductID],
					[VendorID],
					[AverageLeadTime],
					[StandardPrice],
					[LastReceiptCost],
					[LastReceiptDate],
					[MinOrderQty],
					[MaxOrderQty],
					[OnOrderQty],
					[UnitMeasureCode],
					[ModifiedDate]
				FROM
					[Purchasing].[ProductVendor]
				WHERE
					[VendorID] = @VendorId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ProductVendor_GetByProductIdVendorId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ProductVendor_GetByProductIdVendorId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ProductVendor_GetByProductIdVendorId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductVendor table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ProductVendor_GetByProductIdVendorId
(

	@ProductId int   ,

	@VendorId int   
)
AS


				SELECT
					[ProductID],
					[VendorID],
					[AverageLeadTime],
					[StandardPrice],
					[LastReceiptCost],
					[LastReceiptDate],
					[MinOrderQty],
					[MaxOrderQty],
					[OnOrderQty],
					[UnitMeasureCode],
					[ModifiedDate]
				FROM
					[Purchasing].[ProductVendor]
				WHERE
					[ProductID] = @ProductId
					AND [VendorID] = @VendorId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ProductVendor_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ProductVendor_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ProductVendor_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ProductVendor table passing nullable parameters
-- Table Comment: Cross-reference table mapping vendors with the products they supply.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ProductVendor_Find
(

	@SearchUsingOR bit   = null ,

	@ProductId int   = null ,

	@VendorId int   = null ,

	@AverageLeadTime int   = null ,

	@StandardPrice money   = null ,

	@LastReceiptCost money   = null ,

	@LastReceiptDate datetime   = null ,

	@MinOrderQty int   = null ,

	@MaxOrderQty int   = null ,

	@OnOrderQty int   = null ,

	@UnitMeasureCode nchar (3)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductID]
	, [VendorID]
	, [AverageLeadTime]
	, [StandardPrice]
	, [LastReceiptCost]
	, [LastReceiptDate]
	, [MinOrderQty]
	, [MaxOrderQty]
	, [OnOrderQty]
	, [UnitMeasureCode]
	, [ModifiedDate]
    FROM
	[Purchasing].[ProductVendor]
    WHERE 
	 ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([VendorID] = @VendorId OR @VendorId IS NULL)
	AND ([AverageLeadTime] = @AverageLeadTime OR @AverageLeadTime IS NULL)
	AND ([StandardPrice] = @StandardPrice OR @StandardPrice IS NULL)
	AND ([LastReceiptCost] = @LastReceiptCost OR @LastReceiptCost IS NULL)
	AND ([LastReceiptDate] = @LastReceiptDate OR @LastReceiptDate IS NULL)
	AND ([MinOrderQty] = @MinOrderQty OR @MinOrderQty IS NULL)
	AND ([MaxOrderQty] = @MaxOrderQty OR @MaxOrderQty IS NULL)
	AND ([OnOrderQty] = @OnOrderQty OR @OnOrderQty IS NULL)
	AND ([UnitMeasureCode] = @UnitMeasureCode OR @UnitMeasureCode IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductID]
	, [VendorID]
	, [AverageLeadTime]
	, [StandardPrice]
	, [LastReceiptCost]
	, [LastReceiptDate]
	, [MinOrderQty]
	, [MaxOrderQty]
	, [OnOrderQty]
	, [UnitMeasureCode]
	, [ModifiedDate]
    FROM
	[Purchasing].[ProductVendor]
    WHERE 
	 ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([VendorID] = @VendorId AND @VendorId is not null)
	OR ([AverageLeadTime] = @AverageLeadTime AND @AverageLeadTime is not null)
	OR ([StandardPrice] = @StandardPrice AND @StandardPrice is not null)
	OR ([LastReceiptCost] = @LastReceiptCost AND @LastReceiptCost is not null)
	OR ([LastReceiptDate] = @LastReceiptDate AND @LastReceiptDate is not null)
	OR ([MinOrderQty] = @MinOrderQty AND @MinOrderQty is not null)
	OR ([MaxOrderQty] = @MaxOrderQty AND @MaxOrderQty is not null)
	OR ([OnOrderQty] = @OnOrderQty AND @OnOrderQty is not null)
	OR ([UnitMeasureCode] = @UnitMeasureCode AND @UnitMeasureCode is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ScrapReason_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ScrapReason_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ScrapReason_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ScrapReason table
-- Table Comment: Manufacturing failure reasons lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ScrapReason_Get_List

AS


				
				SELECT
					[ScrapReasonID],
					[Name],
					[ModifiedDate]
				FROM
					[Production].[ScrapReason]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ScrapReason_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ScrapReason_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ScrapReason_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ScrapReason table passing page index and page count parameters
-- Table Comment: Manufacturing failure reasons lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ScrapReason_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ScrapReasonID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ScrapReasonID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[ScrapReason]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ScrapReasonID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[ScrapReason]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ScrapReason_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ScrapReason_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ScrapReason_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ScrapReason table
-- Table Comment: Manufacturing failure reasons lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ScrapReason_Insert
(

	@ScrapReasonId smallint    OUTPUT,

	@Name nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[ScrapReason]
					(
					[Name]
					,[ModifiedDate]
					)
				VALUES
					(
					@Name
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @ScrapReasonId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ScrapReason_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ScrapReason_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ScrapReason_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ScrapReason table
-- Table Comment: Manufacturing failure reasons lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ScrapReason_Update
(

	@ScrapReasonId smallint   ,

	@Name nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[ScrapReason]
				SET
					[Name] = @Name
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ScrapReasonID] = @ScrapReasonId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ScrapReason_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ScrapReason_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ScrapReason_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ScrapReason table
-- Table Comment: Manufacturing failure reasons lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ScrapReason_Delete
(

	@ScrapReasonId smallint   
)
AS


				DELETE FROM [Production].[ScrapReason] WITH (ROWLOCK) 
				WHERE
					[ScrapReasonID] = @ScrapReasonId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ScrapReason_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ScrapReason_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ScrapReason_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ScrapReason table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ScrapReason_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[ScrapReasonID],
					[Name],
					[ModifiedDate]
				FROM
					[Production].[ScrapReason]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ScrapReason_GetByScrapReasonId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ScrapReason_GetByScrapReasonId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ScrapReason_GetByScrapReasonId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ScrapReason table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ScrapReason_GetByScrapReasonId
(

	@ScrapReasonId smallint   
)
AS


				SELECT
					[ScrapReasonID],
					[Name],
					[ModifiedDate]
				FROM
					[Production].[ScrapReason]
				WHERE
					[ScrapReasonID] = @ScrapReasonId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ScrapReason_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ScrapReason_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ScrapReason_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ScrapReason table passing nullable parameters
-- Table Comment: Manufacturing failure reasons lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ScrapReason_Find
(

	@SearchUsingOR bit   = null ,

	@ScrapReasonId smallint   = null ,

	@Name nvarchar (50)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ScrapReasonID]
	, [Name]
	, [ModifiedDate]
    FROM
	[Production].[ScrapReason]
    WHERE 
	 ([ScrapReasonID] = @ScrapReasonId OR @ScrapReasonId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ScrapReasonID]
	, [Name]
	, [ModifiedDate]
    FROM
	[Production].[ScrapReason]
    WHERE 
	 ([ScrapReasonID] = @ScrapReasonId AND @ScrapReasonId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_UnitMeasure_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_UnitMeasure_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_UnitMeasure_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the UnitMeasure table
-- Table Comment: Unit of measure lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_UnitMeasure_Get_List

AS


				
				SELECT
					[UnitMeasureCode],
					[Name],
					[ModifiedDate]
				FROM
					[Production].[UnitMeasure]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_UnitMeasure_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_UnitMeasure_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_UnitMeasure_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the UnitMeasure table passing page index and page count parameters
-- Table Comment: Unit of measure lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_UnitMeasure_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[UnitMeasureCode]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [UnitMeasureCode]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[UnitMeasure]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [UnitMeasureCode],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[UnitMeasure]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_UnitMeasure_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_UnitMeasure_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_UnitMeasure_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the UnitMeasure table
-- Table Comment: Unit of measure lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_UnitMeasure_Insert
(

	@UnitMeasureCode nchar (3)  ,

	@Name nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[UnitMeasure]
					(
					[UnitMeasureCode]
					,[Name]
					,[ModifiedDate]
					)
				VALUES
					(
					@UnitMeasureCode
					,@Name
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_UnitMeasure_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_UnitMeasure_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_UnitMeasure_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the UnitMeasure table
-- Table Comment: Unit of measure lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_UnitMeasure_Update
(

	@UnitMeasureCode nchar (3)  ,

	@OriginalUnitMeasureCode nchar (3)  ,

	@Name nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[UnitMeasure]
				SET
					[UnitMeasureCode] = @UnitMeasureCode
					,[Name] = @Name
					,[ModifiedDate] = @ModifiedDate
				WHERE
[UnitMeasureCode] = @OriginalUnitMeasureCode 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_UnitMeasure_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_UnitMeasure_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_UnitMeasure_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the UnitMeasure table
-- Table Comment: Unit of measure lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_UnitMeasure_Delete
(

	@UnitMeasureCode nchar (3)  
)
AS


				DELETE FROM [Production].[UnitMeasure] WITH (ROWLOCK) 
				WHERE
					[UnitMeasureCode] = @UnitMeasureCode
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_UnitMeasure_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_UnitMeasure_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_UnitMeasure_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the UnitMeasure table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_UnitMeasure_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[UnitMeasureCode],
					[Name],
					[ModifiedDate]
				FROM
					[Production].[UnitMeasure]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_UnitMeasure_GetByUnitMeasureCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_UnitMeasure_GetByUnitMeasureCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_UnitMeasure_GetByUnitMeasureCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the UnitMeasure table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_UnitMeasure_GetByUnitMeasureCode
(

	@UnitMeasureCode nchar (3)  
)
AS


				SELECT
					[UnitMeasureCode],
					[Name],
					[ModifiedDate]
				FROM
					[Production].[UnitMeasure]
				WHERE
					[UnitMeasureCode] = @UnitMeasureCode
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_UnitMeasure_GetByProductIdFromProductVendor procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_UnitMeasure_GetByProductIdFromProductVendor') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_UnitMeasure_GetByProductIdFromProductVendor
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_UnitMeasure_GetByProductIdFromProductVendor
(

	@ProductId int   
)
AS


SELECT Production.[UnitMeasure].[UnitMeasureCode]
       ,Production.[UnitMeasure].[Name]
       ,Production.[UnitMeasure].[ModifiedDate]
  FROM Production.[UnitMeasure]
 WHERE EXISTS (SELECT 1
                 FROM Purchasing.[ProductVendor] 
                WHERE Purchasing.[ProductVendor].[ProductID] = @ProductId
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_UnitMeasure_GetByVendorIdFromProductVendor procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_UnitMeasure_GetByVendorIdFromProductVendor') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_UnitMeasure_GetByVendorIdFromProductVendor
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_UnitMeasure_GetByVendorIdFromProductVendor
(

	@VendorId int   
)
AS


SELECT Production.[UnitMeasure].[UnitMeasureCode]
       ,Production.[UnitMeasure].[Name]
       ,Production.[UnitMeasure].[ModifiedDate]
  FROM Production.[UnitMeasure]
 WHERE EXISTS (SELECT 1
                 FROM Purchasing.[ProductVendor] 
                WHERE Purchasing.[ProductVendor].[VendorID] = @VendorId
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_UnitMeasure_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_UnitMeasure_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_UnitMeasure_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the UnitMeasure table passing nullable parameters
-- Table Comment: Unit of measure lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_UnitMeasure_Find
(

	@SearchUsingOR bit   = null ,

	@UnitMeasureCode nchar (3)  = null ,

	@Name nvarchar (50)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [UnitMeasureCode]
	, [Name]
	, [ModifiedDate]
    FROM
	[Production].[UnitMeasure]
    WHERE 
	 ([UnitMeasureCode] = @UnitMeasureCode OR @UnitMeasureCode IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [UnitMeasureCode]
	, [Name]
	, [ModifiedDate]
    FROM
	[Production].[UnitMeasure]
    WHERE 
	 ([UnitMeasureCode] = @UnitMeasureCode AND @UnitMeasureCode is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Shift_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Shift_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Shift_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the Shift table
-- Table Comment: Work shift lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Shift_Get_List

AS


				
				SELECT
					[ShiftID],
					[Name],
					[StartTime],
					[EndTime],
					[ModifiedDate]
				FROM
					[HumanResources].[Shift]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Shift_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Shift_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Shift_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the Shift table passing page index and page count parameters
-- Table Comment: Work shift lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Shift_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ShiftID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ShiftID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [StartTime]'
				SET @SQL = @SQL + ', [EndTime]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [HumanResources].[Shift]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ShiftID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [StartTime],'
				SET @SQL = @SQL + ' [EndTime],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [HumanResources].[Shift]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Shift_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Shift_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Shift_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the Shift table
-- Table Comment: Work shift lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Shift_Insert
(

	@ShiftId tinyint    OUTPUT,

	@Name nvarchar (50)  ,

	@StartTime datetime   ,

	@EndTime datetime   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [HumanResources].[Shift]
					(
					[Name]
					,[StartTime]
					,[EndTime]
					,[ModifiedDate]
					)
				VALUES
					(
					@Name
					,@StartTime
					,@EndTime
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @ShiftId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Shift_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Shift_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Shift_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the Shift table
-- Table Comment: Work shift lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Shift_Update
(

	@ShiftId tinyint   ,

	@Name nvarchar (50)  ,

	@StartTime datetime   ,

	@EndTime datetime   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[HumanResources].[Shift]
				SET
					[Name] = @Name
					,[StartTime] = @StartTime
					,[EndTime] = @EndTime
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ShiftID] = @ShiftId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Shift_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Shift_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Shift_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the Shift table
-- Table Comment: Work shift lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Shift_Delete
(

	@ShiftId tinyint   
)
AS


				DELETE FROM [HumanResources].[Shift] WITH (ROWLOCK) 
				WHERE
					[ShiftID] = @ShiftId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Shift_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Shift_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Shift_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Shift table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Shift_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[ShiftID],
					[Name],
					[StartTime],
					[EndTime],
					[ModifiedDate]
				FROM
					[HumanResources].[Shift]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Shift_GetByStartTimeEndTime procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Shift_GetByStartTimeEndTime') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Shift_GetByStartTimeEndTime
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Shift table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Shift_GetByStartTimeEndTime
(

	@StartTime datetime   ,

	@EndTime datetime   
)
AS


				SELECT
					[ShiftID],
					[Name],
					[StartTime],
					[EndTime],
					[ModifiedDate]
				FROM
					[HumanResources].[Shift]
				WHERE
					[StartTime] = @StartTime
					AND [EndTime] = @EndTime
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Shift_GetByShiftId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Shift_GetByShiftId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Shift_GetByShiftId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Shift table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Shift_GetByShiftId
(

	@ShiftId tinyint   
)
AS


				SELECT
					[ShiftID],
					[Name],
					[StartTime],
					[EndTime],
					[ModifiedDate]
				FROM
					[HumanResources].[Shift]
				WHERE
					[ShiftID] = @ShiftId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Shift_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Shift_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Shift_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the Shift table passing nullable parameters
-- Table Comment: Work shift lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Shift_Find
(

	@SearchUsingOR bit   = null ,

	@ShiftId tinyint   = null ,

	@Name nvarchar (50)  = null ,

	@StartTime datetime   = null ,

	@EndTime datetime   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ShiftID]
	, [Name]
	, [StartTime]
	, [EndTime]
	, [ModifiedDate]
    FROM
	[HumanResources].[Shift]
    WHERE 
	 ([ShiftID] = @ShiftId OR @ShiftId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([StartTime] = @StartTime OR @StartTime IS NULL)
	AND ([EndTime] = @EndTime OR @EndTime IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ShiftID]
	, [Name]
	, [StartTime]
	, [EndTime]
	, [ModifiedDate]
    FROM
	[HumanResources].[Shift]
    WHERE 
	 ([ShiftID] = @ShiftId AND @ShiftId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([StartTime] = @StartTime AND @StartTime is not null)
	OR ([EndTime] = @EndTime AND @EndTime is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistoryArchive_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistoryArchive_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the TransactionHistoryArchive table
-- Table Comment: Transactions for previous years.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_Get_List

AS


				
				SELECT
					[TransactionID],
					[ProductID],
					[ReferenceOrderID],
					[ReferenceOrderLineID],
					[TransactionDate],
					[TransactionType],
					[Quantity],
					[ActualCost],
					[ModifiedDate]
				FROM
					[Production].[TransactionHistoryArchive]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistoryArchive_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistoryArchive_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the TransactionHistoryArchive table passing page index and page count parameters
-- Table Comment: Transactions for previous years.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[TransactionID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [TransactionID]'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [ReferenceOrderID]'
				SET @SQL = @SQL + ', [ReferenceOrderLineID]'
				SET @SQL = @SQL + ', [TransactionDate]'
				SET @SQL = @SQL + ', [TransactionType]'
				SET @SQL = @SQL + ', [Quantity]'
				SET @SQL = @SQL + ', [ActualCost]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[TransactionHistoryArchive]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [TransactionID],'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [ReferenceOrderID],'
				SET @SQL = @SQL + ' [ReferenceOrderLineID],'
				SET @SQL = @SQL + ' [TransactionDate],'
				SET @SQL = @SQL + ' [TransactionType],'
				SET @SQL = @SQL + ' [Quantity],'
				SET @SQL = @SQL + ' [ActualCost],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[TransactionHistoryArchive]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistoryArchive_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistoryArchive_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the TransactionHistoryArchive table
-- Table Comment: Transactions for previous years.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_Insert
(

	@TransactionId int   ,

	@ProductId int   ,

	@ReferenceOrderId int   ,

	@ReferenceOrderLineId int   ,

	@TransactionDate datetime   ,

	@TransactionType nchar (1)  ,

	@Quantity int   ,

	@ActualCost money   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[TransactionHistoryArchive]
					(
					[TransactionID]
					,[ProductID]
					,[ReferenceOrderID]
					,[ReferenceOrderLineID]
					,[TransactionDate]
					,[TransactionType]
					,[Quantity]
					,[ActualCost]
					,[ModifiedDate]
					)
				VALUES
					(
					@TransactionId
					,@ProductId
					,@ReferenceOrderId
					,@ReferenceOrderLineId
					,@TransactionDate
					,@TransactionType
					,@Quantity
					,@ActualCost
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistoryArchive_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistoryArchive_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the TransactionHistoryArchive table
-- Table Comment: Transactions for previous years.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_Update
(

	@TransactionId int   ,

	@OriginalTransactionId int   ,

	@ProductId int   ,

	@ReferenceOrderId int   ,

	@ReferenceOrderLineId int   ,

	@TransactionDate datetime   ,

	@TransactionType nchar (1)  ,

	@Quantity int   ,

	@ActualCost money   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[TransactionHistoryArchive]
				SET
					[TransactionID] = @TransactionId
					,[ProductID] = @ProductId
					,[ReferenceOrderID] = @ReferenceOrderId
					,[ReferenceOrderLineID] = @ReferenceOrderLineId
					,[TransactionDate] = @TransactionDate
					,[TransactionType] = @TransactionType
					,[Quantity] = @Quantity
					,[ActualCost] = @ActualCost
					,[ModifiedDate] = @ModifiedDate
				WHERE
[TransactionID] = @OriginalTransactionId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistoryArchive_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistoryArchive_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the TransactionHistoryArchive table
-- Table Comment: Transactions for previous years.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_Delete
(

	@TransactionId int   
)
AS


				DELETE FROM [Production].[TransactionHistoryArchive] WITH (ROWLOCK) 
				WHERE
					[TransactionID] = @TransactionId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistoryArchive_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistoryArchive_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the TransactionHistoryArchive table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_GetByProductId
(

	@ProductId int   
)
AS


				SELECT
					[TransactionID],
					[ProductID],
					[ReferenceOrderID],
					[ReferenceOrderLineID],
					[TransactionDate],
					[TransactionType],
					[Quantity],
					[ActualCost],
					[ModifiedDate]
				FROM
					[Production].[TransactionHistoryArchive]
				WHERE
					[ProductID] = @ProductId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistoryArchive_GetByReferenceOrderIdReferenceOrderLineId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistoryArchive_GetByReferenceOrderIdReferenceOrderLineId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_GetByReferenceOrderIdReferenceOrderLineId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the TransactionHistoryArchive table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_GetByReferenceOrderIdReferenceOrderLineId
(

	@ReferenceOrderId int   ,

	@ReferenceOrderLineId int   
)
AS


				SELECT
					[TransactionID],
					[ProductID],
					[ReferenceOrderID],
					[ReferenceOrderLineID],
					[TransactionDate],
					[TransactionType],
					[Quantity],
					[ActualCost],
					[ModifiedDate]
				FROM
					[Production].[TransactionHistoryArchive]
				WHERE
					[ReferenceOrderID] = @ReferenceOrderId
					AND [ReferenceOrderLineID] = @ReferenceOrderLineId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistoryArchive_GetByTransactionId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistoryArchive_GetByTransactionId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_GetByTransactionId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the TransactionHistoryArchive table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_GetByTransactionId
(

	@TransactionId int   
)
AS


				SELECT
					[TransactionID],
					[ProductID],
					[ReferenceOrderID],
					[ReferenceOrderLineID],
					[TransactionDate],
					[TransactionType],
					[Quantity],
					[ActualCost],
					[ModifiedDate]
				FROM
					[Production].[TransactionHistoryArchive]
				WHERE
					[TransactionID] = @TransactionId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistoryArchive_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistoryArchive_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the TransactionHistoryArchive table passing nullable parameters
-- Table Comment: Transactions for previous years.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistoryArchive_Find
(

	@SearchUsingOR bit   = null ,

	@TransactionId int   = null ,

	@ProductId int   = null ,

	@ReferenceOrderId int   = null ,

	@ReferenceOrderLineId int   = null ,

	@TransactionDate datetime   = null ,

	@TransactionType nchar (1)  = null ,

	@Quantity int   = null ,

	@ActualCost money   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [TransactionID]
	, [ProductID]
	, [ReferenceOrderID]
	, [ReferenceOrderLineID]
	, [TransactionDate]
	, [TransactionType]
	, [Quantity]
	, [ActualCost]
	, [ModifiedDate]
    FROM
	[Production].[TransactionHistoryArchive]
    WHERE 
	 ([TransactionID] = @TransactionId OR @TransactionId IS NULL)
	AND ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([ReferenceOrderID] = @ReferenceOrderId OR @ReferenceOrderId IS NULL)
	AND ([ReferenceOrderLineID] = @ReferenceOrderLineId OR @ReferenceOrderLineId IS NULL)
	AND ([TransactionDate] = @TransactionDate OR @TransactionDate IS NULL)
	AND ([TransactionType] = @TransactionType OR @TransactionType IS NULL)
	AND ([Quantity] = @Quantity OR @Quantity IS NULL)
	AND ([ActualCost] = @ActualCost OR @ActualCost IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [TransactionID]
	, [ProductID]
	, [ReferenceOrderID]
	, [ReferenceOrderLineID]
	, [TransactionDate]
	, [TransactionType]
	, [Quantity]
	, [ActualCost]
	, [ModifiedDate]
    FROM
	[Production].[TransactionHistoryArchive]
    WHERE 
	 ([TransactionID] = @TransactionId AND @TransactionId is not null)
	OR ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([ReferenceOrderID] = @ReferenceOrderId AND @ReferenceOrderId is not null)
	OR ([ReferenceOrderLineID] = @ReferenceOrderLineId AND @ReferenceOrderLineId is not null)
	OR ([TransactionDate] = @TransactionDate AND @TransactionDate is not null)
	OR ([TransactionType] = @TransactionType AND @TransactionType is not null)
	OR ([Quantity] = @Quantity AND @Quantity is not null)
	OR ([ActualCost] = @ActualCost AND @ActualCost is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_Vendor_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_Vendor_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_Vendor_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the Vendor table
-- Table Comment: Companies from whom Adventure Works Cycles purchases parts or other goods.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_Vendor_Get_List

AS


				
				SELECT
					[VendorID],
					[AccountNumber],
					[Name],
					[CreditRating],
					[PreferredVendorStatus],
					[ActiveFlag],
					[PurchasingWebServiceURL],
					[ModifiedDate]
				FROM
					[Purchasing].[Vendor]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_Vendor_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_Vendor_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_Vendor_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the Vendor table passing page index and page count parameters
-- Table Comment: Companies from whom Adventure Works Cycles purchases parts or other goods.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_Vendor_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[VendorID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [VendorID]'
				SET @SQL = @SQL + ', [AccountNumber]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [CreditRating]'
				SET @SQL = @SQL + ', [PreferredVendorStatus]'
				SET @SQL = @SQL + ', [ActiveFlag]'
				SET @SQL = @SQL + ', [PurchasingWebServiceURL]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Purchasing].[Vendor]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [VendorID],'
				SET @SQL = @SQL + ' [AccountNumber],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [CreditRating],'
				SET @SQL = @SQL + ' [PreferredVendorStatus],'
				SET @SQL = @SQL + ' [ActiveFlag],'
				SET @SQL = @SQL + ' [PurchasingWebServiceURL],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Purchasing].[Vendor]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_Vendor_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_Vendor_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_Vendor_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the Vendor table
-- Table Comment: Companies from whom Adventure Works Cycles purchases parts or other goods.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_Vendor_Insert
(

	@VendorId int    OUTPUT,

	@AccountNumber nvarchar (15)  ,

	@Name nvarchar (50)  ,

	@CreditRating tinyint   ,

	@PreferredVendorStatus bit   ,

	@ActiveFlag bit   ,

	@PurchasingWebServiceUrl nvarchar (1024)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Purchasing].[Vendor]
					(
					[AccountNumber]
					,[Name]
					,[CreditRating]
					,[PreferredVendorStatus]
					,[ActiveFlag]
					,[PurchasingWebServiceURL]
					,[ModifiedDate]
					)
				VALUES
					(
					@AccountNumber
					,@Name
					,@CreditRating
					,@PreferredVendorStatus
					,@ActiveFlag
					,@PurchasingWebServiceUrl
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @VendorId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_Vendor_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_Vendor_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_Vendor_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the Vendor table
-- Table Comment: Companies from whom Adventure Works Cycles purchases parts or other goods.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_Vendor_Update
(

	@VendorId int   ,

	@AccountNumber nvarchar (15)  ,

	@Name nvarchar (50)  ,

	@CreditRating tinyint   ,

	@PreferredVendorStatus bit   ,

	@ActiveFlag bit   ,

	@PurchasingWebServiceUrl nvarchar (1024)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Purchasing].[Vendor]
				SET
					[AccountNumber] = @AccountNumber
					,[Name] = @Name
					,[CreditRating] = @CreditRating
					,[PreferredVendorStatus] = @PreferredVendorStatus
					,[ActiveFlag] = @ActiveFlag
					,[PurchasingWebServiceURL] = @PurchasingWebServiceUrl
					,[ModifiedDate] = @ModifiedDate
				WHERE
[VendorID] = @VendorId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_Vendor_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_Vendor_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_Vendor_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the Vendor table
-- Table Comment: Companies from whom Adventure Works Cycles purchases parts or other goods.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_Vendor_Delete
(

	@VendorId int   
)
AS


				DELETE FROM [Purchasing].[Vendor] WITH (ROWLOCK) 
				WHERE
					[VendorID] = @VendorId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_Vendor_GetByAccountNumber procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_Vendor_GetByAccountNumber') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_Vendor_GetByAccountNumber
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Vendor table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_Vendor_GetByAccountNumber
(

	@AccountNumber nvarchar (15)  
)
AS


				SELECT
					[VendorID],
					[AccountNumber],
					[Name],
					[CreditRating],
					[PreferredVendorStatus],
					[ActiveFlag],
					[PurchasingWebServiceURL],
					[ModifiedDate]
				FROM
					[Purchasing].[Vendor]
				WHERE
					[AccountNumber] = @AccountNumber
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_Vendor_GetByVendorId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_Vendor_GetByVendorId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_Vendor_GetByVendorId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Vendor table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_Vendor_GetByVendorId
(

	@VendorId int   
)
AS


				SELECT
					[VendorID],
					[AccountNumber],
					[Name],
					[CreditRating],
					[PreferredVendorStatus],
					[ActiveFlag],
					[PurchasingWebServiceURL],
					[ModifiedDate]
				FROM
					[Purchasing].[Vendor]
				WHERE
					[VendorID] = @VendorId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_Vendor_GetByProductIdFromProductVendor procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_Vendor_GetByProductIdFromProductVendor') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_Vendor_GetByProductIdFromProductVendor
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_Vendor_GetByProductIdFromProductVendor
(

	@ProductId int   
)
AS


SELECT Purchasing.[Vendor].[VendorID]
       ,Purchasing.[Vendor].[AccountNumber]
       ,Purchasing.[Vendor].[Name]
       ,Purchasing.[Vendor].[CreditRating]
       ,Purchasing.[Vendor].[PreferredVendorStatus]
       ,Purchasing.[Vendor].[ActiveFlag]
       ,Purchasing.[Vendor].[PurchasingWebServiceURL]
       ,Purchasing.[Vendor].[ModifiedDate]
  FROM Purchasing.[Vendor]
 WHERE EXISTS (SELECT 1
                 FROM Purchasing.[ProductVendor] 
                WHERE Purchasing.[ProductVendor].[ProductID] = @ProductId
                  AND Purchasing.[ProductVendor].[VendorID] = Purchasing.[Vendor].[VendorID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_Vendor_GetByAddressIdFromVendorAddress procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_Vendor_GetByAddressIdFromVendorAddress') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_Vendor_GetByAddressIdFromVendorAddress
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_Vendor_GetByAddressIdFromVendorAddress
(

	@AddressId int   
)
AS


SELECT Purchasing.[Vendor].[VendorID]
       ,Purchasing.[Vendor].[AccountNumber]
       ,Purchasing.[Vendor].[Name]
       ,Purchasing.[Vendor].[CreditRating]
       ,Purchasing.[Vendor].[PreferredVendorStatus]
       ,Purchasing.[Vendor].[ActiveFlag]
       ,Purchasing.[Vendor].[PurchasingWebServiceURL]
       ,Purchasing.[Vendor].[ModifiedDate]
  FROM Purchasing.[Vendor]
 WHERE EXISTS (SELECT 1
                 FROM Purchasing.[VendorAddress] 
                WHERE Purchasing.[VendorAddress].[AddressID] = @AddressId
                  AND Purchasing.[VendorAddress].[VendorID] = Purchasing.[Vendor].[VendorID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_Vendor_GetByContactIdFromVendorContact procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_Vendor_GetByContactIdFromVendorContact') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_Vendor_GetByContactIdFromVendorContact
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_Vendor_GetByContactIdFromVendorContact
(

	@ContactId int   
)
AS


SELECT Purchasing.[Vendor].[VendorID]
       ,Purchasing.[Vendor].[AccountNumber]
       ,Purchasing.[Vendor].[Name]
       ,Purchasing.[Vendor].[CreditRating]
       ,Purchasing.[Vendor].[PreferredVendorStatus]
       ,Purchasing.[Vendor].[ActiveFlag]
       ,Purchasing.[Vendor].[PurchasingWebServiceURL]
       ,Purchasing.[Vendor].[ModifiedDate]
  FROM Purchasing.[Vendor]
 WHERE EXISTS (SELECT 1
                 FROM Purchasing.[VendorContact] 
                WHERE Purchasing.[VendorContact].[ContactID] = @ContactId
                  AND Purchasing.[VendorContact].[VendorID] = Purchasing.[Vendor].[VendorID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_Vendor_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_Vendor_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_Vendor_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the Vendor table passing nullable parameters
-- Table Comment: Companies from whom Adventure Works Cycles purchases parts or other goods.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_Vendor_Find
(

	@SearchUsingOR bit   = null ,

	@VendorId int   = null ,

	@AccountNumber nvarchar (15)  = null ,

	@Name nvarchar (50)  = null ,

	@CreditRating tinyint   = null ,

	@PreferredVendorStatus bit   = null ,

	@ActiveFlag bit   = null ,

	@PurchasingWebServiceUrl nvarchar (1024)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [VendorID]
	, [AccountNumber]
	, [Name]
	, [CreditRating]
	, [PreferredVendorStatus]
	, [ActiveFlag]
	, [PurchasingWebServiceURL]
	, [ModifiedDate]
    FROM
	[Purchasing].[Vendor]
    WHERE 
	 ([VendorID] = @VendorId OR @VendorId IS NULL)
	AND ([AccountNumber] = @AccountNumber OR @AccountNumber IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([CreditRating] = @CreditRating OR @CreditRating IS NULL)
	AND ([PreferredVendorStatus] = @PreferredVendorStatus OR @PreferredVendorStatus IS NULL)
	AND ([ActiveFlag] = @ActiveFlag OR @ActiveFlag IS NULL)
	AND ([PurchasingWebServiceURL] = @PurchasingWebServiceUrl OR @PurchasingWebServiceUrl IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [VendorID]
	, [AccountNumber]
	, [Name]
	, [CreditRating]
	, [PreferredVendorStatus]
	, [ActiveFlag]
	, [PurchasingWebServiceURL]
	, [ModifiedDate]
    FROM
	[Purchasing].[Vendor]
    WHERE 
	 ([VendorID] = @VendorId AND @VendorId is not null)
	OR ([AccountNumber] = @AccountNumber AND @AccountNumber is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([CreditRating] = @CreditRating AND @CreditRating is not null)
	OR ([PreferredVendorStatus] = @PreferredVendorStatus AND @PreferredVendorStatus is not null)
	OR ([ActiveFlag] = @ActiveFlag AND @ActiveFlag is not null)
	OR ([PurchasingWebServiceURL] = @PurchasingWebServiceUrl AND @PurchasingWebServiceUrl is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Address_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Address_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Address_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the Address table
-- Table Comment: Street address information for customers, employees, and vendors.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Address_Get_List

AS


				
				SELECT
					[AddressID],
					[AddressLine1],
					[AddressLine2],
					[City],
					[StateProvinceID],
					[PostalCode],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[Address]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Address_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Address_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Address_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the Address table passing page index and page count parameters
-- Table Comment: Street address information for customers, employees, and vendors.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Address_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[AddressID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [AddressID]'
				SET @SQL = @SQL + ', [AddressLine1]'
				SET @SQL = @SQL + ', [AddressLine2]'
				SET @SQL = @SQL + ', [City]'
				SET @SQL = @SQL + ', [StateProvinceID]'
				SET @SQL = @SQL + ', [PostalCode]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Person].[Address]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [AddressID],'
				SET @SQL = @SQL + ' [AddressLine1],'
				SET @SQL = @SQL + ' [AddressLine2],'
				SET @SQL = @SQL + ' [City],'
				SET @SQL = @SQL + ' [StateProvinceID],'
				SET @SQL = @SQL + ' [PostalCode],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Person].[Address]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Address_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Address_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Address_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the Address table
-- Table Comment: Street address information for customers, employees, and vendors.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Address_Insert
(

	@AddressId int    OUTPUT,

	@AddressLine1 nvarchar (60)  ,

	@AddressLine2 nvarchar (60)  ,

	@City nvarchar (30)  ,

	@StateProvinceId int   ,

	@PostalCode nvarchar (15)  ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Person].[Address]
					(
					[AddressLine1]
					,[AddressLine2]
					,[City]
					,[StateProvinceID]
					,[PostalCode]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@AddressLine1
					,@AddressLine2
					,@City
					,@StateProvinceId
					,@PostalCode
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @AddressId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Address_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Address_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Address_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the Address table
-- Table Comment: Street address information for customers, employees, and vendors.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Address_Update
(

	@AddressId int   ,

	@AddressLine1 nvarchar (60)  ,

	@AddressLine2 nvarchar (60)  ,

	@City nvarchar (30)  ,

	@StateProvinceId int   ,

	@PostalCode nvarchar (15)  ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Person].[Address]
				SET
					[AddressLine1] = @AddressLine1
					,[AddressLine2] = @AddressLine2
					,[City] = @City
					,[StateProvinceID] = @StateProvinceId
					,[PostalCode] = @PostalCode
					,[ModifiedDate] = @ModifiedDate
				WHERE
[AddressID] = @AddressId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Address_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Address_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Address_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the Address table
-- Table Comment: Street address information for customers, employees, and vendors.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Address_Delete
(

	@AddressId int   
)
AS


				DELETE FROM [Person].[Address] WITH (ROWLOCK) 
				WHERE
					[AddressID] = @AddressId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Address_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Address_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Address_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Address table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Address_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[AddressID],
					[AddressLine1],
					[AddressLine2],
					[City],
					[StateProvinceID],
					[PostalCode],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[Address]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Address_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Address_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Address_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Address table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Address_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCode
(

	@AddressLine1 nvarchar (60)  ,

	@AddressLine2 nvarchar (60)  ,

	@City nvarchar (30)  ,

	@StateProvinceId int   ,

	@PostalCode nvarchar (15)  
)
AS


				SELECT
					[AddressID],
					[AddressLine1],
					[AddressLine2],
					[City],
					[StateProvinceID],
					[PostalCode],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[Address]
				WHERE
					[AddressLine1] = @AddressLine1
					AND [AddressLine2] = @AddressLine2
					AND [City] = @City
					AND [StateProvinceID] = @StateProvinceId
					AND [PostalCode] = @PostalCode
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Address_GetByStateProvinceId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Address_GetByStateProvinceId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Address_GetByStateProvinceId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Address table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Address_GetByStateProvinceId
(

	@StateProvinceId int   
)
AS


				SELECT
					[AddressID],
					[AddressLine1],
					[AddressLine2],
					[City],
					[StateProvinceID],
					[PostalCode],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[Address]
				WHERE
					[StateProvinceID] = @StateProvinceId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Address_GetByAddressId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Address_GetByAddressId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Address_GetByAddressId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Address table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Address_GetByAddressId
(

	@AddressId int   
)
AS


				SELECT
					[AddressID],
					[AddressLine1],
					[AddressLine2],
					[City],
					[StateProvinceID],
					[PostalCode],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[Address]
				WHERE
					[AddressID] = @AddressId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Address_GetByCustomerIdFromCustomerAddress procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Address_GetByCustomerIdFromCustomerAddress') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Address_GetByCustomerIdFromCustomerAddress
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Address_GetByCustomerIdFromCustomerAddress
(

	@CustomerId int   
)
AS


SELECT Person.[Address].[AddressID]
       ,Person.[Address].[AddressLine1]
       ,Person.[Address].[AddressLine2]
       ,Person.[Address].[City]
       ,Person.[Address].[StateProvinceID]
       ,Person.[Address].[PostalCode]
       ,Person.[Address].[rowguid]
       ,Person.[Address].[ModifiedDate]
  FROM Person.[Address]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[CustomerAddress] 
                WHERE Sales.[CustomerAddress].[CustomerID] = @CustomerId
                  AND Sales.[CustomerAddress].[AddressID] = Person.[Address].[AddressID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Address_GetByEmployeeIdFromEmployeeAddress procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Address_GetByEmployeeIdFromEmployeeAddress') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Address_GetByEmployeeIdFromEmployeeAddress
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Address_GetByEmployeeIdFromEmployeeAddress
(

	@EmployeeId int   
)
AS


SELECT Person.[Address].[AddressID]
       ,Person.[Address].[AddressLine1]
       ,Person.[Address].[AddressLine2]
       ,Person.[Address].[City]
       ,Person.[Address].[StateProvinceID]
       ,Person.[Address].[PostalCode]
       ,Person.[Address].[rowguid]
       ,Person.[Address].[ModifiedDate]
  FROM Person.[Address]
 WHERE EXISTS (SELECT 1
                 FROM HumanResources.[EmployeeAddress] 
                WHERE HumanResources.[EmployeeAddress].[EmployeeID] = @EmployeeId
                  AND HumanResources.[EmployeeAddress].[AddressID] = Person.[Address].[AddressID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Address_GetByVendorIdFromVendorAddress procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Address_GetByVendorIdFromVendorAddress') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Address_GetByVendorIdFromVendorAddress
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Address_GetByVendorIdFromVendorAddress
(

	@VendorId int   
)
AS


SELECT Person.[Address].[AddressID]
       ,Person.[Address].[AddressLine1]
       ,Person.[Address].[AddressLine2]
       ,Person.[Address].[City]
       ,Person.[Address].[StateProvinceID]
       ,Person.[Address].[PostalCode]
       ,Person.[Address].[rowguid]
       ,Person.[Address].[ModifiedDate]
  FROM Person.[Address]
 WHERE EXISTS (SELECT 1
                 FROM Purchasing.[VendorAddress] 
                WHERE Purchasing.[VendorAddress].[VendorID] = @VendorId
                  AND Purchasing.[VendorAddress].[AddressID] = Person.[Address].[AddressID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Address_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Address_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Address_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the Address table passing nullable parameters
-- Table Comment: Street address information for customers, employees, and vendors.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Address_Find
(

	@SearchUsingOR bit   = null ,

	@AddressId int   = null ,

	@AddressLine1 nvarchar (60)  = null ,

	@AddressLine2 nvarchar (60)  = null ,

	@City nvarchar (30)  = null ,

	@StateProvinceId int   = null ,

	@PostalCode nvarchar (15)  = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AddressID]
	, [AddressLine1]
	, [AddressLine2]
	, [City]
	, [StateProvinceID]
	, [PostalCode]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Person].[Address]
    WHERE 
	 ([AddressID] = @AddressId OR @AddressId IS NULL)
	AND ([AddressLine1] = @AddressLine1 OR @AddressLine1 IS NULL)
	AND ([AddressLine2] = @AddressLine2 OR @AddressLine2 IS NULL)
	AND ([City] = @City OR @City IS NULL)
	AND ([StateProvinceID] = @StateProvinceId OR @StateProvinceId IS NULL)
	AND ([PostalCode] = @PostalCode OR @PostalCode IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AddressID]
	, [AddressLine1]
	, [AddressLine2]
	, [City]
	, [StateProvinceID]
	, [PostalCode]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Person].[Address]
    WHERE 
	 ([AddressID] = @AddressId AND @AddressId is not null)
	OR ([AddressLine1] = @AddressLine1 AND @AddressLine1 is not null)
	OR ([AddressLine2] = @AddressLine2 AND @AddressLine2 is not null)
	OR ([City] = @City AND @City is not null)
	OR ([StateProvinceID] = @StateProvinceId AND @StateProvinceId is not null)
	OR ([PostalCode] = @PostalCode AND @PostalCode is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrder_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrder_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrder_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the WorkOrder table
-- Table Comment: Manufacturing work orders.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrder_Get_List

AS


				
				SELECT
					[WorkOrderID],
					[ProductID],
					[OrderQty],
					[StockedQty],
					[ScrappedQty],
					[StartDate],
					[EndDate],
					[DueDate],
					[ScrapReasonID],
					[ModifiedDate]
				FROM
					[Production].[WorkOrder]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrder_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrder_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrder_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the WorkOrder table passing page index and page count parameters
-- Table Comment: Manufacturing work orders.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrder_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[WorkOrderID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [WorkOrderID]'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [OrderQty]'
				SET @SQL = @SQL + ', [StockedQty]'
				SET @SQL = @SQL + ', [ScrappedQty]'
				SET @SQL = @SQL + ', [StartDate]'
				SET @SQL = @SQL + ', [EndDate]'
				SET @SQL = @SQL + ', [DueDate]'
				SET @SQL = @SQL + ', [ScrapReasonID]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[WorkOrder]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [WorkOrderID],'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [OrderQty],'
				SET @SQL = @SQL + ' [StockedQty],'
				SET @SQL = @SQL + ' [ScrappedQty],'
				SET @SQL = @SQL + ' [StartDate],'
				SET @SQL = @SQL + ' [EndDate],'
				SET @SQL = @SQL + ' [DueDate],'
				SET @SQL = @SQL + ' [ScrapReasonID],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[WorkOrder]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrder_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrder_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrder_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the WorkOrder table
-- Table Comment: Manufacturing work orders.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrder_Insert
(

	@WorkOrderId int    OUTPUT,

	@ProductId int   ,

	@OrderQty int   ,

	@StockedQty int    OUTPUT,

	@ScrappedQty smallint   ,

	@StartDate datetime   ,

	@EndDate datetime   ,

	@DueDate datetime   ,

	@ScrapReasonId smallint   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[WorkOrder]
					(
					[ProductID]
					,[OrderQty]
					,[ScrappedQty]
					,[StartDate]
					,[EndDate]
					,[DueDate]
					,[ScrapReasonID]
					,[ModifiedDate]
					)
				VALUES
					(
					@ProductId
					,@OrderQty
					,@ScrappedQty
					,@StartDate
					,@EndDate
					,@DueDate
					,@ScrapReasonId
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @WorkOrderId = SCOPE_IDENTITY()
									
				-- Select computed columns into output parameters
				SELECT
 @StockedQty = [StockedQty]
				FROM
					[Production].[WorkOrder]
				WHERE
[WorkOrderID] = @WorkOrderId 
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrder_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrder_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrder_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the WorkOrder table
-- Table Comment: Manufacturing work orders.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrder_Update
(

	@WorkOrderId int   ,

	@ProductId int   ,

	@OrderQty int   ,

	@StockedQty int    OUTPUT,

	@ScrappedQty smallint   ,

	@StartDate datetime   ,

	@EndDate datetime   ,

	@DueDate datetime   ,

	@ScrapReasonId smallint   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[WorkOrder]
				SET
					[ProductID] = @ProductId
					,[OrderQty] = @OrderQty
					,[ScrappedQty] = @ScrappedQty
					,[StartDate] = @StartDate
					,[EndDate] = @EndDate
					,[DueDate] = @DueDate
					,[ScrapReasonID] = @ScrapReasonId
					,[ModifiedDate] = @ModifiedDate
				WHERE
[WorkOrderID] = @WorkOrderId 
				
				
				-- Select computed columns into output parameters
				SELECT
 @StockedQty = [StockedQty]
				FROM
					[Production].[WorkOrder]
				WHERE
[WorkOrderID] = @WorkOrderId 
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrder_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrder_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrder_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the WorkOrder table
-- Table Comment: Manufacturing work orders.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrder_Delete
(

	@WorkOrderId int   
)
AS


				DELETE FROM [Production].[WorkOrder] WITH (ROWLOCK) 
				WHERE
					[WorkOrderID] = @WorkOrderId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrder_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrder_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrder_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the WorkOrder table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrder_GetByProductId
(

	@ProductId int   
)
AS


				SELECT
					[WorkOrderID],
					[ProductID],
					[OrderQty],
					[StockedQty],
					[ScrappedQty],
					[StartDate],
					[EndDate],
					[DueDate],
					[ScrapReasonID],
					[ModifiedDate]
				FROM
					[Production].[WorkOrder]
				WHERE
					[ProductID] = @ProductId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrder_GetByScrapReasonId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrder_GetByScrapReasonId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrder_GetByScrapReasonId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the WorkOrder table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrder_GetByScrapReasonId
(

	@ScrapReasonId smallint   
)
AS


				SELECT
					[WorkOrderID],
					[ProductID],
					[OrderQty],
					[StockedQty],
					[ScrappedQty],
					[StartDate],
					[EndDate],
					[DueDate],
					[ScrapReasonID],
					[ModifiedDate]
				FROM
					[Production].[WorkOrder]
				WHERE
					[ScrapReasonID] = @ScrapReasonId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrder_GetByWorkOrderId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrder_GetByWorkOrderId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrder_GetByWorkOrderId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the WorkOrder table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrder_GetByWorkOrderId
(

	@WorkOrderId int   
)
AS


				SELECT
					[WorkOrderID],
					[ProductID],
					[OrderQty],
					[StockedQty],
					[ScrappedQty],
					[StartDate],
					[EndDate],
					[DueDate],
					[ScrapReasonID],
					[ModifiedDate]
				FROM
					[Production].[WorkOrder]
				WHERE
					[WorkOrderID] = @WorkOrderId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrder_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrder_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrder_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the WorkOrder table passing nullable parameters
-- Table Comment: Manufacturing work orders.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrder_Find
(

	@SearchUsingOR bit   = null ,

	@WorkOrderId int   = null ,

	@ProductId int   = null ,

	@OrderQty int   = null ,

	@StockedQty int   = null ,

	@ScrappedQty smallint   = null ,

	@StartDate datetime   = null ,

	@EndDate datetime   = null ,

	@DueDate datetime   = null ,

	@ScrapReasonId smallint   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [WorkOrderID]
	, [ProductID]
	, [OrderQty]
	, [StockedQty]
	, [ScrappedQty]
	, [StartDate]
	, [EndDate]
	, [DueDate]
	, [ScrapReasonID]
	, [ModifiedDate]
    FROM
	[Production].[WorkOrder]
    WHERE 
	 ([WorkOrderID] = @WorkOrderId OR @WorkOrderId IS NULL)
	AND ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([OrderQty] = @OrderQty OR @OrderQty IS NULL)
	AND ([StockedQty] = @StockedQty OR @StockedQty IS NULL)
	AND ([ScrappedQty] = @ScrappedQty OR @ScrappedQty IS NULL)
	AND ([StartDate] = @StartDate OR @StartDate IS NULL)
	AND ([EndDate] = @EndDate OR @EndDate IS NULL)
	AND ([DueDate] = @DueDate OR @DueDate IS NULL)
	AND ([ScrapReasonID] = @ScrapReasonId OR @ScrapReasonId IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [WorkOrderID]
	, [ProductID]
	, [OrderQty]
	, [StockedQty]
	, [ScrappedQty]
	, [StartDate]
	, [EndDate]
	, [DueDate]
	, [ScrapReasonID]
	, [ModifiedDate]
    FROM
	[Production].[WorkOrder]
    WHERE 
	 ([WorkOrderID] = @WorkOrderId AND @WorkOrderId is not null)
	OR ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([OrderQty] = @OrderQty AND @OrderQty is not null)
	OR ([StockedQty] = @StockedQty AND @StockedQty is not null)
	OR ([ScrappedQty] = @ScrappedQty AND @ScrappedQty is not null)
	OR ([StartDate] = @StartDate AND @StartDate is not null)
	OR ([EndDate] = @EndDate AND @EndDate is not null)
	OR ([DueDate] = @DueDate AND @DueDate is not null)
	OR ([ScrapReasonID] = @ScrapReasonId AND @ScrapReasonId is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorAddress_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorAddress_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorAddress_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the VendorAddress table
-- Table Comment: Cross-reference mapping vendors and addresses.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorAddress_Get_List

AS


				
				SELECT
					[VendorID],
					[AddressID],
					[AddressTypeID],
					[ModifiedDate]
				FROM
					[Purchasing].[VendorAddress]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorAddress_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorAddress_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorAddress_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the VendorAddress table passing page index and page count parameters
-- Table Comment: Cross-reference mapping vendors and addresses.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorAddress_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[VendorID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [VendorID]'
				SET @SQL = @SQL + ', [AddressID]'
				SET @SQL = @SQL + ', [AddressTypeID]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Purchasing].[VendorAddress]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [VendorID],'
				SET @SQL = @SQL + ' [AddressID],'
				SET @SQL = @SQL + ' [AddressTypeID],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Purchasing].[VendorAddress]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorAddress_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorAddress_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorAddress_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the VendorAddress table
-- Table Comment: Cross-reference mapping vendors and addresses.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorAddress_Insert
(

	@VendorId int   ,

	@AddressId int   ,

	@AddressTypeId int   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Purchasing].[VendorAddress]
					(
					[VendorID]
					,[AddressID]
					,[AddressTypeID]
					,[ModifiedDate]
					)
				VALUES
					(
					@VendorId
					,@AddressId
					,@AddressTypeId
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorAddress_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorAddress_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorAddress_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the VendorAddress table
-- Table Comment: Cross-reference mapping vendors and addresses.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorAddress_Update
(

	@VendorId int   ,

	@OriginalVendorId int   ,

	@AddressId int   ,

	@OriginalAddressId int   ,

	@AddressTypeId int   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Purchasing].[VendorAddress]
				SET
					[VendorID] = @VendorId
					,[AddressID] = @AddressId
					,[AddressTypeID] = @AddressTypeId
					,[ModifiedDate] = @ModifiedDate
				WHERE
[VendorID] = @OriginalVendorId 
AND [AddressID] = @OriginalAddressId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorAddress_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorAddress_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorAddress_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the VendorAddress table
-- Table Comment: Cross-reference mapping vendors and addresses.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorAddress_Delete
(

	@VendorId int   ,

	@AddressId int   
)
AS


				DELETE FROM [Purchasing].[VendorAddress] WITH (ROWLOCK) 
				WHERE
					[VendorID] = @VendorId
					AND [AddressID] = @AddressId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorAddress_GetByAddressTypeId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorAddress_GetByAddressTypeId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorAddress_GetByAddressTypeId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the VendorAddress table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorAddress_GetByAddressTypeId
(

	@AddressTypeId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[VendorID],
					[AddressID],
					[AddressTypeID],
					[ModifiedDate]
				FROM
					[Purchasing].[VendorAddress]
				WHERE
					[AddressTypeID] = @AddressTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorAddress_GetByVendorId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorAddress_GetByVendorId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorAddress_GetByVendorId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the VendorAddress table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorAddress_GetByVendorId
(

	@VendorId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[VendorID],
					[AddressID],
					[AddressTypeID],
					[ModifiedDate]
				FROM
					[Purchasing].[VendorAddress]
				WHERE
					[VendorID] = @VendorId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorAddress_GetByAddressId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorAddress_GetByAddressId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorAddress_GetByAddressId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the VendorAddress table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorAddress_GetByAddressId
(

	@AddressId int   
)
AS


				SELECT
					[VendorID],
					[AddressID],
					[AddressTypeID],
					[ModifiedDate]
				FROM
					[Purchasing].[VendorAddress]
				WHERE
					[AddressID] = @AddressId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorAddress_GetByVendorIdAddressId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorAddress_GetByVendorIdAddressId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorAddress_GetByVendorIdAddressId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the VendorAddress table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorAddress_GetByVendorIdAddressId
(

	@VendorId int   ,

	@AddressId int   
)
AS


				SELECT
					[VendorID],
					[AddressID],
					[AddressTypeID],
					[ModifiedDate]
				FROM
					[Purchasing].[VendorAddress]
				WHERE
					[VendorID] = @VendorId
					AND [AddressID] = @AddressId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorAddress_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorAddress_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorAddress_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the VendorAddress table passing nullable parameters
-- Table Comment: Cross-reference mapping vendors and addresses.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorAddress_Find
(

	@SearchUsingOR bit   = null ,

	@VendorId int   = null ,

	@AddressId int   = null ,

	@AddressTypeId int   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [VendorID]
	, [AddressID]
	, [AddressTypeID]
	, [ModifiedDate]
    FROM
	[Purchasing].[VendorAddress]
    WHERE 
	 ([VendorID] = @VendorId OR @VendorId IS NULL)
	AND ([AddressID] = @AddressId OR @AddressId IS NULL)
	AND ([AddressTypeID] = @AddressTypeId OR @AddressTypeId IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [VendorID]
	, [AddressID]
	, [AddressTypeID]
	, [ModifiedDate]
    FROM
	[Purchasing].[VendorAddress]
    WHERE 
	 ([VendorID] = @VendorId AND @VendorId is not null)
	OR ([AddressID] = @AddressId AND @AddressId is not null)
	OR ([AddressTypeID] = @AddressTypeId AND @AddressTypeId is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistory_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistory_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistory_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the TransactionHistory table
-- Table Comment: Record of each purchase order, sales order, or work order transaction year to date.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistory_Get_List

AS


				
				SELECT
					[TransactionID],
					[ProductID],
					[ReferenceOrderID],
					[ReferenceOrderLineID],
					[TransactionDate],
					[TransactionType],
					[Quantity],
					[ActualCost],
					[ModifiedDate]
				FROM
					[Production].[TransactionHistory]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistory_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistory_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistory_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the TransactionHistory table passing page index and page count parameters
-- Table Comment: Record of each purchase order, sales order, or work order transaction year to date.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistory_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[TransactionID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [TransactionID]'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [ReferenceOrderID]'
				SET @SQL = @SQL + ', [ReferenceOrderLineID]'
				SET @SQL = @SQL + ', [TransactionDate]'
				SET @SQL = @SQL + ', [TransactionType]'
				SET @SQL = @SQL + ', [Quantity]'
				SET @SQL = @SQL + ', [ActualCost]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[TransactionHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [TransactionID],'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [ReferenceOrderID],'
				SET @SQL = @SQL + ' [ReferenceOrderLineID],'
				SET @SQL = @SQL + ' [TransactionDate],'
				SET @SQL = @SQL + ' [TransactionType],'
				SET @SQL = @SQL + ' [Quantity],'
				SET @SQL = @SQL + ' [ActualCost],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[TransactionHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistory_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistory_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistory_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the TransactionHistory table
-- Table Comment: Record of each purchase order, sales order, or work order transaction year to date.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistory_Insert
(

	@TransactionId int    OUTPUT,

	@ProductId int   ,

	@ReferenceOrderId int   ,

	@ReferenceOrderLineId int   ,

	@TransactionDate datetime   ,

	@TransactionType nchar (1)  ,

	@Quantity int   ,

	@ActualCost money   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[TransactionHistory]
					(
					[ProductID]
					,[ReferenceOrderID]
					,[ReferenceOrderLineID]
					,[TransactionDate]
					,[TransactionType]
					,[Quantity]
					,[ActualCost]
					,[ModifiedDate]
					)
				VALUES
					(
					@ProductId
					,@ReferenceOrderId
					,@ReferenceOrderLineId
					,@TransactionDate
					,@TransactionType
					,@Quantity
					,@ActualCost
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @TransactionId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistory_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistory_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistory_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the TransactionHistory table
-- Table Comment: Record of each purchase order, sales order, or work order transaction year to date.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistory_Update
(

	@TransactionId int   ,

	@ProductId int   ,

	@ReferenceOrderId int   ,

	@ReferenceOrderLineId int   ,

	@TransactionDate datetime   ,

	@TransactionType nchar (1)  ,

	@Quantity int   ,

	@ActualCost money   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[TransactionHistory]
				SET
					[ProductID] = @ProductId
					,[ReferenceOrderID] = @ReferenceOrderId
					,[ReferenceOrderLineID] = @ReferenceOrderLineId
					,[TransactionDate] = @TransactionDate
					,[TransactionType] = @TransactionType
					,[Quantity] = @Quantity
					,[ActualCost] = @ActualCost
					,[ModifiedDate] = @ModifiedDate
				WHERE
[TransactionID] = @TransactionId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistory_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistory_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistory_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the TransactionHistory table
-- Table Comment: Record of each purchase order, sales order, or work order transaction year to date.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistory_Delete
(

	@TransactionId int   
)
AS


				DELETE FROM [Production].[TransactionHistory] WITH (ROWLOCK) 
				WHERE
					[TransactionID] = @TransactionId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistory_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistory_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistory_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the TransactionHistory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistory_GetByProductId
(

	@ProductId int   
)
AS


				SELECT
					[TransactionID],
					[ProductID],
					[ReferenceOrderID],
					[ReferenceOrderLineID],
					[TransactionDate],
					[TransactionType],
					[Quantity],
					[ActualCost],
					[ModifiedDate]
				FROM
					[Production].[TransactionHistory]
				WHERE
					[ProductID] = @ProductId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistory_GetByReferenceOrderIdReferenceOrderLineId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistory_GetByReferenceOrderIdReferenceOrderLineId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistory_GetByReferenceOrderIdReferenceOrderLineId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the TransactionHistory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistory_GetByReferenceOrderIdReferenceOrderLineId
(

	@ReferenceOrderId int   ,

	@ReferenceOrderLineId int   
)
AS


				SELECT
					[TransactionID],
					[ProductID],
					[ReferenceOrderID],
					[ReferenceOrderLineID],
					[TransactionDate],
					[TransactionType],
					[Quantity],
					[ActualCost],
					[ModifiedDate]
				FROM
					[Production].[TransactionHistory]
				WHERE
					[ReferenceOrderID] = @ReferenceOrderId
					AND [ReferenceOrderLineID] = @ReferenceOrderLineId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistory_GetByTransactionId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistory_GetByTransactionId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistory_GetByTransactionId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the TransactionHistory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistory_GetByTransactionId
(

	@TransactionId int   
)
AS


				SELECT
					[TransactionID],
					[ProductID],
					[ReferenceOrderID],
					[ReferenceOrderLineID],
					[TransactionDate],
					[TransactionType],
					[Quantity],
					[ActualCost],
					[ModifiedDate]
				FROM
					[Production].[TransactionHistory]
				WHERE
					[TransactionID] = @TransactionId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_TransactionHistory_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_TransactionHistory_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_TransactionHistory_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the TransactionHistory table passing nullable parameters
-- Table Comment: Record of each purchase order, sales order, or work order transaction year to date.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_TransactionHistory_Find
(

	@SearchUsingOR bit   = null ,

	@TransactionId int   = null ,

	@ProductId int   = null ,

	@ReferenceOrderId int   = null ,

	@ReferenceOrderLineId int   = null ,

	@TransactionDate datetime   = null ,

	@TransactionType nchar (1)  = null ,

	@Quantity int   = null ,

	@ActualCost money   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [TransactionID]
	, [ProductID]
	, [ReferenceOrderID]
	, [ReferenceOrderLineID]
	, [TransactionDate]
	, [TransactionType]
	, [Quantity]
	, [ActualCost]
	, [ModifiedDate]
    FROM
	[Production].[TransactionHistory]
    WHERE 
	 ([TransactionID] = @TransactionId OR @TransactionId IS NULL)
	AND ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([ReferenceOrderID] = @ReferenceOrderId OR @ReferenceOrderId IS NULL)
	AND ([ReferenceOrderLineID] = @ReferenceOrderLineId OR @ReferenceOrderLineId IS NULL)
	AND ([TransactionDate] = @TransactionDate OR @TransactionDate IS NULL)
	AND ([TransactionType] = @TransactionType OR @TransactionType IS NULL)
	AND ([Quantity] = @Quantity OR @Quantity IS NULL)
	AND ([ActualCost] = @ActualCost OR @ActualCost IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [TransactionID]
	, [ProductID]
	, [ReferenceOrderID]
	, [ReferenceOrderLineID]
	, [TransactionDate]
	, [TransactionType]
	, [Quantity]
	, [ActualCost]
	, [ModifiedDate]
    FROM
	[Production].[TransactionHistory]
    WHERE 
	 ([TransactionID] = @TransactionId AND @TransactionId is not null)
	OR ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([ReferenceOrderID] = @ReferenceOrderId AND @ReferenceOrderId is not null)
	OR ([ReferenceOrderLineID] = @ReferenceOrderLineId AND @ReferenceOrderLineId is not null)
	OR ([TransactionDate] = @TransactionDate AND @TransactionDate is not null)
	OR ([TransactionType] = @TransactionType AND @TransactionType is not null)
	OR ([Quantity] = @Quantity AND @Quantity is not null)
	OR ([ActualCost] = @ActualCost AND @ActualCost is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorContact_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorContact_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorContact_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the VendorContact table
-- Table Comment: Cross-reference table mapping vendors and their employees.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorContact_Get_List

AS


				
				SELECT
					[VendorID],
					[ContactID],
					[ContactTypeID],
					[ModifiedDate]
				FROM
					[Purchasing].[VendorContact]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorContact_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorContact_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorContact_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the VendorContact table passing page index and page count parameters
-- Table Comment: Cross-reference table mapping vendors and their employees.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorContact_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[VendorID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [VendorID]'
				SET @SQL = @SQL + ', [ContactID]'
				SET @SQL = @SQL + ', [ContactTypeID]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Purchasing].[VendorContact]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [VendorID],'
				SET @SQL = @SQL + ' [ContactID],'
				SET @SQL = @SQL + ' [ContactTypeID],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Purchasing].[VendorContact]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorContact_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorContact_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorContact_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the VendorContact table
-- Table Comment: Cross-reference table mapping vendors and their employees.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorContact_Insert
(

	@VendorId int   ,

	@ContactId int   ,

	@ContactTypeId int   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Purchasing].[VendorContact]
					(
					[VendorID]
					,[ContactID]
					,[ContactTypeID]
					,[ModifiedDate]
					)
				VALUES
					(
					@VendorId
					,@ContactId
					,@ContactTypeId
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorContact_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorContact_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorContact_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the VendorContact table
-- Table Comment: Cross-reference table mapping vendors and their employees.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorContact_Update
(

	@VendorId int   ,

	@OriginalVendorId int   ,

	@ContactId int   ,

	@OriginalContactId int   ,

	@ContactTypeId int   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Purchasing].[VendorContact]
				SET
					[VendorID] = @VendorId
					,[ContactID] = @ContactId
					,[ContactTypeID] = @ContactTypeId
					,[ModifiedDate] = @ModifiedDate
				WHERE
[VendorID] = @OriginalVendorId 
AND [ContactID] = @OriginalContactId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorContact_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorContact_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorContact_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the VendorContact table
-- Table Comment: Cross-reference table mapping vendors and their employees.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorContact_Delete
(

	@VendorId int   ,

	@ContactId int   
)
AS


				DELETE FROM [Purchasing].[VendorContact] WITH (ROWLOCK) 
				WHERE
					[VendorID] = @VendorId
					AND [ContactID] = @ContactId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorContact_GetByVendorId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorContact_GetByVendorId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorContact_GetByVendorId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the VendorContact table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorContact_GetByVendorId
(

	@VendorId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[VendorID],
					[ContactID],
					[ContactTypeID],
					[ModifiedDate]
				FROM
					[Purchasing].[VendorContact]
				WHERE
					[VendorID] = @VendorId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorContact_GetByContactId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorContact_GetByContactId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorContact_GetByContactId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the VendorContact table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorContact_GetByContactId
(

	@ContactId int   
)
AS


				SELECT
					[VendorID],
					[ContactID],
					[ContactTypeID],
					[ModifiedDate]
				FROM
					[Purchasing].[VendorContact]
				WHERE
					[ContactID] = @ContactId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorContact_GetByContactTypeId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorContact_GetByContactTypeId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorContact_GetByContactTypeId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the VendorContact table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorContact_GetByContactTypeId
(

	@ContactTypeId int   
)
AS


				SELECT
					[VendorID],
					[ContactID],
					[ContactTypeID],
					[ModifiedDate]
				FROM
					[Purchasing].[VendorContact]
				WHERE
					[ContactTypeID] = @ContactTypeId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorContact_GetByVendorIdContactId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorContact_GetByVendorIdContactId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorContact_GetByVendorIdContactId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the VendorContact table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorContact_GetByVendorIdContactId
(

	@VendorId int   ,

	@ContactId int   
)
AS


				SELECT
					[VendorID],
					[ContactID],
					[ContactTypeID],
					[ModifiedDate]
				FROM
					[Purchasing].[VendorContact]
				WHERE
					[VendorID] = @VendorId
					AND [ContactID] = @ContactId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_VendorContact_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_VendorContact_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_VendorContact_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the VendorContact table passing nullable parameters
-- Table Comment: Cross-reference table mapping vendors and their employees.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_VendorContact_Find
(

	@SearchUsingOR bit   = null ,

	@VendorId int   = null ,

	@ContactId int   = null ,

	@ContactTypeId int   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [VendorID]
	, [ContactID]
	, [ContactTypeID]
	, [ModifiedDate]
    FROM
	[Purchasing].[VendorContact]
    WHERE 
	 ([VendorID] = @VendorId OR @VendorId IS NULL)
	AND ([ContactID] = @ContactId OR @ContactId IS NULL)
	AND ([ContactTypeID] = @ContactTypeId OR @ContactTypeId IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [VendorID]
	, [ContactID]
	, [ContactTypeID]
	, [ModifiedDate]
    FROM
	[Purchasing].[VendorContact]
    WHERE 
	 ([VendorID] = @VendorId AND @VendorId is not null)
	OR ([ContactID] = @ContactId AND @ContactId is not null)
	OR ([ContactTypeID] = @ContactTypeId AND @ContactTypeId is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_TimestampPK_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_TimestampPK_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_TimestampPK_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the TimestampPK table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_TimestampPK_Get_List

AS


				
				SELECT
					[TimestampPK],
					[SomeText]
				FROM
					[Test].[TimestampPK]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_TimestampPK_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_TimestampPK_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_TimestampPK_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the TimestampPK table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_TimestampPK_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[TimestampPK]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [TimestampPK]'
				SET @SQL = @SQL + ', [SomeText]'
				SET @SQL = @SQL + ' FROM [Test].[TimestampPK]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [TimestampPK],'
				SET @SQL = @SQL + ' [SomeText]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Test].[TimestampPK]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_TimestampPK_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_TimestampPK_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_TimestampPK_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the TimestampPK table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_TimestampPK_Insert
(

	@TimestampPk timestamp    OUTPUT,

	@SomeText varchar (50)  
)
AS


				
				INSERT INTO [Test].[TimestampPK]
					(
					[SomeText]
					)
				VALUES
					(
					@SomeText
					)
				
									
				-- Select computed columns into output parameters
				SELECT
 @TimestampPk = [TimestampPK]
				FROM
					[Test].[TimestampPK]
				WHERE
[TimestampPK] = @TimestampPk 
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_TimestampPK_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_TimestampPK_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_TimestampPK_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the TimestampPK table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_TimestampPK_Update
(

	@TimestampPk timestamp   ,

	@SomeText varchar (50)  ,

	@ReturnedTimestampPk timestamp    OUTPUT
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Test].[TimestampPK]
				SET
					[SomeText] = @SomeText
				WHERE
[TimestampPK] = @TimestampPk 
AND [TimestampPK] = @TimestampPk				
				
				-- Select computed columns into output parameters
				SELECT
 @ReturnedTimestampPk = [TimestampPK]
				FROM
					[Test].[TimestampPK]
				WHERE
[TimestampPK] = @TimestampPk 
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_TimestampPK_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_TimestampPK_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_TimestampPK_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the TimestampPK table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_TimestampPK_Delete
(

	@TimestampPk timestamp   
)
AS


				DELETE FROM [Test].[TimestampPK] WITH (ROWLOCK) 
				WHERE
					[TimestampPK] = @TimestampPk
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_TimestampPK_GetByTimestampPk procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_TimestampPK_GetByTimestampPk') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_TimestampPK_GetByTimestampPk
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the TimestampPK table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_TimestampPK_GetByTimestampPk
(

	@TimestampPk timestamp   
)
AS


				SELECT
					[TimestampPK],
					[SomeText]
				FROM
					[Test].[TimestampPK]
				WHERE
					[TimestampPK] = @TimestampPk
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_TimestampPK_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_TimestampPK_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_TimestampPK_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the TimestampPK table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_TimestampPK_Find
(

	@SearchUsingOR bit   = null ,

	@TimestampPk timestamp   = null ,

	@SomeText varchar (50)  = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [TimestampPK]
	, [SomeText]
    FROM
	[Test].[TimestampPK]
    WHERE 
	 ([SomeText] = @SomeText OR @SomeText IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [TimestampPK]
	, [SomeText]
    FROM
	[Test].[TimestampPK]
    WHERE 
	 ([SomeText] = @SomeText AND @SomeText is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ShoppingCartItem_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ShoppingCartItem_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ShoppingCartItem table
-- Table Comment: Contains online customer orders until the order is submitted or cancelled.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_Get_List

AS


				
				SELECT
					[ShoppingCartItemID],
					[ShoppingCartID],
					[Quantity],
					[ProductID],
					[DateCreated],
					[ModifiedDate]
				FROM
					[Sales].[ShoppingCartItem]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ShoppingCartItem_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ShoppingCartItem_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ShoppingCartItem table passing page index and page count parameters
-- Table Comment: Contains online customer orders until the order is submitted or cancelled.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ShoppingCartItemID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ShoppingCartItemID]'
				SET @SQL = @SQL + ', [ShoppingCartID]'
				SET @SQL = @SQL + ', [Quantity]'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [DateCreated]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[ShoppingCartItem]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ShoppingCartItemID],'
				SET @SQL = @SQL + ' [ShoppingCartID],'
				SET @SQL = @SQL + ' [Quantity],'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [DateCreated],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[ShoppingCartItem]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ShoppingCartItem_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ShoppingCartItem_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ShoppingCartItem table
-- Table Comment: Contains online customer orders until the order is submitted or cancelled.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_Insert
(

	@ShoppingCartItemId int    OUTPUT,

	@ShoppingCartId nvarchar (50)  ,

	@Quantity int   ,

	@ProductId int   ,

	@DateCreated datetime   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Sales].[ShoppingCartItem]
					(
					[ShoppingCartID]
					,[Quantity]
					,[ProductID]
					,[DateCreated]
					,[ModifiedDate]
					)
				VALUES
					(
					@ShoppingCartId
					,@Quantity
					,@ProductId
					,@DateCreated
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @ShoppingCartItemId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ShoppingCartItem_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ShoppingCartItem_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ShoppingCartItem table
-- Table Comment: Contains online customer orders until the order is submitted or cancelled.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_Update
(

	@ShoppingCartItemId int   ,

	@ShoppingCartId nvarchar (50)  ,

	@Quantity int   ,

	@ProductId int   ,

	@DateCreated datetime   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[ShoppingCartItem]
				SET
					[ShoppingCartID] = @ShoppingCartId
					,[Quantity] = @Quantity
					,[ProductID] = @ProductId
					,[DateCreated] = @DateCreated
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ShoppingCartItemID] = @ShoppingCartItemId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ShoppingCartItem_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ShoppingCartItem_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ShoppingCartItem table
-- Table Comment: Contains online customer orders until the order is submitted or cancelled.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_Delete
(

	@ShoppingCartItemId int   
)
AS


				DELETE FROM [Sales].[ShoppingCartItem] WITH (ROWLOCK) 
				WHERE
					[ShoppingCartItemID] = @ShoppingCartItemId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ShoppingCartItem_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ShoppingCartItem_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ShoppingCartItem table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_GetByProductId
(

	@ProductId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ShoppingCartItemID],
					[ShoppingCartID],
					[Quantity],
					[ProductID],
					[DateCreated],
					[ModifiedDate]
				FROM
					[Sales].[ShoppingCartItem]
				WHERE
					[ProductID] = @ProductId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ShoppingCartItem_GetByShoppingCartIdProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ShoppingCartItem_GetByShoppingCartIdProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_GetByShoppingCartIdProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ShoppingCartItem table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_GetByShoppingCartIdProductId
(

	@ShoppingCartId nvarchar (50)  ,

	@ProductId int   
)
AS


				SELECT
					[ShoppingCartItemID],
					[ShoppingCartID],
					[Quantity],
					[ProductID],
					[DateCreated],
					[ModifiedDate]
				FROM
					[Sales].[ShoppingCartItem]
				WHERE
					[ShoppingCartID] = @ShoppingCartId
					AND [ProductID] = @ProductId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ShoppingCartItem_GetByShoppingCartItemId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ShoppingCartItem_GetByShoppingCartItemId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_GetByShoppingCartItemId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ShoppingCartItem table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_GetByShoppingCartItemId
(

	@ShoppingCartItemId int   
)
AS


				SELECT
					[ShoppingCartItemID],
					[ShoppingCartID],
					[Quantity],
					[ProductID],
					[DateCreated],
					[ModifiedDate]
				FROM
					[Sales].[ShoppingCartItem]
				WHERE
					[ShoppingCartItemID] = @ShoppingCartItemId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ShoppingCartItem_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ShoppingCartItem_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ShoppingCartItem table passing nullable parameters
-- Table Comment: Contains online customer orders until the order is submitted or cancelled.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ShoppingCartItem_Find
(

	@SearchUsingOR bit   = null ,

	@ShoppingCartItemId int   = null ,

	@ShoppingCartId nvarchar (50)  = null ,

	@Quantity int   = null ,

	@ProductId int   = null ,

	@DateCreated datetime   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ShoppingCartItemID]
	, [ShoppingCartID]
	, [Quantity]
	, [ProductID]
	, [DateCreated]
	, [ModifiedDate]
    FROM
	[Sales].[ShoppingCartItem]
    WHERE 
	 ([ShoppingCartItemID] = @ShoppingCartItemId OR @ShoppingCartItemId IS NULL)
	AND ([ShoppingCartID] = @ShoppingCartId OR @ShoppingCartId IS NULL)
	AND ([Quantity] = @Quantity OR @Quantity IS NULL)
	AND ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([DateCreated] = @DateCreated OR @DateCreated IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ShoppingCartItemID]
	, [ShoppingCartID]
	, [Quantity]
	, [ProductID]
	, [DateCreated]
	, [ModifiedDate]
    FROM
	[Sales].[ShoppingCartItem]
    WHERE 
	 ([ShoppingCartItemID] = @ShoppingCartItemId AND @ShoppingCartItemId is not null)
	OR ([ShoppingCartID] = @ShoppingCartId AND @ShoppingCartId is not null)
	OR ([Quantity] = @Quantity AND @Quantity is not null)
	OR ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([DateCreated] = @DateCreated AND @DateCreated is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_TestVariant_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_TestVariant_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_TestVariant_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the TestVariant table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_TestVariant_Get_List

AS


				
				SELECT
					[TestVariantId],
					[VariantField]
				FROM
					[Test].[TestVariant]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_TestVariant_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_TestVariant_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_TestVariant_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the TestVariant table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_TestVariant_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[TestVariantId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [TestVariantId]'
				SET @SQL = @SQL + ', [VariantField]'
				SET @SQL = @SQL + ' FROM [Test].[TestVariant]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [TestVariantId],'
				SET @SQL = @SQL + ' [VariantField]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Test].[TestVariant]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_TestVariant_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_TestVariant_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_TestVariant_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the TestVariant table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_TestVariant_Insert
(

	@TestVariantId int    OUTPUT,

	@VariantField sql_variant   
)
AS


				
				INSERT INTO [Test].[TestVariant]
					(
					[VariantField]
					)
				VALUES
					(
					@VariantField
					)
				
				-- Get the identity value
				SET @TestVariantId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_TestVariant_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_TestVariant_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_TestVariant_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the TestVariant table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_TestVariant_Update
(

	@TestVariantId int   ,

	@VariantField sql_variant   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Test].[TestVariant]
				SET
					[VariantField] = @VariantField
				WHERE
[TestVariantId] = @TestVariantId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_TestVariant_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_TestVariant_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_TestVariant_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the TestVariant table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_TestVariant_Delete
(

	@TestVariantId int   
)
AS


				DELETE FROM [Test].[TestVariant] WITH (ROWLOCK) 
				WHERE
					[TestVariantId] = @TestVariantId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_TestVariant_GetByTestVariantId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_TestVariant_GetByTestVariantId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_TestVariant_GetByTestVariantId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the TestVariant table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_TestVariant_GetByTestVariantId
(

	@TestVariantId int   
)
AS


				SELECT
					[TestVariantId],
					[VariantField]
				FROM
					[Test].[TestVariant]
				WHERE
					[TestVariantId] = @TestVariantId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_TestVariant_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_TestVariant_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_TestVariant_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the TestVariant table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_TestVariant_Find
(

	@SearchUsingOR bit   = null ,

	@TestVariantId int   = null ,

	@VariantField sql_variant   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [TestVariantId]
	, [VariantField]
    FROM
	[Test].[TestVariant]
    WHERE 
	 ([TestVariantId] = @TestVariantId OR @TestVariantId IS NULL)
	AND ([VariantField] = @VariantField OR @VariantField IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [TestVariantId]
	, [VariantField]
    FROM
	[Test].[TestVariant]
    WHERE 
	 ([TestVariantId] = @TestVariantId AND @TestVariantId is not null)
	OR ([VariantField] = @VariantField AND @VariantField is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOffer_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOffer_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOffer_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the SpecialOffer table
-- Table Comment: Sale discounts lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOffer_Get_List

AS


				
				SELECT
					[SpecialOfferID],
					[Description],
					[DiscountPct],
					[Type],
					[Category],
					[StartDate],
					[EndDate],
					[MinQty],
					[MaxQty],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SpecialOffer]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOffer_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOffer_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOffer_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the SpecialOffer table passing page index and page count parameters
-- Table Comment: Sale discounts lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOffer_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SpecialOfferID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SpecialOfferID]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [DiscountPct]'
				SET @SQL = @SQL + ', [Type]'
				SET @SQL = @SQL + ', [Category]'
				SET @SQL = @SQL + ', [StartDate]'
				SET @SQL = @SQL + ', [EndDate]'
				SET @SQL = @SQL + ', [MinQty]'
				SET @SQL = @SQL + ', [MaxQty]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[SpecialOffer]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SpecialOfferID],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [DiscountPct],'
				SET @SQL = @SQL + ' [Type],'
				SET @SQL = @SQL + ' [Category],'
				SET @SQL = @SQL + ' [StartDate],'
				SET @SQL = @SQL + ' [EndDate],'
				SET @SQL = @SQL + ' [MinQty],'
				SET @SQL = @SQL + ' [MaxQty],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[SpecialOffer]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOffer_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOffer_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOffer_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the SpecialOffer table
-- Table Comment: Sale discounts lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOffer_Insert
(

	@SpecialOfferId int    OUTPUT,

	@Description nvarchar (255)  ,

	@DiscountPct smallmoney   ,

	@Type nvarchar (50)  ,

	@Category nvarchar (50)  ,

	@StartDate datetime   ,

	@EndDate datetime   ,

	@MinQty int   ,

	@MaxQty int   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Sales].[SpecialOffer]
					(
					[Description]
					,[DiscountPct]
					,[Type]
					,[Category]
					,[StartDate]
					,[EndDate]
					,[MinQty]
					,[MaxQty]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@Description
					,@DiscountPct
					,@Type
					,@Category
					,@StartDate
					,@EndDate
					,@MinQty
					,@MaxQty
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @SpecialOfferId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOffer_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOffer_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOffer_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the SpecialOffer table
-- Table Comment: Sale discounts lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOffer_Update
(

	@SpecialOfferId int   ,

	@Description nvarchar (255)  ,

	@DiscountPct smallmoney   ,

	@Type nvarchar (50)  ,

	@Category nvarchar (50)  ,

	@StartDate datetime   ,

	@EndDate datetime   ,

	@MinQty int   ,

	@MaxQty int   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[SpecialOffer]
				SET
					[Description] = @Description
					,[DiscountPct] = @DiscountPct
					,[Type] = @Type
					,[Category] = @Category
					,[StartDate] = @StartDate
					,[EndDate] = @EndDate
					,[MinQty] = @MinQty
					,[MaxQty] = @MaxQty
					,[ModifiedDate] = @ModifiedDate
				WHERE
[SpecialOfferID] = @SpecialOfferId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOffer_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOffer_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOffer_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the SpecialOffer table
-- Table Comment: Sale discounts lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOffer_Delete
(

	@SpecialOfferId int   
)
AS


				DELETE FROM [Sales].[SpecialOffer] WITH (ROWLOCK) 
				WHERE
					[SpecialOfferID] = @SpecialOfferId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOffer_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOffer_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOffer_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SpecialOffer table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOffer_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[SpecialOfferID],
					[Description],
					[DiscountPct],
					[Type],
					[Category],
					[StartDate],
					[EndDate],
					[MinQty],
					[MaxQty],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SpecialOffer]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOffer_GetBySpecialOfferId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOffer_GetBySpecialOfferId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOffer_GetBySpecialOfferId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SpecialOffer table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOffer_GetBySpecialOfferId
(

	@SpecialOfferId int   
)
AS


				SELECT
					[SpecialOfferID],
					[Description],
					[DiscountPct],
					[Type],
					[Category],
					[StartDate],
					[EndDate],
					[MinQty],
					[MaxQty],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SpecialOffer]
				WHERE
					[SpecialOfferID] = @SpecialOfferId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOffer_GetByProductIdFromSpecialOfferProduct procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOffer_GetByProductIdFromSpecialOfferProduct') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOffer_GetByProductIdFromSpecialOfferProduct
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOffer_GetByProductIdFromSpecialOfferProduct
(

	@ProductId int   
)
AS


SELECT Sales.[SpecialOffer].[SpecialOfferID]
       ,Sales.[SpecialOffer].[Description]
       ,Sales.[SpecialOffer].[DiscountPct]
       ,Sales.[SpecialOffer].[Type]
       ,Sales.[SpecialOffer].[Category]
       ,Sales.[SpecialOffer].[StartDate]
       ,Sales.[SpecialOffer].[EndDate]
       ,Sales.[SpecialOffer].[MinQty]
       ,Sales.[SpecialOffer].[MaxQty]
       ,Sales.[SpecialOffer].[rowguid]
       ,Sales.[SpecialOffer].[ModifiedDate]
  FROM Sales.[SpecialOffer]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[SpecialOfferProduct] 
                WHERE Sales.[SpecialOfferProduct].[ProductID] = @ProductId
                  AND Sales.[SpecialOfferProduct].[SpecialOfferID] = Sales.[SpecialOffer].[SpecialOfferID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOffer_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOffer_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOffer_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the SpecialOffer table passing nullable parameters
-- Table Comment: Sale discounts lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOffer_Find
(

	@SearchUsingOR bit   = null ,

	@SpecialOfferId int   = null ,

	@Description nvarchar (255)  = null ,

	@DiscountPct smallmoney   = null ,

	@Type nvarchar (50)  = null ,

	@Category nvarchar (50)  = null ,

	@StartDate datetime   = null ,

	@EndDate datetime   = null ,

	@MinQty int   = null ,

	@MaxQty int   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SpecialOfferID]
	, [Description]
	, [DiscountPct]
	, [Type]
	, [Category]
	, [StartDate]
	, [EndDate]
	, [MinQty]
	, [MaxQty]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SpecialOffer]
    WHERE 
	 ([SpecialOfferID] = @SpecialOfferId OR @SpecialOfferId IS NULL)
	AND ([Description] = @Description OR @Description IS NULL)
	AND ([DiscountPct] = @DiscountPct OR @DiscountPct IS NULL)
	AND ([Type] = @Type OR @Type IS NULL)
	AND ([Category] = @Category OR @Category IS NULL)
	AND ([StartDate] = @StartDate OR @StartDate IS NULL)
	AND ([EndDate] = @EndDate OR @EndDate IS NULL)
	AND ([MinQty] = @MinQty OR @MinQty IS NULL)
	AND ([MaxQty] = @MaxQty OR @MaxQty IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SpecialOfferID]
	, [Description]
	, [DiscountPct]
	, [Type]
	, [Category]
	, [StartDate]
	, [EndDate]
	, [MinQty]
	, [MaxQty]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SpecialOffer]
    WHERE 
	 ([SpecialOfferID] = @SpecialOfferId AND @SpecialOfferId is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([DiscountPct] = @DiscountPct AND @DiscountPct is not null)
	OR ([Type] = @Type AND @Type is not null)
	OR ([Category] = @Category AND @Category is not null)
	OR ([StartDate] = @StartDate AND @StartDate is not null)
	OR ([EndDate] = @EndDate AND @EndDate is not null)
	OR ([MinQty] = @MinQty AND @MinQty is not null)
	OR ([MaxQty] = @MaxQty AND @MaxQty is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ShipMethod_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ShipMethod_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ShipMethod_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ShipMethod table
-- Table Comment: Shipping company lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ShipMethod_Get_List

AS


				
				SELECT
					[ShipMethodID],
					[Name],
					[ShipBase],
					[ShipRate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Purchasing].[ShipMethod]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ShipMethod_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ShipMethod_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ShipMethod_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ShipMethod table passing page index and page count parameters
-- Table Comment: Shipping company lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ShipMethod_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ShipMethodID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ShipMethodID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [ShipBase]'
				SET @SQL = @SQL + ', [ShipRate]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Purchasing].[ShipMethod]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ShipMethodID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [ShipBase],'
				SET @SQL = @SQL + ' [ShipRate],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Purchasing].[ShipMethod]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ShipMethod_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ShipMethod_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ShipMethod_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ShipMethod table
-- Table Comment: Shipping company lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ShipMethod_Insert
(

	@ShipMethodId int    OUTPUT,

	@Name nvarchar (50)  ,

	@ShipBase money   ,

	@ShipRate money   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Purchasing].[ShipMethod]
					(
					[Name]
					,[ShipBase]
					,[ShipRate]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@Name
					,@ShipBase
					,@ShipRate
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @ShipMethodId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ShipMethod_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ShipMethod_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ShipMethod_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ShipMethod table
-- Table Comment: Shipping company lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ShipMethod_Update
(

	@ShipMethodId int   ,

	@Name nvarchar (50)  ,

	@ShipBase money   ,

	@ShipRate money   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Purchasing].[ShipMethod]
				SET
					[Name] = @Name
					,[ShipBase] = @ShipBase
					,[ShipRate] = @ShipRate
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ShipMethodID] = @ShipMethodId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ShipMethod_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ShipMethod_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ShipMethod_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ShipMethod table
-- Table Comment: Shipping company lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ShipMethod_Delete
(

	@ShipMethodId int   
)
AS


				DELETE FROM [Purchasing].[ShipMethod] WITH (ROWLOCK) 
				WHERE
					[ShipMethodID] = @ShipMethodId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ShipMethod_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ShipMethod_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ShipMethod_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ShipMethod table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ShipMethod_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[ShipMethodID],
					[Name],
					[ShipBase],
					[ShipRate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Purchasing].[ShipMethod]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ShipMethod_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ShipMethod_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ShipMethod_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ShipMethod table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ShipMethod_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[ShipMethodID],
					[Name],
					[ShipBase],
					[ShipRate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Purchasing].[ShipMethod]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ShipMethod_GetByShipMethodId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ShipMethod_GetByShipMethodId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ShipMethod_GetByShipMethodId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ShipMethod table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ShipMethod_GetByShipMethodId
(

	@ShipMethodId int   
)
AS


				SELECT
					[ShipMethodID],
					[Name],
					[ShipBase],
					[ShipRate],
					[rowguid],
					[ModifiedDate]
				FROM
					[Purchasing].[ShipMethod]
				WHERE
					[ShipMethodID] = @ShipMethodId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_ShipMethod_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_ShipMethod_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_ShipMethod_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ShipMethod table passing nullable parameters
-- Table Comment: Shipping company lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_ShipMethod_Find
(

	@SearchUsingOR bit   = null ,

	@ShipMethodId int   = null ,

	@Name nvarchar (50)  = null ,

	@ShipBase money   = null ,

	@ShipRate money   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ShipMethodID]
	, [Name]
	, [ShipBase]
	, [ShipRate]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Purchasing].[ShipMethod]
    WHERE 
	 ([ShipMethodID] = @ShipMethodId OR @ShipMethodId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([ShipBase] = @ShipBase OR @ShipBase IS NULL)
	AND ([ShipRate] = @ShipRate OR @ShipRate IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ShipMethodID]
	, [Name]
	, [ShipBase]
	, [ShipRate]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Purchasing].[ShipMethod]
    WHERE 
	 ([ShipMethodID] = @ShipMethodId AND @ShipMethodId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([ShipBase] = @ShipBase AND @ShipBase is not null)
	OR ([ShipRate] = @ShipRate AND @ShipRate is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOfferProduct_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOfferProduct_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the SpecialOfferProduct table
-- Table Comment: Cross-reference table mapping products to special offer discounts.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_Get_List

AS


				
				SELECT
					[SpecialOfferID],
					[ProductID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SpecialOfferProduct]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOfferProduct_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOfferProduct_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the SpecialOfferProduct table passing page index and page count parameters
-- Table Comment: Cross-reference table mapping products to special offer discounts.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SpecialOfferID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SpecialOfferID]'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[SpecialOfferProduct]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SpecialOfferID],'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[SpecialOfferProduct]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOfferProduct_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOfferProduct_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the SpecialOfferProduct table
-- Table Comment: Cross-reference table mapping products to special offer discounts.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_Insert
(

	@SpecialOfferId int   ,

	@ProductId int   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Sales].[SpecialOfferProduct]
					(
					[SpecialOfferID]
					,[ProductID]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@SpecialOfferId
					,@ProductId
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOfferProduct_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOfferProduct_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the SpecialOfferProduct table
-- Table Comment: Cross-reference table mapping products to special offer discounts.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_Update
(

	@SpecialOfferId int   ,

	@OriginalSpecialOfferId int   ,

	@ProductId int   ,

	@OriginalProductId int   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[SpecialOfferProduct]
				SET
					[SpecialOfferID] = @SpecialOfferId
					,[ProductID] = @ProductId
					,[ModifiedDate] = @ModifiedDate
				WHERE
[SpecialOfferID] = @OriginalSpecialOfferId 
AND [ProductID] = @OriginalProductId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOfferProduct_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOfferProduct_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the SpecialOfferProduct table
-- Table Comment: Cross-reference table mapping products to special offer discounts.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_Delete
(

	@SpecialOfferId int   ,

	@ProductId int   
)
AS


				DELETE FROM [Sales].[SpecialOfferProduct] WITH (ROWLOCK) 
				WHERE
					[SpecialOfferID] = @SpecialOfferId
					AND [ProductID] = @ProductId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOfferProduct_GetBySpecialOfferId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOfferProduct_GetBySpecialOfferId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_GetBySpecialOfferId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SpecialOfferProduct table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_GetBySpecialOfferId
(

	@SpecialOfferId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[SpecialOfferID],
					[ProductID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SpecialOfferProduct]
				WHERE
					[SpecialOfferID] = @SpecialOfferId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOfferProduct_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOfferProduct_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SpecialOfferProduct table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[SpecialOfferID],
					[ProductID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SpecialOfferProduct]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOfferProduct_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOfferProduct_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SpecialOfferProduct table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_GetByProductId
(

	@ProductId int   
)
AS


				SELECT
					[SpecialOfferID],
					[ProductID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SpecialOfferProduct]
				WHERE
					[ProductID] = @ProductId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOfferProduct_GetBySpecialOfferIdProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOfferProduct_GetBySpecialOfferIdProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_GetBySpecialOfferIdProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the SpecialOfferProduct table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_GetBySpecialOfferIdProductId
(

	@SpecialOfferId int   ,

	@ProductId int   
)
AS


				SELECT
					[SpecialOfferID],
					[ProductID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[SpecialOfferProduct]
				WHERE
					[SpecialOfferID] = @SpecialOfferId
					AND [ProductID] = @ProductId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_SpecialOfferProduct_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_SpecialOfferProduct_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the SpecialOfferProduct table passing nullable parameters
-- Table Comment: Cross-reference table mapping products to special offer discounts.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_SpecialOfferProduct_Find
(

	@SearchUsingOR bit   = null ,

	@SpecialOfferId int   = null ,

	@ProductId int   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SpecialOfferID]
	, [ProductID]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SpecialOfferProduct]
    WHERE 
	 ([SpecialOfferID] = @SpecialOfferId OR @SpecialOfferId IS NULL)
	AND ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SpecialOfferID]
	, [ProductID]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[SpecialOfferProduct]
    WHERE 
	 ([SpecialOfferID] = @SpecialOfferId AND @SpecialOfferId is not null)
	OR ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_StateProvince_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_StateProvince_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_StateProvince_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the StateProvince table
-- Table Comment: State and province lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_StateProvince_Get_List

AS


				
				SELECT
					[StateProvinceID],
					[StateProvinceCode],
					[CountryRegionCode],
					[IsOnlyStateProvinceFlag],
					[Name],
					[TerritoryID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[StateProvince]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_StateProvince_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_StateProvince_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_StateProvince_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the StateProvince table passing page index and page count parameters
-- Table Comment: State and province lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_StateProvince_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[StateProvinceID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [StateProvinceID]'
				SET @SQL = @SQL + ', [StateProvinceCode]'
				SET @SQL = @SQL + ', [CountryRegionCode]'
				SET @SQL = @SQL + ', [IsOnlyStateProvinceFlag]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [TerritoryID]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Person].[StateProvince]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [StateProvinceID],'
				SET @SQL = @SQL + ' [StateProvinceCode],'
				SET @SQL = @SQL + ' [CountryRegionCode],'
				SET @SQL = @SQL + ' [IsOnlyStateProvinceFlag],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [TerritoryID],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Person].[StateProvince]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_StateProvince_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_StateProvince_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_StateProvince_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the StateProvince table
-- Table Comment: State and province lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_StateProvince_Insert
(

	@StateProvinceId int    OUTPUT,

	@StateProvinceCode nchar (3)  ,

	@CountryRegionCode nvarchar (3)  ,

	@IsOnlyStateProvinceFlag bit   ,

	@Name nvarchar (50)  ,

	@TerritoryId int   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Person].[StateProvince]
					(
					[StateProvinceCode]
					,[CountryRegionCode]
					,[IsOnlyStateProvinceFlag]
					,[Name]
					,[TerritoryID]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@StateProvinceCode
					,@CountryRegionCode
					,@IsOnlyStateProvinceFlag
					,@Name
					,@TerritoryId
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @StateProvinceId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_StateProvince_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_StateProvince_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_StateProvince_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the StateProvince table
-- Table Comment: State and province lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_StateProvince_Update
(

	@StateProvinceId int   ,

	@StateProvinceCode nchar (3)  ,

	@CountryRegionCode nvarchar (3)  ,

	@IsOnlyStateProvinceFlag bit   ,

	@Name nvarchar (50)  ,

	@TerritoryId int   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Person].[StateProvince]
				SET
					[StateProvinceCode] = @StateProvinceCode
					,[CountryRegionCode] = @CountryRegionCode
					,[IsOnlyStateProvinceFlag] = @IsOnlyStateProvinceFlag
					,[Name] = @Name
					,[TerritoryID] = @TerritoryId
					,[ModifiedDate] = @ModifiedDate
				WHERE
[StateProvinceID] = @StateProvinceId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_StateProvince_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_StateProvince_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_StateProvince_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the StateProvince table
-- Table Comment: State and province lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_StateProvince_Delete
(

	@StateProvinceId int   
)
AS


				DELETE FROM [Person].[StateProvince] WITH (ROWLOCK) 
				WHERE
					[StateProvinceID] = @StateProvinceId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_StateProvince_GetByCountryRegionCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_StateProvince_GetByCountryRegionCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_StateProvince_GetByCountryRegionCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the StateProvince table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_StateProvince_GetByCountryRegionCode
(

	@CountryRegionCode nvarchar (3)  
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[StateProvinceID],
					[StateProvinceCode],
					[CountryRegionCode],
					[IsOnlyStateProvinceFlag],
					[Name],
					[TerritoryID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[StateProvince]
				WHERE
					[CountryRegionCode] = @CountryRegionCode
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_StateProvince_GetByTerritoryId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_StateProvince_GetByTerritoryId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_StateProvince_GetByTerritoryId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the StateProvince table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_StateProvince_GetByTerritoryId
(

	@TerritoryId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[StateProvinceID],
					[StateProvinceCode],
					[CountryRegionCode],
					[IsOnlyStateProvinceFlag],
					[Name],
					[TerritoryID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[StateProvince]
				WHERE
					[TerritoryID] = @TerritoryId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_StateProvince_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_StateProvince_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_StateProvince_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the StateProvince table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_StateProvince_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[StateProvinceID],
					[StateProvinceCode],
					[CountryRegionCode],
					[IsOnlyStateProvinceFlag],
					[Name],
					[TerritoryID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[StateProvince]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_StateProvince_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_StateProvince_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_StateProvince_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the StateProvince table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_StateProvince_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[StateProvinceID],
					[StateProvinceCode],
					[CountryRegionCode],
					[IsOnlyStateProvinceFlag],
					[Name],
					[TerritoryID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[StateProvince]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_StateProvince_GetByStateProvinceCodeCountryRegionCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_StateProvince_GetByStateProvinceCodeCountryRegionCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_StateProvince_GetByStateProvinceCodeCountryRegionCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the StateProvince table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_StateProvince_GetByStateProvinceCodeCountryRegionCode
(

	@StateProvinceCode nchar (3)  ,

	@CountryRegionCode nvarchar (3)  
)
AS


				SELECT
					[StateProvinceID],
					[StateProvinceCode],
					[CountryRegionCode],
					[IsOnlyStateProvinceFlag],
					[Name],
					[TerritoryID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[StateProvince]
				WHERE
					[StateProvinceCode] = @StateProvinceCode
					AND [CountryRegionCode] = @CountryRegionCode
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_StateProvince_GetByStateProvinceId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_StateProvince_GetByStateProvinceId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_StateProvince_GetByStateProvinceId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the StateProvince table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_StateProvince_GetByStateProvinceId
(

	@StateProvinceId int   
)
AS


				SELECT
					[StateProvinceID],
					[StateProvinceCode],
					[CountryRegionCode],
					[IsOnlyStateProvinceFlag],
					[Name],
					[TerritoryID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[StateProvince]
				WHERE
					[StateProvinceID] = @StateProvinceId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_StateProvince_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_StateProvince_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_StateProvince_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the StateProvince table passing nullable parameters
-- Table Comment: State and province lookup table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_StateProvince_Find
(

	@SearchUsingOR bit   = null ,

	@StateProvinceId int   = null ,

	@StateProvinceCode nchar (3)  = null ,

	@CountryRegionCode nvarchar (3)  = null ,

	@IsOnlyStateProvinceFlag bit   = null ,

	@Name nvarchar (50)  = null ,

	@TerritoryId int   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [StateProvinceID]
	, [StateProvinceCode]
	, [CountryRegionCode]
	, [IsOnlyStateProvinceFlag]
	, [Name]
	, [TerritoryID]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Person].[StateProvince]
    WHERE 
	 ([StateProvinceID] = @StateProvinceId OR @StateProvinceId IS NULL)
	AND ([StateProvinceCode] = @StateProvinceCode OR @StateProvinceCode IS NULL)
	AND ([CountryRegionCode] = @CountryRegionCode OR @CountryRegionCode IS NULL)
	AND ([IsOnlyStateProvinceFlag] = @IsOnlyStateProvinceFlag OR @IsOnlyStateProvinceFlag IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([TerritoryID] = @TerritoryId OR @TerritoryId IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [StateProvinceID]
	, [StateProvinceCode]
	, [CountryRegionCode]
	, [IsOnlyStateProvinceFlag]
	, [Name]
	, [TerritoryID]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Person].[StateProvince]
    WHERE 
	 ([StateProvinceID] = @StateProvinceId AND @StateProvinceId is not null)
	OR ([StateProvinceCode] = @StateProvinceCode AND @StateProvinceCode is not null)
	OR ([CountryRegionCode] = @CountryRegionCode AND @CountryRegionCode is not null)
	OR ([IsOnlyStateProvinceFlag] = @IsOnlyStateProvinceFlag AND @IsOnlyStateProvinceFlag is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([TerritoryID] = @TerritoryId AND @TerritoryId is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Store_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Store_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Store_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the Store table
-- Table Comment: Customers (resellers) of Adventure Works products.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Store_Get_List

AS


				
				SELECT
					[CustomerID],
					[Name],
					[SalesPersonID],
					[Demographics],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[Store]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Store_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Store_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Store_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the Store table passing page index and page count parameters
-- Table Comment: Customers (resellers) of Adventure Works products.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Store_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CustomerID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CustomerID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [SalesPersonID]'
				SET @SQL = @SQL + ', [Demographics]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[Store]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CustomerID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [SalesPersonID],'
				SET @SQL = @SQL + ' [Demographics],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[Store]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Store_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Store_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Store_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the Store table
-- Table Comment: Customers (resellers) of Adventure Works products.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Store_Insert
(

	@CustomerId int   ,

	@Name nvarchar (50)  ,

	@SalesPersonId int   ,

	@Demographics xml   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Sales].[Store]
					(
					[CustomerID]
					,[Name]
					,[SalesPersonID]
					,[Demographics]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@CustomerId
					,@Name
					,@SalesPersonId
					,@Demographics
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Store_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Store_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Store_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the Store table
-- Table Comment: Customers (resellers) of Adventure Works products.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Store_Update
(

	@CustomerId int   ,

	@OriginalCustomerId int   ,

	@Name nvarchar (50)  ,

	@SalesPersonId int   ,

	@Demographics xml   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[Store]
				SET
					[CustomerID] = @CustomerId
					,[Name] = @Name
					,[SalesPersonID] = @SalesPersonId
					,[Demographics] = @Demographics
					,[ModifiedDate] = @ModifiedDate
				WHERE
[CustomerID] = @OriginalCustomerId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Store_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Store_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Store_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the Store table
-- Table Comment: Customers (resellers) of Adventure Works products.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Store_Delete
(

	@CustomerId int   
)
AS


				DELETE FROM [Sales].[Store] WITH (ROWLOCK) 
				WHERE
					[CustomerID] = @CustomerId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Store_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Store_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Store_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Store table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Store_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[CustomerID],
					[Name],
					[SalesPersonID],
					[Demographics],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[Store]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Store_GetBySalesPersonId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Store_GetBySalesPersonId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Store_GetBySalesPersonId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Store table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Store_GetBySalesPersonId
(

	@SalesPersonId int   
)
AS


				SELECT
					[CustomerID],
					[Name],
					[SalesPersonID],
					[Demographics],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[Store]
				WHERE
					[SalesPersonID] = @SalesPersonId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Store_GetByCustomerId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Store_GetByCustomerId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Store_GetByCustomerId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Store table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Store_GetByCustomerId
(

	@CustomerId int   
)
AS


				SELECT
					[CustomerID],
					[Name],
					[SalesPersonID],
					[Demographics],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[Store]
				WHERE
					[CustomerID] = @CustomerId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Store_GetByDemographics procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Store_GetByDemographics') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Store_GetByDemographics
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Store table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Store_GetByDemographics
(

	@Demographics xml   
)
AS


				SELECT
					[CustomerID],
					[Name],
					[SalesPersonID],
					[Demographics],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[Store]
				WHERE
					[Demographics] = @Demographics
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Store_GetByContactIdFromStoreContact procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Store_GetByContactIdFromStoreContact') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Store_GetByContactIdFromStoreContact
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Store_GetByContactIdFromStoreContact
(

	@ContactId int   
)
AS


SELECT Sales.[Store].[CustomerID]
       ,Sales.[Store].[Name]
       ,Sales.[Store].[SalesPersonID]
       ,Sales.[Store].[Demographics]
       ,Sales.[Store].[rowguid]
       ,Sales.[Store].[ModifiedDate]
  FROM Sales.[Store]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[StoreContact] 
                WHERE Sales.[StoreContact].[ContactID] = @ContactId
                  AND Sales.[StoreContact].[CustomerID] = Sales.[Store].[CustomerID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Store_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Store_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Store_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the Store table passing nullable parameters
-- Table Comment: Customers (resellers) of Adventure Works products.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Store_Find
(

	@SearchUsingOR bit   = null ,

	@CustomerId int   = null ,

	@Name nvarchar (50)  = null ,

	@SalesPersonId int   = null ,

	@Demographics xml   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CustomerID]
	, [Name]
	, [SalesPersonID]
	, [Demographics]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[Store]
    WHERE 
	 ([CustomerID] = @CustomerId OR @CustomerId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([SalesPersonID] = @SalesPersonId OR @SalesPersonId IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CustomerID]
	, [Name]
	, [SalesPersonID]
	, [Demographics]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[Store]
    WHERE 
	 ([CustomerID] = @CustomerId AND @CustomerId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([SalesPersonID] = @SalesPersonId AND @SalesPersonId is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductPhoto_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductPhoto_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductPhoto_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ProductPhoto table
-- Table Comment: Product images.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductPhoto_Get_List

AS


				
				SELECT
					[ProductPhotoID],
					[ThumbNailPhoto],
					[ThumbnailPhotoFileName],
					[LargePhoto],
					[LargePhotoFileName],
					[ModifiedDate]
				FROM
					[Production].[ProductPhoto]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductPhoto_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductPhoto_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductPhoto_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ProductPhoto table passing page index and page count parameters
-- Table Comment: Product images.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductPhoto_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductPhotoID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductPhotoID]'
				SET @SQL = @SQL + ', [ThumbNailPhoto]'
				SET @SQL = @SQL + ', [ThumbnailPhotoFileName]'
				SET @SQL = @SQL + ', [LargePhoto]'
				SET @SQL = @SQL + ', [LargePhotoFileName]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[ProductPhoto]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductPhotoID],'
				SET @SQL = @SQL + ' [ThumbNailPhoto],'
				SET @SQL = @SQL + ' [ThumbnailPhotoFileName],'
				SET @SQL = @SQL + ' [LargePhoto],'
				SET @SQL = @SQL + ' [LargePhotoFileName],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[ProductPhoto]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductPhoto_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductPhoto_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductPhoto_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ProductPhoto table
-- Table Comment: Product images.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductPhoto_Insert
(

	@ProductPhotoId int    OUTPUT,

	@ThumbNailPhoto varbinary (MAX)  ,

	@ThumbnailPhotoFileName nvarchar (50)  ,

	@LargePhoto varbinary (MAX)  ,

	@LargePhotoFileName nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[ProductPhoto]
					(
					[ThumbNailPhoto]
					,[ThumbnailPhotoFileName]
					,[LargePhoto]
					,[LargePhotoFileName]
					,[ModifiedDate]
					)
				VALUES
					(
					@ThumbNailPhoto
					,@ThumbnailPhotoFileName
					,@LargePhoto
					,@LargePhotoFileName
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @ProductPhotoId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductPhoto_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductPhoto_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductPhoto_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ProductPhoto table
-- Table Comment: Product images.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductPhoto_Update
(

	@ProductPhotoId int   ,

	@ThumbNailPhoto varbinary (MAX)  ,

	@ThumbnailPhotoFileName nvarchar (50)  ,

	@LargePhoto varbinary (MAX)  ,

	@LargePhotoFileName nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[ProductPhoto]
				SET
					[ThumbNailPhoto] = @ThumbNailPhoto
					,[ThumbnailPhotoFileName] = @ThumbnailPhotoFileName
					,[LargePhoto] = @LargePhoto
					,[LargePhotoFileName] = @LargePhotoFileName
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ProductPhotoID] = @ProductPhotoId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductPhoto_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductPhoto_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductPhoto_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ProductPhoto table
-- Table Comment: Product images.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductPhoto_Delete
(

	@ProductPhotoId int   
)
AS


				DELETE FROM [Production].[ProductPhoto] WITH (ROWLOCK) 
				WHERE
					[ProductPhotoID] = @ProductPhotoId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductPhoto_GetByProductPhotoId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductPhoto_GetByProductPhotoId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductPhoto_GetByProductPhotoId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductPhoto table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductPhoto_GetByProductPhotoId
(

	@ProductPhotoId int   
)
AS


				SELECT
					[ProductPhotoID],
					[ThumbNailPhoto],
					[ThumbnailPhotoFileName],
					[LargePhoto],
					[LargePhotoFileName],
					[ModifiedDate]
				FROM
					[Production].[ProductPhoto]
				WHERE
					[ProductPhotoID] = @ProductPhotoId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductPhoto_GetByProductIdFromProductProductPhoto procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductPhoto_GetByProductIdFromProductProductPhoto') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductPhoto_GetByProductIdFromProductProductPhoto
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductPhoto_GetByProductIdFromProductProductPhoto
(

	@ProductId int   
)
AS


SELECT Production.[ProductPhoto].[ProductPhotoID]
       ,Production.[ProductPhoto].[ThumbNailPhoto]
       ,Production.[ProductPhoto].[ThumbnailPhotoFileName]
       ,Production.[ProductPhoto].[LargePhoto]
       ,Production.[ProductPhoto].[LargePhotoFileName]
       ,Production.[ProductPhoto].[ModifiedDate]
  FROM Production.[ProductPhoto]
 WHERE EXISTS (SELECT 1
                 FROM Production.[ProductProductPhoto] 
                WHERE Production.[ProductProductPhoto].[ProductID] = @ProductId
                  AND Production.[ProductProductPhoto].[ProductPhotoID] = Production.[ProductPhoto].[ProductPhotoID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductPhoto_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductPhoto_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductPhoto_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ProductPhoto table passing nullable parameters
-- Table Comment: Product images.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductPhoto_Find
(

	@SearchUsingOR bit   = null ,

	@ProductPhotoId int   = null ,

	@ThumbNailPhoto varbinary (MAX)  = null ,

	@ThumbnailPhotoFileName nvarchar (50)  = null ,

	@LargePhoto varbinary (MAX)  = null ,

	@LargePhotoFileName nvarchar (50)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductPhotoID]
	, [ThumbNailPhoto]
	, [ThumbnailPhotoFileName]
	, [LargePhoto]
	, [LargePhotoFileName]
	, [ModifiedDate]
    FROM
	[Production].[ProductPhoto]
    WHERE 
	 ([ProductPhotoID] = @ProductPhotoId OR @ProductPhotoId IS NULL)
	AND ([ThumbnailPhotoFileName] = @ThumbnailPhotoFileName OR @ThumbnailPhotoFileName IS NULL)
	AND ([LargePhotoFileName] = @LargePhotoFileName OR @LargePhotoFileName IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductPhotoID]
	, [ThumbNailPhoto]
	, [ThumbnailPhotoFileName]
	, [LargePhoto]
	, [LargePhotoFileName]
	, [ModifiedDate]
    FROM
	[Production].[ProductPhoto]
    WHERE 
	 ([ProductPhotoID] = @ProductPhotoId AND @ProductPhotoId is not null)
	OR ([ThumbnailPhotoFileName] = @ThumbnailPhotoFileName AND @ThumbnailPhotoFileName is not null)
	OR ([LargePhotoFileName] = @LargePhotoFileName AND @LargePhotoFileName is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_StoreContact_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_StoreContact_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_StoreContact_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the StoreContact table
-- Table Comment: Cross-reference table mapping stores and their employees.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_StoreContact_Get_List

AS


				
				SELECT
					[CustomerID],
					[ContactID],
					[ContactTypeID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[StoreContact]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_StoreContact_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_StoreContact_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_StoreContact_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the StoreContact table passing page index and page count parameters
-- Table Comment: Cross-reference table mapping stores and their employees.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_StoreContact_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CustomerID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CustomerID]'
				SET @SQL = @SQL + ', [ContactID]'
				SET @SQL = @SQL + ', [ContactTypeID]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[StoreContact]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CustomerID],'
				SET @SQL = @SQL + ' [ContactID],'
				SET @SQL = @SQL + ' [ContactTypeID],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[StoreContact]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_StoreContact_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_StoreContact_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_StoreContact_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the StoreContact table
-- Table Comment: Cross-reference table mapping stores and their employees.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_StoreContact_Insert
(

	@CustomerId int   ,

	@ContactId int   ,

	@ContactTypeId int   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Sales].[StoreContact]
					(
					[CustomerID]
					,[ContactID]
					,[ContactTypeID]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@CustomerId
					,@ContactId
					,@ContactTypeId
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_StoreContact_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_StoreContact_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_StoreContact_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the StoreContact table
-- Table Comment: Cross-reference table mapping stores and their employees.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_StoreContact_Update
(

	@CustomerId int   ,

	@OriginalCustomerId int   ,

	@ContactId int   ,

	@OriginalContactId int   ,

	@ContactTypeId int   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[StoreContact]
				SET
					[CustomerID] = @CustomerId
					,[ContactID] = @ContactId
					,[ContactTypeID] = @ContactTypeId
					,[ModifiedDate] = @ModifiedDate
				WHERE
[CustomerID] = @OriginalCustomerId 
AND [ContactID] = @OriginalContactId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_StoreContact_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_StoreContact_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_StoreContact_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the StoreContact table
-- Table Comment: Cross-reference table mapping stores and their employees.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_StoreContact_Delete
(

	@CustomerId int   ,

	@ContactId int   
)
AS


				DELETE FROM [Sales].[StoreContact] WITH (ROWLOCK) 
				WHERE
					[CustomerID] = @CustomerId
					AND [ContactID] = @ContactId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_StoreContact_GetByCustomerId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_StoreContact_GetByCustomerId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_StoreContact_GetByCustomerId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the StoreContact table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_StoreContact_GetByCustomerId
(

	@CustomerId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[CustomerID],
					[ContactID],
					[ContactTypeID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[StoreContact]
				WHERE
					[CustomerID] = @CustomerId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_StoreContact_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_StoreContact_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_StoreContact_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the StoreContact table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_StoreContact_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[CustomerID],
					[ContactID],
					[ContactTypeID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[StoreContact]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_StoreContact_GetByContactId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_StoreContact_GetByContactId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_StoreContact_GetByContactId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the StoreContact table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_StoreContact_GetByContactId
(

	@ContactId int   
)
AS


				SELECT
					[CustomerID],
					[ContactID],
					[ContactTypeID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[StoreContact]
				WHERE
					[ContactID] = @ContactId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_StoreContact_GetByContactTypeId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_StoreContact_GetByContactTypeId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_StoreContact_GetByContactTypeId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the StoreContact table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_StoreContact_GetByContactTypeId
(

	@ContactTypeId int   
)
AS


				SELECT
					[CustomerID],
					[ContactID],
					[ContactTypeID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[StoreContact]
				WHERE
					[ContactTypeID] = @ContactTypeId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_StoreContact_GetByCustomerIdContactId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_StoreContact_GetByCustomerIdContactId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_StoreContact_GetByCustomerIdContactId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the StoreContact table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_StoreContact_GetByCustomerIdContactId
(

	@CustomerId int   ,

	@ContactId int   
)
AS


				SELECT
					[CustomerID],
					[ContactID],
					[ContactTypeID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[StoreContact]
				WHERE
					[CustomerID] = @CustomerId
					AND [ContactID] = @ContactId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_StoreContact_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_StoreContact_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_StoreContact_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the StoreContact table passing nullable parameters
-- Table Comment: Cross-reference table mapping stores and their employees.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_StoreContact_Find
(

	@SearchUsingOR bit   = null ,

	@CustomerId int   = null ,

	@ContactId int   = null ,

	@ContactTypeId int   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CustomerID]
	, [ContactID]
	, [ContactTypeID]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[StoreContact]
    WHERE 
	 ([CustomerID] = @CustomerId OR @CustomerId IS NULL)
	AND ([ContactID] = @ContactId OR @ContactId IS NULL)
	AND ([ContactTypeID] = @ContactTypeId OR @ContactTypeId IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CustomerID]
	, [ContactID]
	, [ContactTypeID]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[StoreContact]
    WHERE 
	 ([CustomerID] = @CustomerId AND @CustomerId is not null)
	OR ([ContactID] = @ContactId AND @ContactId is not null)
	OR ([ContactTypeID] = @ContactTypeId AND @ContactTypeId is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelProductDescriptionCulture_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelProductDescriptionCulture_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ProductModelProductDescriptionCulture table
-- Table Comment: Cross-reference table mapping product descriptions and the language the description is written in.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_Get_List

AS


				
				SELECT
					[ProductModelID],
					[ProductDescriptionID],
					[CultureID],
					[ModifiedDate]
				FROM
					[Production].[ProductModelProductDescriptionCulture]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ProductModelProductDescriptionCulture table passing page index and page count parameters
-- Table Comment: Cross-reference table mapping product descriptions and the language the description is written in.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductModelID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductModelID]'
				SET @SQL = @SQL + ', [ProductDescriptionID]'
				SET @SQL = @SQL + ', [CultureID]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[ProductModelProductDescriptionCulture]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductModelID],'
				SET @SQL = @SQL + ' [ProductDescriptionID],'
				SET @SQL = @SQL + ' [CultureID],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[ProductModelProductDescriptionCulture]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelProductDescriptionCulture_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelProductDescriptionCulture_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ProductModelProductDescriptionCulture table
-- Table Comment: Cross-reference table mapping product descriptions and the language the description is written in.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_Insert
(

	@ProductModelId int   ,

	@ProductDescriptionId int   ,

	@CultureId nchar (6)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[ProductModelProductDescriptionCulture]
					(
					[ProductModelID]
					,[ProductDescriptionID]
					,[CultureID]
					,[ModifiedDate]
					)
				VALUES
					(
					@ProductModelId
					,@ProductDescriptionId
					,@CultureId
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelProductDescriptionCulture_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelProductDescriptionCulture_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ProductModelProductDescriptionCulture table
-- Table Comment: Cross-reference table mapping product descriptions and the language the description is written in.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_Update
(

	@ProductModelId int   ,

	@OriginalProductModelId int   ,

	@ProductDescriptionId int   ,

	@OriginalProductDescriptionId int   ,

	@CultureId nchar (6)  ,

	@OriginalCultureId nchar (6)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[ProductModelProductDescriptionCulture]
				SET
					[ProductModelID] = @ProductModelId
					,[ProductDescriptionID] = @ProductDescriptionId
					,[CultureID] = @CultureId
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ProductModelID] = @OriginalProductModelId 
AND [ProductDescriptionID] = @OriginalProductDescriptionId 
AND [CultureID] = @OriginalCultureId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelProductDescriptionCulture_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelProductDescriptionCulture_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ProductModelProductDescriptionCulture table
-- Table Comment: Cross-reference table mapping product descriptions and the language the description is written in.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_Delete
(

	@ProductModelId int   ,

	@ProductDescriptionId int   ,

	@CultureId nchar (6)  
)
AS


				DELETE FROM [Production].[ProductModelProductDescriptionCulture] WITH (ROWLOCK) 
				WHERE
					[ProductModelID] = @ProductModelId
					AND [ProductDescriptionID] = @ProductDescriptionId
					AND [CultureID] = @CultureId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByCultureId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByCultureId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByCultureId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductModelProductDescriptionCulture table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByCultureId
(

	@CultureId nchar (6)  
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductModelID],
					[ProductDescriptionID],
					[CultureID],
					[ModifiedDate]
				FROM
					[Production].[ProductModelProductDescriptionCulture]
				WHERE
					[CultureID] = @CultureId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByProductDescriptionId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByProductDescriptionId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByProductDescriptionId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductModelProductDescriptionCulture table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByProductDescriptionId
(

	@ProductDescriptionId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductModelID],
					[ProductDescriptionID],
					[CultureID],
					[ModifiedDate]
				FROM
					[Production].[ProductModelProductDescriptionCulture]
				WHERE
					[ProductDescriptionID] = @ProductDescriptionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByProductModelId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByProductModelId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByProductModelId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductModelProductDescriptionCulture table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByProductModelId
(

	@ProductModelId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductModelID],
					[ProductDescriptionID],
					[CultureID],
					[ModifiedDate]
				FROM
					[Production].[ProductModelProductDescriptionCulture]
				WHERE
					[ProductModelID] = @ProductModelId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByProductModelIdProductDescriptionIdCultureId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByProductModelIdProductDescriptionIdCultureId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByProductModelIdProductDescriptionIdCultureId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductModelProductDescriptionCulture table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_GetByProductModelIdProductDescriptionIdCultureId
(

	@ProductModelId int   ,

	@ProductDescriptionId int   ,

	@CultureId nchar (6)  
)
AS


				SELECT
					[ProductModelID],
					[ProductDescriptionID],
					[CultureID],
					[ModifiedDate]
				FROM
					[Production].[ProductModelProductDescriptionCulture]
				WHERE
					[ProductModelID] = @ProductModelId
					AND [ProductDescriptionID] = @ProductDescriptionId
					AND [CultureID] = @CultureId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelProductDescriptionCulture_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelProductDescriptionCulture_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ProductModelProductDescriptionCulture table passing nullable parameters
-- Table Comment: Cross-reference table mapping product descriptions and the language the description is written in.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelProductDescriptionCulture_Find
(

	@SearchUsingOR bit   = null ,

	@ProductModelId int   = null ,

	@ProductDescriptionId int   = null ,

	@CultureId nchar (6)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductModelID]
	, [ProductDescriptionID]
	, [CultureID]
	, [ModifiedDate]
    FROM
	[Production].[ProductModelProductDescriptionCulture]
    WHERE 
	 ([ProductModelID] = @ProductModelId OR @ProductModelId IS NULL)
	AND ([ProductDescriptionID] = @ProductDescriptionId OR @ProductDescriptionId IS NULL)
	AND ([CultureID] = @CultureId OR @CultureId IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductModelID]
	, [ProductDescriptionID]
	, [CultureID]
	, [ModifiedDate]
    FROM
	[Production].[ProductModelProductDescriptionCulture]
    WHERE 
	 ([ProductModelID] = @ProductModelId AND @ProductModelId is not null)
	OR ([ProductDescriptionID] = @ProductDescriptionId AND @ProductDescriptionId is not null)
	OR ([CultureID] = @CultureId AND @CultureId is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Currency_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Currency_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Currency_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the Currency table
-- Table Comment: Lookup table containing standard ISO currencies.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Currency_Get_List

AS


				
				SELECT
					[CurrencyCode],
					[Name],
					[ModifiedDate]
				FROM
					[Sales].[Currency]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Currency_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Currency_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Currency_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the Currency table passing page index and page count parameters
-- Table Comment: Lookup table containing standard ISO currencies.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Currency_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CurrencyCode]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CurrencyCode]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[Currency]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CurrencyCode],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[Currency]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Currency_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Currency_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Currency_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the Currency table
-- Table Comment: Lookup table containing standard ISO currencies.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Currency_Insert
(

	@CurrencyCode nchar (3)  ,

	@Name nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Sales].[Currency]
					(
					[CurrencyCode]
					,[Name]
					,[ModifiedDate]
					)
				VALUES
					(
					@CurrencyCode
					,@Name
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Currency_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Currency_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Currency_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the Currency table
-- Table Comment: Lookup table containing standard ISO currencies.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Currency_Update
(

	@CurrencyCode nchar (3)  ,

	@OriginalCurrencyCode nchar (3)  ,

	@Name nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[Currency]
				SET
					[CurrencyCode] = @CurrencyCode
					,[Name] = @Name
					,[ModifiedDate] = @ModifiedDate
				WHERE
[CurrencyCode] = @OriginalCurrencyCode 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Currency_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Currency_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Currency_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the Currency table
-- Table Comment: Lookup table containing standard ISO currencies.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Currency_Delete
(

	@CurrencyCode nchar (3)  
)
AS


				DELETE FROM [Sales].[Currency] WITH (ROWLOCK) 
				WHERE
					[CurrencyCode] = @CurrencyCode
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Currency_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Currency_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Currency_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Currency table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Currency_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[CurrencyCode],
					[Name],
					[ModifiedDate]
				FROM
					[Sales].[Currency]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Currency_GetByCurrencyCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Currency_GetByCurrencyCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Currency_GetByCurrencyCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Currency table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Currency_GetByCurrencyCode
(

	@CurrencyCode nchar (3)  
)
AS


				SELECT
					[CurrencyCode],
					[Name],
					[ModifiedDate]
				FROM
					[Sales].[Currency]
				WHERE
					[CurrencyCode] = @CurrencyCode
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Currency_GetByCountryRegionCodeFromCountryRegionCurrency procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Currency_GetByCountryRegionCodeFromCountryRegionCurrency') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Currency_GetByCountryRegionCodeFromCountryRegionCurrency
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Currency_GetByCountryRegionCodeFromCountryRegionCurrency
(

	@CountryRegionCode nvarchar (3)  
)
AS


SELECT Sales.[Currency].[CurrencyCode]
       ,Sales.[Currency].[Name]
       ,Sales.[Currency].[ModifiedDate]
  FROM Sales.[Currency]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[CountryRegionCurrency] 
                WHERE Sales.[CountryRegionCurrency].[CountryRegionCode] = @CountryRegionCode
                  AND Sales.[CountryRegionCurrency].[CurrencyCode] = Sales.[Currency].[CurrencyCode]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Currency_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Currency_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Currency_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the Currency table passing nullable parameters
-- Table Comment: Lookup table containing standard ISO currencies.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Currency_Find
(

	@SearchUsingOR bit   = null ,

	@CurrencyCode nchar (3)  = null ,

	@Name nvarchar (50)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CurrencyCode]
	, [Name]
	, [ModifiedDate]
    FROM
	[Sales].[Currency]
    WHERE 
	 ([CurrencyCode] = @CurrencyCode OR @CurrencyCode IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CurrencyCode]
	, [Name]
	, [ModifiedDate]
    FROM
	[Sales].[Currency]
    WHERE 
	 ([CurrencyCode] = @CurrencyCode AND @CurrencyCode is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Customer_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Customer_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Customer_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the Customer table
-- Table Comment: Current customer information. Also see the Individual and Store tables.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Customer_Get_List

AS


				
				SELECT
					[CustomerID],
					[TerritoryID],
					[AccountNumber],
					[CustomerType],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[Customer]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Customer_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Customer_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Customer_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the Customer table passing page index and page count parameters
-- Table Comment: Current customer information. Also see the Individual and Store tables.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Customer_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CustomerID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CustomerID]'
				SET @SQL = @SQL + ', [TerritoryID]'
				SET @SQL = @SQL + ', [AccountNumber]'
				SET @SQL = @SQL + ', [CustomerType]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[Customer]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CustomerID],'
				SET @SQL = @SQL + ' [TerritoryID],'
				SET @SQL = @SQL + ' [AccountNumber],'
				SET @SQL = @SQL + ' [CustomerType],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[Customer]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Customer_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Customer_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Customer_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the Customer table
-- Table Comment: Current customer information. Also see the Individual and Store tables.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Customer_Insert
(

	@CustomerId int    OUTPUT,

	@TerritoryId int   ,

	@AccountNumber varchar (10)   OUTPUT,

	@CustomerType nchar (1)  ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Sales].[Customer]
					(
					[TerritoryID]
					,[CustomerType]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@TerritoryId
					,@CustomerType
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @CustomerId = SCOPE_IDENTITY()
									
				-- Select computed columns into output parameters
				SELECT
 @AccountNumber = [AccountNumber]
				FROM
					[Sales].[Customer]
				WHERE
[CustomerID] = @CustomerId 
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Customer_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Customer_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Customer_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the Customer table
-- Table Comment: Current customer information. Also see the Individual and Store tables.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Customer_Update
(

	@CustomerId int   ,

	@TerritoryId int   ,

	@AccountNumber varchar (10)   OUTPUT,

	@CustomerType nchar (1)  ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[Customer]
				SET
					[TerritoryID] = @TerritoryId
					,[CustomerType] = @CustomerType
					,[ModifiedDate] = @ModifiedDate
				WHERE
[CustomerID] = @CustomerId 
				
				
				-- Select computed columns into output parameters
				SELECT
 @AccountNumber = [AccountNumber]
				FROM
					[Sales].[Customer]
				WHERE
[CustomerID] = @CustomerId 
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Customer_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Customer_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Customer_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the Customer table
-- Table Comment: Current customer information. Also see the Individual and Store tables.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Customer_Delete
(

	@CustomerId int   
)
AS


				DELETE FROM [Sales].[Customer] WITH (ROWLOCK) 
				WHERE
					[CustomerID] = @CustomerId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Customer_GetByAccountNumber procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Customer_GetByAccountNumber') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Customer_GetByAccountNumber
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Customer table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Customer_GetByAccountNumber
(

	@AccountNumber varchar (10)  
)
AS


				SELECT
					[CustomerID],
					[TerritoryID],
					[AccountNumber],
					[CustomerType],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[Customer]
				WHERE
					[AccountNumber] = @AccountNumber
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Customer_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Customer_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Customer_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Customer table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Customer_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[CustomerID],
					[TerritoryID],
					[AccountNumber],
					[CustomerType],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[Customer]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Customer_GetByTerritoryId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Customer_GetByTerritoryId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Customer_GetByTerritoryId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Customer table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Customer_GetByTerritoryId
(

	@TerritoryId int   
)
AS


				SELECT
					[CustomerID],
					[TerritoryID],
					[AccountNumber],
					[CustomerType],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[Customer]
				WHERE
					[TerritoryID] = @TerritoryId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Customer_GetByCustomerId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Customer_GetByCustomerId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Customer_GetByCustomerId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Customer table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Customer_GetByCustomerId
(

	@CustomerId int   
)
AS


				SELECT
					[CustomerID],
					[TerritoryID],
					[AccountNumber],
					[CustomerType],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[Customer]
				WHERE
					[CustomerID] = @CustomerId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Customer_GetByAddressIdFromCustomerAddress procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Customer_GetByAddressIdFromCustomerAddress') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Customer_GetByAddressIdFromCustomerAddress
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Customer_GetByAddressIdFromCustomerAddress
(

	@AddressId int   
)
AS


SELECT Sales.[Customer].[CustomerID]
       ,Sales.[Customer].[TerritoryID]
       ,Sales.[Customer].[AccountNumber]
       ,Sales.[Customer].[CustomerType]
       ,Sales.[Customer].[rowguid]
       ,Sales.[Customer].[ModifiedDate]
  FROM Sales.[Customer]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[CustomerAddress] 
                WHERE Sales.[CustomerAddress].[AddressID] = @AddressId
                  AND Sales.[CustomerAddress].[CustomerID] = Sales.[Customer].[CustomerID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Customer_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Customer_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Customer_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the Customer table passing nullable parameters
-- Table Comment: Current customer information. Also see the Individual and Store tables.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Customer_Find
(

	@SearchUsingOR bit   = null ,

	@CustomerId int   = null ,

	@TerritoryId int   = null ,

	@AccountNumber varchar (10)  = null ,

	@CustomerType nchar (1)  = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CustomerID]
	, [TerritoryID]
	, [AccountNumber]
	, [CustomerType]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[Customer]
    WHERE 
	 ([CustomerID] = @CustomerId OR @CustomerId IS NULL)
	AND ([TerritoryID] = @TerritoryId OR @TerritoryId IS NULL)
	AND ([AccountNumber] = @AccountNumber OR @AccountNumber IS NULL)
	AND ([CustomerType] = @CustomerType OR @CustomerType IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CustomerID]
	, [TerritoryID]
	, [AccountNumber]
	, [CustomerType]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[Customer]
    WHERE 
	 ([CustomerID] = @CustomerId AND @CustomerId is not null)
	OR ([TerritoryID] = @TerritoryId AND @TerritoryId is not null)
	OR ([AccountNumber] = @AccountNumber AND @AccountNumber is not null)
	OR ([CustomerType] = @CustomerType AND @CustomerType is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CurrencyRate_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CurrencyRate_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CurrencyRate_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the CurrencyRate table
-- Table Comment: Currency exchange rates.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CurrencyRate_Get_List

AS


				
				SELECT
					[CurrencyRateID],
					[CurrencyRateDate],
					[FromCurrencyCode],
					[ToCurrencyCode],
					[AverageRate],
					[EndOfDayRate],
					[ModifiedDate]
				FROM
					[Sales].[CurrencyRate]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CurrencyRate_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CurrencyRate_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CurrencyRate_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the CurrencyRate table passing page index and page count parameters
-- Table Comment: Currency exchange rates.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CurrencyRate_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CurrencyRateID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CurrencyRateID]'
				SET @SQL = @SQL + ', [CurrencyRateDate]'
				SET @SQL = @SQL + ', [FromCurrencyCode]'
				SET @SQL = @SQL + ', [ToCurrencyCode]'
				SET @SQL = @SQL + ', [AverageRate]'
				SET @SQL = @SQL + ', [EndOfDayRate]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[CurrencyRate]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CurrencyRateID],'
				SET @SQL = @SQL + ' [CurrencyRateDate],'
				SET @SQL = @SQL + ' [FromCurrencyCode],'
				SET @SQL = @SQL + ' [ToCurrencyCode],'
				SET @SQL = @SQL + ' [AverageRate],'
				SET @SQL = @SQL + ' [EndOfDayRate],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[CurrencyRate]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CurrencyRate_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CurrencyRate_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CurrencyRate_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the CurrencyRate table
-- Table Comment: Currency exchange rates.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CurrencyRate_Insert
(

	@CurrencyRateId int    OUTPUT,

	@CurrencyRateDate datetime   ,

	@FromCurrencyCode nchar (3)  ,

	@ToCurrencyCode nchar (3)  ,

	@AverageRate money   ,

	@EndOfDayRate money   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Sales].[CurrencyRate]
					(
					[CurrencyRateDate]
					,[FromCurrencyCode]
					,[ToCurrencyCode]
					,[AverageRate]
					,[EndOfDayRate]
					,[ModifiedDate]
					)
				VALUES
					(
					@CurrencyRateDate
					,@FromCurrencyCode
					,@ToCurrencyCode
					,@AverageRate
					,@EndOfDayRate
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @CurrencyRateId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CurrencyRate_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CurrencyRate_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CurrencyRate_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the CurrencyRate table
-- Table Comment: Currency exchange rates.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CurrencyRate_Update
(

	@CurrencyRateId int   ,

	@CurrencyRateDate datetime   ,

	@FromCurrencyCode nchar (3)  ,

	@ToCurrencyCode nchar (3)  ,

	@AverageRate money   ,

	@EndOfDayRate money   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[CurrencyRate]
				SET
					[CurrencyRateDate] = @CurrencyRateDate
					,[FromCurrencyCode] = @FromCurrencyCode
					,[ToCurrencyCode] = @ToCurrencyCode
					,[AverageRate] = @AverageRate
					,[EndOfDayRate] = @EndOfDayRate
					,[ModifiedDate] = @ModifiedDate
				WHERE
[CurrencyRateID] = @CurrencyRateId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CurrencyRate_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CurrencyRate_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CurrencyRate_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the CurrencyRate table
-- Table Comment: Currency exchange rates.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CurrencyRate_Delete
(

	@CurrencyRateId int   
)
AS


				DELETE FROM [Sales].[CurrencyRate] WITH (ROWLOCK) 
				WHERE
					[CurrencyRateID] = @CurrencyRateId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CurrencyRate_GetByFromCurrencyCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CurrencyRate_GetByFromCurrencyCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CurrencyRate_GetByFromCurrencyCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CurrencyRate table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CurrencyRate_GetByFromCurrencyCode
(

	@FromCurrencyCode nchar (3)  
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[CurrencyRateID],
					[CurrencyRateDate],
					[FromCurrencyCode],
					[ToCurrencyCode],
					[AverageRate],
					[EndOfDayRate],
					[ModifiedDate]
				FROM
					[Sales].[CurrencyRate]
				WHERE
					[FromCurrencyCode] = @FromCurrencyCode
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CurrencyRate_GetByToCurrencyCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CurrencyRate_GetByToCurrencyCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CurrencyRate_GetByToCurrencyCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CurrencyRate table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CurrencyRate_GetByToCurrencyCode
(

	@ToCurrencyCode nchar (3)  
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[CurrencyRateID],
					[CurrencyRateDate],
					[FromCurrencyCode],
					[ToCurrencyCode],
					[AverageRate],
					[EndOfDayRate],
					[ModifiedDate]
				FROM
					[Sales].[CurrencyRate]
				WHERE
					[ToCurrencyCode] = @ToCurrencyCode
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CurrencyRate_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CurrencyRate_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CurrencyRate_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CurrencyRate table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CurrencyRate_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCode
(

	@CurrencyRateDate datetime   ,

	@FromCurrencyCode nchar (3)  ,

	@ToCurrencyCode nchar (3)  
)
AS


				SELECT
					[CurrencyRateID],
					[CurrencyRateDate],
					[FromCurrencyCode],
					[ToCurrencyCode],
					[AverageRate],
					[EndOfDayRate],
					[ModifiedDate]
				FROM
					[Sales].[CurrencyRate]
				WHERE
					[CurrencyRateDate] = @CurrencyRateDate
					AND [FromCurrencyCode] = @FromCurrencyCode
					AND [ToCurrencyCode] = @ToCurrencyCode
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CurrencyRate_GetByCurrencyRateId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CurrencyRate_GetByCurrencyRateId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CurrencyRate_GetByCurrencyRateId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CurrencyRate table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CurrencyRate_GetByCurrencyRateId
(

	@CurrencyRateId int   
)
AS


				SELECT
					[CurrencyRateID],
					[CurrencyRateDate],
					[FromCurrencyCode],
					[ToCurrencyCode],
					[AverageRate],
					[EndOfDayRate],
					[ModifiedDate]
				FROM
					[Sales].[CurrencyRate]
				WHERE
					[CurrencyRateID] = @CurrencyRateId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CurrencyRate_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CurrencyRate_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CurrencyRate_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the CurrencyRate table passing nullable parameters
-- Table Comment: Currency exchange rates.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CurrencyRate_Find
(

	@SearchUsingOR bit   = null ,

	@CurrencyRateId int   = null ,

	@CurrencyRateDate datetime   = null ,

	@FromCurrencyCode nchar (3)  = null ,

	@ToCurrencyCode nchar (3)  = null ,

	@AverageRate money   = null ,

	@EndOfDayRate money   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CurrencyRateID]
	, [CurrencyRateDate]
	, [FromCurrencyCode]
	, [ToCurrencyCode]
	, [AverageRate]
	, [EndOfDayRate]
	, [ModifiedDate]
    FROM
	[Sales].[CurrencyRate]
    WHERE 
	 ([CurrencyRateID] = @CurrencyRateId OR @CurrencyRateId IS NULL)
	AND ([CurrencyRateDate] = @CurrencyRateDate OR @CurrencyRateDate IS NULL)
	AND ([FromCurrencyCode] = @FromCurrencyCode OR @FromCurrencyCode IS NULL)
	AND ([ToCurrencyCode] = @ToCurrencyCode OR @ToCurrencyCode IS NULL)
	AND ([AverageRate] = @AverageRate OR @AverageRate IS NULL)
	AND ([EndOfDayRate] = @EndOfDayRate OR @EndOfDayRate IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CurrencyRateID]
	, [CurrencyRateDate]
	, [FromCurrencyCode]
	, [ToCurrencyCode]
	, [AverageRate]
	, [EndOfDayRate]
	, [ModifiedDate]
    FROM
	[Sales].[CurrencyRate]
    WHERE 
	 ([CurrencyRateID] = @CurrencyRateId AND @CurrencyRateId is not null)
	OR ([CurrencyRateDate] = @CurrencyRateDate AND @CurrencyRateDate is not null)
	OR ([FromCurrencyCode] = @FromCurrencyCode AND @FromCurrencyCode is not null)
	OR ([ToCurrencyCode] = @ToCurrencyCode AND @ToCurrencyCode is not null)
	OR ([AverageRate] = @AverageRate AND @AverageRate is not null)
	OR ([EndOfDayRate] = @EndOfDayRate AND @EndOfDayRate is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Department_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Department_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Department_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the Department table
-- Table Comment: Lookup table containing the departments within the Adventure Works Cycles company.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Department_Get_List

AS


				
				SELECT
					[DepartmentID],
					[Name],
					[GroupName],
					[ModifiedDate]
				FROM
					[HumanResources].[Department]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Department_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Department_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Department_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the Department table passing page index and page count parameters
-- Table Comment: Lookup table containing the departments within the Adventure Works Cycles company.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Department_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[DepartmentID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [DepartmentID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [GroupName]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [HumanResources].[Department]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [DepartmentID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [GroupName],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [HumanResources].[Department]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Department_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Department_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Department_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the Department table
-- Table Comment: Lookup table containing the departments within the Adventure Works Cycles company.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Department_Insert
(

	@DepartmentId smallint    OUTPUT,

	@Name nvarchar (50)  ,

	@GroupName nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [HumanResources].[Department]
					(
					[Name]
					,[GroupName]
					,[ModifiedDate]
					)
				VALUES
					(
					@Name
					,@GroupName
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @DepartmentId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Department_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Department_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Department_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the Department table
-- Table Comment: Lookup table containing the departments within the Adventure Works Cycles company.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Department_Update
(

	@DepartmentId smallint   ,

	@Name nvarchar (50)  ,

	@GroupName nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[HumanResources].[Department]
				SET
					[Name] = @Name
					,[GroupName] = @GroupName
					,[ModifiedDate] = @ModifiedDate
				WHERE
[DepartmentID] = @DepartmentId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Department_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Department_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Department_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the Department table
-- Table Comment: Lookup table containing the departments within the Adventure Works Cycles company.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Department_Delete
(

	@DepartmentId smallint   
)
AS


				DELETE FROM [HumanResources].[Department] WITH (ROWLOCK) 
				WHERE
					[DepartmentID] = @DepartmentId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Department_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Department_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Department_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Department table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Department_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[DepartmentID],
					[Name],
					[GroupName],
					[ModifiedDate]
				FROM
					[HumanResources].[Department]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Department_GetByDepartmentId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Department_GetByDepartmentId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Department_GetByDepartmentId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Department table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Department_GetByDepartmentId
(

	@DepartmentId smallint   
)
AS


				SELECT
					[DepartmentID],
					[Name],
					[GroupName],
					[ModifiedDate]
				FROM
					[HumanResources].[Department]
				WHERE
					[DepartmentID] = @DepartmentId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Department_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Department_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Department_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the Department table passing nullable parameters
-- Table Comment: Lookup table containing the departments within the Adventure Works Cycles company.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Department_Find
(

	@SearchUsingOR bit   = null ,

	@DepartmentId smallint   = null ,

	@Name nvarchar (50)  = null ,

	@GroupName nvarchar (50)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DepartmentID]
	, [Name]
	, [GroupName]
	, [ModifiedDate]
    FROM
	[HumanResources].[Department]
    WHERE 
	 ([DepartmentID] = @DepartmentId OR @DepartmentId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([GroupName] = @GroupName OR @GroupName IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DepartmentID]
	, [Name]
	, [GroupName]
	, [ModifiedDate]
    FROM
	[HumanResources].[Department]
    WHERE 
	 ([DepartmentID] = @DepartmentId AND @DepartmentId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([GroupName] = @GroupName AND @GroupName is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CustomerAddress_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CustomerAddress_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CustomerAddress_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the CustomerAddress table
-- Table Comment: Cross-reference table mapping customers to their address(es).
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CustomerAddress_Get_List

AS


				
				SELECT
					[CustomerID],
					[AddressID],
					[AddressTypeID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[CustomerAddress]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CustomerAddress_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CustomerAddress_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CustomerAddress_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the CustomerAddress table passing page index and page count parameters
-- Table Comment: Cross-reference table mapping customers to their address(es).
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CustomerAddress_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CustomerID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CustomerID]'
				SET @SQL = @SQL + ', [AddressID]'
				SET @SQL = @SQL + ', [AddressTypeID]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[CustomerAddress]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CustomerID],'
				SET @SQL = @SQL + ' [AddressID],'
				SET @SQL = @SQL + ' [AddressTypeID],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[CustomerAddress]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CustomerAddress_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CustomerAddress_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CustomerAddress_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the CustomerAddress table
-- Table Comment: Cross-reference table mapping customers to their address(es).
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CustomerAddress_Insert
(

	@CustomerId int   ,

	@AddressId int   ,

	@AddressTypeId int   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Sales].[CustomerAddress]
					(
					[CustomerID]
					,[AddressID]
					,[AddressTypeID]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@CustomerId
					,@AddressId
					,@AddressTypeId
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CustomerAddress_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CustomerAddress_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CustomerAddress_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the CustomerAddress table
-- Table Comment: Cross-reference table mapping customers to their address(es).
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CustomerAddress_Update
(

	@CustomerId int   ,

	@OriginalCustomerId int   ,

	@AddressId int   ,

	@OriginalAddressId int   ,

	@AddressTypeId int   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[CustomerAddress]
				SET
					[CustomerID] = @CustomerId
					,[AddressID] = @AddressId
					,[AddressTypeID] = @AddressTypeId
					,[ModifiedDate] = @ModifiedDate
				WHERE
[CustomerID] = @OriginalCustomerId 
AND [AddressID] = @OriginalAddressId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CustomerAddress_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CustomerAddress_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CustomerAddress_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the CustomerAddress table
-- Table Comment: Cross-reference table mapping customers to their address(es).
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CustomerAddress_Delete
(

	@CustomerId int   ,

	@AddressId int   
)
AS


				DELETE FROM [Sales].[CustomerAddress] WITH (ROWLOCK) 
				WHERE
					[CustomerID] = @CustomerId
					AND [AddressID] = @AddressId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CustomerAddress_GetByAddressId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CustomerAddress_GetByAddressId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CustomerAddress_GetByAddressId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CustomerAddress table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CustomerAddress_GetByAddressId
(

	@AddressId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[CustomerID],
					[AddressID],
					[AddressTypeID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[CustomerAddress]
				WHERE
					[AddressID] = @AddressId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CustomerAddress_GetByAddressTypeId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CustomerAddress_GetByAddressTypeId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CustomerAddress_GetByAddressTypeId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CustomerAddress table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CustomerAddress_GetByAddressTypeId
(

	@AddressTypeId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[CustomerID],
					[AddressID],
					[AddressTypeID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[CustomerAddress]
				WHERE
					[AddressTypeID] = @AddressTypeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CustomerAddress_GetByCustomerId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CustomerAddress_GetByCustomerId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CustomerAddress_GetByCustomerId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CustomerAddress table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CustomerAddress_GetByCustomerId
(

	@CustomerId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[CustomerID],
					[AddressID],
					[AddressTypeID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[CustomerAddress]
				WHERE
					[CustomerID] = @CustomerId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CustomerAddress_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CustomerAddress_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CustomerAddress_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CustomerAddress table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CustomerAddress_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[CustomerID],
					[AddressID],
					[AddressTypeID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[CustomerAddress]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CustomerAddress_GetByCustomerIdAddressId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CustomerAddress_GetByCustomerIdAddressId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CustomerAddress_GetByCustomerIdAddressId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CustomerAddress table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CustomerAddress_GetByCustomerIdAddressId
(

	@CustomerId int   ,

	@AddressId int   
)
AS


				SELECT
					[CustomerID],
					[AddressID],
					[AddressTypeID],
					[rowguid],
					[ModifiedDate]
				FROM
					[Sales].[CustomerAddress]
				WHERE
					[CustomerID] = @CustomerId
					AND [AddressID] = @AddressId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CustomerAddress_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CustomerAddress_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CustomerAddress_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the CustomerAddress table passing nullable parameters
-- Table Comment: Cross-reference table mapping customers to their address(es).
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CustomerAddress_Find
(

	@SearchUsingOR bit   = null ,

	@CustomerId int   = null ,

	@AddressId int   = null ,

	@AddressTypeId int   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CustomerID]
	, [AddressID]
	, [AddressTypeID]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[CustomerAddress]
    WHERE 
	 ([CustomerID] = @CustomerId OR @CustomerId IS NULL)
	AND ([AddressID] = @AddressId OR @AddressId IS NULL)
	AND ([AddressTypeID] = @AddressTypeId OR @AddressTypeId IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CustomerID]
	, [AddressID]
	, [AddressTypeID]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Sales].[CustomerAddress]
    WHERE 
	 ([CustomerID] = @CustomerId AND @CustomerId is not null)
	OR ([AddressID] = @AddressId AND @AddressId is not null)
	OR ([AddressTypeID] = @AddressTypeId AND @AddressTypeId is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Culture_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Culture_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Culture_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the Culture table
-- Table Comment: Lookup table containing the languages in which some AdventureWorks data is stored.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Culture_Get_List

AS


				
				SELECT
					[CultureID],
					[Name],
					[ModifiedDate]
				FROM
					[Production].[Culture]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Culture_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Culture_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Culture_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the Culture table passing page index and page count parameters
-- Table Comment: Lookup table containing the languages in which some AdventureWorks data is stored.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Culture_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CultureID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CultureID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[Culture]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CultureID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[Culture]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Culture_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Culture_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Culture_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the Culture table
-- Table Comment: Lookup table containing the languages in which some AdventureWorks data is stored.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Culture_Insert
(

	@CultureId nchar (6)  ,

	@Name nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[Culture]
					(
					[CultureID]
					,[Name]
					,[ModifiedDate]
					)
				VALUES
					(
					@CultureId
					,@Name
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Culture_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Culture_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Culture_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the Culture table
-- Table Comment: Lookup table containing the languages in which some AdventureWorks data is stored.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Culture_Update
(

	@CultureId nchar (6)  ,

	@OriginalCultureId nchar (6)  ,

	@Name nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[Culture]
				SET
					[CultureID] = @CultureId
					,[Name] = @Name
					,[ModifiedDate] = @ModifiedDate
				WHERE
[CultureID] = @OriginalCultureId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Culture_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Culture_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Culture_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the Culture table
-- Table Comment: Lookup table containing the languages in which some AdventureWorks data is stored.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Culture_Delete
(

	@CultureId nchar (6)  
)
AS


				DELETE FROM [Production].[Culture] WITH (ROWLOCK) 
				WHERE
					[CultureID] = @CultureId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Culture_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Culture_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Culture_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Culture table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Culture_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[CultureID],
					[Name],
					[ModifiedDate]
				FROM
					[Production].[Culture]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Culture_GetByCultureId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Culture_GetByCultureId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Culture_GetByCultureId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Culture table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Culture_GetByCultureId
(

	@CultureId nchar (6)  
)
AS


				SELECT
					[CultureID],
					[Name],
					[ModifiedDate]
				FROM
					[Production].[Culture]
				WHERE
					[CultureID] = @CultureId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Culture_GetByProductDescriptionIdFromProductModelProductDescriptionCulture procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Culture_GetByProductDescriptionIdFromProductModelProductDescriptionCulture') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Culture_GetByProductDescriptionIdFromProductModelProductDescriptionCulture
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Culture_GetByProductDescriptionIdFromProductModelProductDescriptionCulture
(

	@ProductDescriptionId int   
)
AS


SELECT Production.[Culture].[CultureID]
       ,Production.[Culture].[Name]
       ,Production.[Culture].[ModifiedDate]
  FROM Production.[Culture]
 WHERE EXISTS (SELECT 1
                 FROM Production.[ProductModelProductDescriptionCulture] 
                WHERE Production.[ProductModelProductDescriptionCulture].[ProductDescriptionID] = @ProductDescriptionId
                  AND Production.[ProductModelProductDescriptionCulture].[CultureID] = Production.[Culture].[CultureID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Culture_GetByProductModelIdFromProductModelProductDescriptionCulture procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Culture_GetByProductModelIdFromProductModelProductDescriptionCulture') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Culture_GetByProductModelIdFromProductModelProductDescriptionCulture
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Culture_GetByProductModelIdFromProductModelProductDescriptionCulture
(

	@ProductModelId int   
)
AS


SELECT Production.[Culture].[CultureID]
       ,Production.[Culture].[Name]
       ,Production.[Culture].[ModifiedDate]
  FROM Production.[Culture]
 WHERE EXISTS (SELECT 1
                 FROM Production.[ProductModelProductDescriptionCulture] 
                WHERE Production.[ProductModelProductDescriptionCulture].[ProductModelID] = @ProductModelId
                  AND Production.[ProductModelProductDescriptionCulture].[CultureID] = Production.[Culture].[CultureID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Culture_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Culture_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Culture_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the Culture table passing nullable parameters
-- Table Comment: Lookup table containing the languages in which some AdventureWorks data is stored.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Culture_Find
(

	@SearchUsingOR bit   = null ,

	@CultureId nchar (6)  = null ,

	@Name nvarchar (50)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CultureID]
	, [Name]
	, [ModifiedDate]
    FROM
	[Production].[Culture]
    WHERE 
	 ([CultureID] = @CultureId OR @CultureId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CultureID]
	, [Name]
	, [ModifiedDate]
    FROM
	[Production].[Culture]
    WHERE 
	 ([CultureID] = @CultureId AND @CultureId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_DatabaseLog_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_DatabaseLog_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_DatabaseLog_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the DatabaseLog table
-- Table Comment: Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_DatabaseLog_Get_List

AS


				
				SELECT
					[DatabaseLogID],
					[PostTime],
					[DatabaseUser],
					[Event],
					[Schema],
					[Object],
					[TSQL],
					[XmlEvent]
				FROM
					[dbo].[DatabaseLog]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_DatabaseLog_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_DatabaseLog_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_DatabaseLog_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the DatabaseLog table passing page index and page count parameters
-- Table Comment: Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_DatabaseLog_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[DatabaseLogID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [DatabaseLogID]'
				SET @SQL = @SQL + ', [PostTime]'
				SET @SQL = @SQL + ', [DatabaseUser]'
				SET @SQL = @SQL + ', [Event]'
				SET @SQL = @SQL + ', [Schema]'
				SET @SQL = @SQL + ', [Object]'
				SET @SQL = @SQL + ', [TSQL]'
				SET @SQL = @SQL + ', [XmlEvent]'
				SET @SQL = @SQL + ' FROM [dbo].[DatabaseLog]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [DatabaseLogID],'
				SET @SQL = @SQL + ' [PostTime],'
				SET @SQL = @SQL + ' [DatabaseUser],'
				SET @SQL = @SQL + ' [Event],'
				SET @SQL = @SQL + ' [Schema],'
				SET @SQL = @SQL + ' [Object],'
				SET @SQL = @SQL + ' [TSQL],'
				SET @SQL = @SQL + ' [XmlEvent]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DatabaseLog]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_DatabaseLog_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_DatabaseLog_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_DatabaseLog_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the DatabaseLog table
-- Table Comment: Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_DatabaseLog_Insert
(

	@DatabaseLogId int    OUTPUT,

	@PostTime datetime   ,

	@DatabaseUser nvarchar (128)  ,

	@SafeNameEvent nvarchar (128)  ,

	@Schema nvarchar (128)  ,

	@SafeNameObject nvarchar (128)  ,

	@Tsql nvarchar (MAX)  ,

	@XmlEvent xml   
)
AS


				
				INSERT INTO [dbo].[DatabaseLog]
					(
					[PostTime]
					,[DatabaseUser]
					,[Event]
					,[Schema]
					,[Object]
					,[TSQL]
					,[XmlEvent]
					)
				VALUES
					(
					@PostTime
					,@DatabaseUser
					,@SafeNameEvent
					,@Schema
					,@SafeNameObject
					,@Tsql
					,@XmlEvent
					)
				
				-- Get the identity value
				SET @DatabaseLogId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_DatabaseLog_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_DatabaseLog_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_DatabaseLog_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the DatabaseLog table
-- Table Comment: Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_DatabaseLog_Update
(

	@DatabaseLogId int   ,

	@PostTime datetime   ,

	@DatabaseUser nvarchar (128)  ,

	@SafeNameEvent nvarchar (128)  ,

	@Schema nvarchar (128)  ,

	@SafeNameObject nvarchar (128)  ,

	@Tsql nvarchar (MAX)  ,

	@XmlEvent xml   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[DatabaseLog]
				SET
					[PostTime] = @PostTime
					,[DatabaseUser] = @DatabaseUser
					,[Event] = @SafeNameEvent
					,[Schema] = @Schema
					,[Object] = @SafeNameObject
					,[TSQL] = @Tsql
					,[XmlEvent] = @XmlEvent
				WHERE
[DatabaseLogID] = @DatabaseLogId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_DatabaseLog_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_DatabaseLog_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_DatabaseLog_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the DatabaseLog table
-- Table Comment: Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_DatabaseLog_Delete
(

	@DatabaseLogId int   
)
AS


				DELETE FROM [dbo].[DatabaseLog] WITH (ROWLOCK) 
				WHERE
					[DatabaseLogID] = @DatabaseLogId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_DatabaseLog_GetByDatabaseLogId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_DatabaseLog_GetByDatabaseLogId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_DatabaseLog_GetByDatabaseLogId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the DatabaseLog table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_DatabaseLog_GetByDatabaseLogId
(

	@DatabaseLogId int   
)
AS


				SELECT
					[DatabaseLogID],
					[PostTime],
					[DatabaseUser],
					[Event],
					[Schema],
					[Object],
					[TSQL],
					[XmlEvent]
				FROM
					[dbo].[DatabaseLog]
				WHERE
					[DatabaseLogID] = @DatabaseLogId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_DatabaseLog_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_DatabaseLog_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_DatabaseLog_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the DatabaseLog table passing nullable parameters
-- Table Comment: Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_DatabaseLog_Find
(

	@SearchUsingOR bit   = null ,

	@DatabaseLogId int   = null ,

	@PostTime datetime   = null ,

	@DatabaseUser nvarchar (128)  = null ,

	@SafeNameEvent nvarchar (128)  = null ,

	@Schema nvarchar (128)  = null ,

	@SafeNameObject nvarchar (128)  = null ,

	@Tsql nvarchar (MAX)  = null ,

	@XmlEvent xml   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DatabaseLogID]
	, [PostTime]
	, [DatabaseUser]
	, [Event]
	, [Schema]
	, [Object]
	, [TSQL]
	, [XmlEvent]
    FROM
	[dbo].[DatabaseLog]
    WHERE 
	 ([DatabaseLogID] = @DatabaseLogId OR @DatabaseLogId IS NULL)
	AND ([PostTime] = @PostTime OR @PostTime IS NULL)
	AND ([DatabaseUser] = @DatabaseUser OR @DatabaseUser IS NULL)
	AND ([Event] = @SafeNameEvent OR @SafeNameEvent IS NULL)
	AND ([Schema] = @Schema OR @Schema IS NULL)
	AND ([Object] = @SafeNameObject OR @SafeNameObject IS NULL)
	AND ([TSQL] = @Tsql OR @Tsql IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DatabaseLogID]
	, [PostTime]
	, [DatabaseUser]
	, [Event]
	, [Schema]
	, [Object]
	, [TSQL]
	, [XmlEvent]
    FROM
	[dbo].[DatabaseLog]
    WHERE 
	 ([DatabaseLogID] = @DatabaseLogId AND @DatabaseLogId is not null)
	OR ([PostTime] = @PostTime AND @PostTime is not null)
	OR ([DatabaseUser] = @DatabaseUser AND @DatabaseUser is not null)
	OR ([Event] = @SafeNameEvent AND @SafeNameEvent is not null)
	OR ([Schema] = @Schema AND @Schema is not null)
	OR ([Object] = @SafeNameObject AND @SafeNameObject is not null)
	OR ([TSQL] = @Tsql AND @Tsql is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CreditCard_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CreditCard_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CreditCard_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the CreditCard table
-- Table Comment: Customer credit card information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CreditCard_Get_List

AS


				
				SELECT
					[CreditCardID],
					[CardType],
					[CardNumber],
					[ExpMonth],
					[ExpYear],
					[ModifiedDate]
				FROM
					[Sales].[CreditCard]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CreditCard_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CreditCard_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CreditCard_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the CreditCard table passing page index and page count parameters
-- Table Comment: Customer credit card information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CreditCard_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CreditCardID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CreditCardID]'
				SET @SQL = @SQL + ', [CardType]'
				SET @SQL = @SQL + ', [CardNumber]'
				SET @SQL = @SQL + ', [ExpMonth]'
				SET @SQL = @SQL + ', [ExpYear]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[CreditCard]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CreditCardID],'
				SET @SQL = @SQL + ' [CardType],'
				SET @SQL = @SQL + ' [CardNumber],'
				SET @SQL = @SQL + ' [ExpMonth],'
				SET @SQL = @SQL + ' [ExpYear],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[CreditCard]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CreditCard_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CreditCard_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CreditCard_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the CreditCard table
-- Table Comment: Customer credit card information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CreditCard_Insert
(

	@CreditCardId int    OUTPUT,

	@CardType nvarchar (50)  ,

	@CardNumber nvarchar (25)  ,

	@ExpMonth tinyint   ,

	@ExpYear smallint   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Sales].[CreditCard]
					(
					[CardType]
					,[CardNumber]
					,[ExpMonth]
					,[ExpYear]
					,[ModifiedDate]
					)
				VALUES
					(
					@CardType
					,@CardNumber
					,@ExpMonth
					,@ExpYear
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @CreditCardId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CreditCard_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CreditCard_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CreditCard_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the CreditCard table
-- Table Comment: Customer credit card information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CreditCard_Update
(

	@CreditCardId int   ,

	@CardType nvarchar (50)  ,

	@CardNumber nvarchar (25)  ,

	@ExpMonth tinyint   ,

	@ExpYear smallint   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[CreditCard]
				SET
					[CardType] = @CardType
					,[CardNumber] = @CardNumber
					,[ExpMonth] = @ExpMonth
					,[ExpYear] = @ExpYear
					,[ModifiedDate] = @ModifiedDate
				WHERE
[CreditCardID] = @CreditCardId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CreditCard_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CreditCard_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CreditCard_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the CreditCard table
-- Table Comment: Customer credit card information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CreditCard_Delete
(

	@CreditCardId int   
)
AS


				DELETE FROM [Sales].[CreditCard] WITH (ROWLOCK) 
				WHERE
					[CreditCardID] = @CreditCardId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CreditCard_GetByCardNumber procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CreditCard_GetByCardNumber') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CreditCard_GetByCardNumber
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CreditCard table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CreditCard_GetByCardNumber
(

	@CardNumber nvarchar (25)  
)
AS


				SELECT
					[CreditCardID],
					[CardType],
					[CardNumber],
					[ExpMonth],
					[ExpYear],
					[ModifiedDate]
				FROM
					[Sales].[CreditCard]
				WHERE
					[CardNumber] = @CardNumber
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CreditCard_GetByCreditCardId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CreditCard_GetByCreditCardId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CreditCard_GetByCreditCardId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CreditCard table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CreditCard_GetByCreditCardId
(

	@CreditCardId int   
)
AS


				SELECT
					[CreditCardID],
					[CardType],
					[CardNumber],
					[ExpMonth],
					[ExpYear],
					[ModifiedDate]
				FROM
					[Sales].[CreditCard]
				WHERE
					[CreditCardID] = @CreditCardId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CreditCard_GetByContactIdFromContactCreditCard procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CreditCard_GetByContactIdFromContactCreditCard') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CreditCard_GetByContactIdFromContactCreditCard
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CreditCard_GetByContactIdFromContactCreditCard
(

	@ContactId int   
)
AS


SELECT Sales.[CreditCard].[CreditCardID]
       ,Sales.[CreditCard].[CardType]
       ,Sales.[CreditCard].[CardNumber]
       ,Sales.[CreditCard].[ExpMonth]
       ,Sales.[CreditCard].[ExpYear]
       ,Sales.[CreditCard].[ModifiedDate]
  FROM Sales.[CreditCard]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[ContactCreditCard] 
                WHERE Sales.[ContactCreditCard].[ContactID] = @ContactId
                  AND Sales.[ContactCreditCard].[CreditCardID] = Sales.[CreditCard].[CreditCardID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CreditCard_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CreditCard_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CreditCard_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the CreditCard table passing nullable parameters
-- Table Comment: Customer credit card information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CreditCard_Find
(

	@SearchUsingOR bit   = null ,

	@CreditCardId int   = null ,

	@CardType nvarchar (50)  = null ,

	@CardNumber nvarchar (25)  = null ,

	@ExpMonth tinyint   = null ,

	@ExpYear smallint   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CreditCardID]
	, [CardType]
	, [CardNumber]
	, [ExpMonth]
	, [ExpYear]
	, [ModifiedDate]
    FROM
	[Sales].[CreditCard]
    WHERE 
	 ([CreditCardID] = @CreditCardId OR @CreditCardId IS NULL)
	AND ([CardType] = @CardType OR @CardType IS NULL)
	AND ([CardNumber] = @CardNumber OR @CardNumber IS NULL)
	AND ([ExpMonth] = @ExpMonth OR @ExpMonth IS NULL)
	AND ([ExpYear] = @ExpYear OR @ExpYear IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CreditCardID]
	, [CardType]
	, [CardNumber]
	, [ExpMonth]
	, [ExpYear]
	, [ModifiedDate]
    FROM
	[Sales].[CreditCard]
    WHERE 
	 ([CreditCardID] = @CreditCardId AND @CreditCardId is not null)
	OR ([CardType] = @CardType AND @CardType is not null)
	OR ([CardNumber] = @CardNumber AND @CardNumber is not null)
	OR ([ExpMonth] = @ExpMonth AND @ExpMonth is not null)
	OR ([ExpYear] = @ExpYear AND @ExpYear is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_BillOfMaterials_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_BillOfMaterials_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_BillOfMaterials_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the BillOfMaterials table
-- Table Comment: Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_BillOfMaterials_Get_List

AS


				
				SELECT
					[BillOfMaterialsID],
					[ProductAssemblyID],
					[ComponentID],
					[StartDate],
					[EndDate],
					[UnitMeasureCode],
					[BOMLevel],
					[PerAssemblyQty],
					[ModifiedDate]
				FROM
					[Production].[BillOfMaterials]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_BillOfMaterials_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_BillOfMaterials_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_BillOfMaterials_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the BillOfMaterials table passing page index and page count parameters
-- Table Comment: Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_BillOfMaterials_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[BillOfMaterialsID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [BillOfMaterialsID]'
				SET @SQL = @SQL + ', [ProductAssemblyID]'
				SET @SQL = @SQL + ', [ComponentID]'
				SET @SQL = @SQL + ', [StartDate]'
				SET @SQL = @SQL + ', [EndDate]'
				SET @SQL = @SQL + ', [UnitMeasureCode]'
				SET @SQL = @SQL + ', [BOMLevel]'
				SET @SQL = @SQL + ', [PerAssemblyQty]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[BillOfMaterials]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [BillOfMaterialsID],'
				SET @SQL = @SQL + ' [ProductAssemblyID],'
				SET @SQL = @SQL + ' [ComponentID],'
				SET @SQL = @SQL + ' [StartDate],'
				SET @SQL = @SQL + ' [EndDate],'
				SET @SQL = @SQL + ' [UnitMeasureCode],'
				SET @SQL = @SQL + ' [BOMLevel],'
				SET @SQL = @SQL + ' [PerAssemblyQty],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[BillOfMaterials]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_BillOfMaterials_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_BillOfMaterials_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_BillOfMaterials_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the BillOfMaterials table
-- Table Comment: Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_BillOfMaterials_Insert
(

	@BillOfMaterialsId int    OUTPUT,

	@ProductAssemblyId int   ,

	@ComponentId int   ,

	@StartDate datetime   ,

	@EndDate datetime   ,

	@UnitMeasureCode nchar (3)  ,

	@BomLevel smallint   ,

	@PerAssemblyQty decimal (8, 2)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[BillOfMaterials]
					(
					[ProductAssemblyID]
					,[ComponentID]
					,[StartDate]
					,[EndDate]
					,[UnitMeasureCode]
					,[BOMLevel]
					,[PerAssemblyQty]
					,[ModifiedDate]
					)
				VALUES
					(
					@ProductAssemblyId
					,@ComponentId
					,@StartDate
					,@EndDate
					,@UnitMeasureCode
					,@BomLevel
					,@PerAssemblyQty
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @BillOfMaterialsId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_BillOfMaterials_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_BillOfMaterials_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_BillOfMaterials_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the BillOfMaterials table
-- Table Comment: Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_BillOfMaterials_Update
(

	@BillOfMaterialsId int   ,

	@ProductAssemblyId int   ,

	@ComponentId int   ,

	@StartDate datetime   ,

	@EndDate datetime   ,

	@UnitMeasureCode nchar (3)  ,

	@BomLevel smallint   ,

	@PerAssemblyQty decimal (8, 2)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[BillOfMaterials]
				SET
					[ProductAssemblyID] = @ProductAssemblyId
					,[ComponentID] = @ComponentId
					,[StartDate] = @StartDate
					,[EndDate] = @EndDate
					,[UnitMeasureCode] = @UnitMeasureCode
					,[BOMLevel] = @BomLevel
					,[PerAssemblyQty] = @PerAssemblyQty
					,[ModifiedDate] = @ModifiedDate
				WHERE
[BillOfMaterialsID] = @BillOfMaterialsId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_BillOfMaterials_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_BillOfMaterials_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_BillOfMaterials_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the BillOfMaterials table
-- Table Comment: Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_BillOfMaterials_Delete
(

	@BillOfMaterialsId int   
)
AS


				DELETE FROM [Production].[BillOfMaterials] WITH (ROWLOCK) 
				WHERE
					[BillOfMaterialsID] = @BillOfMaterialsId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_BillOfMaterials_GetByComponentId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_BillOfMaterials_GetByComponentId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_BillOfMaterials_GetByComponentId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the BillOfMaterials table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_BillOfMaterials_GetByComponentId
(

	@ComponentId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[BillOfMaterialsID],
					[ProductAssemblyID],
					[ComponentID],
					[StartDate],
					[EndDate],
					[UnitMeasureCode],
					[BOMLevel],
					[PerAssemblyQty],
					[ModifiedDate]
				FROM
					[Production].[BillOfMaterials]
				WHERE
					[ComponentID] = @ComponentId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_BillOfMaterials_GetByProductAssemblyId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_BillOfMaterials_GetByProductAssemblyId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_BillOfMaterials_GetByProductAssemblyId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the BillOfMaterials table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_BillOfMaterials_GetByProductAssemblyId
(

	@ProductAssemblyId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[BillOfMaterialsID],
					[ProductAssemblyID],
					[ComponentID],
					[StartDate],
					[EndDate],
					[UnitMeasureCode],
					[BOMLevel],
					[PerAssemblyQty],
					[ModifiedDate]
				FROM
					[Production].[BillOfMaterials]
				WHERE
					[ProductAssemblyID] = @ProductAssemblyId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_BillOfMaterials_GetByProductAssemblyIdComponentIdStartDate procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_BillOfMaterials_GetByProductAssemblyIdComponentIdStartDate') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_BillOfMaterials_GetByProductAssemblyIdComponentIdStartDate
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the BillOfMaterials table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_BillOfMaterials_GetByProductAssemblyIdComponentIdStartDate
(

	@ProductAssemblyId int   ,

	@ComponentId int   ,

	@StartDate datetime   
)
AS


				SELECT
					[BillOfMaterialsID],
					[ProductAssemblyID],
					[ComponentID],
					[StartDate],
					[EndDate],
					[UnitMeasureCode],
					[BOMLevel],
					[PerAssemblyQty],
					[ModifiedDate]
				FROM
					[Production].[BillOfMaterials]
				WHERE
					[ProductAssemblyID] = @ProductAssemblyId
					AND [ComponentID] = @ComponentId
					AND [StartDate] = @StartDate
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_BillOfMaterials_GetByUnitMeasureCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_BillOfMaterials_GetByUnitMeasureCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_BillOfMaterials_GetByUnitMeasureCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the BillOfMaterials table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_BillOfMaterials_GetByUnitMeasureCode
(

	@UnitMeasureCode nchar (3)  
)
AS


				SELECT
					[BillOfMaterialsID],
					[ProductAssemblyID],
					[ComponentID],
					[StartDate],
					[EndDate],
					[UnitMeasureCode],
					[BOMLevel],
					[PerAssemblyQty],
					[ModifiedDate]
				FROM
					[Production].[BillOfMaterials]
				WHERE
					[UnitMeasureCode] = @UnitMeasureCode
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_BillOfMaterials_GetByBillOfMaterialsId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_BillOfMaterials_GetByBillOfMaterialsId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_BillOfMaterials_GetByBillOfMaterialsId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the BillOfMaterials table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_BillOfMaterials_GetByBillOfMaterialsId
(

	@BillOfMaterialsId int   
)
AS


				SELECT
					[BillOfMaterialsID],
					[ProductAssemblyID],
					[ComponentID],
					[StartDate],
					[EndDate],
					[UnitMeasureCode],
					[BOMLevel],
					[PerAssemblyQty],
					[ModifiedDate]
				FROM
					[Production].[BillOfMaterials]
				WHERE
					[BillOfMaterialsID] = @BillOfMaterialsId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_BillOfMaterials_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_BillOfMaterials_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_BillOfMaterials_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the BillOfMaterials table passing nullable parameters
-- Table Comment: Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_BillOfMaterials_Find
(

	@SearchUsingOR bit   = null ,

	@BillOfMaterialsId int   = null ,

	@ProductAssemblyId int   = null ,

	@ComponentId int   = null ,

	@StartDate datetime   = null ,

	@EndDate datetime   = null ,

	@UnitMeasureCode nchar (3)  = null ,

	@BomLevel smallint   = null ,

	@PerAssemblyQty decimal (8, 2)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [BillOfMaterialsID]
	, [ProductAssemblyID]
	, [ComponentID]
	, [StartDate]
	, [EndDate]
	, [UnitMeasureCode]
	, [BOMLevel]
	, [PerAssemblyQty]
	, [ModifiedDate]
    FROM
	[Production].[BillOfMaterials]
    WHERE 
	 ([BillOfMaterialsID] = @BillOfMaterialsId OR @BillOfMaterialsId IS NULL)
	AND ([ProductAssemblyID] = @ProductAssemblyId OR @ProductAssemblyId IS NULL)
	AND ([ComponentID] = @ComponentId OR @ComponentId IS NULL)
	AND ([StartDate] = @StartDate OR @StartDate IS NULL)
	AND ([EndDate] = @EndDate OR @EndDate IS NULL)
	AND ([UnitMeasureCode] = @UnitMeasureCode OR @UnitMeasureCode IS NULL)
	AND ([BOMLevel] = @BomLevel OR @BomLevel IS NULL)
	AND ([PerAssemblyQty] = @PerAssemblyQty OR @PerAssemblyQty IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [BillOfMaterialsID]
	, [ProductAssemblyID]
	, [ComponentID]
	, [StartDate]
	, [EndDate]
	, [UnitMeasureCode]
	, [BOMLevel]
	, [PerAssemblyQty]
	, [ModifiedDate]
    FROM
	[Production].[BillOfMaterials]
    WHERE 
	 ([BillOfMaterialsID] = @BillOfMaterialsId AND @BillOfMaterialsId is not null)
	OR ([ProductAssemblyID] = @ProductAssemblyId AND @ProductAssemblyId is not null)
	OR ([ComponentID] = @ComponentId AND @ComponentId is not null)
	OR ([StartDate] = @StartDate AND @StartDate is not null)
	OR ([EndDate] = @EndDate AND @EndDate is not null)
	OR ([UnitMeasureCode] = @UnitMeasureCode AND @UnitMeasureCode is not null)
	OR ([BOMLevel] = @BomLevel AND @BomLevel is not null)
	OR ([PerAssemblyQty] = @PerAssemblyQty AND @PerAssemblyQty is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CountryRegionCurrency_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CountryRegionCurrency_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the CountryRegionCurrency table
-- Table Comment: Cross-reference table mapping ISO currency codes to a country or region.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_Get_List

AS


				
				SELECT
					[CountryRegionCode],
					[CurrencyCode],
					[ModifiedDate]
				FROM
					[Sales].[CountryRegionCurrency]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CountryRegionCurrency_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CountryRegionCurrency_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the CountryRegionCurrency table passing page index and page count parameters
-- Table Comment: Cross-reference table mapping ISO currency codes to a country or region.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CountryRegionCode]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CountryRegionCode]'
				SET @SQL = @SQL + ', [CurrencyCode]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[CountryRegionCurrency]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CountryRegionCode],'
				SET @SQL = @SQL + ' [CurrencyCode],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[CountryRegionCurrency]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CountryRegionCurrency_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CountryRegionCurrency_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the CountryRegionCurrency table
-- Table Comment: Cross-reference table mapping ISO currency codes to a country or region.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_Insert
(

	@CountryRegionCode nvarchar (3)  ,

	@CurrencyCode nchar (3)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Sales].[CountryRegionCurrency]
					(
					[CountryRegionCode]
					,[CurrencyCode]
					,[ModifiedDate]
					)
				VALUES
					(
					@CountryRegionCode
					,@CurrencyCode
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CountryRegionCurrency_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CountryRegionCurrency_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the CountryRegionCurrency table
-- Table Comment: Cross-reference table mapping ISO currency codes to a country or region.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_Update
(

	@CountryRegionCode nvarchar (3)  ,

	@OriginalCountryRegionCode nvarchar (3)  ,

	@CurrencyCode nchar (3)  ,

	@OriginalCurrencyCode nchar (3)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[CountryRegionCurrency]
				SET
					[CountryRegionCode] = @CountryRegionCode
					,[CurrencyCode] = @CurrencyCode
					,[ModifiedDate] = @ModifiedDate
				WHERE
[CountryRegionCode] = @OriginalCountryRegionCode 
AND [CurrencyCode] = @OriginalCurrencyCode 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CountryRegionCurrency_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CountryRegionCurrency_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the CountryRegionCurrency table
-- Table Comment: Cross-reference table mapping ISO currency codes to a country or region.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_Delete
(

	@CountryRegionCode nvarchar (3)  ,

	@CurrencyCode nchar (3)  
)
AS


				DELETE FROM [Sales].[CountryRegionCurrency] WITH (ROWLOCK) 
				WHERE
					[CountryRegionCode] = @CountryRegionCode
					AND [CurrencyCode] = @CurrencyCode
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CountryRegionCurrency_GetByCountryRegionCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CountryRegionCurrency_GetByCountryRegionCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_GetByCountryRegionCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CountryRegionCurrency table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_GetByCountryRegionCode
(

	@CountryRegionCode nvarchar (3)  
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[CountryRegionCode],
					[CurrencyCode],
					[ModifiedDate]
				FROM
					[Sales].[CountryRegionCurrency]
				WHERE
					[CountryRegionCode] = @CountryRegionCode
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CountryRegionCurrency_GetByCurrencyCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CountryRegionCurrency_GetByCurrencyCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_GetByCurrencyCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CountryRegionCurrency table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_GetByCurrencyCode
(

	@CurrencyCode nchar (3)  
)
AS


				SELECT
					[CountryRegionCode],
					[CurrencyCode],
					[ModifiedDate]
				FROM
					[Sales].[CountryRegionCurrency]
				WHERE
					[CurrencyCode] = @CurrencyCode
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CountryRegionCurrency_GetByCountryRegionCodeCurrencyCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CountryRegionCurrency_GetByCountryRegionCodeCurrencyCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_GetByCountryRegionCodeCurrencyCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CountryRegionCurrency table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_GetByCountryRegionCodeCurrencyCode
(

	@CountryRegionCode nvarchar (3)  ,

	@CurrencyCode nchar (3)  
)
AS


				SELECT
					[CountryRegionCode],
					[CurrencyCode],
					[ModifiedDate]
				FROM
					[Sales].[CountryRegionCurrency]
				WHERE
					[CountryRegionCode] = @CountryRegionCode
					AND [CurrencyCode] = @CurrencyCode
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_CountryRegionCurrency_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_CountryRegionCurrency_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the CountryRegionCurrency table passing nullable parameters
-- Table Comment: Cross-reference table mapping ISO currency codes to a country or region.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_CountryRegionCurrency_Find
(

	@SearchUsingOR bit   = null ,

	@CountryRegionCode nvarchar (3)  = null ,

	@CurrencyCode nchar (3)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CountryRegionCode]
	, [CurrencyCode]
	, [ModifiedDate]
    FROM
	[Sales].[CountryRegionCurrency]
    WHERE 
	 ([CountryRegionCode] = @CountryRegionCode OR @CountryRegionCode IS NULL)
	AND ([CurrencyCode] = @CurrencyCode OR @CurrencyCode IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CountryRegionCode]
	, [CurrencyCode]
	, [ModifiedDate]
    FROM
	[Sales].[CountryRegionCurrency]
    WHERE 
	 ([CountryRegionCode] = @CountryRegionCode AND @CountryRegionCode is not null)
	OR ([CurrencyCode] = @CurrencyCode AND @CurrencyCode is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Contact_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Contact_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Contact_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the Contact table
-- Table Comment: Names of each employee, customer contact, and vendor contact.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Contact_Get_List

AS


				
				SELECT
					[ContactID],
					[NameStyle],
					[Title],
					[FirstName],
					[MiddleName],
					[LastName],
					[Suffix],
					[EmailAddress],
					[EmailPromotion],
					[Phone],
					[PasswordHash],
					[PasswordSalt],
					[AdditionalContactInfo],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[Contact]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Contact_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Contact_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Contact_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the Contact table passing page index and page count parameters
-- Table Comment: Names of each employee, customer contact, and vendor contact.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Contact_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ContactID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ContactID]'
				SET @SQL = @SQL + ', [NameStyle]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [FirstName]'
				SET @SQL = @SQL + ', [MiddleName]'
				SET @SQL = @SQL + ', [LastName]'
				SET @SQL = @SQL + ', [Suffix]'
				SET @SQL = @SQL + ', [EmailAddress]'
				SET @SQL = @SQL + ', [EmailPromotion]'
				SET @SQL = @SQL + ', [Phone]'
				SET @SQL = @SQL + ', [PasswordHash]'
				SET @SQL = @SQL + ', [PasswordSalt]'
				SET @SQL = @SQL + ', [AdditionalContactInfo]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Person].[Contact]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ContactID],'
				SET @SQL = @SQL + ' [NameStyle],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [FirstName],'
				SET @SQL = @SQL + ' [MiddleName],'
				SET @SQL = @SQL + ' [LastName],'
				SET @SQL = @SQL + ' [Suffix],'
				SET @SQL = @SQL + ' [EmailAddress],'
				SET @SQL = @SQL + ' [EmailPromotion],'
				SET @SQL = @SQL + ' [Phone],'
				SET @SQL = @SQL + ' [PasswordHash],'
				SET @SQL = @SQL + ' [PasswordSalt],'
				SET @SQL = @SQL + ' [AdditionalContactInfo],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Person].[Contact]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Contact_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Contact_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Contact_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the Contact table
-- Table Comment: Names of each employee, customer contact, and vendor contact.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Contact_Insert
(

	@ContactId int    OUTPUT,

	@NameStyle bit   ,

	@Title nvarchar (8)  ,

	@FirstName nvarchar (50)  ,

	@MiddleName nvarchar (50)  ,

	@LastName nvarchar (50)  ,

	@Suffix nvarchar (10)  ,

	@EmailAddress nvarchar (50)  ,

	@EmailPromotion int   ,

	@Phone nvarchar (25)  ,

	@PasswordHash varchar (128)  ,

	@PasswordSalt varchar (10)  ,

	@AdditionalContactInfo xml   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Person].[Contact]
					(
					[NameStyle]
					,[Title]
					,[FirstName]
					,[MiddleName]
					,[LastName]
					,[Suffix]
					,[EmailAddress]
					,[EmailPromotion]
					,[Phone]
					,[PasswordHash]
					,[PasswordSalt]
					,[AdditionalContactInfo]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@NameStyle
					,@Title
					,@FirstName
					,@MiddleName
					,@LastName
					,@Suffix
					,@EmailAddress
					,@EmailPromotion
					,@Phone
					,@PasswordHash
					,@PasswordSalt
					,@AdditionalContactInfo
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @ContactId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Contact_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Contact_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Contact_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the Contact table
-- Table Comment: Names of each employee, customer contact, and vendor contact.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Contact_Update
(

	@ContactId int   ,

	@NameStyle bit   ,

	@Title nvarchar (8)  ,

	@FirstName nvarchar (50)  ,

	@MiddleName nvarchar (50)  ,

	@LastName nvarchar (50)  ,

	@Suffix nvarchar (10)  ,

	@EmailAddress nvarchar (50)  ,

	@EmailPromotion int   ,

	@Phone nvarchar (25)  ,

	@PasswordHash varchar (128)  ,

	@PasswordSalt varchar (10)  ,

	@AdditionalContactInfo xml   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Person].[Contact]
				SET
					[NameStyle] = @NameStyle
					,[Title] = @Title
					,[FirstName] = @FirstName
					,[MiddleName] = @MiddleName
					,[LastName] = @LastName
					,[Suffix] = @Suffix
					,[EmailAddress] = @EmailAddress
					,[EmailPromotion] = @EmailPromotion
					,[Phone] = @Phone
					,[PasswordHash] = @PasswordHash
					,[PasswordSalt] = @PasswordSalt
					,[AdditionalContactInfo] = @AdditionalContactInfo
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ContactID] = @ContactId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Contact_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Contact_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Contact_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the Contact table
-- Table Comment: Names of each employee, customer contact, and vendor contact.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Contact_Delete
(

	@ContactId int   
)
AS


				DELETE FROM [Person].[Contact] WITH (ROWLOCK) 
				WHERE
					[ContactID] = @ContactId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Contact_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Contact_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Contact_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Contact table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Contact_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[ContactID],
					[NameStyle],
					[Title],
					[FirstName],
					[MiddleName],
					[LastName],
					[Suffix],
					[EmailAddress],
					[EmailPromotion],
					[Phone],
					[PasswordHash],
					[PasswordSalt],
					[AdditionalContactInfo],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[Contact]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Contact_GetByEmailAddress procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Contact_GetByEmailAddress') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Contact_GetByEmailAddress
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Contact table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Contact_GetByEmailAddress
(

	@EmailAddress nvarchar (50)  
)
AS


				SELECT
					[ContactID],
					[NameStyle],
					[Title],
					[FirstName],
					[MiddleName],
					[LastName],
					[Suffix],
					[EmailAddress],
					[EmailPromotion],
					[Phone],
					[PasswordHash],
					[PasswordSalt],
					[AdditionalContactInfo],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[Contact]
				WHERE
					[EmailAddress] = @EmailAddress
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Contact_GetByContactId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Contact_GetByContactId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Contact_GetByContactId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Contact table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Contact_GetByContactId
(

	@ContactId int   
)
AS


				SELECT
					[ContactID],
					[NameStyle],
					[Title],
					[FirstName],
					[MiddleName],
					[LastName],
					[Suffix],
					[EmailAddress],
					[EmailPromotion],
					[Phone],
					[PasswordHash],
					[PasswordSalt],
					[AdditionalContactInfo],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[Contact]
				WHERE
					[ContactID] = @ContactId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Contact_GetByAdditionalContactInfo procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Contact_GetByAdditionalContactInfo') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Contact_GetByAdditionalContactInfo
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Contact table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Contact_GetByAdditionalContactInfo
(

	@AdditionalContactInfo xml   
)
AS


				SELECT
					[ContactID],
					[NameStyle],
					[Title],
					[FirstName],
					[MiddleName],
					[LastName],
					[Suffix],
					[EmailAddress],
					[EmailPromotion],
					[Phone],
					[PasswordHash],
					[PasswordSalt],
					[AdditionalContactInfo],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[Contact]
				WHERE
					[AdditionalContactInfo] = @AdditionalContactInfo
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Contact_GetByCreditCardIdFromContactCreditCard procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Contact_GetByCreditCardIdFromContactCreditCard') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Contact_GetByCreditCardIdFromContactCreditCard
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Contact_GetByCreditCardIdFromContactCreditCard
(

	@CreditCardId int   
)
AS


SELECT Person.[Contact].[ContactID]
       ,Person.[Contact].[NameStyle]
       ,Person.[Contact].[Title]
       ,Person.[Contact].[FirstName]
       ,Person.[Contact].[MiddleName]
       ,Person.[Contact].[LastName]
       ,Person.[Contact].[Suffix]
       ,Person.[Contact].[EmailAddress]
       ,Person.[Contact].[EmailPromotion]
       ,Person.[Contact].[Phone]
       ,Person.[Contact].[PasswordHash]
       ,Person.[Contact].[PasswordSalt]
       ,Person.[Contact].[AdditionalContactInfo]
       ,Person.[Contact].[rowguid]
       ,Person.[Contact].[ModifiedDate]
  FROM Person.[Contact]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[ContactCreditCard] 
                WHERE Sales.[ContactCreditCard].[CreditCardID] = @CreditCardId
                  AND Sales.[ContactCreditCard].[ContactID] = Person.[Contact].[ContactID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Contact_GetByCustomerIdFromStoreContact procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Contact_GetByCustomerIdFromStoreContact') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Contact_GetByCustomerIdFromStoreContact
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Contact_GetByCustomerIdFromStoreContact
(

	@CustomerId int   
)
AS


SELECT Person.[Contact].[ContactID]
       ,Person.[Contact].[NameStyle]
       ,Person.[Contact].[Title]
       ,Person.[Contact].[FirstName]
       ,Person.[Contact].[MiddleName]
       ,Person.[Contact].[LastName]
       ,Person.[Contact].[Suffix]
       ,Person.[Contact].[EmailAddress]
       ,Person.[Contact].[EmailPromotion]
       ,Person.[Contact].[Phone]
       ,Person.[Contact].[PasswordHash]
       ,Person.[Contact].[PasswordSalt]
       ,Person.[Contact].[AdditionalContactInfo]
       ,Person.[Contact].[rowguid]
       ,Person.[Contact].[ModifiedDate]
  FROM Person.[Contact]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[StoreContact] 
                WHERE Sales.[StoreContact].[CustomerID] = @CustomerId
                  AND Sales.[StoreContact].[ContactID] = Person.[Contact].[ContactID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Contact_GetByVendorIdFromVendorContact procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Contact_GetByVendorIdFromVendorContact') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Contact_GetByVendorIdFromVendorContact
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Contact_GetByVendorIdFromVendorContact
(

	@VendorId int   
)
AS


SELECT Person.[Contact].[ContactID]
       ,Person.[Contact].[NameStyle]
       ,Person.[Contact].[Title]
       ,Person.[Contact].[FirstName]
       ,Person.[Contact].[MiddleName]
       ,Person.[Contact].[LastName]
       ,Person.[Contact].[Suffix]
       ,Person.[Contact].[EmailAddress]
       ,Person.[Contact].[EmailPromotion]
       ,Person.[Contact].[Phone]
       ,Person.[Contact].[PasswordHash]
       ,Person.[Contact].[PasswordSalt]
       ,Person.[Contact].[AdditionalContactInfo]
       ,Person.[Contact].[rowguid]
       ,Person.[Contact].[ModifiedDate]
  FROM Person.[Contact]
 WHERE EXISTS (SELECT 1
                 FROM Purchasing.[VendorContact] 
                WHERE Purchasing.[VendorContact].[VendorID] = @VendorId
                  AND Purchasing.[VendorContact].[ContactID] = Person.[Contact].[ContactID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_Contact_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_Contact_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_Contact_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the Contact table passing nullable parameters
-- Table Comment: Names of each employee, customer contact, and vendor contact.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_Contact_Find
(

	@SearchUsingOR bit   = null ,

	@ContactId int   = null ,

	@NameStyle bit   = null ,

	@Title nvarchar (8)  = null ,

	@FirstName nvarchar (50)  = null ,

	@MiddleName nvarchar (50)  = null ,

	@LastName nvarchar (50)  = null ,

	@Suffix nvarchar (10)  = null ,

	@EmailAddress nvarchar (50)  = null ,

	@EmailPromotion int   = null ,

	@Phone nvarchar (25)  = null ,

	@PasswordHash varchar (128)  = null ,

	@PasswordSalt varchar (10)  = null ,

	@AdditionalContactInfo xml   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ContactID]
	, [NameStyle]
	, [Title]
	, [FirstName]
	, [MiddleName]
	, [LastName]
	, [Suffix]
	, [EmailAddress]
	, [EmailPromotion]
	, [Phone]
	, [PasswordHash]
	, [PasswordSalt]
	, [AdditionalContactInfo]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Person].[Contact]
    WHERE 
	 ([ContactID] = @ContactId OR @ContactId IS NULL)
	AND ([NameStyle] = @NameStyle OR @NameStyle IS NULL)
	AND ([Title] = @Title OR @Title IS NULL)
	AND ([FirstName] = @FirstName OR @FirstName IS NULL)
	AND ([MiddleName] = @MiddleName OR @MiddleName IS NULL)
	AND ([LastName] = @LastName OR @LastName IS NULL)
	AND ([Suffix] = @Suffix OR @Suffix IS NULL)
	AND ([EmailAddress] = @EmailAddress OR @EmailAddress IS NULL)
	AND ([EmailPromotion] = @EmailPromotion OR @EmailPromotion IS NULL)
	AND ([Phone] = @Phone OR @Phone IS NULL)
	AND ([PasswordHash] = @PasswordHash OR @PasswordHash IS NULL)
	AND ([PasswordSalt] = @PasswordSalt OR @PasswordSalt IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ContactID]
	, [NameStyle]
	, [Title]
	, [FirstName]
	, [MiddleName]
	, [LastName]
	, [Suffix]
	, [EmailAddress]
	, [EmailPromotion]
	, [Phone]
	, [PasswordHash]
	, [PasswordSalt]
	, [AdditionalContactInfo]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Person].[Contact]
    WHERE 
	 ([ContactID] = @ContactId AND @ContactId is not null)
	OR ([NameStyle] = @NameStyle AND @NameStyle is not null)
	OR ([Title] = @Title AND @Title is not null)
	OR ([FirstName] = @FirstName AND @FirstName is not null)
	OR ([MiddleName] = @MiddleName AND @MiddleName is not null)
	OR ([LastName] = @LastName AND @LastName is not null)
	OR ([Suffix] = @Suffix AND @Suffix is not null)
	OR ([EmailAddress] = @EmailAddress AND @EmailAddress is not null)
	OR ([EmailPromotion] = @EmailPromotion AND @EmailPromotion is not null)
	OR ([Phone] = @Phone AND @Phone is not null)
	OR ([PasswordHash] = @PasswordHash AND @PasswordHash is not null)
	OR ([PasswordSalt] = @PasswordSalt AND @PasswordSalt is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_AWBuildVersion_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_AWBuildVersion_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_AWBuildVersion_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the AWBuildVersion table
-- Table Comment: Current version number of the AdventureWorks sample database. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_AWBuildVersion_Get_List

AS


				
				SELECT
					[SystemInformationID],
					[Database Version],
					[VersionDate],
					[ModifiedDate]
				FROM
					[dbo].[AWBuildVersion]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_AWBuildVersion_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_AWBuildVersion_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_AWBuildVersion_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the AWBuildVersion table passing page index and page count parameters
-- Table Comment: Current version number of the AdventureWorks sample database. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_AWBuildVersion_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SystemInformationID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SystemInformationID]'
				SET @SQL = @SQL + ', [Database Version]'
				SET @SQL = @SQL + ', [VersionDate]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [dbo].[AWBuildVersion]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SystemInformationID],'
				SET @SQL = @SQL + ' [Database Version],'
				SET @SQL = @SQL + ' [VersionDate],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[AWBuildVersion]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_AWBuildVersion_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_AWBuildVersion_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_AWBuildVersion_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the AWBuildVersion table
-- Table Comment: Current version number of the AdventureWorks sample database. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_AWBuildVersion_Insert
(

	@SystemInformationId tinyint    OUTPUT,

	@DatabaseVersion nvarchar (25)  ,

	@VersionDate datetime   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [dbo].[AWBuildVersion]
					(
					[Database Version]
					,[VersionDate]
					,[ModifiedDate]
					)
				VALUES
					(
					@DatabaseVersion
					,@VersionDate
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @SystemInformationId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_AWBuildVersion_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_AWBuildVersion_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_AWBuildVersion_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the AWBuildVersion table
-- Table Comment: Current version number of the AdventureWorks sample database. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_AWBuildVersion_Update
(

	@SystemInformationId tinyint   ,

	@DatabaseVersion nvarchar (25)  ,

	@VersionDate datetime   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[AWBuildVersion]
				SET
					[Database Version] = @DatabaseVersion
					,[VersionDate] = @VersionDate
					,[ModifiedDate] = @ModifiedDate
				WHERE
[SystemInformationID] = @SystemInformationId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_AWBuildVersion_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_AWBuildVersion_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_AWBuildVersion_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the AWBuildVersion table
-- Table Comment: Current version number of the AdventureWorks sample database. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_AWBuildVersion_Delete
(

	@SystemInformationId tinyint   
)
AS


				DELETE FROM [dbo].[AWBuildVersion] WITH (ROWLOCK) 
				WHERE
					[SystemInformationID] = @SystemInformationId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_AWBuildVersion_GetBySystemInformationId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_AWBuildVersion_GetBySystemInformationId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_AWBuildVersion_GetBySystemInformationId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the AWBuildVersion table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_AWBuildVersion_GetBySystemInformationId
(

	@SystemInformationId tinyint   
)
AS


				SELECT
					[SystemInformationID],
					[Database Version],
					[VersionDate],
					[ModifiedDate]
				FROM
					[dbo].[AWBuildVersion]
				WHERE
					[SystemInformationID] = @SystemInformationId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_AWBuildVersion_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_AWBuildVersion_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_AWBuildVersion_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the AWBuildVersion table passing nullable parameters
-- Table Comment: Current version number of the AdventureWorks sample database. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_AWBuildVersion_Find
(

	@SearchUsingOR bit   = null ,

	@SystemInformationId tinyint   = null ,

	@DatabaseVersion nvarchar (25)  = null ,

	@VersionDate datetime   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SystemInformationID]
	, [Database Version]
	, [VersionDate]
	, [ModifiedDate]
    FROM
	[dbo].[AWBuildVersion]
    WHERE 
	 ([SystemInformationID] = @SystemInformationId OR @SystemInformationId IS NULL)
	AND ([Database Version] = @DatabaseVersion OR @DatabaseVersion IS NULL)
	AND ([VersionDate] = @VersionDate OR @VersionDate IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SystemInformationID]
	, [Database Version]
	, [VersionDate]
	, [ModifiedDate]
    FROM
	[dbo].[AWBuildVersion]
    WHERE 
	 ([SystemInformationID] = @SystemInformationId AND @SystemInformationId is not null)
	OR ([Database Version] = @DatabaseVersion AND @DatabaseVersion is not null)
	OR ([VersionDate] = @VersionDate AND @VersionDate is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_CountryRegion_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_CountryRegion_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_CountryRegion_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the CountryRegion table
-- Table Comment: Lookup table containing the ISO standard codes for countries and regions.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_CountryRegion_Get_List

AS


				
				SELECT
					[CountryRegionCode],
					[Name],
					[ModifiedDate]
				FROM
					[Person].[CountryRegion]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_CountryRegion_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_CountryRegion_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_CountryRegion_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the CountryRegion table passing page index and page count parameters
-- Table Comment: Lookup table containing the ISO standard codes for countries and regions.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_CountryRegion_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CountryRegionCode]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CountryRegionCode]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Person].[CountryRegion]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CountryRegionCode],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Person].[CountryRegion]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_CountryRegion_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_CountryRegion_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_CountryRegion_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the CountryRegion table
-- Table Comment: Lookup table containing the ISO standard codes for countries and regions.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_CountryRegion_Insert
(

	@CountryRegionCode nvarchar (3)  ,

	@Name nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Person].[CountryRegion]
					(
					[CountryRegionCode]
					,[Name]
					,[ModifiedDate]
					)
				VALUES
					(
					@CountryRegionCode
					,@Name
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_CountryRegion_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_CountryRegion_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_CountryRegion_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the CountryRegion table
-- Table Comment: Lookup table containing the ISO standard codes for countries and regions.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_CountryRegion_Update
(

	@CountryRegionCode nvarchar (3)  ,

	@OriginalCountryRegionCode nvarchar (3)  ,

	@Name nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Person].[CountryRegion]
				SET
					[CountryRegionCode] = @CountryRegionCode
					,[Name] = @Name
					,[ModifiedDate] = @ModifiedDate
				WHERE
[CountryRegionCode] = @OriginalCountryRegionCode 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_CountryRegion_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_CountryRegion_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_CountryRegion_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the CountryRegion table
-- Table Comment: Lookup table containing the ISO standard codes for countries and regions.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_CountryRegion_Delete
(

	@CountryRegionCode nvarchar (3)  
)
AS


				DELETE FROM [Person].[CountryRegion] WITH (ROWLOCK) 
				WHERE
					[CountryRegionCode] = @CountryRegionCode
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_CountryRegion_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_CountryRegion_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_CountryRegion_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CountryRegion table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_CountryRegion_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[CountryRegionCode],
					[Name],
					[ModifiedDate]
				FROM
					[Person].[CountryRegion]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_CountryRegion_GetByCountryRegionCode procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_CountryRegion_GetByCountryRegionCode') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_CountryRegion_GetByCountryRegionCode
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the CountryRegion table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_CountryRegion_GetByCountryRegionCode
(

	@CountryRegionCode nvarchar (3)  
)
AS


				SELECT
					[CountryRegionCode],
					[Name],
					[ModifiedDate]
				FROM
					[Person].[CountryRegion]
				WHERE
					[CountryRegionCode] = @CountryRegionCode
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_CountryRegion_GetByCurrencyCodeFromCountryRegionCurrency procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_CountryRegion_GetByCurrencyCodeFromCountryRegionCurrency') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_CountryRegion_GetByCurrencyCodeFromCountryRegionCurrency
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_CountryRegion_GetByCurrencyCodeFromCountryRegionCurrency
(

	@CurrencyCode nchar (3)  
)
AS


SELECT Person.[CountryRegion].[CountryRegionCode]
       ,Person.[CountryRegion].[Name]
       ,Person.[CountryRegion].[ModifiedDate]
  FROM Person.[CountryRegion]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[CountryRegionCurrency] 
                WHERE Sales.[CountryRegionCurrency].[CurrencyCode] = @CurrencyCode
                  AND Sales.[CountryRegionCurrency].[CountryRegionCode] = Person.[CountryRegion].[CountryRegionCode]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_CountryRegion_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_CountryRegion_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_CountryRegion_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the CountryRegion table passing nullable parameters
-- Table Comment: Lookup table containing the ISO standard codes for countries and regions.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_CountryRegion_Find
(

	@SearchUsingOR bit   = null ,

	@CountryRegionCode nvarchar (3)  = null ,

	@Name nvarchar (50)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CountryRegionCode]
	, [Name]
	, [ModifiedDate]
    FROM
	[Person].[CountryRegion]
    WHERE 
	 ([CountryRegionCode] = @CountryRegionCode OR @CountryRegionCode IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CountryRegionCode]
	, [Name]
	, [ModifiedDate]
    FROM
	[Person].[CountryRegion]
    WHERE 
	 ([CountryRegionCode] = @CountryRegionCode AND @CountryRegionCode is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ContactCreditCard_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ContactCreditCard_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ContactCreditCard_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ContactCreditCard table
-- Table Comment: Cross-reference table mapping customers in the Contact table to their credit card information in the CreditCard table. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ContactCreditCard_Get_List

AS


				
				SELECT
					[ContactID],
					[CreditCardID],
					[ModifiedDate]
				FROM
					[Sales].[ContactCreditCard]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ContactCreditCard_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ContactCreditCard_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ContactCreditCard_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ContactCreditCard table passing page index and page count parameters
-- Table Comment: Cross-reference table mapping customers in the Contact table to their credit card information in the CreditCard table. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ContactCreditCard_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ContactID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ContactID]'
				SET @SQL = @SQL + ', [CreditCardID]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[ContactCreditCard]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ContactID],'
				SET @SQL = @SQL + ' [CreditCardID],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[ContactCreditCard]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ContactCreditCard_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ContactCreditCard_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ContactCreditCard_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ContactCreditCard table
-- Table Comment: Cross-reference table mapping customers in the Contact table to their credit card information in the CreditCard table. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ContactCreditCard_Insert
(

	@ContactId int   ,

	@CreditCardId int   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Sales].[ContactCreditCard]
					(
					[ContactID]
					,[CreditCardID]
					,[ModifiedDate]
					)
				VALUES
					(
					@ContactId
					,@CreditCardId
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ContactCreditCard_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ContactCreditCard_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ContactCreditCard_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ContactCreditCard table
-- Table Comment: Cross-reference table mapping customers in the Contact table to their credit card information in the CreditCard table. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ContactCreditCard_Update
(

	@ContactId int   ,

	@OriginalContactId int   ,

	@CreditCardId int   ,

	@OriginalCreditCardId int   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[ContactCreditCard]
				SET
					[ContactID] = @ContactId
					,[CreditCardID] = @CreditCardId
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ContactID] = @OriginalContactId 
AND [CreditCardID] = @OriginalCreditCardId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ContactCreditCard_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ContactCreditCard_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ContactCreditCard_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ContactCreditCard table
-- Table Comment: Cross-reference table mapping customers in the Contact table to their credit card information in the CreditCard table. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ContactCreditCard_Delete
(

	@ContactId int   ,

	@CreditCardId int   
)
AS


				DELETE FROM [Sales].[ContactCreditCard] WITH (ROWLOCK) 
				WHERE
					[ContactID] = @ContactId
					AND [CreditCardID] = @CreditCardId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ContactCreditCard_GetByContactId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ContactCreditCard_GetByContactId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ContactCreditCard_GetByContactId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ContactCreditCard table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ContactCreditCard_GetByContactId
(

	@ContactId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ContactID],
					[CreditCardID],
					[ModifiedDate]
				FROM
					[Sales].[ContactCreditCard]
				WHERE
					[ContactID] = @ContactId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ContactCreditCard_GetByCreditCardId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ContactCreditCard_GetByCreditCardId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ContactCreditCard_GetByCreditCardId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ContactCreditCard table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ContactCreditCard_GetByCreditCardId
(

	@CreditCardId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ContactID],
					[CreditCardID],
					[ModifiedDate]
				FROM
					[Sales].[ContactCreditCard]
				WHERE
					[CreditCardID] = @CreditCardId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ContactCreditCard_GetByContactIdCreditCardId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ContactCreditCard_GetByContactIdCreditCardId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ContactCreditCard_GetByContactIdCreditCardId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ContactCreditCard table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ContactCreditCard_GetByContactIdCreditCardId
(

	@ContactId int   ,

	@CreditCardId int   
)
AS


				SELECT
					[ContactID],
					[CreditCardID],
					[ModifiedDate]
				FROM
					[Sales].[ContactCreditCard]
				WHERE
					[ContactID] = @ContactId
					AND [CreditCardID] = @CreditCardId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_ContactCreditCard_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_ContactCreditCard_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_ContactCreditCard_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ContactCreditCard table passing nullable parameters
-- Table Comment: Cross-reference table mapping customers in the Contact table to their credit card information in the CreditCard table. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_ContactCreditCard_Find
(

	@SearchUsingOR bit   = null ,

	@ContactId int   = null ,

	@CreditCardId int   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ContactID]
	, [CreditCardID]
	, [ModifiedDate]
    FROM
	[Sales].[ContactCreditCard]
    WHERE 
	 ([ContactID] = @ContactId OR @ContactId IS NULL)
	AND ([CreditCardID] = @CreditCardId OR @CreditCardId IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ContactID]
	, [CreditCardID]
	, [ModifiedDate]
    FROM
	[Sales].[ContactCreditCard]
    WHERE 
	 ([ContactID] = @ContactId AND @ContactId is not null)
	OR ([CreditCardID] = @CreditCardId AND @CreditCardId is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Document_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Document_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Document_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the Document table
-- Table Comment: Product maintenance documents.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Document_Get_List

AS


				
				SELECT
					[DocumentID],
					[Title],
					[FileName],
					[FileExtension],
					[Revision],
					[ChangeNumber],
					[Status],
					[DocumentSummary],
					[Document],
					[ModifiedDate]
				FROM
					[Production].[Document]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Document_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Document_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Document_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the Document table passing page index and page count parameters
-- Table Comment: Product maintenance documents.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Document_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[DocumentID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [DocumentID]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [FileName]'
				SET @SQL = @SQL + ', [FileExtension]'
				SET @SQL = @SQL + ', [Revision]'
				SET @SQL = @SQL + ', [ChangeNumber]'
				SET @SQL = @SQL + ', [Status]'
				SET @SQL = @SQL + ', [DocumentSummary]'
				SET @SQL = @SQL + ', [Document]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[Document]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [DocumentID],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [FileName],'
				SET @SQL = @SQL + ' [FileExtension],'
				SET @SQL = @SQL + ' [Revision],'
				SET @SQL = @SQL + ' [ChangeNumber],'
				SET @SQL = @SQL + ' [Status],'
				SET @SQL = @SQL + ' [DocumentSummary],'
				SET @SQL = @SQL + ' [Document],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[Document]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Document_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Document_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Document_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the Document table
-- Table Comment: Product maintenance documents.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Document_Insert
(

	@DocumentId int    OUTPUT,

	@Title nvarchar (50)  ,

	@FileName nvarchar (400)  ,

	@FileExtension nvarchar (8)  ,

	@Revision nchar (5)  ,

	@ChangeNumber int   ,

	@Status tinyint   ,

	@DocumentSummary nvarchar (MAX)  ,

	@Document varbinary (MAX)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[Document]
					(
					[Title]
					,[FileName]
					,[FileExtension]
					,[Revision]
					,[ChangeNumber]
					,[Status]
					,[DocumentSummary]
					,[Document]
					,[ModifiedDate]
					)
				VALUES
					(
					@Title
					,@FileName
					,@FileExtension
					,@Revision
					,@ChangeNumber
					,@Status
					,@DocumentSummary
					,@Document
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @DocumentId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Document_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Document_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Document_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the Document table
-- Table Comment: Product maintenance documents.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Document_Update
(

	@DocumentId int   ,

	@Title nvarchar (50)  ,

	@FileName nvarchar (400)  ,

	@FileExtension nvarchar (8)  ,

	@Revision nchar (5)  ,

	@ChangeNumber int   ,

	@Status tinyint   ,

	@DocumentSummary nvarchar (MAX)  ,

	@Document varbinary (MAX)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[Document]
				SET
					[Title] = @Title
					,[FileName] = @FileName
					,[FileExtension] = @FileExtension
					,[Revision] = @Revision
					,[ChangeNumber] = @ChangeNumber
					,[Status] = @Status
					,[DocumentSummary] = @DocumentSummary
					,[Document] = @Document
					,[ModifiedDate] = @ModifiedDate
				WHERE
[DocumentID] = @DocumentId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Document_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Document_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Document_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the Document table
-- Table Comment: Product maintenance documents.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Document_Delete
(

	@DocumentId int   
)
AS


				DELETE FROM [Production].[Document] WITH (ROWLOCK) 
				WHERE
					[DocumentID] = @DocumentId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Document_GetByFileNameRevision procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Document_GetByFileNameRevision') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Document_GetByFileNameRevision
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Document table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Document_GetByFileNameRevision
(

	@FileName nvarchar (400)  ,

	@Revision nchar (5)  
)
AS


				SELECT
					[DocumentID],
					[Title],
					[FileName],
					[FileExtension],
					[Revision],
					[ChangeNumber],
					[Status],
					[DocumentSummary],
					[Document],
					[ModifiedDate]
				FROM
					[Production].[Document]
				WHERE
					[FileName] = @FileName
					AND [Revision] = @Revision
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Document_GetByDocumentId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Document_GetByDocumentId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Document_GetByDocumentId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Document table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Document_GetByDocumentId
(

	@DocumentId int   
)
AS


				SELECT
					[DocumentID],
					[Title],
					[FileName],
					[FileExtension],
					[Revision],
					[ChangeNumber],
					[Status],
					[DocumentSummary],
					[Document],
					[ModifiedDate]
				FROM
					[Production].[Document]
				WHERE
					[DocumentID] = @DocumentId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Document_GetByProductIdFromProductDocument procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Document_GetByProductIdFromProductDocument') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Document_GetByProductIdFromProductDocument
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Document_GetByProductIdFromProductDocument
(

	@ProductId int   
)
AS


SELECT Production.[Document].[DocumentID]
       ,Production.[Document].[Title]
       ,Production.[Document].[FileName]
       ,Production.[Document].[FileExtension]
       ,Production.[Document].[Revision]
       ,Production.[Document].[ChangeNumber]
       ,Production.[Document].[Status]
       ,Production.[Document].[DocumentSummary]
       ,Production.[Document].[Document]
       ,Production.[Document].[ModifiedDate]
  FROM Production.[Document]
 WHERE EXISTS (SELECT 1
                 FROM Production.[ProductDocument] 
                WHERE Production.[ProductDocument].[ProductID] = @ProductId
                  AND Production.[ProductDocument].[DocumentID] = Production.[Document].[DocumentID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Document_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Document_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Document_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the Document table passing nullable parameters
-- Table Comment: Product maintenance documents.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Document_Find
(

	@SearchUsingOR bit   = null ,

	@DocumentId int   = null ,

	@Title nvarchar (50)  = null ,

	@FileName nvarchar (400)  = null ,

	@FileExtension nvarchar (8)  = null ,

	@Revision nchar (5)  = null ,

	@ChangeNumber int   = null ,

	@Status tinyint   = null ,

	@DocumentSummary nvarchar (MAX)  = null ,

	@Document varbinary (MAX)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DocumentID]
	, [Title]
	, [FileName]
	, [FileExtension]
	, [Revision]
	, [ChangeNumber]
	, [Status]
	, [DocumentSummary]
	, [Document]
	, [ModifiedDate]
    FROM
	[Production].[Document]
    WHERE 
	 ([DocumentID] = @DocumentId OR @DocumentId IS NULL)
	AND ([Title] = @Title OR @Title IS NULL)
	AND ([FileName] = @FileName OR @FileName IS NULL)
	AND ([FileExtension] = @FileExtension OR @FileExtension IS NULL)
	AND ([Revision] = @Revision OR @Revision IS NULL)
	AND ([ChangeNumber] = @ChangeNumber OR @ChangeNumber IS NULL)
	AND ([Status] = @Status OR @Status IS NULL)
	AND ([DocumentSummary] = @DocumentSummary OR @DocumentSummary IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DocumentID]
	, [Title]
	, [FileName]
	, [FileExtension]
	, [Revision]
	, [ChangeNumber]
	, [Status]
	, [DocumentSummary]
	, [Document]
	, [ModifiedDate]
    FROM
	[Production].[Document]
    WHERE 
	 ([DocumentID] = @DocumentId AND @DocumentId is not null)
	OR ([Title] = @Title AND @Title is not null)
	OR ([FileName] = @FileName AND @FileName is not null)
	OR ([FileExtension] = @FileExtension AND @FileExtension is not null)
	OR ([Revision] = @Revision AND @Revision is not null)
	OR ([ChangeNumber] = @ChangeNumber AND @ChangeNumber is not null)
	OR ([Status] = @Status AND @Status is not null)
	OR ([DocumentSummary] = @DocumentSummary AND @DocumentSummary is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_ContactType_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_ContactType_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_ContactType_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ContactType table
-- Table Comment: Lookup table containing the types of contacts stored in Contact.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_ContactType_Get_List

AS


				
				SELECT
					[ContactTypeID],
					[Name],
					[ModifiedDate]
				FROM
					[Person].[ContactType]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_ContactType_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_ContactType_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_ContactType_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ContactType table passing page index and page count parameters
-- Table Comment: Lookup table containing the types of contacts stored in Contact.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_ContactType_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ContactTypeID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ContactTypeID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Person].[ContactType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ContactTypeID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Person].[ContactType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_ContactType_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_ContactType_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_ContactType_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ContactType table
-- Table Comment: Lookup table containing the types of contacts stored in Contact.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_ContactType_Insert
(

	@ContactTypeId int    OUTPUT,

	@Name nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Person].[ContactType]
					(
					[Name]
					,[ModifiedDate]
					)
				VALUES
					(
					@Name
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @ContactTypeId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_ContactType_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_ContactType_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_ContactType_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ContactType table
-- Table Comment: Lookup table containing the types of contacts stored in Contact.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_ContactType_Update
(

	@ContactTypeId int   ,

	@Name nvarchar (50)  ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Person].[ContactType]
				SET
					[Name] = @Name
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ContactTypeID] = @ContactTypeId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_ContactType_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_ContactType_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_ContactType_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ContactType table
-- Table Comment: Lookup table containing the types of contacts stored in Contact.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_ContactType_Delete
(

	@ContactTypeId int   
)
AS


				DELETE FROM [Person].[ContactType] WITH (ROWLOCK) 
				WHERE
					[ContactTypeID] = @ContactTypeId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_ContactType_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_ContactType_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_ContactType_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ContactType table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_ContactType_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[ContactTypeID],
					[Name],
					[ModifiedDate]
				FROM
					[Person].[ContactType]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_ContactType_GetByContactTypeId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_ContactType_GetByContactTypeId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_ContactType_GetByContactTypeId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ContactType table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_ContactType_GetByContactTypeId
(

	@ContactTypeId int   
)
AS


				SELECT
					[ContactTypeID],
					[Name],
					[ModifiedDate]
				FROM
					[Person].[ContactType]
				WHERE
					[ContactTypeID] = @ContactTypeId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_ContactType_GetByContactIdFromStoreContact procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_ContactType_GetByContactIdFromStoreContact') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_ContactType_GetByContactIdFromStoreContact
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_ContactType_GetByContactIdFromStoreContact
(

	@ContactId int   
)
AS


SELECT Person.[ContactType].[ContactTypeID]
       ,Person.[ContactType].[Name]
       ,Person.[ContactType].[ModifiedDate]
  FROM Person.[ContactType]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[StoreContact] 
                WHERE Sales.[StoreContact].[ContactID] = @ContactId
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_ContactType_GetByCustomerIdFromStoreContact procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_ContactType_GetByCustomerIdFromStoreContact') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_ContactType_GetByCustomerIdFromStoreContact
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_ContactType_GetByCustomerIdFromStoreContact
(

	@CustomerId int   
)
AS


SELECT Person.[ContactType].[ContactTypeID]
       ,Person.[ContactType].[Name]
       ,Person.[ContactType].[ModifiedDate]
  FROM Person.[ContactType]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[StoreContact] 
                WHERE Sales.[StoreContact].[CustomerID] = @CustomerId
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_ContactType_GetByContactIdFromVendorContact procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_ContactType_GetByContactIdFromVendorContact') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_ContactType_GetByContactIdFromVendorContact
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_ContactType_GetByContactIdFromVendorContact
(

	@ContactId int   
)
AS


SELECT Person.[ContactType].[ContactTypeID]
       ,Person.[ContactType].[Name]
       ,Person.[ContactType].[ModifiedDate]
  FROM Person.[ContactType]
 WHERE EXISTS (SELECT 1
                 FROM Purchasing.[VendorContact] 
                WHERE Purchasing.[VendorContact].[ContactID] = @ContactId
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_ContactType_GetByVendorIdFromVendorContact procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_ContactType_GetByVendorIdFromVendorContact') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_ContactType_GetByVendorIdFromVendorContact
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_ContactType_GetByVendorIdFromVendorContact
(

	@VendorId int   
)
AS


SELECT Person.[ContactType].[ContactTypeID]
       ,Person.[ContactType].[Name]
       ,Person.[ContactType].[ModifiedDate]
  FROM Person.[ContactType]
 WHERE EXISTS (SELECT 1
                 FROM Purchasing.[VendorContact] 
                WHERE Purchasing.[VendorContact].[VendorID] = @VendorId
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_ContactType_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_ContactType_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_ContactType_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ContactType table passing nullable parameters
-- Table Comment: Lookup table containing the types of contacts stored in Contact.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_ContactType_Find
(

	@SearchUsingOR bit   = null ,

	@ContactTypeId int   = null ,

	@Name nvarchar (50)  = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ContactTypeID]
	, [Name]
	, [ModifiedDate]
    FROM
	[Person].[ContactType]
    WHERE 
	 ([ContactTypeID] = @ContactTypeId OR @ContactTypeId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ContactTypeID]
	, [Name]
	, [ModifiedDate]
    FROM
	[Person].[ContactType]
    WHERE 
	 ([ContactTypeID] = @ContactTypeId AND @ContactTypeId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Employee_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Employee_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Employee_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the Employee table
-- Table Comment: Employee information such as salary, department, and title.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Employee_Get_List

AS


				
				SELECT
					[EmployeeID],
					[NationalIDNumber],
					[ContactID],
					[LoginID],
					[ManagerID],
					[Title],
					[BirthDate],
					[MaritalStatus],
					[Gender],
					[HireDate],
					[SalariedFlag],
					[VacationHours],
					[SickLeaveHours],
					[CurrentFlag],
					[rowguid],
					[ModifiedDate]
				FROM
					[HumanResources].[Employee]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Employee_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Employee_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Employee_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the Employee table passing page index and page count parameters
-- Table Comment: Employee information such as salary, department, and title.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Employee_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[EmployeeID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [EmployeeID]'
				SET @SQL = @SQL + ', [NationalIDNumber]'
				SET @SQL = @SQL + ', [ContactID]'
				SET @SQL = @SQL + ', [LoginID]'
				SET @SQL = @SQL + ', [ManagerID]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [BirthDate]'
				SET @SQL = @SQL + ', [MaritalStatus]'
				SET @SQL = @SQL + ', [Gender]'
				SET @SQL = @SQL + ', [HireDate]'
				SET @SQL = @SQL + ', [SalariedFlag]'
				SET @SQL = @SQL + ', [VacationHours]'
				SET @SQL = @SQL + ', [SickLeaveHours]'
				SET @SQL = @SQL + ', [CurrentFlag]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [HumanResources].[Employee]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [EmployeeID],'
				SET @SQL = @SQL + ' [NationalIDNumber],'
				SET @SQL = @SQL + ' [ContactID],'
				SET @SQL = @SQL + ' [LoginID],'
				SET @SQL = @SQL + ' [ManagerID],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [BirthDate],'
				SET @SQL = @SQL + ' [MaritalStatus],'
				SET @SQL = @SQL + ' [Gender],'
				SET @SQL = @SQL + ' [HireDate],'
				SET @SQL = @SQL + ' [SalariedFlag],'
				SET @SQL = @SQL + ' [VacationHours],'
				SET @SQL = @SQL + ' [SickLeaveHours],'
				SET @SQL = @SQL + ' [CurrentFlag],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [HumanResources].[Employee]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Employee_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Employee_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Employee_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the Employee table
-- Table Comment: Employee information such as salary, department, and title.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Employee_Insert
(

	@EmployeeId int    OUTPUT,

	@NationalIdNumber nvarchar (15)  ,

	@ContactId int   ,

	@LoginId nvarchar (256)  ,

	@ManagerId int   ,

	@Title nvarchar (50)  ,

	@BirthDate datetime   ,

	@MaritalStatus nchar (1)  ,

	@Gender nchar (1)  ,

	@HireDate datetime   ,

	@SalariedFlag bit   ,

	@VacationHours smallint   ,

	@SickLeaveHours smallint   ,

	@CurrentFlag bit   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [HumanResources].[Employee]
					(
					[NationalIDNumber]
					,[ContactID]
					,[LoginID]
					,[ManagerID]
					,[Title]
					,[BirthDate]
					,[MaritalStatus]
					,[Gender]
					,[HireDate]
					,[SalariedFlag]
					,[VacationHours]
					,[SickLeaveHours]
					,[CurrentFlag]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@NationalIdNumber
					,@ContactId
					,@LoginId
					,@ManagerId
					,@Title
					,@BirthDate
					,@MaritalStatus
					,@Gender
					,@HireDate
					,@SalariedFlag
					,@VacationHours
					,@SickLeaveHours
					,@CurrentFlag
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @EmployeeId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Employee_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Employee_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Employee_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the Employee table
-- Table Comment: Employee information such as salary, department, and title.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Employee_Update
(

	@EmployeeId int   ,

	@NationalIdNumber nvarchar (15)  ,

	@ContactId int   ,

	@LoginId nvarchar (256)  ,

	@ManagerId int   ,

	@Title nvarchar (50)  ,

	@BirthDate datetime   ,

	@MaritalStatus nchar (1)  ,

	@Gender nchar (1)  ,

	@HireDate datetime   ,

	@SalariedFlag bit   ,

	@VacationHours smallint   ,

	@SickLeaveHours smallint   ,

	@CurrentFlag bit   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[HumanResources].[Employee]
				SET
					[NationalIDNumber] = @NationalIdNumber
					,[ContactID] = @ContactId
					,[LoginID] = @LoginId
					,[ManagerID] = @ManagerId
					,[Title] = @Title
					,[BirthDate] = @BirthDate
					,[MaritalStatus] = @MaritalStatus
					,[Gender] = @Gender
					,[HireDate] = @HireDate
					,[SalariedFlag] = @SalariedFlag
					,[VacationHours] = @VacationHours
					,[SickLeaveHours] = @SickLeaveHours
					,[CurrentFlag] = @CurrentFlag
					,[ModifiedDate] = @ModifiedDate
				WHERE
[EmployeeID] = @EmployeeId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Employee_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Employee_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Employee_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the Employee table
-- Table Comment: Employee information such as salary, department, and title.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Employee_Delete
(

	@EmployeeId int   
)
AS


				DELETE FROM [HumanResources].[Employee] WITH (ROWLOCK) 
				WHERE
					[EmployeeID] = @EmployeeId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Employee_GetByContactId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Employee_GetByContactId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Employee_GetByContactId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Employee table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Employee_GetByContactId
(

	@ContactId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[EmployeeID],
					[NationalIDNumber],
					[ContactID],
					[LoginID],
					[ManagerID],
					[Title],
					[BirthDate],
					[MaritalStatus],
					[Gender],
					[HireDate],
					[SalariedFlag],
					[VacationHours],
					[SickLeaveHours],
					[CurrentFlag],
					[rowguid],
					[ModifiedDate]
				FROM
					[HumanResources].[Employee]
				WHERE
					[ContactID] = @ContactId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Employee_GetByLoginId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Employee_GetByLoginId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Employee_GetByLoginId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Employee table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Employee_GetByLoginId
(

	@LoginId nvarchar (256)  
)
AS


				SELECT
					[EmployeeID],
					[NationalIDNumber],
					[ContactID],
					[LoginID],
					[ManagerID],
					[Title],
					[BirthDate],
					[MaritalStatus],
					[Gender],
					[HireDate],
					[SalariedFlag],
					[VacationHours],
					[SickLeaveHours],
					[CurrentFlag],
					[rowguid],
					[ModifiedDate]
				FROM
					[HumanResources].[Employee]
				WHERE
					[LoginID] = @LoginId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Employee_GetByNationalIdNumber procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Employee_GetByNationalIdNumber') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Employee_GetByNationalIdNumber
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Employee table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Employee_GetByNationalIdNumber
(

	@NationalIdNumber nvarchar (15)  
)
AS


				SELECT
					[EmployeeID],
					[NationalIDNumber],
					[ContactID],
					[LoginID],
					[ManagerID],
					[Title],
					[BirthDate],
					[MaritalStatus],
					[Gender],
					[HireDate],
					[SalariedFlag],
					[VacationHours],
					[SickLeaveHours],
					[CurrentFlag],
					[rowguid],
					[ModifiedDate]
				FROM
					[HumanResources].[Employee]
				WHERE
					[NationalIDNumber] = @NationalIdNumber
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Employee_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Employee_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Employee_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Employee table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Employee_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[EmployeeID],
					[NationalIDNumber],
					[ContactID],
					[LoginID],
					[ManagerID],
					[Title],
					[BirthDate],
					[MaritalStatus],
					[Gender],
					[HireDate],
					[SalariedFlag],
					[VacationHours],
					[SickLeaveHours],
					[CurrentFlag],
					[rowguid],
					[ModifiedDate]
				FROM
					[HumanResources].[Employee]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Employee_GetByManagerId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Employee_GetByManagerId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Employee_GetByManagerId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Employee table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Employee_GetByManagerId
(

	@ManagerId int   
)
AS


				SELECT
					[EmployeeID],
					[NationalIDNumber],
					[ContactID],
					[LoginID],
					[ManagerID],
					[Title],
					[BirthDate],
					[MaritalStatus],
					[Gender],
					[HireDate],
					[SalariedFlag],
					[VacationHours],
					[SickLeaveHours],
					[CurrentFlag],
					[rowguid],
					[ModifiedDate]
				FROM
					[HumanResources].[Employee]
				WHERE
					[ManagerID] = @ManagerId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Employee_GetByEmployeeId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Employee_GetByEmployeeId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Employee_GetByEmployeeId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Employee table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Employee_GetByEmployeeId
(

	@EmployeeId int   
)
AS


				SELECT
					[EmployeeID],
					[NationalIDNumber],
					[ContactID],
					[LoginID],
					[ManagerID],
					[Title],
					[BirthDate],
					[MaritalStatus],
					[Gender],
					[HireDate],
					[SalariedFlag],
					[VacationHours],
					[SickLeaveHours],
					[CurrentFlag],
					[rowguid],
					[ModifiedDate]
				FROM
					[HumanResources].[Employee]
				WHERE
					[EmployeeID] = @EmployeeId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Employee_GetByAddressIdFromEmployeeAddress procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Employee_GetByAddressIdFromEmployeeAddress') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Employee_GetByAddressIdFromEmployeeAddress
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Employee_GetByAddressIdFromEmployeeAddress
(

	@AddressId int   
)
AS


SELECT HumanResources.[Employee].[EmployeeID]
       ,HumanResources.[Employee].[NationalIDNumber]
       ,HumanResources.[Employee].[ContactID]
       ,HumanResources.[Employee].[LoginID]
       ,HumanResources.[Employee].[ManagerID]
       ,HumanResources.[Employee].[Title]
       ,HumanResources.[Employee].[BirthDate]
       ,HumanResources.[Employee].[MaritalStatus]
       ,HumanResources.[Employee].[Gender]
       ,HumanResources.[Employee].[HireDate]
       ,HumanResources.[Employee].[SalariedFlag]
       ,HumanResources.[Employee].[VacationHours]
       ,HumanResources.[Employee].[SickLeaveHours]
       ,HumanResources.[Employee].[CurrentFlag]
       ,HumanResources.[Employee].[rowguid]
       ,HumanResources.[Employee].[ModifiedDate]
  FROM HumanResources.[Employee]
 WHERE EXISTS (SELECT 1
                 FROM HumanResources.[EmployeeAddress] 
                WHERE HumanResources.[EmployeeAddress].[AddressID] = @AddressId
                  AND HumanResources.[EmployeeAddress].[EmployeeID] = HumanResources.[Employee].[EmployeeID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_Employee_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_Employee_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_Employee_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the Employee table passing nullable parameters
-- Table Comment: Employee information such as salary, department, and title.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_Employee_Find
(

	@SearchUsingOR bit   = null ,

	@EmployeeId int   = null ,

	@NationalIdNumber nvarchar (15)  = null ,

	@ContactId int   = null ,

	@LoginId nvarchar (256)  = null ,

	@ManagerId int   = null ,

	@Title nvarchar (50)  = null ,

	@BirthDate datetime   = null ,

	@MaritalStatus nchar (1)  = null ,

	@Gender nchar (1)  = null ,

	@HireDate datetime   = null ,

	@SalariedFlag bit   = null ,

	@VacationHours smallint   = null ,

	@SickLeaveHours smallint   = null ,

	@CurrentFlag bit   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [EmployeeID]
	, [NationalIDNumber]
	, [ContactID]
	, [LoginID]
	, [ManagerID]
	, [Title]
	, [BirthDate]
	, [MaritalStatus]
	, [Gender]
	, [HireDate]
	, [SalariedFlag]
	, [VacationHours]
	, [SickLeaveHours]
	, [CurrentFlag]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[HumanResources].[Employee]
    WHERE 
	 ([EmployeeID] = @EmployeeId OR @EmployeeId IS NULL)
	AND ([NationalIDNumber] = @NationalIdNumber OR @NationalIdNumber IS NULL)
	AND ([ContactID] = @ContactId OR @ContactId IS NULL)
	AND ([LoginID] = @LoginId OR @LoginId IS NULL)
	AND ([ManagerID] = @ManagerId OR @ManagerId IS NULL)
	AND ([Title] = @Title OR @Title IS NULL)
	AND ([BirthDate] = @BirthDate OR @BirthDate IS NULL)
	AND ([MaritalStatus] = @MaritalStatus OR @MaritalStatus IS NULL)
	AND ([Gender] = @Gender OR @Gender IS NULL)
	AND ([HireDate] = @HireDate OR @HireDate IS NULL)
	AND ([SalariedFlag] = @SalariedFlag OR @SalariedFlag IS NULL)
	AND ([VacationHours] = @VacationHours OR @VacationHours IS NULL)
	AND ([SickLeaveHours] = @SickLeaveHours OR @SickLeaveHours IS NULL)
	AND ([CurrentFlag] = @CurrentFlag OR @CurrentFlag IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [EmployeeID]
	, [NationalIDNumber]
	, [ContactID]
	, [LoginID]
	, [ManagerID]
	, [Title]
	, [BirthDate]
	, [MaritalStatus]
	, [Gender]
	, [HireDate]
	, [SalariedFlag]
	, [VacationHours]
	, [SickLeaveHours]
	, [CurrentFlag]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[HumanResources].[Employee]
    WHERE 
	 ([EmployeeID] = @EmployeeId AND @EmployeeId is not null)
	OR ([NationalIDNumber] = @NationalIdNumber AND @NationalIdNumber is not null)
	OR ([ContactID] = @ContactId AND @ContactId is not null)
	OR ([LoginID] = @LoginId AND @LoginId is not null)
	OR ([ManagerID] = @ManagerId AND @ManagerId is not null)
	OR ([Title] = @Title AND @Title is not null)
	OR ([BirthDate] = @BirthDate AND @BirthDate is not null)
	OR ([MaritalStatus] = @MaritalStatus AND @MaritalStatus is not null)
	OR ([Gender] = @Gender AND @Gender is not null)
	OR ([HireDate] = @HireDate AND @HireDate is not null)
	OR ([SalariedFlag] = @SalariedFlag AND @SalariedFlag is not null)
	OR ([VacationHours] = @VacationHours AND @VacationHours is not null)
	OR ([SickLeaveHours] = @SickLeaveHours AND @SickLeaveHours is not null)
	OR ([CurrentFlag] = @CurrentFlag AND @CurrentFlag is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDocument_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDocument_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDocument_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ProductDocument table
-- Table Comment: Cross-reference table mapping products to related product documents.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDocument_Get_List

AS


				
				SELECT
					[ProductID],
					[DocumentID],
					[ModifiedDate]
				FROM
					[Production].[ProductDocument]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDocument_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDocument_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDocument_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ProductDocument table passing page index and page count parameters
-- Table Comment: Cross-reference table mapping products to related product documents.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDocument_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [DocumentID]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[ProductDocument]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [DocumentID],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[ProductDocument]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDocument_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDocument_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDocument_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ProductDocument table
-- Table Comment: Cross-reference table mapping products to related product documents.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDocument_Insert
(

	@ProductId int   ,

	@DocumentId int   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[ProductDocument]
					(
					[ProductID]
					,[DocumentID]
					,[ModifiedDate]
					)
				VALUES
					(
					@ProductId
					,@DocumentId
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDocument_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDocument_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDocument_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ProductDocument table
-- Table Comment: Cross-reference table mapping products to related product documents.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDocument_Update
(

	@ProductId int   ,

	@OriginalProductId int   ,

	@DocumentId int   ,

	@OriginalDocumentId int   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[ProductDocument]
				SET
					[ProductID] = @ProductId
					,[DocumentID] = @DocumentId
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ProductID] = @OriginalProductId 
AND [DocumentID] = @OriginalDocumentId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDocument_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDocument_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDocument_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ProductDocument table
-- Table Comment: Cross-reference table mapping products to related product documents.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDocument_Delete
(

	@ProductId int   ,

	@DocumentId int   
)
AS


				DELETE FROM [Production].[ProductDocument] WITH (ROWLOCK) 
				WHERE
					[ProductID] = @ProductId
					AND [DocumentID] = @DocumentId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDocument_GetByDocumentId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDocument_GetByDocumentId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDocument_GetByDocumentId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductDocument table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDocument_GetByDocumentId
(

	@DocumentId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[DocumentID],
					[ModifiedDate]
				FROM
					[Production].[ProductDocument]
				WHERE
					[DocumentID] = @DocumentId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDocument_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDocument_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDocument_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductDocument table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDocument_GetByProductId
(

	@ProductId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[DocumentID],
					[ModifiedDate]
				FROM
					[Production].[ProductDocument]
				WHERE
					[ProductID] = @ProductId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDocument_GetByProductIdDocumentId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDocument_GetByProductIdDocumentId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDocument_GetByProductIdDocumentId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductDocument table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDocument_GetByProductIdDocumentId
(

	@ProductId int   ,

	@DocumentId int   
)
AS


				SELECT
					[ProductID],
					[DocumentID],
					[ModifiedDate]
				FROM
					[Production].[ProductDocument]
				WHERE
					[ProductID] = @ProductId
					AND [DocumentID] = @DocumentId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDocument_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDocument_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDocument_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ProductDocument table passing nullable parameters
-- Table Comment: Cross-reference table mapping products to related product documents.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDocument_Find
(

	@SearchUsingOR bit   = null ,

	@ProductId int   = null ,

	@DocumentId int   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductID]
	, [DocumentID]
	, [ModifiedDate]
    FROM
	[Production].[ProductDocument]
    WHERE 
	 ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([DocumentID] = @DocumentId OR @DocumentId IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductID]
	, [DocumentID]
	, [ModifiedDate]
    FROM
	[Production].[ProductDocument]
    WHERE 
	 ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([DocumentID] = @DocumentId AND @DocumentId is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeAddress_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeAddress_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the EmployeeAddress table
-- Table Comment: Cross-reference table mapping employees to their address(es).
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_Get_List

AS


				
				SELECT
					[EmployeeID],
					[AddressID],
					[rowguid],
					[ModifiedDate]
				FROM
					[HumanResources].[EmployeeAddress]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeAddress_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeAddress_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the EmployeeAddress table passing page index and page count parameters
-- Table Comment: Cross-reference table mapping employees to their address(es).
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[EmployeeID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [EmployeeID]'
				SET @SQL = @SQL + ', [AddressID]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [HumanResources].[EmployeeAddress]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [EmployeeID],'
				SET @SQL = @SQL + ' [AddressID],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [HumanResources].[EmployeeAddress]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeAddress_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeAddress_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the EmployeeAddress table
-- Table Comment: Cross-reference table mapping employees to their address(es).
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_Insert
(

	@EmployeeId int   ,

	@AddressId int   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [HumanResources].[EmployeeAddress]
					(
					[EmployeeID]
					,[AddressID]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@EmployeeId
					,@AddressId
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeAddress_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeAddress_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the EmployeeAddress table
-- Table Comment: Cross-reference table mapping employees to their address(es).
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_Update
(

	@EmployeeId int   ,

	@OriginalEmployeeId int   ,

	@AddressId int   ,

	@OriginalAddressId int   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[HumanResources].[EmployeeAddress]
				SET
					[EmployeeID] = @EmployeeId
					,[AddressID] = @AddressId
					,[ModifiedDate] = @ModifiedDate
				WHERE
[EmployeeID] = @OriginalEmployeeId 
AND [AddressID] = @OriginalAddressId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeAddress_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeAddress_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the EmployeeAddress table
-- Table Comment: Cross-reference table mapping employees to their address(es).
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_Delete
(

	@EmployeeId int   ,

	@AddressId int   
)
AS


				DELETE FROM [HumanResources].[EmployeeAddress] WITH (ROWLOCK) 
				WHERE
					[EmployeeID] = @EmployeeId
					AND [AddressID] = @AddressId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeAddress_GetByAddressId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeAddress_GetByAddressId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_GetByAddressId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the EmployeeAddress table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_GetByAddressId
(

	@AddressId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[EmployeeID],
					[AddressID],
					[rowguid],
					[ModifiedDate]
				FROM
					[HumanResources].[EmployeeAddress]
				WHERE
					[AddressID] = @AddressId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeAddress_GetByEmployeeId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeAddress_GetByEmployeeId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_GetByEmployeeId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the EmployeeAddress table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_GetByEmployeeId
(

	@EmployeeId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[EmployeeID],
					[AddressID],
					[rowguid],
					[ModifiedDate]
				FROM
					[HumanResources].[EmployeeAddress]
				WHERE
					[EmployeeID] = @EmployeeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeAddress_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeAddress_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the EmployeeAddress table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[EmployeeID],
					[AddressID],
					[rowguid],
					[ModifiedDate]
				FROM
					[HumanResources].[EmployeeAddress]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeAddress_GetByEmployeeIdAddressId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeAddress_GetByEmployeeIdAddressId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_GetByEmployeeIdAddressId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the EmployeeAddress table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_GetByEmployeeIdAddressId
(

	@EmployeeId int   ,

	@AddressId int   
)
AS


				SELECT
					[EmployeeID],
					[AddressID],
					[rowguid],
					[ModifiedDate]
				FROM
					[HumanResources].[EmployeeAddress]
				WHERE
					[EmployeeID] = @EmployeeId
					AND [AddressID] = @AddressId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeAddress_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeAddress_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the EmployeeAddress table passing nullable parameters
-- Table Comment: Cross-reference table mapping employees to their address(es).
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeAddress_Find
(

	@SearchUsingOR bit   = null ,

	@EmployeeId int   = null ,

	@AddressId int   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [EmployeeID]
	, [AddressID]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[HumanResources].[EmployeeAddress]
    WHERE 
	 ([EmployeeID] = @EmployeeId OR @EmployeeId IS NULL)
	AND ([AddressID] = @AddressId OR @AddressId IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [EmployeeID]
	, [AddressID]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[HumanResources].[EmployeeAddress]
    WHERE 
	 ([EmployeeID] = @EmployeeId AND @EmployeeId is not null)
	OR ([AddressID] = @AddressId AND @AddressId is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductInventory_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductInventory_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductInventory_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ProductInventory table
-- Table Comment: Product inventory information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductInventory_Get_List

AS


				
				SELECT
					[ProductID],
					[LocationID],
					[Shelf],
					[Bin],
					[Quantity],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductInventory]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductInventory_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductInventory_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductInventory_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ProductInventory table passing page index and page count parameters
-- Table Comment: Product inventory information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductInventory_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [LocationID]'
				SET @SQL = @SQL + ', [Shelf]'
				SET @SQL = @SQL + ', [Bin]'
				SET @SQL = @SQL + ', [Quantity]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[ProductInventory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [LocationID],'
				SET @SQL = @SQL + ' [Shelf],'
				SET @SQL = @SQL + ' [Bin],'
				SET @SQL = @SQL + ' [Quantity],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[ProductInventory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductInventory_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductInventory_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductInventory_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ProductInventory table
-- Table Comment: Product inventory information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductInventory_Insert
(

	@ProductId int   ,

	@LocationId smallint   ,

	@Shelf nvarchar (10)  ,

	@Bin tinyint   ,

	@Quantity smallint   ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Production].[ProductInventory]
					(
					[ProductID]
					,[LocationID]
					,[Shelf]
					,[Bin]
					,[Quantity]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@ProductId
					,@LocationId
					,@Shelf
					,@Bin
					,@Quantity
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductInventory_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductInventory_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductInventory_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ProductInventory table
-- Table Comment: Product inventory information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductInventory_Update
(

	@ProductId int   ,

	@OriginalProductId int   ,

	@LocationId smallint   ,

	@OriginalLocationId smallint   ,

	@Shelf nvarchar (10)  ,

	@Bin tinyint   ,

	@Quantity smallint   ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[ProductInventory]
				SET
					[ProductID] = @ProductId
					,[LocationID] = @LocationId
					,[Shelf] = @Shelf
					,[Bin] = @Bin
					,[Quantity] = @Quantity
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ProductID] = @OriginalProductId 
AND [LocationID] = @OriginalLocationId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductInventory_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductInventory_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductInventory_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ProductInventory table
-- Table Comment: Product inventory information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductInventory_Delete
(

	@ProductId int   ,

	@LocationId smallint   
)
AS


				DELETE FROM [Production].[ProductInventory] WITH (ROWLOCK) 
				WHERE
					[ProductID] = @ProductId
					AND [LocationID] = @LocationId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductInventory_GetByLocationId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductInventory_GetByLocationId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductInventory_GetByLocationId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductInventory table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductInventory_GetByLocationId
(

	@LocationId smallint   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[LocationID],
					[Shelf],
					[Bin],
					[Quantity],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductInventory]
				WHERE
					[LocationID] = @LocationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductInventory_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductInventory_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductInventory_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductInventory table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductInventory_GetByProductId
(

	@ProductId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[LocationID],
					[Shelf],
					[Bin],
					[Quantity],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductInventory]
				WHERE
					[ProductID] = @ProductId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductInventory_GetByProductIdLocationId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductInventory_GetByProductIdLocationId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductInventory_GetByProductIdLocationId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductInventory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductInventory_GetByProductIdLocationId
(

	@ProductId int   ,

	@LocationId smallint   
)
AS


				SELECT
					[ProductID],
					[LocationID],
					[Shelf],
					[Bin],
					[Quantity],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductInventory]
				WHERE
					[ProductID] = @ProductId
					AND [LocationID] = @LocationId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductInventory_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductInventory_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductInventory_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ProductInventory table passing nullable parameters
-- Table Comment: Product inventory information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductInventory_Find
(

	@SearchUsingOR bit   = null ,

	@ProductId int   = null ,

	@LocationId smallint   = null ,

	@Shelf nvarchar (10)  = null ,

	@Bin tinyint   = null ,

	@Quantity smallint   = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductID]
	, [LocationID]
	, [Shelf]
	, [Bin]
	, [Quantity]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Production].[ProductInventory]
    WHERE 
	 ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([LocationID] = @LocationId OR @LocationId IS NULL)
	AND ([Shelf] = @Shelf OR @Shelf IS NULL)
	AND ([Bin] = @Bin OR @Bin IS NULL)
	AND ([Quantity] = @Quantity OR @Quantity IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductID]
	, [LocationID]
	, [Shelf]
	, [Bin]
	, [Quantity]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Production].[ProductInventory]
    WHERE 
	 ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([Shelf] = @Shelf AND @Shelf is not null)
	OR ([Bin] = @Bin AND @Bin is not null)
	OR ([Quantity] = @Quantity AND @Quantity is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDescription_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDescription_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDescription_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ProductDescription table
-- Table Comment: Product descriptions in several languages.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDescription_Get_List

AS


				
				SELECT
					[ProductDescriptionID],
					[Description],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductDescription]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDescription_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDescription_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDescription_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ProductDescription table passing page index and page count parameters
-- Table Comment: Product descriptions in several languages.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDescription_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductDescriptionID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductDescriptionID]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[ProductDescription]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductDescriptionID],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[ProductDescription]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDescription_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDescription_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDescription_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ProductDescription table
-- Table Comment: Product descriptions in several languages.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDescription_Insert
(

	@ProductDescriptionId int    OUTPUT,

	@Description nvarchar (400)  ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Production].[ProductDescription]
					(
					[Description]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@Description
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @ProductDescriptionId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDescription_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDescription_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDescription_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ProductDescription table
-- Table Comment: Product descriptions in several languages.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDescription_Update
(

	@ProductDescriptionId int   ,

	@Description nvarchar (400)  ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[ProductDescription]
				SET
					[Description] = @Description
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ProductDescriptionID] = @ProductDescriptionId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDescription_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDescription_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDescription_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ProductDescription table
-- Table Comment: Product descriptions in several languages.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDescription_Delete
(

	@ProductDescriptionId int   
)
AS


				DELETE FROM [Production].[ProductDescription] WITH (ROWLOCK) 
				WHERE
					[ProductDescriptionID] = @ProductDescriptionId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDescription_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDescription_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDescription_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductDescription table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDescription_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[ProductDescriptionID],
					[Description],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductDescription]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDescription_GetByProductDescriptionId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDescription_GetByProductDescriptionId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDescription_GetByProductDescriptionId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductDescription table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDescription_GetByProductDescriptionId
(

	@ProductDescriptionId int   
)
AS


				SELECT
					[ProductDescriptionID],
					[Description],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[ProductDescription]
				WHERE
					[ProductDescriptionID] = @ProductDescriptionId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDescription_GetByCultureIdFromProductModelProductDescriptionCulture procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDescription_GetByCultureIdFromProductModelProductDescriptionCulture') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDescription_GetByCultureIdFromProductModelProductDescriptionCulture
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDescription_GetByCultureIdFromProductModelProductDescriptionCulture
(

	@CultureId nchar (6)  
)
AS


SELECT Production.[ProductDescription].[ProductDescriptionID]
       ,Production.[ProductDescription].[Description]
       ,Production.[ProductDescription].[rowguid]
       ,Production.[ProductDescription].[ModifiedDate]
  FROM Production.[ProductDescription]
 WHERE EXISTS (SELECT 1
                 FROM Production.[ProductModelProductDescriptionCulture] 
                WHERE Production.[ProductModelProductDescriptionCulture].[CultureID] = @CultureId
                  AND Production.[ProductModelProductDescriptionCulture].[ProductDescriptionID] = Production.[ProductDescription].[ProductDescriptionID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDescription_GetByProductModelIdFromProductModelProductDescriptionCulture procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDescription_GetByProductModelIdFromProductModelProductDescriptionCulture') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDescription_GetByProductModelIdFromProductModelProductDescriptionCulture
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDescription_GetByProductModelIdFromProductModelProductDescriptionCulture
(

	@ProductModelId int   
)
AS


SELECT Production.[ProductDescription].[ProductDescriptionID]
       ,Production.[ProductDescription].[Description]
       ,Production.[ProductDescription].[rowguid]
       ,Production.[ProductDescription].[ModifiedDate]
  FROM Production.[ProductDescription]
 WHERE EXISTS (SELECT 1
                 FROM Production.[ProductModelProductDescriptionCulture] 
                WHERE Production.[ProductModelProductDescriptionCulture].[ProductModelID] = @ProductModelId
                  AND Production.[ProductModelProductDescriptionCulture].[ProductDescriptionID] = Production.[ProductDescription].[ProductDescriptionID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductDescription_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductDescription_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductDescription_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ProductDescription table passing nullable parameters
-- Table Comment: Product descriptions in several languages.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductDescription_Find
(

	@SearchUsingOR bit   = null ,

	@ProductDescriptionId int   = null ,

	@Description nvarchar (400)  = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductDescriptionID]
	, [Description]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Production].[ProductDescription]
    WHERE 
	 ([ProductDescriptionID] = @ProductDescriptionId OR @ProductDescriptionId IS NULL)
	AND ([Description] = @Description OR @Description IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductDescriptionID]
	, [Description]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Production].[ProductDescription]
    WHERE 
	 ([ProductDescriptionID] = @ProductDescriptionId AND @ProductDescriptionId is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelIllustration_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelIllustration_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelIllustration_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ProductModelIllustration table
-- Table Comment: Cross-reference table mapping product models and illustrations.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelIllustration_Get_List

AS


				
				SELECT
					[ProductModelID],
					[IllustrationID],
					[ModifiedDate]
				FROM
					[Production].[ProductModelIllustration]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelIllustration_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelIllustration_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelIllustration_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ProductModelIllustration table passing page index and page count parameters
-- Table Comment: Cross-reference table mapping product models and illustrations.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelIllustration_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductModelID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductModelID]'
				SET @SQL = @SQL + ', [IllustrationID]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[ProductModelIllustration]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductModelID],'
				SET @SQL = @SQL + ' [IllustrationID],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[ProductModelIllustration]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelIllustration_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelIllustration_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelIllustration_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ProductModelIllustration table
-- Table Comment: Cross-reference table mapping product models and illustrations.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelIllustration_Insert
(

	@ProductModelId int   ,

	@IllustrationId int   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[ProductModelIllustration]
					(
					[ProductModelID]
					,[IllustrationID]
					,[ModifiedDate]
					)
				VALUES
					(
					@ProductModelId
					,@IllustrationId
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelIllustration_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelIllustration_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelIllustration_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ProductModelIllustration table
-- Table Comment: Cross-reference table mapping product models and illustrations.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelIllustration_Update
(

	@ProductModelId int   ,

	@OriginalProductModelId int   ,

	@IllustrationId int   ,

	@OriginalIllustrationId int   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[ProductModelIllustration]
				SET
					[ProductModelID] = @ProductModelId
					,[IllustrationID] = @IllustrationId
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ProductModelID] = @OriginalProductModelId 
AND [IllustrationID] = @OriginalIllustrationId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelIllustration_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelIllustration_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelIllustration_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ProductModelIllustration table
-- Table Comment: Cross-reference table mapping product models and illustrations.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelIllustration_Delete
(

	@ProductModelId int   ,

	@IllustrationId int   
)
AS


				DELETE FROM [Production].[ProductModelIllustration] WITH (ROWLOCK) 
				WHERE
					[ProductModelID] = @ProductModelId
					AND [IllustrationID] = @IllustrationId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelIllustration_GetByIllustrationId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelIllustration_GetByIllustrationId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelIllustration_GetByIllustrationId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductModelIllustration table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelIllustration_GetByIllustrationId
(

	@IllustrationId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductModelID],
					[IllustrationID],
					[ModifiedDate]
				FROM
					[Production].[ProductModelIllustration]
				WHERE
					[IllustrationID] = @IllustrationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelIllustration_GetByProductModelId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelIllustration_GetByProductModelId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelIllustration_GetByProductModelId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductModelIllustration table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelIllustration_GetByProductModelId
(

	@ProductModelId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductModelID],
					[IllustrationID],
					[ModifiedDate]
				FROM
					[Production].[ProductModelIllustration]
				WHERE
					[ProductModelID] = @ProductModelId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelIllustration_GetByProductModelIdIllustrationId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelIllustration_GetByProductModelIdIllustrationId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelIllustration_GetByProductModelIdIllustrationId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductModelIllustration table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelIllustration_GetByProductModelIdIllustrationId
(

	@ProductModelId int   ,

	@IllustrationId int   
)
AS


				SELECT
					[ProductModelID],
					[IllustrationID],
					[ModifiedDate]
				FROM
					[Production].[ProductModelIllustration]
				WHERE
					[ProductModelID] = @ProductModelId
					AND [IllustrationID] = @IllustrationId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductModelIllustration_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductModelIllustration_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductModelIllustration_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ProductModelIllustration table passing nullable parameters
-- Table Comment: Cross-reference table mapping product models and illustrations.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductModelIllustration_Find
(

	@SearchUsingOR bit   = null ,

	@ProductModelId int   = null ,

	@IllustrationId int   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductModelID]
	, [IllustrationID]
	, [ModifiedDate]
    FROM
	[Production].[ProductModelIllustration]
    WHERE 
	 ([ProductModelID] = @ProductModelId OR @ProductModelId IS NULL)
	AND ([IllustrationID] = @IllustrationId OR @IllustrationId IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductModelID]
	, [IllustrationID]
	, [ModifiedDate]
    FROM
	[Production].[ProductModelIllustration]
    WHERE 
	 ([ProductModelID] = @ProductModelId AND @ProductModelId is not null)
	OR ([IllustrationID] = @IllustrationId AND @IllustrationId is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductListPriceHistory_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductListPriceHistory_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ProductListPriceHistory table
-- Table Comment: Changes in the list price of a product over time.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_Get_List

AS


				
				SELECT
					[ProductID],
					[StartDate],
					[EndDate],
					[ListPrice],
					[ModifiedDate]
				FROM
					[Production].[ProductListPriceHistory]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductListPriceHistory_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductListPriceHistory_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ProductListPriceHistory table passing page index and page count parameters
-- Table Comment: Changes in the list price of a product over time.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [StartDate]'
				SET @SQL = @SQL + ', [EndDate]'
				SET @SQL = @SQL + ', [ListPrice]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[ProductListPriceHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [StartDate],'
				SET @SQL = @SQL + ' [EndDate],'
				SET @SQL = @SQL + ' [ListPrice],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[ProductListPriceHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductListPriceHistory_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductListPriceHistory_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ProductListPriceHistory table
-- Table Comment: Changes in the list price of a product over time.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_Insert
(

	@ProductId int   ,

	@StartDate datetime   ,

	@EndDate datetime   ,

	@ListPrice money   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[ProductListPriceHistory]
					(
					[ProductID]
					,[StartDate]
					,[EndDate]
					,[ListPrice]
					,[ModifiedDate]
					)
				VALUES
					(
					@ProductId
					,@StartDate
					,@EndDate
					,@ListPrice
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductListPriceHistory_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductListPriceHistory_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ProductListPriceHistory table
-- Table Comment: Changes in the list price of a product over time.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_Update
(

	@ProductId int   ,

	@OriginalProductId int   ,

	@StartDate datetime   ,

	@OriginalStartDate datetime   ,

	@EndDate datetime   ,

	@ListPrice money   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[ProductListPriceHistory]
				SET
					[ProductID] = @ProductId
					,[StartDate] = @StartDate
					,[EndDate] = @EndDate
					,[ListPrice] = @ListPrice
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ProductID] = @OriginalProductId 
AND [StartDate] = @OriginalStartDate 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductListPriceHistory_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductListPriceHistory_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ProductListPriceHistory table
-- Table Comment: Changes in the list price of a product over time.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_Delete
(

	@ProductId int   ,

	@StartDate datetime   
)
AS


				DELETE FROM [Production].[ProductListPriceHistory] WITH (ROWLOCK) 
				WHERE
					[ProductID] = @ProductId
					AND [StartDate] = @StartDate
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductListPriceHistory_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductListPriceHistory_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductListPriceHistory table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_GetByProductId
(

	@ProductId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[StartDate],
					[EndDate],
					[ListPrice],
					[ModifiedDate]
				FROM
					[Production].[ProductListPriceHistory]
				WHERE
					[ProductID] = @ProductId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductListPriceHistory_GetByProductIdStartDate procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductListPriceHistory_GetByProductIdStartDate') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_GetByProductIdStartDate
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductListPriceHistory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_GetByProductIdStartDate
(

	@ProductId int   ,

	@StartDate datetime   
)
AS


				SELECT
					[ProductID],
					[StartDate],
					[EndDate],
					[ListPrice],
					[ModifiedDate]
				FROM
					[Production].[ProductListPriceHistory]
				WHERE
					[ProductID] = @ProductId
					AND [StartDate] = @StartDate
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductListPriceHistory_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductListPriceHistory_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ProductListPriceHistory table passing nullable parameters
-- Table Comment: Changes in the list price of a product over time.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductListPriceHistory_Find
(

	@SearchUsingOR bit   = null ,

	@ProductId int   = null ,

	@StartDate datetime   = null ,

	@EndDate datetime   = null ,

	@ListPrice money   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductID]
	, [StartDate]
	, [EndDate]
	, [ListPrice]
	, [ModifiedDate]
    FROM
	[Production].[ProductListPriceHistory]
    WHERE 
	 ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([StartDate] = @StartDate OR @StartDate IS NULL)
	AND ([EndDate] = @EndDate OR @EndDate IS NULL)
	AND ([ListPrice] = @ListPrice OR @ListPrice IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductID]
	, [StartDate]
	, [EndDate]
	, [ListPrice]
	, [ModifiedDate]
    FROM
	[Production].[ProductListPriceHistory]
    WHERE 
	 ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([StartDate] = @StartDate AND @StartDate is not null)
	OR ([EndDate] = @EndDate AND @EndDate is not null)
	OR ([ListPrice] = @ListPrice AND @ListPrice is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCostHistory_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCostHistory_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCostHistory_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ProductCostHistory table
-- Table Comment: Changes in the cost of a product over time.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCostHistory_Get_List

AS


				
				SELECT
					[ProductID],
					[StartDate],
					[EndDate],
					[StandardCost],
					[ModifiedDate]
				FROM
					[Production].[ProductCostHistory]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCostHistory_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCostHistory_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCostHistory_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ProductCostHistory table passing page index and page count parameters
-- Table Comment: Changes in the cost of a product over time.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCostHistory_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [StartDate]'
				SET @SQL = @SQL + ', [EndDate]'
				SET @SQL = @SQL + ', [StandardCost]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[ProductCostHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [StartDate],'
				SET @SQL = @SQL + ' [EndDate],'
				SET @SQL = @SQL + ' [StandardCost],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[ProductCostHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCostHistory_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCostHistory_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCostHistory_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ProductCostHistory table
-- Table Comment: Changes in the cost of a product over time.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCostHistory_Insert
(

	@ProductId int   ,

	@StartDate datetime   ,

	@EndDate datetime   ,

	@StandardCost money   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[ProductCostHistory]
					(
					[ProductID]
					,[StartDate]
					,[EndDate]
					,[StandardCost]
					,[ModifiedDate]
					)
				VALUES
					(
					@ProductId
					,@StartDate
					,@EndDate
					,@StandardCost
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCostHistory_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCostHistory_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCostHistory_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ProductCostHistory table
-- Table Comment: Changes in the cost of a product over time.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCostHistory_Update
(

	@ProductId int   ,

	@OriginalProductId int   ,

	@StartDate datetime   ,

	@OriginalStartDate datetime   ,

	@EndDate datetime   ,

	@StandardCost money   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[ProductCostHistory]
				SET
					[ProductID] = @ProductId
					,[StartDate] = @StartDate
					,[EndDate] = @EndDate
					,[StandardCost] = @StandardCost
					,[ModifiedDate] = @ModifiedDate
				WHERE
[ProductID] = @OriginalProductId 
AND [StartDate] = @OriginalStartDate 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCostHistory_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCostHistory_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCostHistory_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ProductCostHistory table
-- Table Comment: Changes in the cost of a product over time.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCostHistory_Delete
(

	@ProductId int   ,

	@StartDate datetime   
)
AS


				DELETE FROM [Production].[ProductCostHistory] WITH (ROWLOCK) 
				WHERE
					[ProductID] = @ProductId
					AND [StartDate] = @StartDate
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCostHistory_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCostHistory_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCostHistory_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductCostHistory table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCostHistory_GetByProductId
(

	@ProductId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[StartDate],
					[EndDate],
					[StandardCost],
					[ModifiedDate]
				FROM
					[Production].[ProductCostHistory]
				WHERE
					[ProductID] = @ProductId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCostHistory_GetByProductIdStartDate procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCostHistory_GetByProductIdStartDate') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCostHistory_GetByProductIdStartDate
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ProductCostHistory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCostHistory_GetByProductIdStartDate
(

	@ProductId int   ,

	@StartDate datetime   
)
AS


				SELECT
					[ProductID],
					[StartDate],
					[EndDate],
					[StandardCost],
					[ModifiedDate]
				FROM
					[Production].[ProductCostHistory]
				WHERE
					[ProductID] = @ProductId
					AND [StartDate] = @StartDate
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_ProductCostHistory_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_ProductCostHistory_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_ProductCostHistory_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ProductCostHistory table passing nullable parameters
-- Table Comment: Changes in the cost of a product over time.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_ProductCostHistory_Find
(

	@SearchUsingOR bit   = null ,

	@ProductId int   = null ,

	@StartDate datetime   = null ,

	@EndDate datetime   = null ,

	@StandardCost money   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductID]
	, [StartDate]
	, [EndDate]
	, [StandardCost]
	, [ModifiedDate]
    FROM
	[Production].[ProductCostHistory]
    WHERE 
	 ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([StartDate] = @StartDate OR @StartDate IS NULL)
	AND ([EndDate] = @EndDate OR @EndDate IS NULL)
	AND ([StandardCost] = @StandardCost OR @StandardCost IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductID]
	, [StartDate]
	, [EndDate]
	, [StandardCost]
	, [ModifiedDate]
    FROM
	[Production].[ProductCostHistory]
    WHERE 
	 ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([StartDate] = @StartDate AND @StartDate is not null)
	OR ([EndDate] = @EndDate AND @EndDate is not null)
	OR ([StandardCost] = @StandardCost AND @StandardCost is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrderRouting_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrderRouting_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrderRouting_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the WorkOrderRouting table
-- Table Comment: Work order details.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrderRouting_Get_List

AS


				
				SELECT
					[WorkOrderID],
					[ProductID],
					[OperationSequence],
					[LocationID],
					[ScheduledStartDate],
					[ScheduledEndDate],
					[ActualStartDate],
					[ActualEndDate],
					[ActualResourceHrs],
					[PlannedCost],
					[ActualCost],
					[ModifiedDate]
				FROM
					[Production].[WorkOrderRouting]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrderRouting_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrderRouting_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrderRouting_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the WorkOrderRouting table passing page index and page count parameters
-- Table Comment: Work order details.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrderRouting_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[WorkOrderID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [WorkOrderID]'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [OperationSequence]'
				SET @SQL = @SQL + ', [LocationID]'
				SET @SQL = @SQL + ', [ScheduledStartDate]'
				SET @SQL = @SQL + ', [ScheduledEndDate]'
				SET @SQL = @SQL + ', [ActualStartDate]'
				SET @SQL = @SQL + ', [ActualEndDate]'
				SET @SQL = @SQL + ', [ActualResourceHrs]'
				SET @SQL = @SQL + ', [PlannedCost]'
				SET @SQL = @SQL + ', [ActualCost]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[WorkOrderRouting]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [WorkOrderID],'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [OperationSequence],'
				SET @SQL = @SQL + ' [LocationID],'
				SET @SQL = @SQL + ' [ScheduledStartDate],'
				SET @SQL = @SQL + ' [ScheduledEndDate],'
				SET @SQL = @SQL + ' [ActualStartDate],'
				SET @SQL = @SQL + ' [ActualEndDate],'
				SET @SQL = @SQL + ' [ActualResourceHrs],'
				SET @SQL = @SQL + ' [PlannedCost],'
				SET @SQL = @SQL + ' [ActualCost],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[WorkOrderRouting]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrderRouting_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrderRouting_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrderRouting_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the WorkOrderRouting table
-- Table Comment: Work order details.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrderRouting_Insert
(

	@WorkOrderId int   ,

	@ProductId int   ,

	@OperationSequence smallint   ,

	@LocationId smallint   ,

	@ScheduledStartDate datetime   ,

	@ScheduledEndDate datetime   ,

	@ActualStartDate datetime   ,

	@ActualEndDate datetime   ,

	@ActualResourceHrs decimal (9, 4)  ,

	@PlannedCost money   ,

	@ActualCost money   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[WorkOrderRouting]
					(
					[WorkOrderID]
					,[ProductID]
					,[OperationSequence]
					,[LocationID]
					,[ScheduledStartDate]
					,[ScheduledEndDate]
					,[ActualStartDate]
					,[ActualEndDate]
					,[ActualResourceHrs]
					,[PlannedCost]
					,[ActualCost]
					,[ModifiedDate]
					)
				VALUES
					(
					@WorkOrderId
					,@ProductId
					,@OperationSequence
					,@LocationId
					,@ScheduledStartDate
					,@ScheduledEndDate
					,@ActualStartDate
					,@ActualEndDate
					,@ActualResourceHrs
					,@PlannedCost
					,@ActualCost
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrderRouting_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrderRouting_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrderRouting_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the WorkOrderRouting table
-- Table Comment: Work order details.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrderRouting_Update
(

	@WorkOrderId int   ,

	@OriginalWorkOrderId int   ,

	@ProductId int   ,

	@OriginalProductId int   ,

	@OperationSequence smallint   ,

	@OriginalOperationSequence smallint   ,

	@LocationId smallint   ,

	@ScheduledStartDate datetime   ,

	@ScheduledEndDate datetime   ,

	@ActualStartDate datetime   ,

	@ActualEndDate datetime   ,

	@ActualResourceHrs decimal (9, 4)  ,

	@PlannedCost money   ,

	@ActualCost money   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[WorkOrderRouting]
				SET
					[WorkOrderID] = @WorkOrderId
					,[ProductID] = @ProductId
					,[OperationSequence] = @OperationSequence
					,[LocationID] = @LocationId
					,[ScheduledStartDate] = @ScheduledStartDate
					,[ScheduledEndDate] = @ScheduledEndDate
					,[ActualStartDate] = @ActualStartDate
					,[ActualEndDate] = @ActualEndDate
					,[ActualResourceHrs] = @ActualResourceHrs
					,[PlannedCost] = @PlannedCost
					,[ActualCost] = @ActualCost
					,[ModifiedDate] = @ModifiedDate
				WHERE
[WorkOrderID] = @OriginalWorkOrderId 
AND [ProductID] = @OriginalProductId 
AND [OperationSequence] = @OriginalOperationSequence 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrderRouting_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrderRouting_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrderRouting_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the WorkOrderRouting table
-- Table Comment: Work order details.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrderRouting_Delete
(

	@WorkOrderId int   ,

	@ProductId int   ,

	@OperationSequence smallint   
)
AS


				DELETE FROM [Production].[WorkOrderRouting] WITH (ROWLOCK) 
				WHERE
					[WorkOrderID] = @WorkOrderId
					AND [ProductID] = @ProductId
					AND [OperationSequence] = @OperationSequence
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrderRouting_GetByLocationId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrderRouting_GetByLocationId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrderRouting_GetByLocationId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the WorkOrderRouting table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrderRouting_GetByLocationId
(

	@LocationId smallint   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[WorkOrderID],
					[ProductID],
					[OperationSequence],
					[LocationID],
					[ScheduledStartDate],
					[ScheduledEndDate],
					[ActualStartDate],
					[ActualEndDate],
					[ActualResourceHrs],
					[PlannedCost],
					[ActualCost],
					[ModifiedDate]
				FROM
					[Production].[WorkOrderRouting]
				WHERE
					[LocationID] = @LocationId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrderRouting_GetByWorkOrderId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrderRouting_GetByWorkOrderId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrderRouting_GetByWorkOrderId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the WorkOrderRouting table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrderRouting_GetByWorkOrderId
(

	@WorkOrderId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[WorkOrderID],
					[ProductID],
					[OperationSequence],
					[LocationID],
					[ScheduledStartDate],
					[ScheduledEndDate],
					[ActualStartDate],
					[ActualEndDate],
					[ActualResourceHrs],
					[PlannedCost],
					[ActualCost],
					[ModifiedDate]
				FROM
					[Production].[WorkOrderRouting]
				WHERE
					[WorkOrderID] = @WorkOrderId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrderRouting_GetByProductId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrderRouting_GetByProductId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrderRouting_GetByProductId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the WorkOrderRouting table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrderRouting_GetByProductId
(

	@ProductId int   
)
AS


				SELECT
					[WorkOrderID],
					[ProductID],
					[OperationSequence],
					[LocationID],
					[ScheduledStartDate],
					[ScheduledEndDate],
					[ActualStartDate],
					[ActualEndDate],
					[ActualResourceHrs],
					[PlannedCost],
					[ActualCost],
					[ModifiedDate]
				FROM
					[Production].[WorkOrderRouting]
				WHERE
					[ProductID] = @ProductId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrderRouting_GetByWorkOrderIdProductIdOperationSequence procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrderRouting_GetByWorkOrderIdProductIdOperationSequence') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrderRouting_GetByWorkOrderIdProductIdOperationSequence
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the WorkOrderRouting table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrderRouting_GetByWorkOrderIdProductIdOperationSequence
(

	@WorkOrderId int   ,

	@ProductId int   ,

	@OperationSequence smallint   
)
AS


				SELECT
					[WorkOrderID],
					[ProductID],
					[OperationSequence],
					[LocationID],
					[ScheduledStartDate],
					[ScheduledEndDate],
					[ActualStartDate],
					[ActualEndDate],
					[ActualResourceHrs],
					[PlannedCost],
					[ActualCost],
					[ModifiedDate]
				FROM
					[Production].[WorkOrderRouting]
				WHERE
					[WorkOrderID] = @WorkOrderId
					AND [ProductID] = @ProductId
					AND [OperationSequence] = @OperationSequence
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_WorkOrderRouting_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_WorkOrderRouting_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_WorkOrderRouting_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the WorkOrderRouting table passing nullable parameters
-- Table Comment: Work order details.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_WorkOrderRouting_Find
(

	@SearchUsingOR bit   = null ,

	@WorkOrderId int   = null ,

	@ProductId int   = null ,

	@OperationSequence smallint   = null ,

	@LocationId smallint   = null ,

	@ScheduledStartDate datetime   = null ,

	@ScheduledEndDate datetime   = null ,

	@ActualStartDate datetime   = null ,

	@ActualEndDate datetime   = null ,

	@ActualResourceHrs decimal (9, 4)  = null ,

	@PlannedCost money   = null ,

	@ActualCost money   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [WorkOrderID]
	, [ProductID]
	, [OperationSequence]
	, [LocationID]
	, [ScheduledStartDate]
	, [ScheduledEndDate]
	, [ActualStartDate]
	, [ActualEndDate]
	, [ActualResourceHrs]
	, [PlannedCost]
	, [ActualCost]
	, [ModifiedDate]
    FROM
	[Production].[WorkOrderRouting]
    WHERE 
	 ([WorkOrderID] = @WorkOrderId OR @WorkOrderId IS NULL)
	AND ([ProductID] = @ProductId OR @ProductId IS NULL)
	AND ([OperationSequence] = @OperationSequence OR @OperationSequence IS NULL)
	AND ([LocationID] = @LocationId OR @LocationId IS NULL)
	AND ([ScheduledStartDate] = @ScheduledStartDate OR @ScheduledStartDate IS NULL)
	AND ([ScheduledEndDate] = @ScheduledEndDate OR @ScheduledEndDate IS NULL)
	AND ([ActualStartDate] = @ActualStartDate OR @ActualStartDate IS NULL)
	AND ([ActualEndDate] = @ActualEndDate OR @ActualEndDate IS NULL)
	AND ([ActualResourceHrs] = @ActualResourceHrs OR @ActualResourceHrs IS NULL)
	AND ([PlannedCost] = @PlannedCost OR @PlannedCost IS NULL)
	AND ([ActualCost] = @ActualCost OR @ActualCost IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [WorkOrderID]
	, [ProductID]
	, [OperationSequence]
	, [LocationID]
	, [ScheduledStartDate]
	, [ScheduledEndDate]
	, [ActualStartDate]
	, [ActualEndDate]
	, [ActualResourceHrs]
	, [PlannedCost]
	, [ActualCost]
	, [ModifiedDate]
    FROM
	[Production].[WorkOrderRouting]
    WHERE 
	 ([WorkOrderID] = @WorkOrderId AND @WorkOrderId is not null)
	OR ([ProductID] = @ProductId AND @ProductId is not null)
	OR ([OperationSequence] = @OperationSequence AND @OperationSequence is not null)
	OR ([LocationID] = @LocationId AND @LocationId is not null)
	OR ([ScheduledStartDate] = @ScheduledStartDate AND @ScheduledStartDate is not null)
	OR ([ScheduledEndDate] = @ScheduledEndDate AND @ScheduledEndDate is not null)
	OR ([ActualStartDate] = @ActualStartDate AND @ActualStartDate is not null)
	OR ([ActualEndDate] = @ActualEndDate AND @ActualEndDate is not null)
	OR ([ActualResourceHrs] = @ActualResourceHrs AND @ActualResourceHrs is not null)
	OR ([PlannedCost] = @PlannedCost AND @PlannedCost is not null)
	OR ([ActualCost] = @ActualCost AND @ActualCost is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_NullFKeyParent_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_NullFKeyParent_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_NullFKeyParent_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the NullFKeyParent table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_NullFKeyParent_Get_List

AS


				
				SELECT
					[NullFKeyParentID],
					[SomeText]
				FROM
					[Test].[NullFKeyParent]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_NullFKeyParent_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_NullFKeyParent_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_NullFKeyParent_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the NullFKeyParent table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_NullFKeyParent_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[NullFKeyParentID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [NullFKeyParentID]'
				SET @SQL = @SQL + ', [SomeText]'
				SET @SQL = @SQL + ' FROM [Test].[NullFKeyParent]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [NullFKeyParentID],'
				SET @SQL = @SQL + ' [SomeText]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Test].[NullFKeyParent]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_NullFKeyParent_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_NullFKeyParent_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_NullFKeyParent_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the NullFKeyParent table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_NullFKeyParent_Insert
(

	@NullFkeyParentId int   ,

	@SomeText varchar (50)  
)
AS


				
				INSERT INTO [Test].[NullFKeyParent]
					(
					[NullFKeyParentID]
					,[SomeText]
					)
				VALUES
					(
					@NullFkeyParentId
					,@SomeText
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_NullFKeyParent_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_NullFKeyParent_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_NullFKeyParent_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the NullFKeyParent table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_NullFKeyParent_Update
(

	@NullFkeyParentId int   ,

	@OriginalNullFkeyParentId int   ,

	@SomeText varchar (50)  
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Test].[NullFKeyParent]
				SET
					[NullFKeyParentID] = @NullFkeyParentId
					,[SomeText] = @SomeText
				WHERE
[NullFKeyParentID] = @OriginalNullFkeyParentId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_NullFKeyParent_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_NullFKeyParent_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_NullFKeyParent_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the NullFKeyParent table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_NullFKeyParent_Delete
(

	@NullFkeyParentId int   
)
AS


				DELETE FROM [Test].[NullFKeyParent] WITH (ROWLOCK) 
				WHERE
					[NullFKeyParentID] = @NullFkeyParentId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_NullFKeyParent_GetByNullFkeyParentId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_NullFKeyParent_GetByNullFkeyParentId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_NullFKeyParent_GetByNullFkeyParentId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the NullFKeyParent table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_NullFKeyParent_GetByNullFkeyParentId
(

	@NullFkeyParentId int   
)
AS


				SELECT
					[NullFKeyParentID],
					[SomeText]
				FROM
					[Test].[NullFKeyParent]
				WHERE
					[NullFKeyParentID] = @NullFkeyParentId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_NullFKeyParent_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_NullFKeyParent_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_NullFKeyParent_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the NullFKeyParent table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_NullFKeyParent_Find
(

	@SearchUsingOR bit   = null ,

	@NullFkeyParentId int   = null ,

	@SomeText varchar (50)  = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [NullFKeyParentID]
	, [SomeText]
    FROM
	[Test].[NullFKeyParent]
    WHERE 
	 ([NullFKeyParentID] = @NullFkeyParentId OR @NullFkeyParentId IS NULL)
	AND ([SomeText] = @SomeText OR @SomeText IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [NullFKeyParentID]
	, [SomeText]
    FROM
	[Test].[NullFKeyParent]
    WHERE 
	 ([NullFKeyParentID] = @NullFkeyParentId AND @NullFkeyParentId is not null)
	OR ([SomeText] = @SomeText AND @SomeText is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeePayHistory_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeePayHistory_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the EmployeePayHistory table
-- Table Comment: Employee pay history.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_Get_List

AS


				
				SELECT
					[EmployeeID],
					[RateChangeDate],
					[Rate],
					[PayFrequency],
					[ModifiedDate]
				FROM
					[HumanResources].[EmployeePayHistory]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeePayHistory_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeePayHistory_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the EmployeePayHistory table passing page index and page count parameters
-- Table Comment: Employee pay history.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[EmployeeID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [EmployeeID]'
				SET @SQL = @SQL + ', [RateChangeDate]'
				SET @SQL = @SQL + ', [Rate]'
				SET @SQL = @SQL + ', [PayFrequency]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [HumanResources].[EmployeePayHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [EmployeeID],'
				SET @SQL = @SQL + ' [RateChangeDate],'
				SET @SQL = @SQL + ' [Rate],'
				SET @SQL = @SQL + ' [PayFrequency],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [HumanResources].[EmployeePayHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeePayHistory_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeePayHistory_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the EmployeePayHistory table
-- Table Comment: Employee pay history.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_Insert
(

	@EmployeeId int   ,

	@RateChangeDate datetime   ,

	@Rate money   ,

	@PayFrequency tinyint   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [HumanResources].[EmployeePayHistory]
					(
					[EmployeeID]
					,[RateChangeDate]
					,[Rate]
					,[PayFrequency]
					,[ModifiedDate]
					)
				VALUES
					(
					@EmployeeId
					,@RateChangeDate
					,@Rate
					,@PayFrequency
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeePayHistory_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeePayHistory_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the EmployeePayHistory table
-- Table Comment: Employee pay history.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_Update
(

	@EmployeeId int   ,

	@OriginalEmployeeId int   ,

	@RateChangeDate datetime   ,

	@OriginalRateChangeDate datetime   ,

	@Rate money   ,

	@PayFrequency tinyint   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[HumanResources].[EmployeePayHistory]
				SET
					[EmployeeID] = @EmployeeId
					,[RateChangeDate] = @RateChangeDate
					,[Rate] = @Rate
					,[PayFrequency] = @PayFrequency
					,[ModifiedDate] = @ModifiedDate
				WHERE
[EmployeeID] = @OriginalEmployeeId 
AND [RateChangeDate] = @OriginalRateChangeDate 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeePayHistory_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeePayHistory_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the EmployeePayHistory table
-- Table Comment: Employee pay history.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_Delete
(

	@EmployeeId int   ,

	@RateChangeDate datetime   
)
AS


				DELETE FROM [HumanResources].[EmployeePayHistory] WITH (ROWLOCK) 
				WHERE
					[EmployeeID] = @EmployeeId
					AND [RateChangeDate] = @RateChangeDate
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeePayHistory_GetByEmployeeId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeePayHistory_GetByEmployeeId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_GetByEmployeeId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the EmployeePayHistory table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_GetByEmployeeId
(

	@EmployeeId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[EmployeeID],
					[RateChangeDate],
					[Rate],
					[PayFrequency],
					[ModifiedDate]
				FROM
					[HumanResources].[EmployeePayHistory]
				WHERE
					[EmployeeID] = @EmployeeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeePayHistory_GetByEmployeeIdRateChangeDate procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeePayHistory_GetByEmployeeIdRateChangeDate') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_GetByEmployeeIdRateChangeDate
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the EmployeePayHistory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_GetByEmployeeIdRateChangeDate
(

	@EmployeeId int   ,

	@RateChangeDate datetime   
)
AS


				SELECT
					[EmployeeID],
					[RateChangeDate],
					[Rate],
					[PayFrequency],
					[ModifiedDate]
				FROM
					[HumanResources].[EmployeePayHistory]
				WHERE
					[EmployeeID] = @EmployeeId
					AND [RateChangeDate] = @RateChangeDate
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeePayHistory_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeePayHistory_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the EmployeePayHistory table passing nullable parameters
-- Table Comment: Employee pay history.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeePayHistory_Find
(

	@SearchUsingOR bit   = null ,

	@EmployeeId int   = null ,

	@RateChangeDate datetime   = null ,

	@Rate money   = null ,

	@PayFrequency tinyint   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [EmployeeID]
	, [RateChangeDate]
	, [Rate]
	, [PayFrequency]
	, [ModifiedDate]
    FROM
	[HumanResources].[EmployeePayHistory]
    WHERE 
	 ([EmployeeID] = @EmployeeId OR @EmployeeId IS NULL)
	AND ([RateChangeDate] = @RateChangeDate OR @RateChangeDate IS NULL)
	AND ([Rate] = @Rate OR @Rate IS NULL)
	AND ([PayFrequency] = @PayFrequency OR @PayFrequency IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [EmployeeID]
	, [RateChangeDate]
	, [Rate]
	, [PayFrequency]
	, [ModifiedDate]
    FROM
	[HumanResources].[EmployeePayHistory]
    WHERE 
	 ([EmployeeID] = @EmployeeId AND @EmployeeId is not null)
	OR ([RateChangeDate] = @RateChangeDate AND @RateChangeDate is not null)
	OR ([Rate] = @Rate AND @Rate is not null)
	OR ([PayFrequency] = @PayFrequency AND @PayFrequency is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_NullFKeyChild_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_NullFKeyChild_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_NullFKeyChild_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the NullFKeyChild table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_NullFKeyChild_Get_List

AS


				
				SELECT
					[NullFKeyChildID],
					[NullFKeyParentID],
					[SomeText]
				FROM
					[Test].[NullFKeyChild]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_NullFKeyChild_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_NullFKeyChild_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_NullFKeyChild_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the NullFKeyChild table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_NullFKeyChild_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[NullFKeyChildID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [NullFKeyChildID]'
				SET @SQL = @SQL + ', [NullFKeyParentID]'
				SET @SQL = @SQL + ', [SomeText]'
				SET @SQL = @SQL + ' FROM [Test].[NullFKeyChild]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [NullFKeyChildID],'
				SET @SQL = @SQL + ' [NullFKeyParentID],'
				SET @SQL = @SQL + ' [SomeText]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Test].[NullFKeyChild]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_NullFKeyChild_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_NullFKeyChild_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_NullFKeyChild_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the NullFKeyChild table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_NullFKeyChild_Insert
(

	@NullFkeyChildId int   ,

	@NullFkeyParentId int   ,

	@SomeText varchar (50)  
)
AS


				
				INSERT INTO [Test].[NullFKeyChild]
					(
					[NullFKeyChildID]
					,[NullFKeyParentID]
					,[SomeText]
					)
				VALUES
					(
					@NullFkeyChildId
					,@NullFkeyParentId
					,@SomeText
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_NullFKeyChild_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_NullFKeyChild_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_NullFKeyChild_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the NullFKeyChild table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_NullFKeyChild_Update
(

	@NullFkeyChildId int   ,

	@OriginalNullFkeyChildId int   ,

	@NullFkeyParentId int   ,

	@SomeText varchar (50)  
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Test].[NullFKeyChild]
				SET
					[NullFKeyChildID] = @NullFkeyChildId
					,[NullFKeyParentID] = @NullFkeyParentId
					,[SomeText] = @SomeText
				WHERE
[NullFKeyChildID] = @OriginalNullFkeyChildId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_NullFKeyChild_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_NullFKeyChild_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_NullFKeyChild_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the NullFKeyChild table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_NullFKeyChild_Delete
(

	@NullFkeyChildId int   
)
AS


				DELETE FROM [Test].[NullFKeyChild] WITH (ROWLOCK) 
				WHERE
					[NullFKeyChildID] = @NullFkeyChildId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_NullFKeyChild_GetByNullFkeyParentId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_NullFKeyChild_GetByNullFkeyParentId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_NullFKeyChild_GetByNullFkeyParentId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the NullFKeyChild table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_NullFKeyChild_GetByNullFkeyParentId
(

	@NullFkeyParentId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[NullFKeyChildID],
					[NullFKeyParentID],
					[SomeText]
				FROM
					[Test].[NullFKeyChild]
				WHERE
					[NullFKeyParentID] = @NullFkeyParentId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_NullFKeyChild_GetByNullFkeyChildId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_NullFKeyChild_GetByNullFkeyChildId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_NullFKeyChild_GetByNullFkeyChildId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the NullFKeyChild table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_NullFKeyChild_GetByNullFkeyChildId
(

	@NullFkeyChildId int   
)
AS


				SELECT
					[NullFKeyChildID],
					[NullFKeyParentID],
					[SomeText]
				FROM
					[Test].[NullFKeyChild]
				WHERE
					[NullFKeyChildID] = @NullFkeyChildId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Test.usp_adwTiers_NullFKeyChild_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Test.usp_adwTiers_NullFKeyChild_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Test.usp_adwTiers_NullFKeyChild_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the NullFKeyChild table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Test.usp_adwTiers_NullFKeyChild_Find
(

	@SearchUsingOR bit   = null ,

	@NullFkeyChildId int   = null ,

	@NullFkeyParentId int   = null ,

	@SomeText varchar (50)  = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [NullFKeyChildID]
	, [NullFKeyParentID]
	, [SomeText]
    FROM
	[Test].[NullFKeyChild]
    WHERE 
	 ([NullFKeyChildID] = @NullFkeyChildId OR @NullFkeyChildId IS NULL)
	AND ([NullFKeyParentID] = @NullFkeyParentId OR @NullFkeyParentId IS NULL)
	AND ([SomeText] = @SomeText OR @SomeText IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [NullFKeyChildID]
	, [NullFKeyParentID]
	, [SomeText]
    FROM
	[Test].[NullFKeyChild]
    WHERE 
	 ([NullFKeyChildID] = @NullFkeyChildId AND @NullFkeyChildId is not null)
	OR ([NullFKeyParentID] = @NullFkeyParentId AND @NullFkeyParentId is not null)
	OR ([SomeText] = @SomeText AND @SomeText is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_ErrorLog_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_ErrorLog_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_ErrorLog_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the ErrorLog table
-- Table Comment: Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_ErrorLog_Get_List

AS


				
				SELECT
					[ErrorLogID],
					[ErrorTime],
					[UserName],
					[ErrorNumber],
					[ErrorSeverity],
					[ErrorState],
					[ErrorProcedure],
					[ErrorLine],
					[ErrorMessage]
				FROM
					[dbo].[ErrorLog]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_ErrorLog_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_ErrorLog_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_ErrorLog_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the ErrorLog table passing page index and page count parameters
-- Table Comment: Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_ErrorLog_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ErrorLogID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ErrorLogID]'
				SET @SQL = @SQL + ', [ErrorTime]'
				SET @SQL = @SQL + ', [UserName]'
				SET @SQL = @SQL + ', [ErrorNumber]'
				SET @SQL = @SQL + ', [ErrorSeverity]'
				SET @SQL = @SQL + ', [ErrorState]'
				SET @SQL = @SQL + ', [ErrorProcedure]'
				SET @SQL = @SQL + ', [ErrorLine]'
				SET @SQL = @SQL + ', [ErrorMessage]'
				SET @SQL = @SQL + ' FROM [dbo].[ErrorLog]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ErrorLogID],'
				SET @SQL = @SQL + ' [ErrorTime],'
				SET @SQL = @SQL + ' [UserName],'
				SET @SQL = @SQL + ' [ErrorNumber],'
				SET @SQL = @SQL + ' [ErrorSeverity],'
				SET @SQL = @SQL + ' [ErrorState],'
				SET @SQL = @SQL + ' [ErrorProcedure],'
				SET @SQL = @SQL + ' [ErrorLine],'
				SET @SQL = @SQL + ' [ErrorMessage]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[ErrorLog]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_ErrorLog_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_ErrorLog_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_ErrorLog_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the ErrorLog table
-- Table Comment: Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_ErrorLog_Insert
(

	@ErrorLogId int    OUTPUT,

	@ErrorTime datetime   ,

	@UserName nvarchar (128)  ,

	@ErrorNumber int   ,

	@ErrorSeverity int   ,

	@ErrorState int   ,

	@ErrorProcedure nvarchar (126)  ,

	@ErrorLine int   ,

	@ErrorMessage nvarchar (4000)  
)
AS


				
				INSERT INTO [dbo].[ErrorLog]
					(
					[ErrorTime]
					,[UserName]
					,[ErrorNumber]
					,[ErrorSeverity]
					,[ErrorState]
					,[ErrorProcedure]
					,[ErrorLine]
					,[ErrorMessage]
					)
				VALUES
					(
					@ErrorTime
					,@UserName
					,@ErrorNumber
					,@ErrorSeverity
					,@ErrorState
					,@ErrorProcedure
					,@ErrorLine
					,@ErrorMessage
					)
				
				-- Get the identity value
				SET @ErrorLogId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_ErrorLog_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_ErrorLog_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_ErrorLog_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the ErrorLog table
-- Table Comment: Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_ErrorLog_Update
(

	@ErrorLogId int   ,

	@ErrorTime datetime   ,

	@UserName nvarchar (128)  ,

	@ErrorNumber int   ,

	@ErrorSeverity int   ,

	@ErrorState int   ,

	@ErrorProcedure nvarchar (126)  ,

	@ErrorLine int   ,

	@ErrorMessage nvarchar (4000)  
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[ErrorLog]
				SET
					[ErrorTime] = @ErrorTime
					,[UserName] = @UserName
					,[ErrorNumber] = @ErrorNumber
					,[ErrorSeverity] = @ErrorSeverity
					,[ErrorState] = @ErrorState
					,[ErrorProcedure] = @ErrorProcedure
					,[ErrorLine] = @ErrorLine
					,[ErrorMessage] = @ErrorMessage
				WHERE
[ErrorLogID] = @ErrorLogId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_ErrorLog_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_ErrorLog_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_ErrorLog_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the ErrorLog table
-- Table Comment: Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_ErrorLog_Delete
(

	@ErrorLogId int   
)
AS


				DELETE FROM [dbo].[ErrorLog] WITH (ROWLOCK) 
				WHERE
					[ErrorLogID] = @ErrorLogId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_ErrorLog_GetByErrorLogId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_ErrorLog_GetByErrorLogId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_ErrorLog_GetByErrorLogId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the ErrorLog table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_ErrorLog_GetByErrorLogId
(

	@ErrorLogId int   
)
AS


				SELECT
					[ErrorLogID],
					[ErrorTime],
					[UserName],
					[ErrorNumber],
					[ErrorSeverity],
					[ErrorState],
					[ErrorProcedure],
					[ErrorLine],
					[ErrorMessage]
				FROM
					[dbo].[ErrorLog]
				WHERE
					[ErrorLogID] = @ErrorLogId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the dbo.usp_adwTiers_ErrorLog_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'dbo.usp_adwTiers_ErrorLog_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE dbo.usp_adwTiers_ErrorLog_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the ErrorLog table passing nullable parameters
-- Table Comment: Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE dbo.usp_adwTiers_ErrorLog_Find
(

	@SearchUsingOR bit   = null ,

	@ErrorLogId int   = null ,

	@ErrorTime datetime   = null ,

	@UserName nvarchar (128)  = null ,

	@ErrorNumber int   = null ,

	@ErrorSeverity int   = null ,

	@ErrorState int   = null ,

	@ErrorProcedure nvarchar (126)  = null ,

	@ErrorLine int   = null ,

	@ErrorMessage nvarchar (4000)  = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ErrorLogID]
	, [ErrorTime]
	, [UserName]
	, [ErrorNumber]
	, [ErrorSeverity]
	, [ErrorState]
	, [ErrorProcedure]
	, [ErrorLine]
	, [ErrorMessage]
    FROM
	[dbo].[ErrorLog]
    WHERE 
	 ([ErrorLogID] = @ErrorLogId OR @ErrorLogId IS NULL)
	AND ([ErrorTime] = @ErrorTime OR @ErrorTime IS NULL)
	AND ([UserName] = @UserName OR @UserName IS NULL)
	AND ([ErrorNumber] = @ErrorNumber OR @ErrorNumber IS NULL)
	AND ([ErrorSeverity] = @ErrorSeverity OR @ErrorSeverity IS NULL)
	AND ([ErrorState] = @ErrorState OR @ErrorState IS NULL)
	AND ([ErrorProcedure] = @ErrorProcedure OR @ErrorProcedure IS NULL)
	AND ([ErrorLine] = @ErrorLine OR @ErrorLine IS NULL)
	AND ([ErrorMessage] = @ErrorMessage OR @ErrorMessage IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ErrorLogID]
	, [ErrorTime]
	, [UserName]
	, [ErrorNumber]
	, [ErrorSeverity]
	, [ErrorState]
	, [ErrorProcedure]
	, [ErrorLine]
	, [ErrorMessage]
    FROM
	[dbo].[ErrorLog]
    WHERE 
	 ([ErrorLogID] = @ErrorLogId AND @ErrorLogId is not null)
	OR ([ErrorTime] = @ErrorTime AND @ErrorTime is not null)
	OR ([UserName] = @UserName AND @UserName is not null)
	OR ([ErrorNumber] = @ErrorNumber AND @ErrorNumber is not null)
	OR ([ErrorSeverity] = @ErrorSeverity AND @ErrorSeverity is not null)
	OR ([ErrorState] = @ErrorState AND @ErrorState is not null)
	OR ([ErrorProcedure] = @ErrorProcedure AND @ErrorProcedure is not null)
	OR ([ErrorLine] = @ErrorLine AND @ErrorLine is not null)
	OR ([ErrorMessage] = @ErrorMessage AND @ErrorMessage is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the EmployeeDepartmentHistory table
-- Table Comment: Employee department transfers.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Get_List

AS


				
				SELECT
					[EmployeeID],
					[DepartmentID],
					[ShiftID],
					[StartDate],
					[EndDate],
					[ModifiedDate]
				FROM
					[HumanResources].[EmployeeDepartmentHistory]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the EmployeeDepartmentHistory table passing page index and page count parameters
-- Table Comment: Employee department transfers.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[EmployeeID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [EmployeeID]'
				SET @SQL = @SQL + ', [DepartmentID]'
				SET @SQL = @SQL + ', [ShiftID]'
				SET @SQL = @SQL + ', [StartDate]'
				SET @SQL = @SQL + ', [EndDate]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [HumanResources].[EmployeeDepartmentHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [EmployeeID],'
				SET @SQL = @SQL + ' [DepartmentID],'
				SET @SQL = @SQL + ' [ShiftID],'
				SET @SQL = @SQL + ' [StartDate],'
				SET @SQL = @SQL + ' [EndDate],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [HumanResources].[EmployeeDepartmentHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the EmployeeDepartmentHistory table
-- Table Comment: Employee department transfers.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Insert
(

	@EmployeeId int   ,

	@DepartmentId smallint   ,

	@ShiftId tinyint   ,

	@StartDate datetime   ,

	@EndDate datetime   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [HumanResources].[EmployeeDepartmentHistory]
					(
					[EmployeeID]
					,[DepartmentID]
					,[ShiftID]
					,[StartDate]
					,[EndDate]
					,[ModifiedDate]
					)
				VALUES
					(
					@EmployeeId
					,@DepartmentId
					,@ShiftId
					,@StartDate
					,@EndDate
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the EmployeeDepartmentHistory table
-- Table Comment: Employee department transfers.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Update
(

	@EmployeeId int   ,

	@OriginalEmployeeId int   ,

	@DepartmentId smallint   ,

	@OriginalDepartmentId smallint   ,

	@ShiftId tinyint   ,

	@OriginalShiftId tinyint   ,

	@StartDate datetime   ,

	@OriginalStartDate datetime   ,

	@EndDate datetime   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[HumanResources].[EmployeeDepartmentHistory]
				SET
					[EmployeeID] = @EmployeeId
					,[DepartmentID] = @DepartmentId
					,[ShiftID] = @ShiftId
					,[StartDate] = @StartDate
					,[EndDate] = @EndDate
					,[ModifiedDate] = @ModifiedDate
				WHERE
[EmployeeID] = @OriginalEmployeeId 
AND [StartDate] = @OriginalStartDate 
AND [DepartmentID] = @OriginalDepartmentId 
AND [ShiftID] = @OriginalShiftId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the EmployeeDepartmentHistory table
-- Table Comment: Employee department transfers.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Delete
(

	@EmployeeId int   ,

	@StartDate datetime   ,

	@DepartmentId smallint   ,

	@ShiftId tinyint   
)
AS


				DELETE FROM [HumanResources].[EmployeeDepartmentHistory] WITH (ROWLOCK) 
				WHERE
					[EmployeeID] = @EmployeeId
					AND [StartDate] = @StartDate
					AND [DepartmentID] = @DepartmentId
					AND [ShiftID] = @ShiftId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByEmployeeId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByEmployeeId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByEmployeeId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the EmployeeDepartmentHistory table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByEmployeeId
(

	@EmployeeId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[EmployeeID],
					[DepartmentID],
					[ShiftID],
					[StartDate],
					[EndDate],
					[ModifiedDate]
				FROM
					[HumanResources].[EmployeeDepartmentHistory]
				WHERE
					[EmployeeID] = @EmployeeId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByDepartmentId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByDepartmentId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByDepartmentId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the EmployeeDepartmentHistory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByDepartmentId
(

	@DepartmentId smallint   
)
AS


				SELECT
					[EmployeeID],
					[DepartmentID],
					[ShiftID],
					[StartDate],
					[EndDate],
					[ModifiedDate]
				FROM
					[HumanResources].[EmployeeDepartmentHistory]
				WHERE
					[DepartmentID] = @DepartmentId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByShiftId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByShiftId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByShiftId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the EmployeeDepartmentHistory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByShiftId
(

	@ShiftId tinyint   
)
AS


				SELECT
					[EmployeeID],
					[DepartmentID],
					[ShiftID],
					[StartDate],
					[EndDate],
					[ModifiedDate]
				FROM
					[HumanResources].[EmployeeDepartmentHistory]
				WHERE
					[ShiftID] = @ShiftId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByEmployeeIdStartDateDepartmentIdShiftId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByEmployeeIdStartDateDepartmentIdShiftId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByEmployeeIdStartDateDepartmentIdShiftId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the EmployeeDepartmentHistory table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_GetByEmployeeIdStartDateDepartmentIdShiftId
(

	@EmployeeId int   ,

	@StartDate datetime   ,

	@DepartmentId smallint   ,

	@ShiftId tinyint   
)
AS


				SELECT
					[EmployeeID],
					[DepartmentID],
					[ShiftID],
					[StartDate],
					[EndDate],
					[ModifiedDate]
				FROM
					[HumanResources].[EmployeeDepartmentHistory]
				WHERE
					[EmployeeID] = @EmployeeId
					AND [StartDate] = @StartDate
					AND [DepartmentID] = @DepartmentId
					AND [ShiftID] = @ShiftId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the EmployeeDepartmentHistory table passing nullable parameters
-- Table Comment: Employee department transfers.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_EmployeeDepartmentHistory_Find
(

	@SearchUsingOR bit   = null ,

	@EmployeeId int   = null ,

	@DepartmentId smallint   = null ,

	@ShiftId tinyint   = null ,

	@StartDate datetime   = null ,

	@EndDate datetime   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [EmployeeID]
	, [DepartmentID]
	, [ShiftID]
	, [StartDate]
	, [EndDate]
	, [ModifiedDate]
    FROM
	[HumanResources].[EmployeeDepartmentHistory]
    WHERE 
	 ([EmployeeID] = @EmployeeId OR @EmployeeId IS NULL)
	AND ([DepartmentID] = @DepartmentId OR @DepartmentId IS NULL)
	AND ([ShiftID] = @ShiftId OR @ShiftId IS NULL)
	AND ([StartDate] = @StartDate OR @StartDate IS NULL)
	AND ([EndDate] = @EndDate OR @EndDate IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [EmployeeID]
	, [DepartmentID]
	, [ShiftID]
	, [StartDate]
	, [EndDate]
	, [ModifiedDate]
    FROM
	[HumanResources].[EmployeeDepartmentHistory]
    WHERE 
	 ([EmployeeID] = @EmployeeId AND @EmployeeId is not null)
	OR ([DepartmentID] = @DepartmentId AND @DepartmentId is not null)
	OR ([ShiftID] = @ShiftId AND @ShiftId is not null)
	OR ([StartDate] = @StartDate AND @StartDate is not null)
	OR ([EndDate] = @EndDate AND @EndDate is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_JobCandidate_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_JobCandidate_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_JobCandidate_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the JobCandidate table
-- Table Comment: Résumés submitted to Human Resources by job applicants.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_JobCandidate_Get_List

AS


				
				SELECT
					[JobCandidateID],
					[EmployeeID],
					[Resume],
					[ModifiedDate]
				FROM
					[HumanResources].[JobCandidate]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_JobCandidate_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_JobCandidate_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_JobCandidate_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the JobCandidate table passing page index and page count parameters
-- Table Comment: Résumés submitted to Human Resources by job applicants.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_JobCandidate_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[JobCandidateID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [JobCandidateID]'
				SET @SQL = @SQL + ', [EmployeeID]'
				SET @SQL = @SQL + ', [Resume]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [HumanResources].[JobCandidate]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [JobCandidateID],'
				SET @SQL = @SQL + ' [EmployeeID],'
				SET @SQL = @SQL + ' [Resume],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [HumanResources].[JobCandidate]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_JobCandidate_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_JobCandidate_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_JobCandidate_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the JobCandidate table
-- Table Comment: Résumés submitted to Human Resources by job applicants.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_JobCandidate_Insert
(

	@JobCandidateId int    OUTPUT,

	@EmployeeId int   ,

	@Resume xml   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [HumanResources].[JobCandidate]
					(
					[EmployeeID]
					,[Resume]
					,[ModifiedDate]
					)
				VALUES
					(
					@EmployeeId
					,@Resume
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @JobCandidateId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_JobCandidate_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_JobCandidate_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_JobCandidate_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the JobCandidate table
-- Table Comment: Résumés submitted to Human Resources by job applicants.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_JobCandidate_Update
(

	@JobCandidateId int   ,

	@EmployeeId int   ,

	@Resume xml   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[HumanResources].[JobCandidate]
				SET
					[EmployeeID] = @EmployeeId
					,[Resume] = @Resume
					,[ModifiedDate] = @ModifiedDate
				WHERE
[JobCandidateID] = @JobCandidateId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_JobCandidate_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_JobCandidate_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_JobCandidate_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the JobCandidate table
-- Table Comment: Résumés submitted to Human Resources by job applicants.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_JobCandidate_Delete
(

	@JobCandidateId int   
)
AS


				DELETE FROM [HumanResources].[JobCandidate] WITH (ROWLOCK) 
				WHERE
					[JobCandidateID] = @JobCandidateId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_JobCandidate_GetByEmployeeId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_JobCandidate_GetByEmployeeId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_JobCandidate_GetByEmployeeId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the JobCandidate table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_JobCandidate_GetByEmployeeId
(

	@EmployeeId int   
)
AS


				SELECT
					[JobCandidateID],
					[EmployeeID],
					[Resume],
					[ModifiedDate]
				FROM
					[HumanResources].[JobCandidate]
				WHERE
					[EmployeeID] = @EmployeeId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_JobCandidate_GetByJobCandidateId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_JobCandidate_GetByJobCandidateId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_JobCandidate_GetByJobCandidateId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the JobCandidate table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_JobCandidate_GetByJobCandidateId
(

	@JobCandidateId int   
)
AS


				SELECT
					[JobCandidateID],
					[EmployeeID],
					[Resume],
					[ModifiedDate]
				FROM
					[HumanResources].[JobCandidate]
				WHERE
					[JobCandidateID] = @JobCandidateId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_JobCandidate_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_JobCandidate_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_JobCandidate_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the JobCandidate table passing nullable parameters
-- Table Comment: Résumés submitted to Human Resources by job applicants.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_JobCandidate_Find
(

	@SearchUsingOR bit   = null ,

	@JobCandidateId int   = null ,

	@EmployeeId int   = null ,

	@Resume xml   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobCandidateID]
	, [EmployeeID]
	, [Resume]
	, [ModifiedDate]
    FROM
	[HumanResources].[JobCandidate]
    WHERE 
	 ([JobCandidateID] = @JobCandidateId OR @JobCandidateId IS NULL)
	AND ([EmployeeID] = @EmployeeId OR @EmployeeId IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobCandidateID]
	, [EmployeeID]
	, [Resume]
	, [ModifiedDate]
    FROM
	[HumanResources].[JobCandidate]
    WHERE 
	 ([JobCandidateID] = @JobCandidateId AND @JobCandidateId is not null)
	OR ([EmployeeID] = @EmployeeId AND @EmployeeId is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Illustration_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Illustration_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Illustration_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the Illustration table
-- Table Comment: Bicycle assembly diagrams.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Illustration_Get_List

AS


				
				SELECT
					[IllustrationID],
					[Diagram],
					[ModifiedDate]
				FROM
					[Production].[Illustration]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Illustration_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Illustration_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Illustration_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the Illustration table passing page index and page count parameters
-- Table Comment: Bicycle assembly diagrams.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Illustration_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[IllustrationID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [IllustrationID]'
				SET @SQL = @SQL + ', [Diagram]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[Illustration]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [IllustrationID],'
				SET @SQL = @SQL + ' [Diagram],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[Illustration]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Illustration_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Illustration_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Illustration_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the Illustration table
-- Table Comment: Bicycle assembly diagrams.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Illustration_Insert
(

	@IllustrationId int    OUTPUT,

	@Diagram xml   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Production].[Illustration]
					(
					[Diagram]
					,[ModifiedDate]
					)
				VALUES
					(
					@Diagram
					,@ModifiedDate
					)
				
				-- Get the identity value
				SET @IllustrationId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Illustration_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Illustration_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Illustration_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the Illustration table
-- Table Comment: Bicycle assembly diagrams.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Illustration_Update
(

	@IllustrationId int   ,

	@Diagram xml   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Production].[Illustration]
				SET
					[Diagram] = @Diagram
					,[ModifiedDate] = @ModifiedDate
				WHERE
[IllustrationID] = @IllustrationId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Illustration_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Illustration_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Illustration_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the Illustration table
-- Table Comment: Bicycle assembly diagrams.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Illustration_Delete
(

	@IllustrationId int   
)
AS


				DELETE FROM [Production].[Illustration] WITH (ROWLOCK) 
				WHERE
					[IllustrationID] = @IllustrationId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Illustration_GetByIllustrationId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Illustration_GetByIllustrationId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Illustration_GetByIllustrationId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Illustration table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Illustration_GetByIllustrationId
(

	@IllustrationId int   
)
AS


				SELECT
					[IllustrationID],
					[Diagram],
					[ModifiedDate]
				FROM
					[Production].[Illustration]
				WHERE
					[IllustrationID] = @IllustrationId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Illustration_GetByProductModelIdFromProductModelIllustration procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Illustration_GetByProductModelIdFromProductModelIllustration') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Illustration_GetByProductModelIdFromProductModelIllustration
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Illustration_GetByProductModelIdFromProductModelIllustration
(

	@ProductModelId int   
)
AS


SELECT Production.[Illustration].[IllustrationID]
       ,Production.[Illustration].[Diagram]
       ,Production.[Illustration].[ModifiedDate]
  FROM Production.[Illustration]
 WHERE EXISTS (SELECT 1
                 FROM Production.[ProductModelIllustration] 
                WHERE Production.[ProductModelIllustration].[ProductModelID] = @ProductModelId
                  AND Production.[ProductModelIllustration].[IllustrationID] = Production.[Illustration].[IllustrationID]
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_Illustration_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_Illustration_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_Illustration_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the Illustration table passing nullable parameters
-- Table Comment: Bicycle assembly diagrams.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_Illustration_Find
(

	@SearchUsingOR bit   = null ,

	@IllustrationId int   = null ,

	@Diagram xml   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [IllustrationID]
	, [Diagram]
	, [ModifiedDate]
    FROM
	[Production].[Illustration]
    WHERE 
	 ([IllustrationID] = @IllustrationId OR @IllustrationId IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [IllustrationID]
	, [Diagram]
	, [ModifiedDate]
    FROM
	[Production].[Illustration]
    WHERE 
	 ([IllustrationID] = @IllustrationId AND @IllustrationId is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_AddressType_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_AddressType_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_AddressType_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the AddressType table
-- Table Comment: Types of addresses stored in the Address table. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_AddressType_Get_List

AS


				
				SELECT
					[AddressTypeID],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[AddressType]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_AddressType_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_AddressType_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_AddressType_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the AddressType table passing page index and page count parameters
-- Table Comment: Types of addresses stored in the Address table. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_AddressType_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[AddressTypeID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [AddressTypeID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Person].[AddressType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [AddressTypeID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Person].[AddressType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_AddressType_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_AddressType_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_AddressType_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the AddressType table
-- Table Comment: Types of addresses stored in the Address table. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_AddressType_Insert
(

	@AddressTypeId int    OUTPUT,

	@Name nvarchar (50)  ,

	@Rowguid uniqueidentifier    OUTPUT,

	@ModifiedDate datetime   
)
AS


				
				Declare @IdentityRowGuids table (Rowguid uniqueidentifier	)
				INSERT INTO [Person].[AddressType]
					(
					[Name]
					,[ModifiedDate]
					)
						OUTPUT INSERTED.rowguid INTO @IdentityRowGuids
					
				VALUES
					(
					@Name
					,@ModifiedDate
					)
				
				SELECT @Rowguid=Rowguid	 from @IdentityRowGuids
				-- Get the identity value
				SET @AddressTypeId = SCOPE_IDENTITY()
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_AddressType_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_AddressType_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_AddressType_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the AddressType table
-- Table Comment: Types of addresses stored in the Address table. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_AddressType_Update
(

	@AddressTypeId int   ,

	@Name nvarchar (50)  ,

	@Rowguid uniqueidentifier   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Person].[AddressType]
				SET
					[Name] = @Name
					,[ModifiedDate] = @ModifiedDate
				WHERE
[AddressTypeID] = @AddressTypeId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_AddressType_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_AddressType_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_AddressType_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the AddressType table
-- Table Comment: Types of addresses stored in the Address table. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_AddressType_Delete
(

	@AddressTypeId int   
)
AS


				DELETE FROM [Person].[AddressType] WITH (ROWLOCK) 
				WHERE
					[AddressTypeID] = @AddressTypeId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_AddressType_GetByName procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_AddressType_GetByName') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_AddressType_GetByName
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the AddressType table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_AddressType_GetByName
(

	@Name nvarchar (50)  
)
AS


				SELECT
					[AddressTypeID],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[AddressType]
				WHERE
					[Name] = @Name
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_AddressType_GetByRowguid procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_AddressType_GetByRowguid') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_AddressType_GetByRowguid
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the AddressType table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_AddressType_GetByRowguid
(

	@Rowguid uniqueidentifier   
)
AS


				SELECT
					[AddressTypeID],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[AddressType]
				WHERE
					[rowguid] = @Rowguid
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_AddressType_GetByAddressTypeId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_AddressType_GetByAddressTypeId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_AddressType_GetByAddressTypeId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the AddressType table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_AddressType_GetByAddressTypeId
(

	@AddressTypeId int   
)
AS


				SELECT
					[AddressTypeID],
					[Name],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[AddressType]
				WHERE
					[AddressTypeID] = @AddressTypeId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_AddressType_GetByAddressIdFromCustomerAddress procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_AddressType_GetByAddressIdFromCustomerAddress') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_AddressType_GetByAddressIdFromCustomerAddress
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_AddressType_GetByAddressIdFromCustomerAddress
(

	@AddressId int   
)
AS


SELECT Person.[AddressType].[AddressTypeID]
       ,Person.[AddressType].[Name]
       ,Person.[AddressType].[rowguid]
       ,Person.[AddressType].[ModifiedDate]
  FROM Person.[AddressType]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[CustomerAddress] 
                WHERE Sales.[CustomerAddress].[AddressID] = @AddressId
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_AddressType_GetByCustomerIdFromCustomerAddress procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_AddressType_GetByCustomerIdFromCustomerAddress') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_AddressType_GetByCustomerIdFromCustomerAddress
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_AddressType_GetByCustomerIdFromCustomerAddress
(

	@CustomerId int   
)
AS


SELECT Person.[AddressType].[AddressTypeID]
       ,Person.[AddressType].[Name]
       ,Person.[AddressType].[rowguid]
       ,Person.[AddressType].[ModifiedDate]
  FROM Person.[AddressType]
 WHERE EXISTS (SELECT 1
                 FROM Sales.[CustomerAddress] 
                WHERE Sales.[CustomerAddress].[CustomerID] = @CustomerId
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_AddressType_GetByAddressIdFromVendorAddress procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_AddressType_GetByAddressIdFromVendorAddress') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_AddressType_GetByAddressIdFromVendorAddress
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_AddressType_GetByAddressIdFromVendorAddress
(

	@AddressId int   
)
AS


SELECT Person.[AddressType].[AddressTypeID]
       ,Person.[AddressType].[Name]
       ,Person.[AddressType].[rowguid]
       ,Person.[AddressType].[ModifiedDate]
  FROM Person.[AddressType]
 WHERE EXISTS (SELECT 1
                 FROM Purchasing.[VendorAddress] 
                WHERE Purchasing.[VendorAddress].[AddressID] = @AddressId
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_AddressType_GetByVendorIdFromVendorAddress procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_AddressType_GetByVendorIdFromVendorAddress') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_AddressType_GetByVendorIdFromVendorAddress
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records through a junction table
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_AddressType_GetByVendorIdFromVendorAddress
(

	@VendorId int   
)
AS


SELECT Person.[AddressType].[AddressTypeID]
       ,Person.[AddressType].[Name]
       ,Person.[AddressType].[rowguid]
       ,Person.[AddressType].[ModifiedDate]
  FROM Person.[AddressType]
 WHERE EXISTS (SELECT 1
                 FROM Purchasing.[VendorAddress] 
                WHERE Purchasing.[VendorAddress].[VendorID] = @VendorId
                  )
				SELECT @@ROWCOUNT			
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_AddressType_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_AddressType_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_AddressType_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the AddressType table passing nullable parameters
-- Table Comment: Types of addresses stored in the Address table. 
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_AddressType_Find
(

	@SearchUsingOR bit   = null ,

	@AddressTypeId int   = null ,

	@Name nvarchar (50)  = null ,

	@Rowguid uniqueidentifier   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AddressTypeID]
	, [Name]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Person].[AddressType]
    WHERE 
	 ([AddressTypeID] = @AddressTypeId OR @AddressTypeId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([rowguid] = @Rowguid OR @Rowguid IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AddressTypeID]
	, [Name]
	, [rowguid]
	, [ModifiedDate]
    FROM
	[Person].[AddressType]
    WHERE 
	 ([AddressTypeID] = @AddressTypeId AND @AddressTypeId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([rowguid] = @Rowguid AND @Rowguid is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Individual_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Individual_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Individual_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the Individual table
-- Table Comment: Demographic data about customers that purchase Adventure Works products online.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Individual_Get_List

AS


				
				SELECT
					[CustomerID],
					[ContactID],
					[Demographics],
					[ModifiedDate]
				FROM
					[Sales].[Individual]
					
				SELECT @@ROWCOUNT
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Individual_GetPaged procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Individual_GetPaged') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Individual_GetPaged
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the Individual table passing page index and page count parameters
-- Table Comment: Demographic data about customers that purchase Adventure Works products online.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Individual_GetPaged
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CustomerID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CustomerID]'
				SET @SQL = @SQL + ', [ContactID]'
				SET @SQL = @SQL + ', [Demographics]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Sales].[Individual]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CustomerID],'
				SET @SQL = @SQL + ' [ContactID],'
				SET @SQL = @SQL + ' [Demographics],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[Individual]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Individual_Insert procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Individual_Insert') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Individual_Insert
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Inserts a record into the Individual table
-- Table Comment: Demographic data about customers that purchase Adventure Works products online.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Individual_Insert
(

	@CustomerId int   ,

	@ContactId int   ,

	@Demographics xml   ,

	@ModifiedDate datetime   
)
AS


				
				INSERT INTO [Sales].[Individual]
					(
					[CustomerID]
					,[ContactID]
					,[Demographics]
					,[ModifiedDate]
					)
				VALUES
					(
					@CustomerId
					,@ContactId
					,@Demographics
					,@ModifiedDate
					)
				
									
							
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Individual_Update procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Individual_Update') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Individual_Update
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Updates a record in the Individual table
-- Table Comment: Demographic data about customers that purchase Adventure Works products online.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Individual_Update
(

	@CustomerId int   ,

	@OriginalCustomerId int   ,

	@ContactId int   ,

	@Demographics xml   ,

	@ModifiedDate datetime   
)
AS


				
				
				-- Modify the updatable columns
				UPDATE
					[Sales].[Individual]
				SET
					[CustomerID] = @CustomerId
					,[ContactID] = @ContactId
					,[Demographics] = @Demographics
					,[ModifiedDate] = @ModifiedDate
				WHERE
[CustomerID] = @OriginalCustomerId 
				
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Individual_Delete procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Individual_Delete') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Individual_Delete
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Deletes a record in the Individual table
-- Table Comment: Demographic data about customers that purchase Adventure Works products online.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Individual_Delete
(

	@CustomerId int   
)
AS


				DELETE FROM [Sales].[Individual] WITH (ROWLOCK) 
				WHERE
					[CustomerID] = @CustomerId
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Individual_GetByContactId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Individual_GetByContactId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Individual_GetByContactId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Individual table through a foreign key
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Individual_GetByContactId
(

	@ContactId int   
)
AS


				SET ANSI_NULLS OFF
				
				SELECT
					[CustomerID],
					[ContactID],
					[Demographics],
					[ModifiedDate]
				FROM
					[Sales].[Individual]
				WHERE
					[ContactID] = @ContactId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Individual_GetByCustomerId procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Individual_GetByCustomerId') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Individual_GetByCustomerId
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Individual table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Individual_GetByCustomerId
(

	@CustomerId int   
)
AS


				SELECT
					[CustomerID],
					[ContactID],
					[Demographics],
					[ModifiedDate]
				FROM
					[Sales].[Individual]
				WHERE
					[CustomerID] = @CustomerId
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Individual_GetByDemographics procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Individual_GetByDemographics') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Individual_GetByDemographics
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Select records from the Individual table through an index
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Individual_GetByDemographics
(

	@Demographics xml   
)
AS


				SELECT
					[CustomerID],
					[ContactID],
					[Demographics],
					[ModifiedDate]
				FROM
					[Sales].[Individual]
				WHERE
					[Demographics] = @Demographics
				SELECT @@ROWCOUNT
					
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_Individual_Find procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_Individual_Find') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_Individual_Find
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Finds records in the Individual table passing nullable parameters
-- Table Comment: Demographic data about customers that purchase Adventure Works products online.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_Individual_Find
(

	@SearchUsingOR bit   = null ,

	@CustomerId int   = null ,

	@ContactId int   = null ,

	@Demographics xml   = null ,

	@ModifiedDate datetime   = null 
)
AS


				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CustomerID]
	, [ContactID]
	, [Demographics]
	, [ModifiedDate]
    FROM
	[Sales].[Individual]
    WHERE 
	 ([CustomerID] = @CustomerId OR @CustomerId IS NULL)
	AND ([ContactID] = @ContactId OR @ContactId IS NULL)
	AND ([ModifiedDate] = @ModifiedDate OR @ModifiedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CustomerID]
	, [ContactID]
	, [Demographics]
	, [ModifiedDate]
    FROM
	[Sales].[Individual]
    WHERE 
	 ([CustomerID] = @CustomerId AND @CustomerId is not null)
	OR ([ContactID] = @ContactId AND @ContactId is not null)
	OR ([ModifiedDate] = @ModifiedDate AND @ModifiedDate is not null)
	SELECT @@ROWCOUNT			
  END
				

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_vAdditionalContactInfo_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_vAdditionalContactInfo_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_vAdditionalContactInfo_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vAdditionalContactInfo view
-- Table Comment: Displays the contact name and content from each element in the xml column AdditionalContactInfo for that person.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_vAdditionalContactInfo_Get_List

AS


				
				SELECT
					[ContactID],
					[FirstName],
					[MiddleName],
					[LastName],
					[TelephoneNumber],
					[TelephoneSpecialInstructions],
					[Street],
					[City],
					[StateProvince],
					[PostalCode],
					[CountryRegion],
					[HomeAddressSpecialInstructions],
					[EMailAddress],
					[EMailSpecialInstructions],
					[EMailTelephoneNumber],
					[rowguid],
					[ModifiedDate]
				FROM
					[Person].[vAdditionalContactInfo]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_vAdditionalContactInfo_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_vAdditionalContactInfo_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_vAdditionalContactInfo_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vAdditionalContactInfo view passing page index and page count parameters
-- Table Comment: Displays the contact name and content from each element in the xml column AdditionalContactInfo for that person.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_vAdditionalContactInfo_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ContactID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ContactID]'
				SET @SQL = @SQL + ', [FirstName]'
				SET @SQL = @SQL + ', [MiddleName]'
				SET @SQL = @SQL + ', [LastName]'
				SET @SQL = @SQL + ', [TelephoneNumber]'
				SET @SQL = @SQL + ', [TelephoneSpecialInstructions]'
				SET @SQL = @SQL + ', [Street]'
				SET @SQL = @SQL + ', [City]'
				SET @SQL = @SQL + ', [StateProvince]'
				SET @SQL = @SQL + ', [PostalCode]'
				SET @SQL = @SQL + ', [CountryRegion]'
				SET @SQL = @SQL + ', [HomeAddressSpecialInstructions]'
				SET @SQL = @SQL + ', [EMailAddress]'
				SET @SQL = @SQL + ', [EMailSpecialInstructions]'
				SET @SQL = @SQL + ', [EMailTelephoneNumber]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Person].[vAdditionalContactInfo]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ContactID],'
				SET @SQL = @SQL + ' [FirstName],'
				SET @SQL = @SQL + ' [MiddleName],'
				SET @SQL = @SQL + ' [LastName],'
				SET @SQL = @SQL + ' [TelephoneNumber],'
				SET @SQL = @SQL + ' [TelephoneSpecialInstructions],'
				SET @SQL = @SQL + ' [Street],'
				SET @SQL = @SQL + ' [City],'
				SET @SQL = @SQL + ' [StateProvince],'
				SET @SQL = @SQL + ' [PostalCode],'
				SET @SQL = @SQL + ' [CountryRegion],'
				SET @SQL = @SQL + ' [HomeAddressSpecialInstructions],'
				SET @SQL = @SQL + ' [EMailAddress],'
				SET @SQL = @SQL + ' [EMailSpecialInstructions],'
				SET @SQL = @SQL + ' [EMailTelephoneNumber],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Person].[vAdditionalContactInfo]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_vEmployee_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_vEmployee_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_vEmployee_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vEmployee view
-- Table Comment: Employee names and addresses.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_vEmployee_Get_List

AS


				
				SELECT
					[EmployeeID],
					[Title],
					[FirstName],
					[MiddleName],
					[LastName],
					[Suffix],
					[JobTitle],
					[Phone],
					[EmailAddress],
					[EmailPromotion],
					[AddressLine1],
					[AddressLine2],
					[City],
					[StateProvinceName],
					[PostalCode],
					[CountryRegionName],
					[AdditionalContactInfo]
				FROM
					[HumanResources].[vEmployee]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_vEmployee_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_vEmployee_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_vEmployee_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vEmployee view passing page index and page count parameters
-- Table Comment: Employee names and addresses.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_vEmployee_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[EmployeeID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [EmployeeID]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [FirstName]'
				SET @SQL = @SQL + ', [MiddleName]'
				SET @SQL = @SQL + ', [LastName]'
				SET @SQL = @SQL + ', [Suffix]'
				SET @SQL = @SQL + ', [JobTitle]'
				SET @SQL = @SQL + ', [Phone]'
				SET @SQL = @SQL + ', [EmailAddress]'
				SET @SQL = @SQL + ', [EmailPromotion]'
				SET @SQL = @SQL + ', [AddressLine1]'
				SET @SQL = @SQL + ', [AddressLine2]'
				SET @SQL = @SQL + ', [City]'
				SET @SQL = @SQL + ', [StateProvinceName]'
				SET @SQL = @SQL + ', [PostalCode]'
				SET @SQL = @SQL + ', [CountryRegionName]'
				SET @SQL = @SQL + ', [AdditionalContactInfo]'
				SET @SQL = @SQL + ' FROM [HumanResources].[vEmployee]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [EmployeeID],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [FirstName],'
				SET @SQL = @SQL + ' [MiddleName],'
				SET @SQL = @SQL + ' [LastName],'
				SET @SQL = @SQL + ' [Suffix],'
				SET @SQL = @SQL + ' [JobTitle],'
				SET @SQL = @SQL + ' [Phone],'
				SET @SQL = @SQL + ' [EmailAddress],'
				SET @SQL = @SQL + ' [EmailPromotion],'
				SET @SQL = @SQL + ' [AddressLine1],'
				SET @SQL = @SQL + ' [AddressLine2],'
				SET @SQL = @SQL + ' [City],'
				SET @SQL = @SQL + ' [StateProvinceName],'
				SET @SQL = @SQL + ' [PostalCode],'
				SET @SQL = @SQL + ' [CountryRegionName],'
				SET @SQL = @SQL + ' [AdditionalContactInfo]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [HumanResources].[vEmployee]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_vEmployeeDepartment_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_vEmployeeDepartment_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_vEmployeeDepartment_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vEmployeeDepartment view
-- Table Comment: Returns employee name, title, and current department.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_vEmployeeDepartment_Get_List

AS


				
				SELECT
					[EmployeeID],
					[Title],
					[FirstName],
					[MiddleName],
					[LastName],
					[Suffix],
					[JobTitle],
					[Department],
					[GroupName],
					[StartDate]
				FROM
					[HumanResources].[vEmployeeDepartment]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_vEmployeeDepartment_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_vEmployeeDepartment_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_vEmployeeDepartment_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vEmployeeDepartment view passing page index and page count parameters
-- Table Comment: Returns employee name, title, and current department.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_vEmployeeDepartment_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[EmployeeID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [EmployeeID]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [FirstName]'
				SET @SQL = @SQL + ', [MiddleName]'
				SET @SQL = @SQL + ', [LastName]'
				SET @SQL = @SQL + ', [Suffix]'
				SET @SQL = @SQL + ', [JobTitle]'
				SET @SQL = @SQL + ', [Department]'
				SET @SQL = @SQL + ', [GroupName]'
				SET @SQL = @SQL + ', [StartDate]'
				SET @SQL = @SQL + ' FROM [HumanResources].[vEmployeeDepartment]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [EmployeeID],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [FirstName],'
				SET @SQL = @SQL + ' [MiddleName],'
				SET @SQL = @SQL + ' [LastName],'
				SET @SQL = @SQL + ' [Suffix],'
				SET @SQL = @SQL + ' [JobTitle],'
				SET @SQL = @SQL + ' [Department],'
				SET @SQL = @SQL + ' [GroupName],'
				SET @SQL = @SQL + ' [StartDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [HumanResources].[vEmployeeDepartment]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_vEmployeeDepartmentHistory_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_vEmployeeDepartmentHistory_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_vEmployeeDepartmentHistory_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vEmployeeDepartmentHistory view
-- Table Comment: Returns employee name and current and previous departments.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_vEmployeeDepartmentHistory_Get_List

AS


				
				SELECT
					[EmployeeID],
					[Title],
					[FirstName],
					[MiddleName],
					[LastName],
					[Suffix],
					[Shift],
					[Department],
					[GroupName],
					[StartDate],
					[EndDate]
				FROM
					[HumanResources].[vEmployeeDepartmentHistory]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_vEmployeeDepartmentHistory_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_vEmployeeDepartmentHistory_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_vEmployeeDepartmentHistory_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vEmployeeDepartmentHistory view passing page index and page count parameters
-- Table Comment: Returns employee name and current and previous departments.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_vEmployeeDepartmentHistory_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[EmployeeID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [EmployeeID]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [FirstName]'
				SET @SQL = @SQL + ', [MiddleName]'
				SET @SQL = @SQL + ', [LastName]'
				SET @SQL = @SQL + ', [Suffix]'
				SET @SQL = @SQL + ', [Shift]'
				SET @SQL = @SQL + ', [Department]'
				SET @SQL = @SQL + ', [GroupName]'
				SET @SQL = @SQL + ', [StartDate]'
				SET @SQL = @SQL + ', [EndDate]'
				SET @SQL = @SQL + ' FROM [HumanResources].[vEmployeeDepartmentHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [EmployeeID],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [FirstName],'
				SET @SQL = @SQL + ' [MiddleName],'
				SET @SQL = @SQL + ' [LastName],'
				SET @SQL = @SQL + ' [Suffix],'
				SET @SQL = @SQL + ' [Shift],'
				SET @SQL = @SQL + ' [Department],'
				SET @SQL = @SQL + ' [GroupName],'
				SET @SQL = @SQL + ' [StartDate],'
				SET @SQL = @SQL + ' [EndDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [HumanResources].[vEmployeeDepartmentHistory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_vIndividualCustomer_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_vIndividualCustomer_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_vIndividualCustomer_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vIndividualCustomer view
-- Table Comment: Individual customers (names and addresses) that purchase Adventure Works Cycles products online.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_vIndividualCustomer_Get_List

AS


				
				SELECT
					[CustomerID],
					[Title],
					[FirstName],
					[MiddleName],
					[LastName],
					[Suffix],
					[Phone],
					[EmailAddress],
					[EmailPromotion],
					[AddressType],
					[AddressLine1],
					[AddressLine2],
					[City],
					[StateProvinceName],
					[PostalCode],
					[CountryRegionName],
					[Demographics]
				FROM
					[Sales].[vIndividualCustomer]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_vIndividualCustomer_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_vIndividualCustomer_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_vIndividualCustomer_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vIndividualCustomer view passing page index and page count parameters
-- Table Comment: Individual customers (names and addresses) that purchase Adventure Works Cycles products online.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_vIndividualCustomer_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CustomerID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CustomerID]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [FirstName]'
				SET @SQL = @SQL + ', [MiddleName]'
				SET @SQL = @SQL + ', [LastName]'
				SET @SQL = @SQL + ', [Suffix]'
				SET @SQL = @SQL + ', [Phone]'
				SET @SQL = @SQL + ', [EmailAddress]'
				SET @SQL = @SQL + ', [EmailPromotion]'
				SET @SQL = @SQL + ', [AddressType]'
				SET @SQL = @SQL + ', [AddressLine1]'
				SET @SQL = @SQL + ', [AddressLine2]'
				SET @SQL = @SQL + ', [City]'
				SET @SQL = @SQL + ', [StateProvinceName]'
				SET @SQL = @SQL + ', [PostalCode]'
				SET @SQL = @SQL + ', [CountryRegionName]'
				SET @SQL = @SQL + ', [Demographics]'
				SET @SQL = @SQL + ' FROM [Sales].[vIndividualCustomer]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CustomerID],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [FirstName],'
				SET @SQL = @SQL + ' [MiddleName],'
				SET @SQL = @SQL + ' [LastName],'
				SET @SQL = @SQL + ' [Suffix],'
				SET @SQL = @SQL + ' [Phone],'
				SET @SQL = @SQL + ' [EmailAddress],'
				SET @SQL = @SQL + ' [EmailPromotion],'
				SET @SQL = @SQL + ' [AddressType],'
				SET @SQL = @SQL + ' [AddressLine1],'
				SET @SQL = @SQL + ' [AddressLine2],'
				SET @SQL = @SQL + ' [City],'
				SET @SQL = @SQL + ' [StateProvinceName],'
				SET @SQL = @SQL + ' [PostalCode],'
				SET @SQL = @SQL + ' [CountryRegionName],'
				SET @SQL = @SQL + ' [Demographics]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[vIndividualCustomer]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_vIndividualDemographics_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_vIndividualDemographics_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_vIndividualDemographics_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vIndividualDemographics view
-- Table Comment: Displays the content from each element in the xml column Demographics for each customer in the Sales.Individual table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_vIndividualDemographics_Get_List

AS


				
				SELECT
					[CustomerID],
					[TotalPurchaseYTD],
					[DateFirstPurchase],
					[BirthDate],
					[MaritalStatus],
					[YearlyIncome],
					[Gender],
					[TotalChildren],
					[NumberChildrenAtHome],
					[Education],
					[Occupation],
					[HomeOwnerFlag],
					[NumberCarsOwned]
				FROM
					[Sales].[vIndividualDemographics]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_vIndividualDemographics_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_vIndividualDemographics_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_vIndividualDemographics_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vIndividualDemographics view passing page index and page count parameters
-- Table Comment: Displays the content from each element in the xml column Demographics for each customer in the Sales.Individual table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_vIndividualDemographics_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CustomerID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CustomerID]'
				SET @SQL = @SQL + ', [TotalPurchaseYTD]'
				SET @SQL = @SQL + ', [DateFirstPurchase]'
				SET @SQL = @SQL + ', [BirthDate]'
				SET @SQL = @SQL + ', [MaritalStatus]'
				SET @SQL = @SQL + ', [YearlyIncome]'
				SET @SQL = @SQL + ', [Gender]'
				SET @SQL = @SQL + ', [TotalChildren]'
				SET @SQL = @SQL + ', [NumberChildrenAtHome]'
				SET @SQL = @SQL + ', [Education]'
				SET @SQL = @SQL + ', [Occupation]'
				SET @SQL = @SQL + ', [HomeOwnerFlag]'
				SET @SQL = @SQL + ', [NumberCarsOwned]'
				SET @SQL = @SQL + ' FROM [Sales].[vIndividualDemographics]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CustomerID],'
				SET @SQL = @SQL + ' [TotalPurchaseYTD],'
				SET @SQL = @SQL + ' [DateFirstPurchase],'
				SET @SQL = @SQL + ' [BirthDate],'
				SET @SQL = @SQL + ' [MaritalStatus],'
				SET @SQL = @SQL + ' [YearlyIncome],'
				SET @SQL = @SQL + ' [Gender],'
				SET @SQL = @SQL + ' [TotalChildren],'
				SET @SQL = @SQL + ' [NumberChildrenAtHome],'
				SET @SQL = @SQL + ' [Education],'
				SET @SQL = @SQL + ' [Occupation],'
				SET @SQL = @SQL + ' [HomeOwnerFlag],'
				SET @SQL = @SQL + ' [NumberCarsOwned]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[vIndividualDemographics]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_vJobCandidate_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_vJobCandidate_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_vJobCandidate_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vJobCandidate view
-- Table Comment: Job candidate names and resumes.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_vJobCandidate_Get_List

AS


				
				SELECT
					[JobCandidateID],
					[EmployeeID],
					[Name.Prefix],
					[Name.First],
					[Name.Middle],
					[Name.Last],
					[Name.Suffix],
					[Skills],
					[Addr.Type],
					[Addr.Loc.CountryRegion],
					[Addr.Loc.State],
					[Addr.Loc.City],
					[Addr.PostalCode],
					[EMail],
					[WebSite],
					[ModifiedDate]
				FROM
					[HumanResources].[vJobCandidate]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_vJobCandidate_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_vJobCandidate_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_vJobCandidate_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vJobCandidate view passing page index and page count parameters
-- Table Comment: Job candidate names and resumes.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_vJobCandidate_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[JobCandidateID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [JobCandidateID]'
				SET @SQL = @SQL + ', [EmployeeID]'
				SET @SQL = @SQL + ', [Name.Prefix]'
				SET @SQL = @SQL + ', [Name.First]'
				SET @SQL = @SQL + ', [Name.Middle]'
				SET @SQL = @SQL + ', [Name.Last]'
				SET @SQL = @SQL + ', [Name.Suffix]'
				SET @SQL = @SQL + ', [Skills]'
				SET @SQL = @SQL + ', [Addr.Type]'
				SET @SQL = @SQL + ', [Addr.Loc.CountryRegion]'
				SET @SQL = @SQL + ', [Addr.Loc.State]'
				SET @SQL = @SQL + ', [Addr.Loc.City]'
				SET @SQL = @SQL + ', [Addr.PostalCode]'
				SET @SQL = @SQL + ', [EMail]'
				SET @SQL = @SQL + ', [WebSite]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [HumanResources].[vJobCandidate]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [JobCandidateID],'
				SET @SQL = @SQL + ' [EmployeeID],'
				SET @SQL = @SQL + ' [Name.Prefix],'
				SET @SQL = @SQL + ' [Name.First],'
				SET @SQL = @SQL + ' [Name.Middle],'
				SET @SQL = @SQL + ' [Name.Last],'
				SET @SQL = @SQL + ' [Name.Suffix],'
				SET @SQL = @SQL + ' [Skills],'
				SET @SQL = @SQL + ' [Addr.Type],'
				SET @SQL = @SQL + ' [Addr.Loc.CountryRegion],'
				SET @SQL = @SQL + ' [Addr.Loc.State],'
				SET @SQL = @SQL + ' [Addr.Loc.City],'
				SET @SQL = @SQL + ' [Addr.PostalCode],'
				SET @SQL = @SQL + ' [EMail],'
				SET @SQL = @SQL + ' [WebSite],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [HumanResources].[vJobCandidate]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_vJobCandidateEducation_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_vJobCandidateEducation_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_vJobCandidateEducation_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vJobCandidateEducation view
-- Table Comment: Displays the content from each education related element in the xml column Resume in the HumanResources.JobCandidate table. The content has been localized into French, Simplified Chinese and Thai. Some data may not display correctly unless supplemental language support is installed.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_vJobCandidateEducation_Get_List

AS


				
				SELECT
					[JobCandidateID],
					[Edu.Level],
					[Edu.StartDate],
					[Edu.EndDate],
					[Edu.Degree],
					[Edu.Major],
					[Edu.Minor],
					[Edu.GPA],
					[Edu.GPAScale],
					[Edu.School],
					[Edu.Loc.CountryRegion],
					[Edu.Loc.State],
					[Edu.Loc.City]
				FROM
					[HumanResources].[vJobCandidateEducation]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_vJobCandidateEducation_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_vJobCandidateEducation_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_vJobCandidateEducation_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vJobCandidateEducation view passing page index and page count parameters
-- Table Comment: Displays the content from each education related element in the xml column Resume in the HumanResources.JobCandidate table. The content has been localized into French, Simplified Chinese and Thai. Some data may not display correctly unless supplemental language support is installed.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_vJobCandidateEducation_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[JobCandidateID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [JobCandidateID]'
				SET @SQL = @SQL + ', [Edu.Level]'
				SET @SQL = @SQL + ', [Edu.StartDate]'
				SET @SQL = @SQL + ', [Edu.EndDate]'
				SET @SQL = @SQL + ', [Edu.Degree]'
				SET @SQL = @SQL + ', [Edu.Major]'
				SET @SQL = @SQL + ', [Edu.Minor]'
				SET @SQL = @SQL + ', [Edu.GPA]'
				SET @SQL = @SQL + ', [Edu.GPAScale]'
				SET @SQL = @SQL + ', [Edu.School]'
				SET @SQL = @SQL + ', [Edu.Loc.CountryRegion]'
				SET @SQL = @SQL + ', [Edu.Loc.State]'
				SET @SQL = @SQL + ', [Edu.Loc.City]'
				SET @SQL = @SQL + ' FROM [HumanResources].[vJobCandidateEducation]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [JobCandidateID],'
				SET @SQL = @SQL + ' [Edu.Level],'
				SET @SQL = @SQL + ' [Edu.StartDate],'
				SET @SQL = @SQL + ' [Edu.EndDate],'
				SET @SQL = @SQL + ' [Edu.Degree],'
				SET @SQL = @SQL + ' [Edu.Major],'
				SET @SQL = @SQL + ' [Edu.Minor],'
				SET @SQL = @SQL + ' [Edu.GPA],'
				SET @SQL = @SQL + ' [Edu.GPAScale],'
				SET @SQL = @SQL + ' [Edu.School],'
				SET @SQL = @SQL + ' [Edu.Loc.CountryRegion],'
				SET @SQL = @SQL + ' [Edu.Loc.State],'
				SET @SQL = @SQL + ' [Edu.Loc.City]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [HumanResources].[vJobCandidateEducation]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_vJobCandidateEmployment_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_vJobCandidateEmployment_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_vJobCandidateEmployment_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vJobCandidateEmployment view
-- Table Comment: Displays the content from each employement history related element in the xml column Resume in the HumanResources.JobCandidate table. The content has been localized into French, Simplified Chinese and Thai. Some data may not display correctly unless supplemental language support is installed.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_vJobCandidateEmployment_Get_List

AS


				
				SELECT
					[JobCandidateID],
					[Emp.StartDate],
					[Emp.EndDate],
					[Emp.OrgName],
					[Emp.JobTitle],
					[Emp.Responsibility],
					[Emp.FunctionCategory],
					[Emp.IndustryCategory],
					[Emp.Loc.CountryRegion],
					[Emp.Loc.State],
					[Emp.Loc.City]
				FROM
					[HumanResources].[vJobCandidateEmployment]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the HumanResources.usp_adwTiers_vJobCandidateEmployment_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'HumanResources.usp_adwTiers_vJobCandidateEmployment_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE HumanResources.usp_adwTiers_vJobCandidateEmployment_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vJobCandidateEmployment view passing page index and page count parameters
-- Table Comment: Displays the content from each employement history related element in the xml column Resume in the HumanResources.JobCandidate table. The content has been localized into French, Simplified Chinese and Thai. Some data may not display correctly unless supplemental language support is installed.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE HumanResources.usp_adwTiers_vJobCandidateEmployment_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[JobCandidateID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [JobCandidateID]'
				SET @SQL = @SQL + ', [Emp.StartDate]'
				SET @SQL = @SQL + ', [Emp.EndDate]'
				SET @SQL = @SQL + ', [Emp.OrgName]'
				SET @SQL = @SQL + ', [Emp.JobTitle]'
				SET @SQL = @SQL + ', [Emp.Responsibility]'
				SET @SQL = @SQL + ', [Emp.FunctionCategory]'
				SET @SQL = @SQL + ', [Emp.IndustryCategory]'
				SET @SQL = @SQL + ', [Emp.Loc.CountryRegion]'
				SET @SQL = @SQL + ', [Emp.Loc.State]'
				SET @SQL = @SQL + ', [Emp.Loc.City]'
				SET @SQL = @SQL + ' FROM [HumanResources].[vJobCandidateEmployment]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [JobCandidateID],'
				SET @SQL = @SQL + ' [Emp.StartDate],'
				SET @SQL = @SQL + ' [Emp.EndDate],'
				SET @SQL = @SQL + ' [Emp.OrgName],'
				SET @SQL = @SQL + ' [Emp.JobTitle],'
				SET @SQL = @SQL + ' [Emp.Responsibility],'
				SET @SQL = @SQL + ' [Emp.FunctionCategory],'
				SET @SQL = @SQL + ' [Emp.IndustryCategory],'
				SET @SQL = @SQL + ' [Emp.Loc.CountryRegion],'
				SET @SQL = @SQL + ' [Emp.Loc.State],'
				SET @SQL = @SQL + ' [Emp.Loc.City]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [HumanResources].[vJobCandidateEmployment]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_vProductAndDescription_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_vProductAndDescription_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_vProductAndDescription_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vProductAndDescription view
-- Table Comment: Product names and descriptions. Product descriptions are provided in multiple languages.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_vProductAndDescription_Get_List

AS


				
				SELECT
					[ProductID],
					[Name],
					[ProductModel],
					[CultureID],
					[Description]
				FROM
					[Production].[vProductAndDescription]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_vProductAndDescription_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_vProductAndDescription_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_vProductAndDescription_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vProductAndDescription view passing page index and page count parameters
-- Table Comment: Product names and descriptions. Product descriptions are provided in multiple languages.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_vProductAndDescription_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [ProductModel]'
				SET @SQL = @SQL + ', [CultureID]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ' FROM [Production].[vProductAndDescription]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [ProductModel],'
				SET @SQL = @SQL + ' [CultureID],'
				SET @SQL = @SQL + ' [Description]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[vProductAndDescription]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_vProductModelCatalogDescription_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_vProductModelCatalogDescription_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_vProductModelCatalogDescription_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vProductModelCatalogDescription view
-- Table Comment: Displays the content from each element in the xml column CatalogDescription for each product in the Production.ProductModel table that has catalog data.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_vProductModelCatalogDescription_Get_List

AS


				
				SELECT
					[ProductModelID],
					[Name],
					[Summary],
					[Manufacturer],
					[Copyright],
					[ProductURL],
					[WarrantyPeriod],
					[WarrantyDescription],
					[NoOfYears],
					[MaintenanceDescription],
					[Wheel],
					[Saddle],
					[Pedal],
					[BikeFrame],
					[Crankset],
					[PictureAngle],
					[PictureSize],
					[ProductPhotoID],
					[Material],
					[Color],
					[ProductLine],
					[Style],
					[RiderExperience],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[vProductModelCatalogDescription]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_vProductModelCatalogDescription_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_vProductModelCatalogDescription_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_vProductModelCatalogDescription_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vProductModelCatalogDescription view passing page index and page count parameters
-- Table Comment: Displays the content from each element in the xml column CatalogDescription for each product in the Production.ProductModel table that has catalog data.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_vProductModelCatalogDescription_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductModelID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductModelID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Summary]'
				SET @SQL = @SQL + ', [Manufacturer]'
				SET @SQL = @SQL + ', [Copyright]'
				SET @SQL = @SQL + ', [ProductURL]'
				SET @SQL = @SQL + ', [WarrantyPeriod]'
				SET @SQL = @SQL + ', [WarrantyDescription]'
				SET @SQL = @SQL + ', [NoOfYears]'
				SET @SQL = @SQL + ', [MaintenanceDescription]'
				SET @SQL = @SQL + ', [Wheel]'
				SET @SQL = @SQL + ', [Saddle]'
				SET @SQL = @SQL + ', [Pedal]'
				SET @SQL = @SQL + ', [BikeFrame]'
				SET @SQL = @SQL + ', [Crankset]'
				SET @SQL = @SQL + ', [PictureAngle]'
				SET @SQL = @SQL + ', [PictureSize]'
				SET @SQL = @SQL + ', [ProductPhotoID]'
				SET @SQL = @SQL + ', [Material]'
				SET @SQL = @SQL + ', [Color]'
				SET @SQL = @SQL + ', [ProductLine]'
				SET @SQL = @SQL + ', [Style]'
				SET @SQL = @SQL + ', [RiderExperience]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[vProductModelCatalogDescription]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductModelID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Summary],'
				SET @SQL = @SQL + ' [Manufacturer],'
				SET @SQL = @SQL + ' [Copyright],'
				SET @SQL = @SQL + ' [ProductURL],'
				SET @SQL = @SQL + ' [WarrantyPeriod],'
				SET @SQL = @SQL + ' [WarrantyDescription],'
				SET @SQL = @SQL + ' [NoOfYears],'
				SET @SQL = @SQL + ' [MaintenanceDescription],'
				SET @SQL = @SQL + ' [Wheel],'
				SET @SQL = @SQL + ' [Saddle],'
				SET @SQL = @SQL + ' [Pedal],'
				SET @SQL = @SQL + ' [BikeFrame],'
				SET @SQL = @SQL + ' [Crankset],'
				SET @SQL = @SQL + ' [PictureAngle],'
				SET @SQL = @SQL + ' [PictureSize],'
				SET @SQL = @SQL + ' [ProductPhotoID],'
				SET @SQL = @SQL + ' [Material],'
				SET @SQL = @SQL + ' [Color],'
				SET @SQL = @SQL + ' [ProductLine],'
				SET @SQL = @SQL + ' [Style],'
				SET @SQL = @SQL + ' [RiderExperience],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[vProductModelCatalogDescription]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_vProductModelInstructions_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_vProductModelInstructions_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_vProductModelInstructions_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vProductModelInstructions view
-- Table Comment: Displays the content from each element in the xml column Instructions for each product in the Production.ProductModel table that has manufacturing instructions.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_vProductModelInstructions_Get_List

AS


				
				SELECT
					[ProductModelID],
					[Name],
					[Instructions],
					[LocationID],
					[SetupHours],
					[MachineHours],
					[LaborHours],
					[LotSize],
					[Step],
					[rowguid],
					[ModifiedDate]
				FROM
					[Production].[vProductModelInstructions]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Production.usp_adwTiers_vProductModelInstructions_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Production.usp_adwTiers_vProductModelInstructions_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Production.usp_adwTiers_vProductModelInstructions_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vProductModelInstructions view passing page index and page count parameters
-- Table Comment: Displays the content from each element in the xml column Instructions for each product in the Production.ProductModel table that has manufacturing instructions.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Production.usp_adwTiers_vProductModelInstructions_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductModelID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductModelID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Instructions]'
				SET @SQL = @SQL + ', [LocationID]'
				SET @SQL = @SQL + ', [SetupHours]'
				SET @SQL = @SQL + ', [MachineHours]'
				SET @SQL = @SQL + ', [LaborHours]'
				SET @SQL = @SQL + ', [LotSize]'
				SET @SQL = @SQL + ', [Step]'
				SET @SQL = @SQL + ', [rowguid]'
				SET @SQL = @SQL + ', [ModifiedDate]'
				SET @SQL = @SQL + ' FROM [Production].[vProductModelInstructions]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductModelID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Instructions],'
				SET @SQL = @SQL + ' [LocationID],'
				SET @SQL = @SQL + ' [SetupHours],'
				SET @SQL = @SQL + ' [MachineHours],'
				SET @SQL = @SQL + ' [LaborHours],'
				SET @SQL = @SQL + ' [LotSize],'
				SET @SQL = @SQL + ' [Step],'
				SET @SQL = @SQL + ' [rowguid],'
				SET @SQL = @SQL + ' [ModifiedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Production].[vProductModelInstructions]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_vSalesPerson_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_vSalesPerson_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_vSalesPerson_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vSalesPerson view
-- Table Comment: Sales representiatives (names and addresses) and their sales-related information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_vSalesPerson_Get_List

AS


				
				SELECT
					[SalesPersonID],
					[Title],
					[FirstName],
					[MiddleName],
					[LastName],
					[Suffix],
					[JobTitle],
					[Phone],
					[EmailAddress],
					[EmailPromotion],
					[AddressLine1],
					[AddressLine2],
					[City],
					[StateProvinceName],
					[PostalCode],
					[CountryRegionName],
					[TerritoryName],
					[TerritoryGroup],
					[SalesQuota],
					[SalesYTD],
					[SalesLastYear]
				FROM
					[Sales].[vSalesPerson]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_vSalesPerson_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_vSalesPerson_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_vSalesPerson_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vSalesPerson view passing page index and page count parameters
-- Table Comment: Sales representiatives (names and addresses) and their sales-related information.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_vSalesPerson_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SalesPersonID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SalesPersonID]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [FirstName]'
				SET @SQL = @SQL + ', [MiddleName]'
				SET @SQL = @SQL + ', [LastName]'
				SET @SQL = @SQL + ', [Suffix]'
				SET @SQL = @SQL + ', [JobTitle]'
				SET @SQL = @SQL + ', [Phone]'
				SET @SQL = @SQL + ', [EmailAddress]'
				SET @SQL = @SQL + ', [EmailPromotion]'
				SET @SQL = @SQL + ', [AddressLine1]'
				SET @SQL = @SQL + ', [AddressLine2]'
				SET @SQL = @SQL + ', [City]'
				SET @SQL = @SQL + ', [StateProvinceName]'
				SET @SQL = @SQL + ', [PostalCode]'
				SET @SQL = @SQL + ', [CountryRegionName]'
				SET @SQL = @SQL + ', [TerritoryName]'
				SET @SQL = @SQL + ', [TerritoryGroup]'
				SET @SQL = @SQL + ', [SalesQuota]'
				SET @SQL = @SQL + ', [SalesYTD]'
				SET @SQL = @SQL + ', [SalesLastYear]'
				SET @SQL = @SQL + ' FROM [Sales].[vSalesPerson]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SalesPersonID],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [FirstName],'
				SET @SQL = @SQL + ' [MiddleName],'
				SET @SQL = @SQL + ' [LastName],'
				SET @SQL = @SQL + ' [Suffix],'
				SET @SQL = @SQL + ' [JobTitle],'
				SET @SQL = @SQL + ' [Phone],'
				SET @SQL = @SQL + ' [EmailAddress],'
				SET @SQL = @SQL + ' [EmailPromotion],'
				SET @SQL = @SQL + ' [AddressLine1],'
				SET @SQL = @SQL + ' [AddressLine2],'
				SET @SQL = @SQL + ' [City],'
				SET @SQL = @SQL + ' [StateProvinceName],'
				SET @SQL = @SQL + ' [PostalCode],'
				SET @SQL = @SQL + ' [CountryRegionName],'
				SET @SQL = @SQL + ' [TerritoryName],'
				SET @SQL = @SQL + ' [TerritoryGroup],'
				SET @SQL = @SQL + ' [SalesQuota],'
				SET @SQL = @SQL + ' [SalesYTD],'
				SET @SQL = @SQL + ' [SalesLastYear]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[vSalesPerson]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_vSalesPersonSalesByFiscalYears_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_vSalesPersonSalesByFiscalYears_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_vSalesPersonSalesByFiscalYears_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vSalesPersonSalesByFiscalYears view
-- Table Comment: Uses PIVOT to return aggregated sales information for each sales representative.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_vSalesPersonSalesByFiscalYears_Get_List

AS


				
				SELECT
					[SalesPersonID],
					[FullName],
					[Title],
					[SalesTerritory],
					[2002],
					[2003],
					[2004]
				FROM
					[Sales].[vSalesPersonSalesByFiscalYears]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_vSalesPersonSalesByFiscalYears_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_vSalesPersonSalesByFiscalYears_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_vSalesPersonSalesByFiscalYears_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vSalesPersonSalesByFiscalYears view passing page index and page count parameters
-- Table Comment: Uses PIVOT to return aggregated sales information for each sales representative.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_vSalesPersonSalesByFiscalYears_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SalesPersonID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SalesPersonID]'
				SET @SQL = @SQL + ', [FullName]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [SalesTerritory]'
				SET @SQL = @SQL + ', [2002]'
				SET @SQL = @SQL + ', [2003]'
				SET @SQL = @SQL + ', [2004]'
				SET @SQL = @SQL + ' FROM [Sales].[vSalesPersonSalesByFiscalYears]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SalesPersonID],'
				SET @SQL = @SQL + ' [FullName],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [SalesTerritory],'
				SET @SQL = @SQL + ' [2002],'
				SET @SQL = @SQL + ' [2003],'
				SET @SQL = @SQL + ' [2004]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[vSalesPersonSalesByFiscalYears]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_vStateProvinceCountryRegion_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_vStateProvinceCountryRegion_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_vStateProvinceCountryRegion_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vStateProvinceCountryRegion view
-- Table Comment: Joins StateProvince table with CountryRegion table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_vStateProvinceCountryRegion_Get_List

AS


				
				SELECT
					[StateProvinceID],
					[StateProvinceCode],
					[IsOnlyStateProvinceFlag],
					[StateProvinceName],
					[TerritoryID],
					[CountryRegionCode],
					[CountryRegionName]
				FROM
					[Person].[vStateProvinceCountryRegion]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Person.usp_adwTiers_vStateProvinceCountryRegion_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Person.usp_adwTiers_vStateProvinceCountryRegion_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Person.usp_adwTiers_vStateProvinceCountryRegion_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vStateProvinceCountryRegion view passing page index and page count parameters
-- Table Comment: Joins StateProvince table with CountryRegion table.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Person.usp_adwTiers_vStateProvinceCountryRegion_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[StateProvinceID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [StateProvinceID]'
				SET @SQL = @SQL + ', [StateProvinceCode]'
				SET @SQL = @SQL + ', [IsOnlyStateProvinceFlag]'
				SET @SQL = @SQL + ', [StateProvinceName]'
				SET @SQL = @SQL + ', [TerritoryID]'
				SET @SQL = @SQL + ', [CountryRegionCode]'
				SET @SQL = @SQL + ', [CountryRegionName]'
				SET @SQL = @SQL + ' FROM [Person].[vStateProvinceCountryRegion]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [StateProvinceID],'
				SET @SQL = @SQL + ' [StateProvinceCode],'
				SET @SQL = @SQL + ' [IsOnlyStateProvinceFlag],'
				SET @SQL = @SQL + ' [StateProvinceName],'
				SET @SQL = @SQL + ' [TerritoryID],'
				SET @SQL = @SQL + ' [CountryRegionCode],'
				SET @SQL = @SQL + ' [CountryRegionName]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Person].[vStateProvinceCountryRegion]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_vStoreWithDemographics_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_vStoreWithDemographics_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_vStoreWithDemographics_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vStoreWithDemographics view
-- Table Comment: Stores (names and addresses) that sell Adventure Works Cycles products to consumers.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_vStoreWithDemographics_Get_List

AS


				
				SELECT
					[CustomerID],
					[Name],
					[ContactType],
					[Title],
					[FirstName],
					[MiddleName],
					[LastName],
					[Suffix],
					[Phone],
					[EmailAddress],
					[EmailPromotion],
					[AddressType],
					[AddressLine1],
					[AddressLine2],
					[City],
					[StateProvinceName],
					[PostalCode],
					[CountryRegionName],
					[AnnualSales],
					[AnnualRevenue],
					[BankName],
					[BusinessType],
					[YearOpened],
					[Specialty],
					[SquareFeet],
					[Brands],
					[Internet],
					[NumberEmployees]
				FROM
					[Sales].[vStoreWithDemographics]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Sales.usp_adwTiers_vStoreWithDemographics_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Sales.usp_adwTiers_vStoreWithDemographics_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Sales.usp_adwTiers_vStoreWithDemographics_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vStoreWithDemographics view passing page index and page count parameters
-- Table Comment: Stores (names and addresses) that sell Adventure Works Cycles products to consumers.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Sales.usp_adwTiers_vStoreWithDemographics_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CustomerID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CustomerID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [ContactType]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [FirstName]'
				SET @SQL = @SQL + ', [MiddleName]'
				SET @SQL = @SQL + ', [LastName]'
				SET @SQL = @SQL + ', [Suffix]'
				SET @SQL = @SQL + ', [Phone]'
				SET @SQL = @SQL + ', [EmailAddress]'
				SET @SQL = @SQL + ', [EmailPromotion]'
				SET @SQL = @SQL + ', [AddressType]'
				SET @SQL = @SQL + ', [AddressLine1]'
				SET @SQL = @SQL + ', [AddressLine2]'
				SET @SQL = @SQL + ', [City]'
				SET @SQL = @SQL + ', [StateProvinceName]'
				SET @SQL = @SQL + ', [PostalCode]'
				SET @SQL = @SQL + ', [CountryRegionName]'
				SET @SQL = @SQL + ', [AnnualSales]'
				SET @SQL = @SQL + ', [AnnualRevenue]'
				SET @SQL = @SQL + ', [BankName]'
				SET @SQL = @SQL + ', [BusinessType]'
				SET @SQL = @SQL + ', [YearOpened]'
				SET @SQL = @SQL + ', [Specialty]'
				SET @SQL = @SQL + ', [SquareFeet]'
				SET @SQL = @SQL + ', [Brands]'
				SET @SQL = @SQL + ', [Internet]'
				SET @SQL = @SQL + ', [NumberEmployees]'
				SET @SQL = @SQL + ' FROM [Sales].[vStoreWithDemographics]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CustomerID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [ContactType],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [FirstName],'
				SET @SQL = @SQL + ' [MiddleName],'
				SET @SQL = @SQL + ' [LastName],'
				SET @SQL = @SQL + ' [Suffix],'
				SET @SQL = @SQL + ' [Phone],'
				SET @SQL = @SQL + ' [EmailAddress],'
				SET @SQL = @SQL + ' [EmailPromotion],'
				SET @SQL = @SQL + ' [AddressType],'
				SET @SQL = @SQL + ' [AddressLine1],'
				SET @SQL = @SQL + ' [AddressLine2],'
				SET @SQL = @SQL + ' [City],'
				SET @SQL = @SQL + ' [StateProvinceName],'
				SET @SQL = @SQL + ' [PostalCode],'
				SET @SQL = @SQL + ' [CountryRegionName],'
				SET @SQL = @SQL + ' [AnnualSales],'
				SET @SQL = @SQL + ' [AnnualRevenue],'
				SET @SQL = @SQL + ' [BankName],'
				SET @SQL = @SQL + ' [BusinessType],'
				SET @SQL = @SQL + ' [YearOpened],'
				SET @SQL = @SQL + ' [Specialty],'
				SET @SQL = @SQL + ' [SquareFeet],'
				SET @SQL = @SQL + ' [Brands],'
				SET @SQL = @SQL + ' [Internet],'
				SET @SQL = @SQL + ' [NumberEmployees]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Sales].[vStoreWithDemographics]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_vVendor_Get_List procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_vVendor_Get_List') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_vVendor_Get_List
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets all records from the vVendor view
-- Table Comment: Vendor (company) names and addresses and the names of vendor employees to contact.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_vVendor_Get_List

AS


				
				SELECT
					[VendorID],
					[Name],
					[ContactType],
					[Title],
					[FirstName],
					[MiddleName],
					[LastName],
					[Suffix],
					[Phone],
					[EmailAddress],
					[EmailPromotion],
					[AddressLine1],
					[AddressLine2],
					[City],
					[StateProvinceName],
					[PostalCode],
					[CountryRegionName]
				FROM
					[Purchasing].[vVendor]
					
				SELECT @@ROWCOUNT			
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

	

-- Drop the Purchasing.usp_adwTiers_vVendor_Get procedure
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'Purchasing.usp_adwTiers_vVendor_Get') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE Purchasing.usp_adwTiers_vVendor_Get
GO

/*
----------------------------------------------------------------------------------------------------

-- Created By: Nettiers Sample (http://www.nettiers.com)
-- Purpose: Gets records from the vVendor view passing page index and page count parameters
-- Table Comment: Vendor (company) names and addresses and the names of vendor employees to contact.
----------------------------------------------------------------------------------------------------
*/


CREATE PROCEDURE Purchasing.usp_adwTiers_vVendor_Get
(

	@WhereClause varchar (2000)  ,

	@OrderBy varchar (2000)  ,

	@PageIndex int   ,

	@PageSize int   
)
AS


				
				BEGIN

				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[VendorID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [VendorID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [ContactType]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [FirstName]'
				SET @SQL = @SQL + ', [MiddleName]'
				SET @SQL = @SQL + ', [LastName]'
				SET @SQL = @SQL + ', [Suffix]'
				SET @SQL = @SQL + ', [Phone]'
				SET @SQL = @SQL + ', [EmailAddress]'
				SET @SQL = @SQL + ', [EmailPromotion]'
				SET @SQL = @SQL + ', [AddressLine1]'
				SET @SQL = @SQL + ', [AddressLine2]'
				SET @SQL = @SQL + ', [City]'
				SET @SQL = @SQL + ', [StateProvinceName]'
				SET @SQL = @SQL + ', [PostalCode]'
				SET @SQL = @SQL + ', [CountryRegionName]'
				SET @SQL = @SQL + ' FROM [Purchasing].[vVendor]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [VendorID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [ContactType],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [FirstName],'
				SET @SQL = @SQL + ' [MiddleName],'
				SET @SQL = @SQL + ' [LastName],'
				SET @SQL = @SQL + ' [Suffix],'
				SET @SQL = @SQL + ' [Phone],'
				SET @SQL = @SQL + ' [EmailAddress],'
				SET @SQL = @SQL + ' [EmailPromotion],'
				SET @SQL = @SQL + ' [AddressLine1],'
				SET @SQL = @SQL + ' [AddressLine2],'
				SET @SQL = @SQL + ' [City],'
				SET @SQL = @SQL + ' [StateProvinceName],'
				SET @SQL = @SQL + ' [PostalCode],'
				SET @SQL = @SQL + ' [CountryRegionName]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				EXEC sp_executesql @SQL

				-- get row count
				SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [Purchasing].[vVendor]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
				
				END
			

GO
SET QUOTED_IDENTIFIER ON 
GO
SET NOCOUNT ON
GO
SET ANSI_NULLS OFF 
GO

