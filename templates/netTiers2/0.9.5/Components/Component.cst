<%--
 * $Id: Component.cst,v 1.31 2005/06/27 12:12:42 jroland Exp $
 * Last modified by $Author: jroland $
 * Last modified at $Date: 2005/06/27 12:12:42 $
 * $Revision: 1.31 $

	Written By:
		Ryan Hurdon
	Description:
		This script will create data access layer classes. It requires stored procedures
		created from the procedure script. So for this code to work properly you need to run
		the procedure template, the rowobject template, and the rowcollection template on
		the same table. You can also optionally use the main script which will run them all
		for you.
<%@ Property Name="CustomNonMatchingReturnType" Type="CustomNonMatchingReturnType" Default="DataSet" Category="Options" Description="When using custom stored procedures, if the returned rows do not match the fields in an entity, a DataSet or IDataReader will be returned. Choose One.  This is useful if you've returned more than one resultset in a custom procedure; you can use a ConvertToDataSet(IDataReader) method in the Utility class to convert that to a DataSet." %>
<%@ Property Name="ProcedurePrefix" Optional="True" Type="System.String" Category="Style" Description="Prefix for Strored Procedures" %>
--%>
<%@ CodeTemplate Src="..\CommonSqlCode.cs" Inherits="MoM.Templates.CommonSqlCode" Debug="True" Language="C#" TargetLanguage="C#" Description="Component Object Class"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Collections" %>

<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Connection" Description="Table Object should be based on." %>
<%@ Property Name="SourceTables" Type="SchemaExplorer.TableSchemaCollection" Category="Connection" Description="Tables of the sytem." %>

<%@ Property Name="NameSpace" Optional="True" Type="System.String" Category="Style" Description="Object Namespace." %>
<%@ Property Name="BLLNameSpace" Optional="True" Type="System.String" Category="Style" Description="Component Namespace." %>
<%@ Property Name="DALNameSpace" Optional="True" Type="System.String" Category="Style" Description="DAL Namespace." %>
<%
	if (SourceTables == null) SourceTables = new SchemaExplorer.TableSchemaCollection();
	string name;
	string today = DateTime.Now.ToLongDateString();

	
	// Name of the Abstract Class
	string className = GetClassName(SourceTable.Name);
	string collectionClassName = GetCollectionClassName(className);
	string abstractClassName = GetAbstractClassName(className);

%>
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Data;

using Entities = <%=BLLNameSpace%>;
using <%=DALNameSpace%>;


#endregion

namespace <%=NameSpace%>
{
	///<summary>
	/// An component type implementation of the '<%=SourceTable.Name%>' table.
	///</summary>
	/// <remarks>
	/// All custom implementations should be done in this class.
	/// </remarks>
	[Serializable]
	[CLSCompliant(true)]
	public partial class <%=className%> : <%=NameSpace%>.<%=abstractClassName%>
	{
		/// <summary>
		/// Initializes a new instance of the <%=className%> class.
		/// </summary>
		public <%=className%>() : base()
		{
		}
	}//End Class
} // end namespace
