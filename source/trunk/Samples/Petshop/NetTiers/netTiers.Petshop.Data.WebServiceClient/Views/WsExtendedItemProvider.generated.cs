
/*
	File Generated by NetTiers templates [www.nettiers.com]
	Generated on : Monday, July 24, 2006
	Important: Do not modify this file. Edit the file ExtendedItem.cs instead.
*/

#region "Using directives"

using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using netTiers.Petshop.Entities;
using netTiers.Petshop.Data.Bases;

#endregion

namespace netTiers.Petshop.Data.WebServiceClient
{

	/// <summary>
	///	This class is the base repository for the CRUD operations on the ExtendedItem objects.
	/// </summary>
	public partial class WsExtendedItemProvider : ExtendedItemProviderBase
	{
		#region "Declarations"	
			
		/// <summary>
		/// the Url of the webservice.
		/// </summary>
		protected string _url;
			
		#endregion "Declarations"
		
		#region "Constructors"
	
		/// <summary>
		/// Creates a new <see cref="WsExtendedItemProvider"/> instance.
		/// Uses connection string to connect to datasource.
		/// </summary>
		public WsExtendedItemProvider()
		{		
		}
		
		/// <summary>
		/// Creates a new <see cref="WsExtendedItemProvider"/> instance.
		/// Uses connection string to connect to datasource.
		/// </summary>
		/// <param name="url">The url to the webservice.</param>
		public WsExtendedItemProvider(string url)
		{
			this._url = url;
		}
			
		#endregion "Constructors"	
			
		
		public string Url
        {
        	get {return this._url;}
        	set {this._url = value;}
        }
	
		#region "Convertion utility"
		
		/// <summary>
		/// Convert a collection from the ws proxy to a nettiers collection.
		/// </summary>
		public static VList<ExtendedItem> Convert(WsProxy.ExtendedItem[] items)
		{
			VList<ExtendedItem> outItems = new VList<ExtendedItem>();
			foreach(WsProxy.ExtendedItem item in items)
			{
				outItems.Add(Convert(item));
			}
			return outItems;
		}
		
		/// <summary>
		/// Convert a nettiers collection to the ws proxy collection.
		/// </summary>
		public static ExtendedItem Convert(WsProxy.ExtendedItem item)
		{			
			ExtendedItem outItem = new ExtendedItem();			
			outItem.ItemId = item.ItemId;
			outItem.ItemName = item.ItemName;
			outItem.ItemDescription = item.ItemDescription;
			outItem.ItemPrice = item.ItemPrice;
			outItem.ItemPhoto = item.ItemPhoto;
			outItem.ProductId = item.ProductId;
			outItem.ProductName = item.ProductName;
			outItem.ProductDescription = item.ProductDescription;
			outItem.CategoryId = item.CategoryId;
			outItem.CategoryName = item.CategoryName;
							
			outItem.AcceptChanges();			
			return outItem;
		}
		
		/// <summary>
		/// Convert a nettiers entity to the ws proxy entity.
		/// </summary>
		public static WsProxy.ExtendedItem Convert(ExtendedItem item)
		{			
			WsProxy.ExtendedItem outItem = new WsProxy.ExtendedItem();			
			outItem.ItemId = item.ItemId;
			outItem.ItemName = item.ItemName;
			outItem.ItemDescription = item.ItemDescription;
			outItem.ItemPrice = item.ItemPrice;
			outItem.ItemPhoto = item.ItemPhoto;
			outItem.ProductId = item.ProductId;
			outItem.ProductName = item.ProductName;
			outItem.ProductDescription = item.ProductDescription;
			outItem.CategoryId = item.CategoryId;
			outItem.CategoryName = item.CategoryName;
							
			return outItem;
		}
		
		#endregion
	
		#region "GetList Functions"
						
		/// <summary>
		/// 	Gets All rows from the DataSource.
		/// </summary>
		/// <param name="start">Row number at which to start reading.</param>
		/// <param name="pageLength">Number of rows to return.</param>
		/// <param name="transactionManager"><see cref="TransactionManager"/> object</param>
		/// <remarks></remarks>
		/// <returns>Returns a typed collection of ExtendedItem objects.</returns>
		public override VList<ExtendedItem> GetAll(TransactionManager transactionManager, int start, int pageLength)
		{
			WsProxy.petshopDBServices proxy = new WsProxy.petshopDBServices();
			proxy.Url = this._url;
				
			WsProxy.ExtendedItem[] items = proxy.ExtendedItemProvider_GetAll(start, pageLength);			
			return Convert(items); 
		}
		
		#endregion
	
		#region "Get filterd and sorted"
			
		/// <summary>
		/// Gets a page of rows from the DataSource.
		/// </summary>
		/// <param name="start">Row number at which to start reading.</param>
		/// <param name="pageLength">Number of rows to return.</param>
		/// <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
		/// <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
		/// <param name="transactionManager"><see cref="TransactionManager"/> object</param>
		/// <remarks></remarks>
		/// <returns>Returns a typed collection of ExtendedItem objects.</returns>
		public override VList<ExtendedItem> Get(TransactionManager transactionManager, string whereClause, string orderBy, int start, int pageLength)
		{
			WsProxy.petshopDBServices proxy = new WsProxy.petshopDBServices();
			proxy.Url = this._url;
					
			WsProxy.ExtendedItem[] items = proxy.ExtendedItemProvider_Get(whereClause, orderBy, start, pageLength);
				
			return Convert(items); 
		}
		
		#endregion
	
	



	#region "Custom Methods"
	

	#endregion

	
	
	}//end class
} // end namespace