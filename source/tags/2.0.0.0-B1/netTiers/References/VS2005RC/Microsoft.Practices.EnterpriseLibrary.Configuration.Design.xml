<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Practices.EnterpriseLibrary.Configuration.Design</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection">
            <summary>
            <para>A collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> objects.</para>
            </summary>	
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection.#ctor">
            <summary>
            <para>Initialize a new instance of the new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection.Add(System.Object,System.String,System.String)">
            <summary>
            <para>Create and append a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> to the end of the collection.</para>
            </summary>
            <param name="invalidItem">
            <para>The object that did not validate.</para>
            </param>
            <param name="propertyName">
            <para>The name of the property that is invalid.</para>
            </param>
            <param name="errorMessage">
            <para>The message that describes the error.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection.Add(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError)">
            <summary>
            <para>Appends a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> to the end of the collection.</para>
            </summary>
            <param name="validationError">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> to add.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection.Insert(System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError)">
            <summary>
            <para>Inserts an element into the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection"/> at the specified index.</para>
            </summary>
            <param name="index">
            <para>The zero-based index at which value should be inserted.</para>
            </param>
            <param name="validationError">
            <para>The Object to insert.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection.IndexOf(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError)">
            <summary>
            <para>Searches for the specified <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> and returns the zero-based index of the first occurrence within the entire <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection"/>.</para>
            </summary>
            <param name="validationError">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> to locate in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection"/>.</para>
            </param>
            <returns>
            <para>The zero-based index of the first occurrence of value within the entire <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection"/>, if found; otherwise, -1.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection.Contains(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError)">
            <summary>
            <para>Determines whether the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection"/> contains a specific element.</para>
            </summary>
            <param name="validationError">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> to locate in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection"/>.</para>
            </param>
            <returns>
            <para><see langword="true"/> if the CollectionBase contains the specified value; otherwise, <see langword="false"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection.Remove(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError)">
            <summary>
            <para>Removes the first occurrence of a specific object from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection"/>.</para>
            </summary>
            <param name="validationError">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> to remove from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection"/>.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection.AddRange(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection)">
            <summary>
            <para>Adds a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> objects to the collection.</para>
            </summary>
            <param name="validationErrors">
            <para>The collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> objects to the collection.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection.CopyTo(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError[],System.Int32)">
            <summary>
            <para>Copies the entire <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection"/> to a compatible one-dimensional Array, starting at the specified index of the target array.</para>
            </summary>
            <param name="array">
            <para>The one-dimensional <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> array that is the destination of the elements copied from <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection"/>. The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> array must have zero-based indexing.</para>
            </param>
            <param name="index">
            <para>The zero-based index in array at which copying begins.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection.Item(System.Int32)">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> at the appropriate index.</para>
            </summary>
            <param name="index"><para>The zero-based index of the parameter to retrieve.</para></param>
            <value>
            <para>The index to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/>.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper">
            <summary>
            <para>A utility class to help with common service related activities.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.LogError(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Exception)">
            <summary>
            <para>Log an error to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="node"><para>The configuration node associated with the error.</para></param>
            <param name="e"><para>The <see cref="T:System.Exception"/> to log.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.LogError(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError)">
            <summary>
            <para>Log a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="error">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> to log.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.LogError(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError)">
            <summary>
            <para>Log a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="error">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> to log.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.DisplayErrors(System.IServiceProvider)">
            <summary>
            <para>Display the errors from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/> in the user interface.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetUIService(System.IServiceProvider)">
            <summary>
            <para>Gets the registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <returns>The registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetUIHierarchyService(System.IServiceProvider)">
            <summary>
            <para>Gets the registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <returns>The registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetXmlIncludeTypeService(System.IServiceProvider)">
            <summary>
            <para>Gets the registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IXmlIncludeTypeService"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <returns>The registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IXmlIncludeTypeService"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetCurrentHierarchy(System.IServiceProvider)">
            <summary>
            <para>Gets the current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <returns>The current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetCurrentStorageTable(System.IServiceProvider)">
            <summary>
            <para>Gets the current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>'s <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageTable"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <returns>The current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>'s <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageTable"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetCurrentRootNode(System.IServiceProvider)">
            <summary>
            <para>Gets the current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>'s root <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <returns>The current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>'s root <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetCurrentConfigurationContext(System.IServiceProvider)">
            <summary>
            <para>Gets the current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>'s <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <returns>The current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>'s <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetMenuContainerService(System.IServiceProvider)">
            <summary>
            <para>Gets the registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IMenuContainerService"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <returns>The registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IMenuContainerService"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.CheckDependencies(System.ComponentModel.IComponent)">
            <devdoc>
            Checks that all declared dependencies for the object are present after it has been sited.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetConfigurationErrorService(System.IServiceProvider)">
            <summary>
            <para>Gets the registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <returns>
            <para>The registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetLinkService(System.IServiceProvider)">
            <summary>
            <para>Gets the registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ILinkNodeService"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <returns>
            <para>The registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ILinkNodeService"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetNodeNameCreationService(System.IServiceProvider)">
            <summary>
            <para>Gets the registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeNameCreationService"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <returns>
            <para>The registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeNameCreationService"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetNodeCreationService(System.IServiceProvider)">
            <summary>
            <para>Gets the registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <returns>
            <para>The registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService"/>.</para>
            </returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InsertionPoint">
            <summary>
            <para>Points on the main menu where <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem"/> objets can be sited.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InsertionPoint.Action">
            <summary>
            <para>The item will become a menu item of the main task menu.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InsertionPoint.Help">
            <summary>
            <para>The item will become a menu item of the main help menu.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InsertionPoint.New">
            <summary>
            <para>Will create a new menu item in the action menu item and add to it's submenu.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileStorageCreationCommand">
            <summary>
            <para>Creates configuraiton stored in a file.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand">
            <summary>
            <para>Creates the physical storage for configuraiton.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand.#ctor(System.String,System.IServiceProvider)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> class with a name and <see cref="T:System.IServiceProvider"/>.</para>
            </summary>
            <param name="name"><para>The name of the storage to create.</para></param>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand.Execute">
            <summary>
            <para>When overriden by a class, executes the command to create the storage.</para>
            </summary>
            <value>
            <para>Executes the command to create the storage.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand.Name">
            <summary>
            <para>Gets the name of the storage to create.</para>
            </summary>
            <value>
            <para>The name of the storage to create.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand.ServiceProvider">
            <summary>
            <para>Gets or sets the <see cref="T:System.IServiceProvider"/> for the command.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.IServiceProvider"/> for the command.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileStorageCreationCommand.#ctor(System.String,System.IServiceProvider)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileStorageCreationCommand"/> class with a file name and <see cref="T:System.IServiceProvider"/>.</para>
            </summary>
            <param name="fileName"><para>The name of the file to create.</para></param>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileStorageCreationCommand.CanOverwriteFile">
            <summary>
            <para>Determines if the current <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileStorageCreationCommand.FileName"/> can be overwrriten. It will prompt the user throuth the user interface if the user wants to overwrite the file.</para>
            </summary>
            <returns>
            <para><see langword="true"/> if the file can be overwritten; otherwise, <see langword="false"/>.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileStorageCreationCommand.FileName">
            <summary>
            <para>Gets or sets the name of the file to create.</para>
            </summary>
            <value>
            <para>The name of the file to create.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionCollectionNode">
            <summary>
            <para>The design-time representation of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionDataCollection"/> class.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode">
            <summary>
            <para>Represents a node from runtime configuration. It allows a visual hierarchieal representation of configuration data.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SitedComponent">
            <summary>
            <para>Represents a component that wish to implement behavior when sited.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SitedComponent.OnSited">
            <summary>
            <para>When overridden by a class, allows descendants to perform processing after the component is sited.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SitedComponent.OnUnSited">
            <summary>
            <para>When overridden by a class, allows descendants to perform processing after the component is unsited.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SitedComponent.Site">
            <summary>
            <para>Gets or sets the <see cref="T:System.ComponentModel.ISite"/> of the <see cref="T:System.ComponentModel.Component"/>.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.ComponentModel.ISite"/> of the <see cref="T:System.ComponentModel.Component"/></para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> class with a display name.</para>
            </summary>       
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.MoveAfter(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Moves the specified child node immediately after the specified reference node.</para>
            </summary>
            <param name="childNode"><para>The existing child node to move.</para></param>
            <param name="siblingNode"><para>The existing child node after which the <i>childNode</i> will be placed.</para></param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="childNode"/> can not be <see langword="null"/>.</para>
            <para>- or -</para>
            <para><paramref name="siblingNode"/> can not be <see langword="null"/>.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.MoveBefore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Moves the specified node immediately before the specified reference node.</para>
            </summary>
            <param name="childNode"><para>The existing child node to move.</para></param>
            <param name="siblingNode"><para>The existing child node before which the <i>childNode</i> will be placed.</para></param>
            <exception cref="T:System.ArgumentException">
            <para><paramref name="childNode"/> can not be <see langword="null"/>.</para>
            <para>- or -</para>
            <para><paramref name="siblingNode"/> can not be <see langword="null"/>.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ToString">
            <summary>
            <para>Creates and returns a string representation of the current node.</para>
            </summary>
            <returns><para>A string representation of the current node.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Remove">
            <summary>
            <para>Removes the current node from its parent node.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.AddDefaultChildNodes">
            <summary>
            <para>Allows a node to add default nodes after being created.</para>
            </summary>
            <remarks>
            <para>This is called by the framework the each time an instance of this node is created with an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ResolveNodeReferences">
            <summary>
            <para>Allows child nodes to resolve references to sibling nodes in configuration.</para>
            </summary>
            <remarks>
            <para>This is called by the framework the each time an instance of this node is created from a previous saved state.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.AddMenuItems(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IMenuContainerService)">
            <summary>
            <para>Add menu items to the user interface.</para>
            </summary>
            <param name="menuContainerService">
            <para>The container to add the menu items.</para>
            </param>
            <remarks>
            <para>This is called by the framework when the context switches to this node.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="menuContainerService"/> can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.AddMenuItem(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem)">
            <summary>
            <para>Add a menu item to the user interface.</para>
            </summary>
            <param name="configurationMenuItem">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem"/> to add.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnAddMenuItems">
            <summary>
            <para>Allows nodes that override to add menu items for the user interface.</para>
            </summary>
            <remarks>
            <para>Call <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.AddMenuItem(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem)"/> for every menu item that needs to be added to the user interface.</para>
            <para>By default, the base class adds the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand"/> and <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand"/></para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.System#IComparable#CompareTo(System.Object)">
            <summary>
            <para>Compares the specified node to the current node based on the value of the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Name"/> property.</para>
            </summary>
            <param name="node"><para>An object to compare.</para></param>
            <returns>
            <para>A signed integer that indicates the relative order of this node and the node being compared.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.CompareTo(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Compares the specified node to the current node based on the value of the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Name"/> property.</para>
            </summary>
            <param name="node"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to compare.</para></param>
            <returns>
            <para>A signed integer that indicates the relative order of this node and the node being compared.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Equals(System.Object)">
            <summary>
            <para>Compares two <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"></see> instances for equality.</para>
            </summary>
            <param name="obj"><para>The object to compare.</para></param>
            <returns><para><see langword="true"/> if objects are equal; otherwise <see langword="false"/>.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Equals(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Compares two <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"></see> instances for equality.</para>
            </summary>
            <param name="node"><para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to compare.</para></param>
            <returns><para><see langword="true"/> if objects are equal; otherwise <see langword="false"/>.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.op_Equality(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Determines whether two specified <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> objects have the same value.</para>
            </summary>
            <param name="a"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> or a <see langword="null"/> reference (Nothing in Visual Basic).</para></param>
            <param name="b"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> or a <see langword="null"/> reference (Nothing in Visual Basic).</para></param>
            <returns><para><see langword="true"/> if the value of a is the same as the value of b; otherwise, <see langword="false"/>.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.op_Inequality(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Determines whether two specified <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> objects have the different value.</para>
            </summary>
            <param name="a"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> or a <see langword="null"/> reference (Nothing in Visual Basic).</para></param>
            <param name="b"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> or a <see langword="null"/> reference (Nothing in Visual Basic).</para></param>
            <returns><para><see langword="true"/> if the value of <paramref name="a"/> is different from the value of <paramref name="b"/>; otherwise, <see langword="false"/>.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.GetHashCode">
            <summary>
            <para>Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.</para>
            </summary>
            <returns><para>A hash code for the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.CreateDynamicMenuItems(System.Type)">
            <summary>
            <para>Create menu items based on the nodes registered with the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService"/> for the spefied type.</para>
            </summary>
            <param name="nodeType">
            <para>The type to create menu items.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.CreateDynamicNodes(System.Collections.ICollection)">
            <summary>
            <para>Create child nodes for a collection of configuration data.</para>
            </summary>
            <param name="collection">
            <para>A collection of runtime data.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnChildRemoved(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildRemoved"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnRemoved(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Removed"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnRemoving(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Removed"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnChildInserted(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildInserted"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnRenamed(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renamed"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnChildAdding(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildAdded"/> event.</para>
            </summary>
            <param name="e">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnChildAdded(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildAdded"/> event.
            </summary>
            <param name="e">A 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains
            the event data.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnChanged(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Changed"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> object containing the event data.</para></param>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Changed">
            <summary>
            <para>Occurs when the internal state of the current node has changed.</para>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildInserted">
            <summary>
            <para>Occurs after a node is added as a child node to the current object.</para>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renaming">
            <summary>
            <para>Occurs after the name of the current node changes.</para>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renamed">
            <summary>
            <para>Occurs after the name of the current node changes.</para>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildRemoved">
            <summary>
            <para>Occurs after a child node of the current node is removed.</para>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildAdding">
            <summary>
            <para>Occurs after a child node is added to the current node.</para>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildAdded">
            <summary>
            <para>Occurs after a child node is added to the current node.</para>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Removed">
            <summary>
            <para>Occurs after the current node is removed from its parent's node collection.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Index">
            <summary>
            <para>Gets the position of this node in the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Nodes"/>.</para>
            </summary>
            <value>
            <para>The position of this node in the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Nodes"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Nodes">
            <summary>
            <para>Gets the collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> objects assigned to the current configuration node.</para>
            </summary>
            <value>
            <para>The collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> objects assigned to the current configuration node.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Name">
            <summary>
            <para>Gets or sets the name for the node.</para>
            </summary>
            <value>
            <para>The display name for the node.</para>
            </value>
            <remarks>
            <para>The name should be the <seealso cref="P:System.ComponentModel.ISite.Name"/>.</para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            <para>The name already exists in the parent's node collection.</para>
            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.PreviousSibling">
            <summary>
            <para>Gets the node immediately preceding this node.</para>
            </summary>
            <value>
            <para>The preceding <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>. If there is no preceding node, a <see langword="null"/> reference (Nothing in Visual Basic) is returned.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.NextSibling">
            <summary>
            <para>Gets the node immediately following this node.</para>
            </summary>
            <value>
            <para>The next <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>. If there is no next node, a <see langword="null"/> reference (Nothing in Visual Basic) is returned.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.FirstNode">
            <summary>
            <para>Gets the first child tree node in the node collection.</para>
            </summary>
            <value>
            <para>The first child <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> in the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Nodes"/> collection.</para>
            </value>
            <remarks>
            The <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.FirstNode"/> is the first child <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection"/> stored in the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Nodes"/> property of the current node. If the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> has no child node, the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.FirstNode"/> property returns a <see langword="null"/> reference (Nothing in Visual Basic).
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.LastNode">
            <summary>
            <para>Gets the first child tree node in the node collection.</para>
            </summary>
            <value>
            <para>The first child <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> in the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Nodes"/> collection.</para>
            </value>
            <remarks>
            The <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.LastNode"/> is the last child <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection"/> stored in the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Nodes"/> property of the current node. If the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> has no child node, the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.FirstNode"/> property returns a <see langword="null"/> reference (Nothing in Visual Basic).
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Parent">
            <summary>
            <para>Gets the parent configuration node of the the current configuration node.</para>
            </summary>
            <value>
            <para>The parent configuration node of the the current configuration node.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Path">
            <summary>
            <para>Gets the path from the root node to the current node.</para>
            </summary>
            <value>
            <para>The path from the root node to the current node.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Id">
            <summary>
            <para>Gets a runtime-generated, non-persisted unique identifier for this node.</para>
            </summary>
            <value>
            <para>A runtime-generated, non-persisted unique identifier for this node.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Hierarchy">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> containing this node.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> containing this node. The default is <see langword="null"/></para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.SortChildren">
            <summary>
            <para>Gets if children added to the node are sorted.</para>
            </summary>
            <value>
            <para><see langword="true"/> if nodes add are sorted; otherwise <see langword="false"/>. The default is <see langword="true"/></para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionCollectionNode.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionCollectionNode"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionCollectionNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionCollectionNode"/> class with the runtime configuration.</para>
            </summary>
            <param name="configurationSettings">
            <para>The runtime configuration </para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionCollectionNode.OnAddMenuItems">
            <summary>
            <para>Adds a new menu item to the user iterface to create a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionCollectionNode.OnSited">
            <summary>
            <para>Sets the name of node when sited to match the underlying storage name and adds the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode"/> that applies to the configuration sections.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionCollectionNode.Name">
            <summary>
            <para>Gets or sets the name of the node.</para>
            </summary>
            <value>
            <para>The name of the node.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionCollectionNode.ConfigurationSettings">
            <summary>
            <para>Get the runtime configuration settings.</para>
            </summary>
            <value>
            <para>The runtime configuration settings.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeSite">
            <summary>
            <para>Basic <see cref="T:System.ComponentModel.ISite"/> implementation. Passes all service requests to the parent service provider.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeSite.#ctor(System.IServiceProvider,System.ComponentModel.IComponent,System.String)">
            <summary>
            Constructs a site.
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="component"><para>The component this site is being associated with.</para></param>
            <param name="name"><para>A name for the site.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeSite.GetService(System.Type)">
            <summary>
            <para>Gets the service object of the specified type.</para>
            </summary>
            <param name="serviceType">
            <para>An object that specifies the type of service object to get.</para>
            </param>
            <returns>
            <para>A service object of type <paramref name="serviceType"/>.</para>
            <para>-or-</para>
            <para>A <c>null</c> reference (Nothing in Visual Basic) if there is no service object of type <paramref name="serviceType"/>.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeSite.Component">
            <summary>
            <para>Gets the component associated with the <see cref="T:System.ComponentModel.ISite"/>.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.ComponentModel.IComponent"/> instance associated with the <see cref="T:System.ComponentModel.ISite"/>.</para>
            </value>
            <seealso cref="P:System.ComponentModel.ISite.Component"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeSite.Container">
            <summary>
            <para>Gets the container associated with the <see cref="T:System.ComponentModel.ISite"/>.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.ComponentModel.IContainer"/> instance associated with the <see cref="T:System.ComponentModel.ISite"/>.</para>
            </value>
            <seealso cref="P:System.ComponentModel.ISite.Container"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeSite.DesignMode">
            <summary>
            <para>Determines whether the component is in design mode.</para>
            </summary>
            <value>
            <para><see langword="true"/> if the component is in design mode; otherwise, <see langword="false"/>.</para>
            </value>
            <seealso cref="P:System.ComponentModel.ISite.DesignMode"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeSite.Name">
            <summary>
            <para>Gets the name of the component associated with the <see cref="T:System.ComponentModel.ISite"/>.</para>
            </summary>
            <value>
            <para>The name of the component associated with the <see cref="T:System.ComponentModel.ISite"/>; or a null reference (Nothing in Visual Basic), if no name is assigned to the component.</para>
            </value>
            <seealso cref="P:System.ComponentModel.ISite.Name"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection">
            <summary>
            <para>Represents a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> objects.</para>
            </summary>    
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection.#ctor">
            <summary>
            <para>Initializes a new instance of the  <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection.Add(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.String)">
            <summary>
            <para>Initializes a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> object with the specified <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>  and error message and adds it to the collection.</para>
            </summary>
            <param name="node"><para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> object.</para></param>
            <param name="message"><para>The message for the error.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection.Add(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError)">
            <summary>
            <para>Add a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> to the collection.</para>
            </summary>
            <param name="configurationError"><para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> to add to the collection.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection.Insert(System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError)">
            <summary>
            <para>Inserts an element into the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection"/> at the specified index.</para>
            </summary>
            <param name="index">
            <para>The zero-based index at which value should be inserted.</para>
            </param>
            <param name="configurationError">
            <para>The Object to insert.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection.IndexOf(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError)">
            <summary>
            <para>Searches for the specified <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> and returns the zero-based index of the first occurrence within the entire <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection"/>.</para>
            </summary>
            <param name="configurationError">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> to locate in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection"/>.</para>
            </param>
            <returns>
            <para>The zero-based index of the first occurrence of value within the entire <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection"/>, if found; otherwise, -1.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection.Contains(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError)">
            <summary>
            <para>Determines whether the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection"/> contains a specific element.</para>
            </summary>
            <param name="configurationError">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> to locate in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection"/>.</para>
            </param>
            <returns>
            <para><see langword="true"/> if the CollectionBase contains the specified value; otherwise, <see langword="false"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection.Remove(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError)">
            <summary>
            <para>Removes the first occurrence of a specific object from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection"/>.</para>
            </summary>
            <param name="configurationError">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> to remove from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection"/>.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection.CopyTo(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError[],System.Int32)">
            <summary>
            <para>Copies the entire <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection"/> to a compatible one-dimensional Array, starting at the specified index of the target array.</para>
            </summary>
            <param name="array">
            <para>The one-dimensional <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> array that is the destination of the elements copied from <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection"/>. The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> array must have zero-based indexing.</para>
            </param>
            <param name="index">
            <para>The zero-based index in array at which copying begins.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection.AddRange(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection)">
            <summary>
            <para>Adds the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/>s of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection"/> to the end of the collection.</para>
            </summary>
            <param name="errors">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection"/> object.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection.Item(System.Int32)">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> at the given index.</para>
            </summary>
            <param name="index"><para>The zero-based index of the parameter to retrieve.</para></param>
            <value><para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> at the specified index.</para></value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost">
            <summary>
            <para>Provides a host for all the services for the configuration design.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer">
            <summary>
            Represents a container for services.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IOleServiceProvider">
            <summary>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IOleServiceProvider"/> interface is a generic access mechanism to locate a globally unique identifier (GUID) identified service. </para>
            </summary>
            <remarks>
            <para>This maps to the definition of IServiceProvider defined in servprov.idl in COM. We have to rename to avoid the collision with <see cref="T:System.IServiceProvider"/> </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IOleServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)">
            <summary>
            <para>Acts as the factory method for any services exposed through an implementation of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IOleServiceProvider"/>.</para>
            </summary>
            <param name="guidService"><para>Unique identifier of the service (an SID).</para></param>
            <param name="riid"><para>Unique identifier of the interface the caller wishes to receive for the service.</para></param>
            <param name="ppvObject"><para>Address of the caller-allocated variable to receive the interface pointer of the service on successful return from this function. The caller becomes responsible for calling Release through this interface pointer when the service is no longer needed.</para></param>
            <returns>
            <para>
            Returns one of the following values:
            <list type="table">
            <item>
            <term>S_OK</term> 
            <description>The service was successfully created or retrieved. The caller is responsible for calling ((IUnknown *)*ppv)-&gt;Release();</description>
            </item>
            <item>
            <term>E_OUTOFMEMORY</term> 
            <description>There is insufficient memory to create the service.</description>
            </item>
            <item>
            <term>E_UNEXPECTED</term>
            <description>An unknown error occurred.</description>
            </item>
            <item>
            <term>E_NOINTERFACE</term>
            <description>The service exists, but the interface requested does not exist on that service.</description>
            </item>
            <item>
            <term>SVC_E_UNKNOWNSERVICE</term>
            <description>The service identified with guidService is not recognized.</description>
            </item>
            </list>
            </para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer"/> class.</para>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer.#ctor(System.IServiceProvider)">
            <summary>
            <para>Initializes a new instance of the ServiceContainer class using the specified parent service provider.</para>.
            </summary>
            <param name="serviceProvider">
            <para>A parent service provider.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="serviceProvider"/> is a null reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer.Finalize">
            <summary>
            <para>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer"/> is reclaimed by garbage collection. </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer.Dispose">
            <summary>
            <para>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer"/> is reclaimed by garbage collection. </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer.Dispose(System.Boolean)">
            <summary>
            <para>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer"/> is reclaimed by garbage collection. </para>
            </summary>
            <param name="disposing"><para><c>true</c> if we are disposing; otherwise, <c>false</c> which means the call is coming from our finalizer.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
            <summary>
            <para>Adds the specified service to the service container, and optionally promotes the service to parent service containers.</para>
            </summary>
            <param name="serviceType"><para>The type of service to add.</para></param>
            <param name="callback"><para>A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.</para></param>
            <param name="promote"><para><c>true</c> to promote this request to any parent service containers; otherwise, <c>false</c>.</para></param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="serviceType"/> is a null reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><paramref name="callback"/> is a null reference (Nothing in Visual Basic).</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <para><paramref name="serviceType"/> already exists.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
            <summary>
            <para>Adds the specified service to the service container.</para>
            </summary>
            <param name="serviceType"><para>The type of service to add.</para></param>
            <param name="callback"><para>A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.</para></param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="serviceType"/> is a null reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><paramref name="callback"/> is a null reference (Nothing in Visual Basic).</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <para><paramref name="serviceType"/> already exists.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)">
            <summary>
            <para>Adds the specified service to the service container, and optionally promotes the service to any parent service containers.</para>
            </summary>
            <param name="serviceType"><para>The type of service to add.</para></param>
            <param name="serviceInstance"><para>An instance of the service type to add. This object must implement or inherit from the type indicated by the serviceType parameter.</para></param>
            <param name="promote"><para><c>true</c> to promote this request to any parent service containers; otherwise, <c>false</c>.</para></param>
            <exception cref="T:System.ArgumentException">
            <para><paramref name="serviceType"/> is invalid.</para>
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="serviceType"/> is a null reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><paramref name="serviceInstance"/> is a null reference (Nothing in Visual Basic).</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <para><paramref name="serviceType"/> already exists.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer.AddService(System.Type,System.Object)">
            <summary>
            <para>Adds the specified service to the service container.</para>
            </summary>
            <param name="serviceType"><para>The type of service to add.</para></param>
            <param name="serviceInstance"><para>An instance of the service type to add. This object must implement or inherit from the type indicated by the serviceType parameter.</para></param>
            <exception cref="T:System.ArgumentException">
            <para><paramref name="serviceType"/> is invalid.</para>
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="serviceType"/> is a null reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><paramref name="serviceInstance"/> is a null reference (Nothing in Visual Basic).</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <para><paramref name="serviceType"/> already exists.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer.GetService(System.Type)">
            <summary>
            <para>Gets the requested service.</para>
            </summary>
            <param name="serviceType"><para>The type of service to retrieve.</para></param>
            <returns><para>An instance of the service if it could be found, or a null reference (Nothing in Visual Basic) if it could not be found.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)">
            <summary>
            <para>Removes the specified service type from the service container.</para>
            </summary>
            <param name="serviceType"><para>The type of service to remove.</para></param>
            <param name="promote"><c>true</c> to promote this request to any parent service containers; otherwise, <c>false</c>.</param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="serviceType"/> is a null reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer.RemoveService(System.Type)">
            <summary>
            <para>Removes the specified service type from the service container.</para>
            </summary>
            <param name="serviceType">The type of service to remove.</param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="serviceType"/> is a null reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer.QueryService(System.Guid@,System.Guid@,System.IntPtr@)">
            <summary>
            <para>Acts as the factory method for any services exposed through an implementation of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IOleServiceProvider"/>.</para>
            </summary>
            <param name="guidService"><para>Unique identifier of the service (an SID).</para></param>
            <param name="riid"><para>Unique identifier of the interface the caller wishes to receive for the service.</para></param>
            <param name="ppvObject"><para>Address of the caller-allocated variable to receive the interface pointer of the service on successful return from this function. The caller becomes responsible for calling Release through this interface pointer when the service is no longer needed.</para></param>
            <returns>
            <para>
            Returns one of the following values:
            <list type="table">
            <item>
            <term>S_OK</term> 
            <description>The service was successfully created or retrieved. The caller is responsible for calling ((IUnknown *)*ppv)-&gt;Release();</description>
            </item>
            <item>
            <term>E_OUTOFMEMORY</term> 
            <description>There is insufficient memory to create the service.</description>
            </item>
            <item>
            <term>E_UNEXPECTED</term>
            <description>An unknown error occurred.</description>
            </item>
            <item>
            <term>E_NOINTERFACE</term>
            <description>The service exists, but the interface requested does not exist on that service.</description>
            </item>
            <item>
            <term>SVC_E_UNKNOWNSERVICE</term>
            <description>The service identified with guidService is not recognized.</description>
            </item>
            </list>
            </para>
            </returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer.ProfferedService">
            <summary>
            This class contains a service that is being promoted to VS.  
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.#ctor(System.IServiceProvider)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost"/> class with an <see cref="T:System.IServiceProvider"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The parent <see cref="T:System.IServiceProvider"/>.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.Add(System.ComponentModel.IComponent)">
            <summary>
            <para>Adds the specified <see cref="T:System.ComponentModel.IComponent"/> to the <see cref="T:System.ComponentModel.IContainer"/> at the end of the list.</para>
            </summary>
            <param name="component">
            <para>The <see cref="T:System.ComponentModel.IComponent"/> to add.</para>
            </param>
            <seealso cref="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.Add(System.ComponentModel.IComponent,System.String)">
            <summary>
            <para>Adds the specified <see cref="T:System.ComponentModel.IComponent"/> to the <see cref="T:System.ComponentModel.IContainer"/> at the end of the list.</para>
            </summary>
            <param name="component">
            <para>The <see cref="T:System.ComponentModel.IComponent"/> to add.</para>
            </param>
            <param name="name">
            <para>The unique, case-insensitive name to assign to the component.</para>
            <para>- or -</para>
            <para>A null reference (Nothing in Visual Basic) that leaves the component unnamed.</para>
            </param>
            <seealso cref="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.Remove(System.ComponentModel.IComponent)">
            <summary>
            <para>Removes a component from the <see cref="T:System.ComponentModel.IContainer"/>.</para>
            </summary>
            <param name="component">
            <para>The <see cref="T:System.ComponentModel.IComponent"/> to remove.</para>
            </param>
            <seealso cref="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
            <summary>
            <para>Announces to the component change service that a particular component has changed.</para>
            </summary>
            <param name="component">
            <para>The component that has changed.</para>
            </param>
            <param name="member">
            <para>The member that has changed. This is a <see langword="null"/> reference (Nothing in Visual Basic) if this change is not related to a single member.</para>
            </param>
            <param name="oldValue">
            <para>The old value of the member. This is valid only if the member is not a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <param name="newValue">
            <para>The new value of the member. This is valid only if the member is not a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <seealso cref="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
            <summary>
            <para>Announces to the component change service that a particular component is changing.</para>
            </summary>
            <param name="component">
            <para>The component that is about to change.</para>
            </param>
            <param name="member">
            <para>The member that is changing. This is a <see langword="null"/> reference (Nothing in Visual Basic) if this change is not related to a single member.</para>
            </param>
            <seealso cref="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.OnComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.ComponentRename"/> event.</para>
            </summary>
            <param name="e">
            <para>A <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs"/> object containing data for the event.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.Dispose(System.Boolean)">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderFactory"/> and optionally releases the managed resources.</para>
            </summary>
            <param name="disposing">
            <para><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.OnComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.ComponentAdding"/> event.</para>
            </summary>
            <param name="e">
            <para>A <see cref="T:System.ComponentModel.Design.ComponentEventArgs"/> object containing data for the event.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.OnComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.ComponentAdded"/> event.</para>
            </summary>
            <param name="e">
            <para>A <see cref="T:System.ComponentModel.Design.ComponentEventArgs"/> object containing data for the event.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.OnComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.ComponentRemoving"/> event.</para>
            </summary>
            <param name="e">
            <para>A <see cref="T:System.ComponentModel.Design.ComponentEventArgs"/> object containing data for the event.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.OnComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.ComponentRemoved"/> event.</para>
            </summary>
            <param name="e">
            <para>A <see cref="T:System.ComponentModel.Design.ComponentEventArgs"/> object containing data for the event.</para>
            </param>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.ComponentAdded">
            <summary>
            Occurs when a component has been added.
            </summary>
            <seealso cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded"/>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.ComponentAdding">
            <summary>
            Occurs when a component is in the process of being added.
            </summary>
            <seealso cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding"/>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.ComponentChanged">
            <summary>
            Occurs when a component has been changed.
            </summary>
            <seealso cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged"/>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.ComponentChanging">
            <summary>
            Occurs when a component is in the process of being changed.
            </summary>
            <seealso cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging"/>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.ComponentRemoved">
            <summary>
            Occurs when a component has been removed.
            </summary>
            <seealso cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved"/>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.ComponentRemoving">
            <summary>
            Occurs when a component is in the process of being removed.
            </summary>
            <seealso cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving"/>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.ComponentRename">
            <summary>
            Occurs when a component is renamed.
            </summary>
            <seealso cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignHost.Components">
            <summary>
            <para>Gets all the components in the <see cref="T:System.ComponentModel.IContainer"/>.</para>
            </summary>
            <value>
            <para>The components in the <see cref="T:System.ComponentModel.IContainer"/>.</para>
            </value>
            <seealso cref="P:System.ComponentModel.IContainer.Components"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WaitCursor">
            <summary>
            Provides a simple way to set a wait cursor (or other cursor)
            around a block of code.
            </summary>
            <example>
            using( WaitCursor wait = new WaitCursor()
            {
            	// Do something
            }
            </example>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WaitCursor.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WaitCursor"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WaitCursor.#ctor(System.Windows.Forms.Cursor)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WaitCursor"/> class.</para>
            </summary>
            <param name="cursor">
            <para>The <see cref="T:System.Windows.Forms.Cursor"/> to use as the wait <see cref="T:System.Windows.Forms.Cursor"/>.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WaitCursor.Dispose">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WaitCursor"/> and optionally releases the managed resources.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceTypeAttribute">
            <summary>
            <para>Specifies the <see cref="T:System.Type"/> that a node references.</para>
            </summary>	
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceTypeAttribute.#ctor(System.Type)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceTypeAttribute"/> class with type to reference.</para>
            </summary>
            <param name="referenceType">
            <para>The <see cref="T:System.Type"/> of the reference.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceTypeAttribute.ReferenceType">
            <summary>
            <para>Gets the <see cref="T:System.Type"/> to reference.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.Type"/> to reference.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditor">
            <summary>
            <para>Provides a user interface that can edit <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings"/> at design time.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditor.#ctor">
            <summary>
            Create an instance which requires dpapi settings.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditor.#ctor(System.Boolean)">
            <summary>
            Creates an instance defining whether or not dpapi settings are required.
            </summary>
            <param name="required">Whether or not dpapi settings are requried.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            <para>Edits the specified object's value using the editor style indicated by <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>. This should be a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings"/> object.</para>
            </summary>
            <param name="context"><para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</para></param>
            <param name="provider"><para>An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</para></param>
            <param name="value"><para>The object to edit. This should be a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings"/> object.</para></param>
            <returns><para>The new value of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings"/> object.</para></returns>
            <seealso cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            <para>Gets the editor style used by the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/> method.</para>
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/>. If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditor.HandleResult(System.Windows.Forms.DialogResult,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings,Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData)">
            <summary>
            <para>Handle the result from the editor.</para>
            </summary>
            <param name="dialogResult">
            <para>One of the <see cref="T:System.Windows.Forms.DialogResult"/> values.</para>
            </param>
            <param name="originalSettings">
            <para>The original <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings"/> before editing.</para>
            </param>
            <param name="newSettingsData">
            <para>The new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData"/> from the editor.</para>
            </param>
            <returns>
            <para>If accepted, the new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings"/>; otherwise the <paramref name="originalSettings"/>.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditor.ConfirmMessage">
            <summary>
            <para>Gets or sets the confirmation message to display to the user.</para>
            </summary>
            <value>
            <para>The confirmation message to display to the user.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService">
            <summary>
            <para>Enables interaction with the user interface of the development environment object that is hosting the designer.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.BeginUpdate">
            <summary>
            <para>When implemented by a class, notifies the user interface that an update is occuring.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.EndUpdate">
            <summary>
            <para>When implemented by a class, notifies the user interface that an update has ended.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowSaveDialog(System.Windows.Forms.SaveFileDialog)">
            <summary>
            <para>When implemented by a class, displays a <see cref="T:System.Windows.Forms.SaveFileDialog"/> in the user interface.</para>
            </summary>
            <param name="dialog">
            <para>The <see cref="T:System.Windows.Forms.SaveFileDialog"/> to display.</para>
            </param>
            <returns>
            <para>One of the <see cref="T:System.Windows.Forms.DialogResult"/> values.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowOpenDialog(System.Windows.Forms.OpenFileDialog)">
            <summary>
            <para>When implemented by a class, displays an <see cref="T:System.Windows.Forms.OpenFileDialog"/> in the user interface.</para>
            </summary>
            <param name="dialog">
            <para>The <see cref="T:System.Windows.Forms.OpenFileDialog"/> to display.</para>
            </param>
            <returns>
            <para>One of the <see cref="T:System.Windows.Forms.DialogResult"/> values.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ActivateNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>When implemented by a class, avtivates a node.</para>
            </summary>
            <param name="node">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to activate.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.DisplayErrorLog(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService)">
            <summary>
            <para>When implemented by a class, displays the validation errors.</para>
            </summary>
            <param name="errorLogService">
            <para>The errorLogToDisplay.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.SetUIDirty(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy)">
            <summary>
            <para>When implemented by a class, sets the hierarchy dirty indicating the UI should indicate a model change.</para>
            </summary>
            <param name="hierarchy">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> to set dirty in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService"/>.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.IsDirty(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy)">
            <summary>
            <para>When implemented by a class, determines if the given <paramref name="hierarchy"/> has been modified.</para>
            </summary>
            <param name="hierarchy"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> object.</para></param>
            <returns><para><see langword="true"/> if the given <paramref name="hierarchy"/> has been modified; otherwise, <see langword="false"/>.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.SetStatus(System.String)">
            <summary>
            <para>When implemented by a class, updates the status text in the user interface.</para>
            </summary>
            <param name="status">
            <para>The status to display.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ClearErrorDisplay">
            <summary>
            <para>Clear the errors in the user interface.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowError(System.Exception)">
            <summary>
            <para>When implemented by a class, displays the specified exception and information about the exception.</para>
            </summary>
            <param name="e">
            <para>The <see cref="T:System.Exception"/> to display.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowError(System.Exception,System.String)">
            <summary>
            <para>When implemented by a class, displays the specified exception and information about the exception.</para>
            </summary>
            <param name="e">
            <para>The <see cref="T:System.Exception"/> to display.</para>
            </param>
            <param name="message">
            <para>A message to display that provides information about the exception</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowError(System.Exception,System.String,System.String)">
            <summary>
            <para>When implemented by a class, displays the specified exception and information about the exception.</para>
            </summary>
            <param name="e">
            <para>The <see cref="T:System.Exception"/> to display.</para>
            </param>
            <param name="message">
            <para>A message to display that provides information about the exception</para>
            </param>
            <param name="caption">
            <para>The caption for the message.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowError(System.String)">
            <summary>
            <para>When implemented by a class, displays the specified error message.</para>
            </summary>
            <param name="message">
            <para>The error message to display.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowError(System.String,System.String)">
            <summary>
            <para>When implemented by a class, displays the specified error message.</para>
            </summary>
            <param name="message">
            <para>The error message to display.</para>
            </param>
            <param name="caption">
            <para>The caption for the message.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowMessage(System.String)">
            <summary>
            <para>When implemented by a class, displays the specified message.</para>
            </summary>
            <param name="message">
            <para>The message to display.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowMessage(System.String,System.String)">
            <summary>
            <para>When implemented by a class, displays the specified message with the specified caption.</para>
            </summary>
            <param name="message">
            <para>The message to display.</para>
            </param>
            <param name="caption">
            <para>The caption for the message.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowMessage(System.String,System.String,System.Windows.Forms.MessageBoxButtons)">
            <summary>
            <para>When implemented by a class, displays the specified message in a message box with the specified caption and buttons to place on the dialog box.</para>
            </summary>
            <param name="message">
            <para>The message to display.</para>
            </param>
            <param name="caption">
            <para>The caption for the message.</para>
            </param>
            <param name="buttons">
            <para>One of the <see cref="T:System.Windows.Forms.MessageBoxButtons"/> values.</para>
            </param>
            <returns>
            <para>One of the <see cref="T:System.Windows.Forms.DialogResult"/> values.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.OwnerWindow">
            <summary>
            <para>When implemented by a class, gets the owner window.</para>
            </summary>
            <value>
            <para>The owner window.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IProfferService">
            <summary>
            <para>This interface provides a general mechanism for objects to offer services to other objects sited on the same host.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IProfferService.ProfferService(System.Guid@,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IOleServiceProvider,System.UInt32@)">
            <summary>
            <para>Makes a service available to other objects cited on the same host.</para>
            </summary>
            <param name="rguidService">
            <para>Value of type GUID that specifies the service being offered.</para>
            </param>
            <param name="psp">
            <para>Pointer to an IOleServiceProvider interface.</para>
            </param>
            <param name="pdwCookie">
            <para>Pointer to a variable of type DWORD that receives an implementation-defined value used for identification purposes. The calling application must keep track of this value in the event it needs to execute IProfferService::RevokeService.</para>
            </param>
            <returns>
            <para>Returns S_OK if successful, or an error value otherwise.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IProfferService.RevokeService(System.UInt32)">
            <summary>
            <para>Makes a service unavailable that was previously available to other objects using <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IProfferService.ProfferService(System.Guid@,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IOleServiceProvider,System.UInt32@)"/></para>
            </summary>
            <param name="dwCookie">Specifies an implementation-defined value used for identification purposes. The calling application receives this value from <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IProfferService.ProfferService(System.Guid@,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IOleServiceProvider,System.UInt32@)"/>.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IMenuContainerService">
            <summary>
            <para>Provides support for adding menu items to the main menu.</para>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IMenuContainerService.MenuItems">
            <summary>
            <para>When implemented by a class, gets the list of menu items for all external callers.</para>
            </summary>
            <value>
            <para>The list of menu items for all external callers.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand">
            <summary>
            <para>Represents a command to execute against a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.#ctor(System.IServiceProvider)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="clearErrorLog">
            <para>Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/> should be cleared when the command has executed.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Dispose">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand"/> and optionally releases the managed resources.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Dispose(System.Boolean)">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand"/> and optionally releases the managed resources.</para>
            </summary>
            <param name="disposing">
            <para><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Execute(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Executes the command.</para>
            </summary>
            <param name="node">
            <para>The node to execute on the command on.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>When overridden by a class, executes the core logic of the command.</para>
            </summary>
            <param name="node">
            <para>The node to execute the command upon.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.OnExecuting(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs)">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Executing"/> event.</para>
            </summary>
            <param name="e">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs"/> containing the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.OnExecuted(System.EventArgs)">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Executed"/> event.</para>
            </summary>
            <param name="e"><para>An <see cref="T:System.EventArgs"/> containing the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.GetService(System.Type)">
            <summary>
            <para>Retrieves the requested service.</para>
            </summary>
            <param name="serviceClass">
            <para>The type of the service to retrieve.</para>
            </param>
            <returns>
            <para>An instance of the service or <c>null</c> if no such service exists.</para>
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="serviceClass"/> is a null reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.LogError(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError)">
            <summary>
            <para>Log a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/>.</para>
            </summary>
            <param name="error">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> to log.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.LogError(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError)">
            <summary>
            <para>Log a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/>.</para>
            </summary>
            <param name="error">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> to log.</para>
            </param>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Executing">
            <summary>
            <para>Occurs as the command is about to be executed.</para>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Executed">
            <summary>
            <para>Occurs after the commmand has completed execution.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.ClearErrorLog">
            <summary>
            <para>Determines if the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/> is cleared after the command executes.</para>
            </summary>
            <value>
            <para><see langword="true"/> if the log should be cleared; otherwise <see langword="false"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Events">
            <summary>
            <para>Gets the list of event handlers that are attached to this command.</para>
            </summary>
            <value>
            <para>An <see cref="T:System.ComponentModel.EventHandlerList"/> that provides the delegates for this component</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.ServiceProvider">
            <summary>
            <para>Gets the service provider for the command.</para>
            </summary>
            <value>
            <para>The service provider for the command.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.UIService">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService"/>.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.UIHierarchyService">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService"/>.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.CurrentHierarchy">
            <summary>
            <para>Gets the currently selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>.</para>
            </summary>
            <value>
            <para>The currently selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.XmlIncludeTypeService">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IXmlIncludeTypeService"/>.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IXmlIncludeTypeService"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.ConfigurationErrorLogService">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/>.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.NodeNameCreationService">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeNameCreationService"/>.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeNameCreationService"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.NodeCreationService">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService"/>.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.LinkNodeService">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ILinkNodeService"/>.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ILinkNodeService"/>.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveApplicationConfigurationNodeCommand">
            <summary>
            <para>Represents a command that will save an application configuration.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveApplicationConfigurationNodeCommand.#ctor(System.IServiceProvider)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveApplicationConfigurationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveApplicationConfigurationNodeCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveApplicationConfigurationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="clearErrorLog">
            <para>Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/> should be cleared when the command has executed.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveApplicationConfigurationNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Saves the application configuration.</para>
            </summary>
            <param name="node">
            <para>The node to execute the command upon.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveApplicationConfigurationNodeCommand.SaveSucceeded">
            <summary>
            <para>Determines if the saving of the application was suseccesful.</para>
            </summary>
            <value>
            <para><see langword="true"/> if the saving of the application was suseccesful; otherwise, <see langword="false"/>.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IObjectWithSite">
            <summary>
            <para>The IObjectWithSite interface provides a simple way to support communication between an object and its site in the container.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IObjectWithSite.SetSite(System.Object)">
            <summary>
            <para>Provides the site's IUnknown pointer to the object. The object should hold onto this pointer, calling IUnknown::AddRef in doing so. If the object already has a site, it should call that existing site's IUnknown::Release, save the new site pointer, and call the new site's IUnknown::AddRef.</para>
            </summary>
            <param name="pUnkSite">
            <para>Pointer to the IUnknown interface pointer of the site managing this object. If NULL, the object should call IUnknown::Release on any existing site at which point the object no longer knows its site.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IObjectWithSite.GetSite(System.Guid@,System.Object[])">
            <summary>
            <para>Retrieves the last site set with IObjectWithSite::SetSite. If there's no known site, the object return a failure code.</para>
            </summary>
            <param name="riid">
            <para>The IID of the interface pointer that should be returned in ppvSite.</para>
            </param>
            <param name="ppvSite"><para>Address of pointer variable that receives the interface pointer requested in riid. Upon successful return, *ppvSite contains the requested interface pointer to the site last seen in IObjectWithSite::SetSite. The specific interface returned depends on the riid argument—in essence, the two arguments act identically to those in IUnknown::QueryInterface. If the appropriate interface pointer is available, the object must call IUnknown::AddRef on that pointer before returning successfully. If no site is available, or the requested interface is not supported, this method must *ppvSite to NULL and return a failure code.</para></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager">
            <summary>
            <para>Represents the object that will manage the design of configuration.</para>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager.Register(System.IServiceProvider)">
            <summary>
            <para>
            When implemented by a class, allows the registration of configuration nodes and commands into the configuration tree.
            </para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager.Save(System.IServiceProvider)">
            <summary>
            <para>When implemented by a class, saves the configuration data for the implementer.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager.Open(System.IServiceProvider)">
            <summary>
            <para>When implemented by a class, opens the configuration for the application.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager.BuildContext(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary)">
            <summary>
            <para>When implemented by a class, adds the configuration data for the current implementer to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="configurationDictionary">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary"/> object that will contain the configuration data.</para></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventHandler">
            <summary>
            Represents the method that handles a 
            <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Changed"/>,
            <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildAdded"/>,
            <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildRemoved"/>,
            <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildInserted"/>,
            <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Removed"/>, or
            <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renamed"/> event.
            </summary>
            <param name="sender">
            <para>The source of the event.</para>
            </param>
            <param name="e">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs">
            <summary>
            <para>
            Provides data for the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Changed"/>,
            <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildAdded"/>,
            <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildRemoved"/>,
            <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildInserted"/>,
            <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Removed"/>, and
            <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renamed"/> events.
            </para>
            </summary>    
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedAction,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> class with an action, the node it was performed upon, and the parent node.</para>
            </summary>
            <param name="action">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedAction"/> values.</para>
            </param>
            <param name="node">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> that the action occured upon.</para>
            </param>
            <param name="parent"><para>The parent node of the <paramref name="node"/>.</para></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs.Action">
            <summary>
            <para>Gets a value indicating the action for the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs.Node"/>.</para>
            </summary>
            <value>
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedAction"/> values.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs.Node">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> for the action.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> for the action.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs.ParentNode">
            <summary>
            <para>Gets the parent node of the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs.Node"/> object.</para>
            </summary>
            <value>
            <para>The parent node of the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs.Node"/> object.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerProxy">
            <devdoc>
            Represents a proxy for an IConfigurationDesignManager.
            This object is comparable so we can use an ArrayList to sort dependencies. 
            So in fact it doesn't really work as a compare should since we return 0 to
            indicate no dependency, not equality.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError">
            <summary>
            <para>Collects information relevant to a warning or error returned by validation.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.#ctor(System.Object,System.String,System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> calss with the invalid object, property name, and error message.</para>
            </summary>
            <param name="invalidItem">
            <para>The object that did not validate.</para>
            </param>
            <param name="propertyName">
            <para>The name of the property that is invalid.</para>
            </param>
            <param name="errorMessage">
            <para>The message that describes the error.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> class with serialized data.</para>
            </summary>
            <param name="info"><para>The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</para></param>
            <param name="context"><para>The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.ToString">
            <summary>
            <para>Returns the string representatio of the error.</para>
            </summary>
            <returns>
            <para>The string representatio of the error</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            <para>When overridden in a derived class, sets the SerializationInfo with information about the exception.</para>
            </summary>
            <param name="info">
            <para>The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</para>
            </param>
            <param name="context">
            <para>The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination. </para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            <para>When overridden in a derived class, sets the SerializationInfo with information about the exception.</para>
            </summary>
            <param name="info">
            <para>The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</para>
            </param>
            <param name="context">
            <para>The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination. </para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.PropertyName">
            <summary>
            <para>Gets the property name of the failed validation.</para>
            </summary>
            <value>
            <para>The property name of the failed validation.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.Message">
            <summary>
            <para>Gets or sets the message for the error.</para>
            </summary>
            <value>
            <para>The message for the error.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.InvalidObject">
            <summary>
            <para>Gets or sets the invalid object that that valid validation.</para>
            </summary>
            <value>
            <para>The invalid object that that valid validation.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MaximumLengthAttribute">
            <summary>
            <para>
            Specifies a property or event will be validated on a specific maximum length.
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationAttribute">
            <summary>
            <para>
            Specifies a property or event will be validated.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationAttribute.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationAttribute"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationAttribute.Validate(System.Object,System.Reflection.PropertyInfo,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection)">
            <summary>
            <para>Validate the ranige data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.</para>
            </summary>
            <param name="instance">
            <para>The instance to validate.</para>
            </param>
            <param name="propertyInfo">
            <para>The property contaning the value to validate.</para>
            </param>
            <param name="errors">
            <para>The collection to add any errors that occur durring the validation.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationAttribute.IsActive">
            <summary>
            <para>Gets or sets if the validation is active.</para>
            </summary>
            <value>
            <para><see langword="true"/> if the validation is active; otherwise <see langword="false"/>.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MaximumLengthAttribute.#ctor(System.Int32)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MaximumLengthAttribute"/> class with a maximum length.</para>
            </summary>
            <param name="maximumLength">
            <para>The maximum length.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MaximumLengthAttribute.Validate(System.Object,System.Reflection.PropertyInfo,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection)">
            <summary>
            <para>Validate the ranige data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.</para>
            </summary>
            <param name="instance">
            <para>The instance to validate.</para>
            </param>
            <param name="propertyInfo">
            <para>The property contaning the value to validate.</para>
            </param>
            <param name="errors">
            <para>The collection to add any errors that occur durring the validation.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludeFlags">
            <summary>
            <para>Provides attributes for the filter of types.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludeFlags.Default">
            <summary>
            <para>No filter are applied to types.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludeFlags.AbstractTypes">
            <summary>
            <para>Inclue abstract types in the filter.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludeFlags.Interfaces">
            <summary>
            <para>Inclue interfaces in the filter.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludeFlags.BaseType">
            <summary>
            <para>Inclue base types in the filter.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludeFlags.NonpublicTypes">
            <summary>
            <para>Inclue non public types in the filter.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings">
            <summary>
            <para>Represents the settings used when encrypting / decrypting data with DPAPI.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData"/> object.</para>
            </summary>
            <param name="settingsData">A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData"/> object containing the configuration data from storage.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings.Equals(System.Object)">
            <summary>
            Determines whether or not two DpapiSettings objects have equal properties.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns><c>true</c> if equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings.GetHashCode">
            <summary>
            Calls base. Two objects that are determined as "equal" will not 
            necessarily return the same hashcode.
            </summary>
            <returns>A unique hash representing this object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings.ToString">
            <summary>
            Renders a summary of these settings to a string.
            </summary>
            <returns>A summary or initialization status.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings.Mode">
            <summary>
            <para>Gets or sets the DPAPI storage mode used to encrypt and decrypt data.</para>
            </summary>
            <value>
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Cryptography.DpapiStorageMode"/> values.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings.Entropy">
            <summary>
            Gets or sets the entropy for machine mode.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenApplicationConfigurationCommand">
            <summary>
            <para>Represents a command that will open an application configuration.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenApplicationConfigurationCommand.#ctor(System.IServiceProvider)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenApplicationConfigurationCommand"/> class with an <see cref="T:System.IServiceProvider"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenApplicationConfigurationCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenApplicationConfigurationCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="clearErrorLog">
            <para>Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/> should be cleared when the command has executed.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenApplicationConfigurationCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Opens a previously saved configuration.</para>
            </summary>
            <param name="node">
            <para>The node to execute the command upon.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService">
            <summary>
            <para>Provides a container and management for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> objects.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService.AddHierarchy(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy)">
            <summary>
            <para>When implemented by a class, adds a hierarchy to the container.</para>
            </summary>
            <param name="hierarchy">
            <para>The hierarchy to add.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService.GetHierarchy(System.Guid)">
            <summary>
            <para>When implemented by a class, gets a hierarchy from the container.</para>
            </summary>
            <param name="id">The identifier for the hierarchy.</param>
            <returns>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> if found, or <see langword="null"/> if not found.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService.GetAllHierarchies">
            <summary>
            <para>When implemented by a class, gets all the hierarchies in the service.</para>
            </summary>
            <returns>
            <para>All the hierarchies in the service.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService.RemoveHierarchy(System.Guid)">
            <summary>
            <para>When implemented by a class, removes a hierarchy from the container.</para>
            </summary>
            <param name="id">
            <para>The identifier of the hierarchy to remove.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService.RemoveHierarchy(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy)">
            <summary>
            <para>When implemented by a class, removes a hierarchy from the container.</para>
            </summary>
            <param name="hierarchy">
            <para>The ihierarchy to remove.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService.SaveAll">
            <summary>
            <para>When implemented by a class, saves all the hierarchies by calling save on all <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>.</para>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService.HierarchyAdded">
            <summary>
            <para>When implemented by a class, occurs after an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> is added.</para>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService.HierarchyRemoved">
            <summary>
            <para>When implemented by a class, occurs after an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> is removed.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService.SelectedHierarchy">
            <summary>
            <para>When implemented by a class, gets or sets the current selected hierarchy.</para>
            </summary>
            <value>
            <para>The current selected hierarchy.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyRemovedEventHandler">
            <summary>
            <para>Represents the method that will handle the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService.HierarchyRemoved"/> event of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService"/>.</para>
            </summary>
            <param name="sender">
            <para>The source of the event.</para>
            </param>
            <param name="e">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyRemovedEventArgs"/> that contains the event data.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyRemovedEventArgs">
            <summary>
            <para>Provides data for the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService.HierarchyAdded"/> event of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyRemovedEventArgs.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyAddedEventArgs"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> object.</para>
            </summary>
            <param name="uiHierarchy">
            <para>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> object.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyRemovedEventArgs.UIHierarchy">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> that was added.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> that was added.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.AddNewKeyAlgorithmWizard">
            <devdoc>
            A wizard for adding key key algorithms.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.AddNewKeyAlgorithmWizard.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.PasswordEditor">
            <summary>
            <para>Provides a user interface that can edit a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Password"/> at design time.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.PasswordEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            <para>Edits the specified object's value using the editor style indicated by <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.PasswordEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>. This should be a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings"/> object.</para>
            </summary>
            <param name="context"><para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</para></param>
            <param name="provider"><para>An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</para></param>
            <param name="value"><para>The object to edit. This should be a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Password"/> object.</para></param>
            <returns><para>The new value of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Password"/> object.</para></returns>
            <seealso cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.PasswordEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            <para>Gets the editor style used by the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.PasswordEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/> method.</para>
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns><see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry">
            <summary>
            <para>Represents a entry for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService"/> that contains the data to create a node.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand,System.Type,System.Type,System.String,System.Boolean)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/> with a command, the node type to create, the configuration data type associated with the node, name to display for this node, and if there can be more than one node of the type.</para>
            </summary>
            <param name="configurationNodeCommand"><para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.ConfigurationNodeCommand"/> used to create the node.</para></param>
            <param name="nodeType"><para>The <see cref="T:System.Type"/> of the node to create.</para></param>
            <param name="dataType"><para>The <see cref="T:System.Type"/> of the configuration data associated with the <paramref name="nodeType"/>.</para></param>
            <param name="displayName"><para>The name to display in the user interface to create the node.</para></param>
            <param name="allowMultiple">
            <para>Determines if more than one of the node type can exist.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.CreateNodeCreationEntryWithMultiples(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand,System.Type,System.Type,System.String)">
            <summary>
            <para>Create a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/> that allows multiple nodes in the same parent node with a command, the node type to create, the configuration data type associated with the node and name to display for this node.</para>
            </summary>
            <param name="configurationNodeCommand"><para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.ConfigurationNodeCommand"/> used to create the node.</para></param>
            <param name="nodeType"><para>The <see cref="T:System.Type"/> of the node to create.</para></param>
            <param name="dataType"><para>The <see cref="T:System.Type"/> of the configuration data associated with the <paramref name="nodeType"/>.</para></param>
            <param name="displayName"><para>The name to display in the user interface to create the node.</para></param>
            <returns><para>The new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/> object.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.CreateNodeCreationEntryNoMultiples(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand,System.Type,System.Type,System.String)">
            <summary>
            <para>Create a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/> that does not allows multiple nodes in the same parent node with a command, the node type to create, the configuration data type associated with the node and name to display for this node.</para>
            </summary>
            <param name="configurationNodeCommand"><para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.ConfigurationNodeCommand"/> used to create the node.</para></param>
            <param name="nodeType"><para>The <see cref="T:System.Type"/> of the node to create.</para></param>
            <param name="dataType"><para>The <see cref="T:System.Type"/> of the configuration data associated with the <paramref name="nodeType"/>.</para></param>
            <param name="displayName"><para>The name to display in the user interface to create the node.</para></param>
            <returns><para>The new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/> object.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.DataType">
            <summary>
            <para>Gets the configuration data type associated with the node type.</para>
            </summary>
            <value>
            <para>The configuration data type associated with the node type.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.NodeType">
            <summary>
            <para>Gets the node type to create.</para>
            </summary>
            <value>
            <para>The node type to create.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.DisplayName">
            <summary>
            <para>Gets the display name to show in the user interface that creats the node.</para>
            </summary>
            <value>
            <para>The display name to show in the user interface that creats the node.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.ConfigurationNodeCommand">
            <summary>
            <para>Gets the command used to create the node.</para>
            </summary>
            <value>
            <para>The commad used to create the node.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.AllowMultiple">
            <summary>
            <para>Determines if more than one of the node type can exist.</para>
            </summary>
            <value>
            <para><see langword="true"/> if more than one of the node type can exist; otherwise, <see langword="false"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.BaseTypeToCompare">
            <summary>
            <para>Gets or sets the base type of the node type that will be compared to determine if the type can allow multiple.</para>
            </summary>
            <value>
            <para>The base type of the node type that will be compared to determine if the type can allow multiple.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeNameCreationService">
            <summary>
            <para>Provides a service that can generate unique names for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> objects.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeNameCreationService.GetUniqueDisplayName(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.String)">
            <summary>
            <para>When implemented by a class, gets a unique display name for the current node.</para>
            </summary>
            <param name="node">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to get the unique name.</para>
            </param>
            <param name="newName"><para>The name to check for uniquness.</para></param>
            <returns><para>The unique display name.</para></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlIncludeTypeService">
            <devdoc>
            Provides a service for registering Type objects that will be included for an XmlSerializerTransformer for a section.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IXmlIncludeTypeService">
            <summary>
            <para>Provides a service for registering <see cref="T:System.Type"/> objects that will be included for an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Transformer.XmlSerializerTransformer"/> for a section.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IXmlIncludeTypeService.GetXmlIncludeTypes(System.String)">
            <summary>
            <para>When implemented by a class, gets the types for the section.</para>
            </summary>
            <param name="sectionName">
            <para>The types for a section.</para>
            </param>
            <returns>
            <para>The types for a section or <see langword="null"/> if no types exist.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IXmlIncludeTypeService.AddXmlIncludeType(System.String,System.Type)">
            <summary>
            <para>When implemented by a class, adds a <see cref="T:System.Type"/> for a section.</para>
            </summary>
            <param name="sectionName">
            <para>The configuration section to register the type.</para>
            </param>
            <param name="type">
            <para>The type to register.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlIncludeTypeService.GetXmlIncludeTypes(System.String)">
            <devdoc>
            Gets the types for the section.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlIncludeTypeService.AddXmlIncludeType(System.String,System.Type)">
            <devdoc>
            Add a type for a section.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlFileStorageProviderNode">
            <summary>
            <para>Represents a storage provider for the meta-configuration of a specific section of configuration for an application.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageProviderNode">
            <summary>
            <para>Represents the base class for all storage providers defineing the common information for a storage provider.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageProviderNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData)">
            <summary>
            <para>Initalize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageProviderNode"/> with the runtime configuration data.</para>
            </summary>
            <param name="data">
            <para>The runtime data for the storage provider..</para>
            </param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="data"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageProviderNode.OnSited">
            <summary>
            <para>Sets the name of node when sited to match the underlying storage name.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageProviderNode.OnRenamed(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renamed"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageProviderNode.StorageProvider">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> for this node.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> for this node.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlFileStorageProviderNode.#ctor">
            <summary>
            <para>Initalize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlFileStorageProviderNode"/> class.</para>
            </summary>               
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlFileStorageProviderNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.XmlFileStorageProviderData)">
            <summary>
            <para>Initalize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlFileStorageProviderNode"/> class.</para>
            </summary>       
            <param name="data">
            <para>The runtime configuration data.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="data"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlFileStorageProviderNode.OnSited">
            <summary>
            <para>Sets the name of node when sited to match the underlying storage name and adds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlFileStorageCreationCommand"/> to the current storage table if the file name is set.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlFileStorageProviderNode.OnAddMenuItems">
            <summary>
            <para>Adds a a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand"/> and <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand"/> if the parent node is not readonly.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlFileStorageProviderNode.OnRemoving(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Removes the document from the document table.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlFileStorageProviderNode.FileName">
            <summary>
            <para>
            Gets or sets the file name of the external configuration file.
            </para>
            </summary>
            <value>
            <para>
            The file name of the configuration file.
            </para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlFileStorageProviderNode.TypeName">
            <summary>
            <para>
            Gets or sets the fully qualified type name of the instance.
            </para>
            </summary>
            <value>
            <para>
            The name of the connection string.
            </para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceEditorUI">
            <devdoc>
            The UI for the reference type selector.
            </devdoc>    
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceEditorUI.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeySettings">
            <summary>
            <para>Represents the key settings produced by an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyCreator"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeySettings.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyCreator)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeySettings"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyCreator"/></para>
            </summary>
            <param name="keyCreator">The key creator that created the key.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeySettings.ToString">
            <summary>
            <para>Returns a message stating that the key is encrypted.</para>
            </summary>
            <returns><para>A message stating that the key is encrypted.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeySettings.Clone">
            <summary>
            <para>Provides a shallow copy of this instance.</para>
            </summary>
            <returns><para>A new instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeySettings"/> object.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeySettings.KeyCreator">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyCreator"/> that created this key.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyCreator"/> that created this key.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeySettings.Key">
            <summary>
            <para>Gets or sets the key.</para>
            </summary>
            <value>
            <para>The key created by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyCreator"/>.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditorUI">
            <summary>
            The user interface for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditor"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditorUI.#ctor(System.Boolean)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditorUI"/> class determining if seettings are required or not.</para>
            </summary>
            <param name="required">Determines if DPAPI settings are required.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditorUI.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditorUI"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditorUI.Dispose(System.Boolean)">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditorUI"/> and optionally releases the managed resources.</para>
            </summary>
            <param name="disposing">
            <para><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditorUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditorUI.DpapiSettingsUI_Load(System.Object,System.EventArgs)">
            <summary>
            DPAPI settings for this instance.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditorUI.DisplaySettings">
            <summary>
            Controls the display of the settings depending on whether or not the settings can be displayed.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditorUI.DpapiSettingsData">
            <summary>
            Gets or sets the DPAPI settings data.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsEditorUI.ConfirmMessage">
            <summary>
            Gets or sets the DPAPI confirmation message when
            changing the DPAPI settings on an existing item.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.LinkNodeService">
            <devdoc>
            Provides a service to link nodes to other nodes.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ILinkNodeService">
            <summary>
            <para>Provides a service to link nodes to other nodes.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ILinkNodeService.CreateReference(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventHandler)">
            <summary>
            <para>When implemented by a class, gets the reference to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> wiring up the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Removed"/> event.</para>
            </summary>
            <param name="oldReference"><para>The old reference.</para></param>
            <param name="newReference"><para>The new reference.</para></param>
            <param name="referenceRemovedHandler"><para>The delegate that will execute when the reference is removed.</para></param>
            <returns>
            <para>The reference to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ILinkNodeService.CreateReference(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventHandler,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventHandler)">
            <summary>
            <para>When implemented by a class, gets the reference to a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> wiring up the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Removed"/> and <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renamed"/> events.</para>
            </summary>
            <param name="oldReference"><para>The old reference.</para></param>
            <param name="newReference"><para>The new reference.</para></param>
            <param name="referenceRemovedHandler"><para>The delegate that will execute when the reference is removed.</para></param>
            <param name="referenceRenamedHandler"><para>The delegate that will execute when the reference is renamed.</para></param>
            <returns>
            <para>The reference to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.LinkNodeService.CreateReference(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventHandler)">
            <devdoc>
            Get the reference to a ConfigurationNode wiring up the ConfigurationNode.Removed event.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.LinkNodeService.CreateReference(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventHandler,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventHandler)">
            <devdoc>
            Get the reference to a ConfigurationNode wiring up the ConfigurationNode.Removed and ConfigurationNode.Renamed events.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.TypeValidationAttribute">
            <summary>
            <para>Specifies a type name should be validated to ensure that it is a valid <see cref="T:System.Type"/>.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RequiredAttribute">
            <summary>
            <para>Specifies a property or event that is required.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RequiredAttribute.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RequiredAttribute"/> class</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RequiredAttribute.Validate(System.Object,System.Reflection.PropertyInfo,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection)">
            <summary>
            <para>Validate the ranige data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.</para>
            </summary>
            <param name="instance">
            <para>The instance to validate.</para>
            </param>
            <param name="propertyInfo">
            <para>The property contaning the value to validate.</para>
            </param>
            <param name="errors">
            <para>The collection to add any errors that occur durring the validation.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.TypeValidationAttribute.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.TypeValidationAttribute"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.TypeValidationAttribute.Validate(System.Object,System.Reflection.PropertyInfo,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection)">
            <summary>
            <para>Validate the ranige data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.</para>
            </summary>
            <param name="instance">
            <para>The instance to validate.</para>
            </param>
            <param name="propertyInfo">
            <para>The property contaning the value to validate.</para>
            </param>
            <param name="errors">
            <para>The collection to add any errors that occur durring the validation.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyValidationErrorCollection">
            <summary>
            <para>A read-only collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> objects.</para>
            </summary>	
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyValidationErrorCollection.CopyTo(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError[],System.Int32)">
            <summary>
            <para>Copies the entire <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection"/> to a compatible one-dimensional Array, starting at the specified index of the target array.</para>
            </summary>
            <param name="array">
            <para>The one-dimensional <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> array that is the destination of the elements copied from <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection"/>. The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> array must have zero-based indexing.</para>
            </param>
            <param name="index">
            <para>The zero-based index in array at which copying begins.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyValidationErrorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            <para>Copies the elements of the collection to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.</para>
            </summary>
            <param name="array">
            <para>The one-dimensional <see cref="T:System.Array"/> array that is the destination of the elements copied from <see cref="T:System.Array"/>. The array must have zero-based indexing.</para>
            </param>
            <param name="index">
            <para>The zero-based index in array at which copying begins.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyValidationErrorCollection.GetEnumerator">
            <summary>
            <para>Returns an enumerator that can iterate through a collection.</para>
            </summary>
            <returns>
            <para>An <see cref="T:System.Collections.IEnumerator"/> that can be used to iterate through the collection.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyValidationErrorCollection.Count">
            <summary>
            <para>Gets the number of elements contained in the collection.</para>
            </summary>
            <value>
            <para>The number of elements contained in the collection.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyValidationErrorCollection.SyncRoot">
            <summary>
            <para>Gets an object that can be used to synchronize access to the collection.</para>
            </summary>
            <value>
            <para>An object that can be used to synchronize access to the collection.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyValidationErrorCollection.IsSynchronized">
            <summary>
            <para>Gets a value indicating whether access to the ICollection is synchronized (thread-safe).</para>
            </summary>
            <value>
            <para>A value indicating whether access to the ICollection is synchronized (thread-safe).</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelector">
            <devdoc>
            Hanldes the building of the tree view based on the assembly types and filter based on a type.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelector.TreeNodeTable">
            <devdoc>
            Represents the table of tree nodes by assembly type.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmDpapiSettingsEditor">
            <summary>
            <para>Provides a user interface that can edit <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings"/> at design time for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.FileKeyAlgorithmPairStorageProvider"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmDpapiSettingsEditor.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmDpapiSettingsEditor"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmDpapiSettingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            <para>Edits the specified object's value using the editor style indicated by <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/>. This should be a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings"/> object.</para>
            </summary>
            <param name="context"><para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</para></param>
            <param name="provider"><para>An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</para></param>
            <param name="value"><para>The object to edit. This should be a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings"/> object.</para></param>
            <returns><para>The new value of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings"/> object.</para></returns>
            <seealso cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmDpapiSettingsEditor.HandleResult(System.Windows.Forms.DialogResult,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings,Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData)">
            <summary>
            <para>If DPAPI settings change, this saves the key algorithm out with the new settings.</para>
            </summary>
            <param name="dialogResult">
            <para>One of the <see cref="T:System.Windows.Forms.DialogResult"/> values.</para>
            </param>
            <param name="originalSettings">
            <para>The original <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings"/> before editing.</para>
            </param>
            <param name="newSettingsData">
            <para>The new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData"/> from the editor.</para>
            </param>
            <returns>
            <para>If accepted, the new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettings"/>; otherwise the <paramref name="originalSettings"/>.</para>
            </returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.PasswordEditorUI">
            <summary>
            The ui for the PasswordEditor.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.PasswordEditorUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeNameCreationService">
            <devdoc>
            Provides a service that can generate unique names for ConfigurationNode objects.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeNameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)">
            <devdoc>
            Creates a new name that is unique to all components in the specified container.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeNameCreationService.GetUniqueDisplayName(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.String)">
            <devdoc>
            Gets a unique display name for the current node.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeNameCreationService.IsValidName(System.String)">
            <devdoc>
            Gets a value indicating whether the specified name is valid.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeNameCreationService.ValidateName(System.String)">
            <devdoc>
            Gets a value indicating whether the specified name is valid.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MetaDataStorageCreationCommand">
            <devdoc>
            Storage creation command to create the meta data configuration file.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerAttribute">
            <summary>
            <para>Indicates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/> defined in an assembly.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerAttribute.#ctor(System.Type)">
            <summary>
            <para>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerAttribute"/> class with a <see cref="T:System.Type"/> implementing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/>.
            </para>
            </summary>
            <param name="configurationDesignManager">
            <para>
            A <see cref="T:System.Type"/> implementing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/>.
            </para>
            </param>        
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerAttribute.ConfigurationDesignManager">
            <summary>
            <para>Gets the <see cref="T:System.Type"/> implementing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/>.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.Type"/> implementing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/></para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AppConfigFileStorageProviderNode">
            <summary>
            <para>Represents a configuration storage provider that saves configuraiton to the <see cref="T:System.AppDomain"/> configuration file.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AppConfigFileStorageProviderNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.AppConfigFileStorageProviderData)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AppConfigFileStorageProviderNode"/> with an instance <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.AppConfigFileStorageProviderData"/>.</para>
            </summary>
            <param name="data">
            <para>The configuration data for the provider.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AppConfigFileStorageProviderNode.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AppConfigFileStorageProviderNode"/> with an instance <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.AppConfigFileStorageProviderData"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AppConfigFileStorageProviderNode.OnSited">
            <summary>
            <para>Sets the name of node when sited to match the underlying storage name and sets the configuraiton file correctly for the section.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AppConfigFileStorageProviderNode.StorageProvider">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.AppConfigFileStorageProviderData"/> for this node.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.AppConfigFileStorageProviderData"/> for this node.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchyService">
            <devdoc>
            Provides a container and management for IUIHierarchy objects.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchyService.AddHierarchy(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy)">
            <devdoc>
            Adds a hierarchy to the container.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchyService.GetHierarchy(System.Guid)">
            <devdoc>
            Gets a hierarchy from the container.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchyService.GetAllHierarchies">
            <devdoc>
            Gets all the hierarchies in the service.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchyService.RemoveHierarchy(System.Guid)">
            <devdoc>
            Removes a hierarchy from the container.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchyService.RemoveHierarchy(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy)">
            <devdoc>
            Removes a hierarchy from the container.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchyService.SaveAll">
            <devdoc>
            Saves all the hierarchies by calling save on all IUIHierarchy.
            </devdoc>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchyService.HierarchyAdded">
            <devdoc>
            Occurs after a IUIHierarchy is added.
            </devdoc>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchyService.HierarchyRemoved">
            <devdoc>
            Occurs after a IUIHierarchy is added.
            </devdoc>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchyService.SelectedHierarchy">
            <devdoc>
            Gets or sets the current selected hierarchy.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.AddFileKeyAlgorithmPairNodeCommand">
            <devdoc>
            Create an encryption settings node from the wizard.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand">
            <summary>
            <para>
            Represents a command that adds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> as a child of the  <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> that this command is executing upon.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand.#ctor(System.IServiceProvider,System.Type)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="childType">
            <para>
            The <see cref="T:System.Type"/> object for the configuration node to create and add to the node.
            </para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand.#ctor(System.IServiceProvider,System.Boolean,System.Type)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="clearErrorService">
            <para>Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/> should be cleared when the command has executed.</para>
            </param>
            <param name="childType">
            <para>
            The <see cref="T:System.Type"/> object for the configuration node to create and add to the node.
            </para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Creates an instance of the child node class and adds it as a child of the parent node.</para>
            </summary>
            <param name="node">
            <para>The parent node to add the newly created <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand.ChildNode"/>.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand.ChildNode">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> that was added as a result of the command being executed.</para>
            </summary>
            <value>
            <para>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> that was added as a result of the command being executed. 
            The default is a <see langword="null"/> reference(Nothing in Visual Basic).
            </para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlSerializerTransformerNode">
            <summary>
            <para>Represents a storage provider for the meta-configuration of a specific section of configuration for an application.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TransformerNode">
            <summary>
            <para>Represents the base class for all transformers defineing the common information for a transformer.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TransformerNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData)">
            <summary>
            <para>Initalize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TransformerNode"/> with the runtime configuration data.</para>
            </summary>
            <param name="transformerData">
            <para>The runtime data for the transformer..</para>
            </param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="transformerData"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TransformerNode.OnSited">
            <summary>
            <para>Sets the name of node when sited to match the underlying storage name.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TransformerNode.OnRenamed(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renamed"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TransformerNode.TransformerData">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> for this node.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> for this node.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlSerializerTransformerNode.#ctor">
            <summary>
            <para>Initalize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlSerializerTransformerNode"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlSerializerTransformerNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.XmlSerializerTransformerData)">
            <summary>
            <para>Initalize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlSerializerTransformerNode"/> class with a display name and <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlSerializerTransformerData"/> object.</para>
            </summary>        
            <param name="xmlSerializerTransformerData">
            <para>The runtime configuration data.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="xmlSerializerTransformerData"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlSerializerTransformerNode.OnSited">
            <summary>
            <para>Adds the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlIncludeTypeNode"/> objects for this node if any exist.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlSerializerTransformerNode.OnAddMenuItems">
            <summary>
            <para>Adds the base commands and an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand"/>, a command for creating <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlIncludeTypeNode"/> objects and if the parent node is not readonly, a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand"/> to the menus for the user interface.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlSerializerTransformerNode.TypeName">
            <summary>
            <para>Gets or sets the fully qualified name of a class that implements the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ITransformer"/> interface.</para>
            </summary>
            <value>
            <para>The fully qualified name of a class that implements the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ITransformer"/> interface.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlSerializerTransformerNode.TransformerData">
            <summary>
            <para>Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlSerializerTransformerNode.TransformerData"/> object that this node represents.</para>
            </summary>
            <returns>
            <para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlSerializerTransformerNode.TransformerData"/> object that this node represents.</para>
            </returns>        
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidationAttribute">
            <summary>
            <para>Validates that a file can be created or is writable.</para>
            <remarks>
            <para>This validation assumes that the property is a file.</para>
            </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidationAttribute.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidationAttribute"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidationAttribute.Validate(System.Object,System.Reflection.PropertyInfo,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection)">
            <summary>
            <para>Validate the ranige data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.</para>
            </summary>
            <param name="instance">
            <para>The instance to validate.</para>
            </param>
            <param name="propertyInfo">
            <para>The property contaning the value to validate.</para>
            </param>
            <param name="errors">
            <para>The collection to add any errors that occur durring the validation.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute">
            <summary>
            <para>
            Specifies a property or event will be validated on a specific range and make sure that the value is outside that range.
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute">
            <summary>
            <para>
            Specifies a property or event will be validated on a specific range.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Int32"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.Single,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Single,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Single"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.String"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.Double,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Double,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Double"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.Int16,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Int16,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Int16"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.Byte,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Byte,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Byte"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.Char,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Char,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Char"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.Decimal,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Decimal,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Decimal"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.IComparable,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.IComparable,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.IComparable"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.Validate(System.Object,System.Reflection.PropertyInfo,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection)">
            <summary>
            <para>Validate the ranige data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.</para>
            </summary>
            <param name="instance">
            <para>The instance to validate.</para>
            </param>
            <param name="propertyInfo">
            <para>The property contaning the value to validate.</para>
            </param>
            <param name="errors">
            <para>The collection to add any errors that occur durring the validation.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.LowerBound">
            <summary>
            <para>Gets the lower bound of the range.</para>
            </summary>
            <value>
            <para>The lower bound of the range.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.UpperBound">
            <summary>
            <para>Gets the upper bound of the range.</para>
            </summary>
            <value>
            <para>The upper bound of the range.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.LowerBoundType">
            <summary>
            <para>Gets the lower bound type condition.</para>
            </summary>
            <value>
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.UpperBoundType">
            <summary>
            <para>Gets the upper bound type condition.</para>
            </summary>
            <value>
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Int32"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.Single,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Single,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Single"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.String"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>       
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.Double,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Double,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Double"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.Int16,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Int16,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Int16"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.Byte,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Byte,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Byte"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.Char,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Char,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Char"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.Decimal,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Decimal,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Decimal"/> lower and upper bounds.</para>
            </summary>
            <param name="lowerBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="lowerBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
            <param name="upperBound">
            <para>The lower bound of the range.</para>
            </param>
            <param name="upperBoundType">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.Validate(System.Object,System.Reflection.PropertyInfo,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection)">
            <summary>
            <para>Validate the ranige data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.</para>
            </summary>
            <param name="instance">
            <para>The instance to validate.</para>
            </param>
            <param name="propertyInfo">
            <para>The property contaning the value to validate.</para>
            </param>
            <param name="errors">
            <para>The collection to add any errors that occur durring the validation.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorEditor">
            <summary>
            <para>Provides a user interface for seleting a <see cref="T:System.Type"/>.</para>
            </summary>
            <remarks>
            <para><see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorEditor"/> is a <see cref="T:System.Drawing.Design.UITypeEditor"/> that provides a dialog box for selecting a <see cref="T:System.Type"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorEditor.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorEditor"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            <para>Edits the specified object's value using the editor style indicated by <seealso cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/>.</para>
            </summary>
            <param name="context">
            <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</para>
            </param>
            <param name="provider">
            <para>An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</para>
            </param>
            <param name="value">
            <para>The object to edit.</para>
            </param>
            <returns>
            The fully qualifed type name for the chosen type.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            <para>Gets the editor style used by the <seealso cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method.</para>
            </summary>
            <param name="context">
            <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information</para>
            </param>
            <returns>
            <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal"/> for this editor.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorEditor.GetBaseType(System.ComponentModel.ITypeDescriptorContext)">
            <devdoc>
            Get the base type of the object to use to filter possible types.
            </devdoc>        
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeImages">
            <devdoc>
            This is the enumaration for the image indexes in the RunTimeTypeSelector.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SelectedImageAttribute">
            <summary>
            <para>Defines the image to be displayed when a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> is not selected in the user interface.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute">
            <summary>
            <para>Specifies the image to be displayed when a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> is viewed in the user interface.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute.#ctor(System.Type,System.String)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> class using the specified <see cref="T:System.Type"/> and resource entry name. The type is used to locate the assembly from which to load the <see cref="T:System.Resources.ResourceManager"/> that contains the image.</para>
            </summary>
            <param name="t"><para>A <see cref="T:System.Type"/> defined in the assembly that contains the image as an embedded resource.</para></param>
            <param name="name"><para>The name of the embedded resource.</para></param>
            <seealso cref="T:System.Drawing.ToolboxBitmapAttribute"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute.#ctor(System.Type)">
            <summary>
            <para>
            Initializes a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> object based on a 16 x 16 bitmap that is embedded  as a resource in a specified assembly.
            </para>
            </summary>
            <param name="t">
            <para>A <see cref="T:System.Type"/> whose defining assembly is searched for the bitmap resource.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute.GetLargeImage">
            <summary>
            <para>Gets the large (32 x 32) <see cref="T:System.Drawing.Image"/> associated with this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> object.</para>
            </summary>
            <returns>The large <see cref="T:System.Drawing.Image"/> associated with this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute.GetImage">
            <summary>
            <para>Gets the small (16 x 16) <see cref="T:System.Drawing.Image"/> associated with this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> object.</para>
            </summary>
            <returns><para>The small <see cref="T:System.Drawing.Image"/> associated with this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> object.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute.ResourceName">
            <summary>
            <para>Gets the name of the embedded bitmap resource.</para>
            </summary>
            <value>
            <para>The name of the embedded bitmap resource.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute.ComponentType">
            <summary>
            <para>Gets a <see cref="T:System.Type"/> whose defining assembly is searched for the bitmap resource.</para>
            </summary>
            <value>
            <para>A <see cref="T:System.Type"/> whose defining assembly is searched for the bitmap resource.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SelectedImageAttribute.#ctor(System.Type,System.String)">
            <summary>
            <para>Initializes a new instance of the  <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SelectedImageAttribute"/> class using the specified <see cref="T:System.Type"/> and resource entry name. The type is used locate the assembly from which to load the  <see cref="T:System.Resources.ResourceManager"/> that contains the image.</para>
            </summary>
            <param name="t">
            <para>A <see cref="T:System.Type"/> defined in the assembly that contains the image as an embedded resource.</para>
            </param>
            <param name="name"><para>The name of the embedded resource.</para></param>
            <seealso cref="T:System.Drawing.ToolboxBitmapAttribute"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SelectedImageAttribute.#ctor(System.Type)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SelectedImageAttribute"/> class based on a 16 x 16 bitmap that is embedded as a resource in a specified assembly.</para>
            </summary>
            <param name="t"><para>A <see cref="T:System.Type"/> whose defining assembly is  searched for the bitmap resource.</para></param>
            <seealso cref="T:System.Drawing.ToolboxBitmapAttribute"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MenuContainerService">
            <devdoc>
            Provides support for adding menu items to the main menu.
            </devdoc>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MenuContainerService.MenuItems">
            <devdoc>
            Gets the list of menu items for all external callers.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode">
            <summary>
            <para>Represents a node for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> of the current configuration.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode"/> class with the runtime configuration.</para>
            </summary>
            <param name="configurationSectionData">
            <para>The runtime version of the configuration data.</para>
            </param>        
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="configurationSectionData"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode.SelectStorageProviderNode">
            <summary>
            <para>Selects the child <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageProviderNode"/> if it exists.</para>
            </summary>
            <returns><para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageProviderNode"/> or <see langword="null"/> (Nothing in Visual Basic) if one doe not exist.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode.SelectTransformerNode">
            <summary>
            <para>Selects the child <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TransformerNode"/> if it exists.</para>
            </summary>
            <returns><para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TransformerNode"/> or <see langword="null"/> (Nothing in Visual Basic) if one doe not exist.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode.CreateReadOnlyDefault(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <devdoc>
            Creates a new ConfigurationSectionNode with storage and transformer.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode.OnSited">
            <summary>
            <para>Sets the name of node when sited to match the underlying storage name and adds the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageProviderNode"/> and <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TransformerNode"/> based on any active configuration data.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode.OnRenamed(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renamed"/> event and sets the name of the underlying configuration section runtime data.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode.OnAddMenuItems">
            <summary>
            <para>Add menu items to the user interface for creating <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageProviderNode"/>s and <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TransformerNode"/>s.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode.Encrypt">
            <summary>
            <para>Gets or sets whether or not this section is encrypted or not.</para>
            </summary>
            <value>
            <see langword="true"/> if the section is encrypted; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode.ConfigurationSection">
            <summary>
            <para>Gets the runtime configuration data.</para>
            </summary>
            <value><para>The runtime configuration data.</para></value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlFileStorageCreationCommand">
            <summary>
            <para>Creates configuraiton stored in a Xml file.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlFileStorageCreationCommand.#ctor(System.String,System.IServiceProvider)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileStorageCreationCommand"/> class with a file name and <see cref="T:System.IServiceProvider"/>.</para>
            </summary>
            <param name="fileName"><para>The name of the file to create.</para></param>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlFileStorageCreationCommand.Execute">
            <summary>
            <para>Creates the file if it does not exist, and determines if the file can be overwrriten if it does exist.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType">
            <summary>
            <para>A value describing the boundary conditions for a range.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType.Inclusive">
            <summary>
            <para>The range should include the boundary.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType.Exclusive">
            <summary>
            <para>The range should exclude the boundary.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SqlStorageProviderNode">
            <summary>
            <para>Represents a node to configure a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.SqlStorageProvider"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SqlStorageProviderNode.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SqlStorageProviderNode"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SqlStorageProviderNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.SqlStorageProviderData)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SqlStorageProviderNode"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.SqlStorageProviderData"/> instance.</para>
            </summary>
            <param name="data">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.SqlStorageProviderData"/> instance.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SqlStorageProviderNode.ConnectionString">
            <summary>
            <para>Gets or sets the connection string to the SQL Server database.</para>
            </summary>
            <value>
            <para>The connection string to the SQL Server database.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SqlStorageProviderNode.GetStoredProcedure">
            <summary>
            <para>Gets or sets the stored procedure name to get the data.</para>
            </summary>
            <value>
            <para>The stored procedure name to get the data.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SqlStorageProviderNode.SetStoredProcedure">
            <summary>
            <para>Gets or sets the stored procedure name to set the data.</para>
            </summary>
            <value>
            <para>The stored procedure name to set the data.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SqlStorageProviderNode.TypeName">
            <summary>
            <para>Gets or sets the <see cref="T:System.Type"/> name of the provider.</para>
            </summary>
            <value>
            <para>The type name of the provider. The default is an empty string.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode">
            <summary>
            <para>Represents a node in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> that contains the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyAlgorithmPairStorageProvider"/> used for encrypting and decrypting configuration.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.KeyAlgorithmPairStorageProviderData)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode"/> class with a <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode.keyAlgorithmPairStorageProviderData"/> object.</para>
            </summary>
            <param name="keyAlgorithmPairStorageProviderData"><para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyAlgorithmPairStorageProvider"/> configuration data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode.OnAddMenuItems">
            <summary>
            <para>Adds a set of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem"/> to the user interface to create any derived types of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyAlgorithmStorageProviderNode"/> at design time.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode.OnSited">
            <summary>
            <para>Sets the name of the node and displays any <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyAlgorithmStorageProviderNode"/> objects that exits in configuration.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode.KeyAlgorithmPair">
            <summary>
            <para>Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode.KeyAlgorithmPair"/> for the encryption settings.</para>
            </summary>
            <value>
            <para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode.KeyAlgorithmPair"/> for the encryption settings.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode.Name">
            <summary>
            <para>Gets the name for the node.</para>
            </summary>
            <value>
            <para>The display name for the node.</para>
            </value>
            <remarks>
            <para>The name should be the <seealso cref="P:System.ComponentModel.ISite.Name"/>.</para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            <para>The name already exists in the parent's node collection.</para>
            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode.KeyAlgorithmPairStorageProviderData">
            <summary>
            <para>Returns the configured <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode.KeyAlgorithmPairStorageProviderData"/>.</para>
            </summary>
            <returns>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.EncryptionSettingsNode.KeyAlgorithmPairStorageProviderData"/>, or <see langword="null"/> (Nothing in Visual Basic) if no storage provider is configured.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Password">
            <summary>
            <para>Represents a password and renders it as asterisks for situations in which the password should not be displayed to the user.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Password.#ctor(System.String)">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Password"/> class with the password text.</para>
            </summary>
            <param name="passwordText">
            <para>The password text.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Password.ToString">
            <summary>
            <para>Creates and returns a string representation of the current password.</para>
            </summary>
            <returns><para>A string representation of the current password.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Password.PasswordText">
            <summary>
            <para>Gets the password text.</para>
            </summary>
            <value>
            <para>The password text.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService">
            <summary>
            <para>Provides a service for creating nodes based on data types.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService.GetDisplayNames(System.Type)">
            <summary>
            <para>When implemented by a class, gets the names for the base node type that previous nodes were registered.</para>
            </summary>
            <param name="nodeType">
            <para>The type of node to get the names.</para>
            </param>
            <returns>
            <para>A collection of names for the nod type.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService.GetNodeCreationEntry(System.String)">
            <summary>
            <para>When implemented by a class, gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/> for the <paramref name="displayName"/>.</para>
            </summary>
            <param name="displayName">
            <para>The name used when displaying a command in the UI and used when adding the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/>.</para>
            </param>
            <returns>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/> of node to create for the <parmref name="displayName"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService.CreateNode(System.Type)">
            <summary>
            <para>When implemented by a class, creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> based on the data type.</para>
            </summary>
            <param name="dataType">
            <para>The data type to base the creation upon.</para>
            </param>
            <returns>
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> based on the data type or <see langword="null"/> if one does not exists.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService.CreateNode(System.Type,System.Object[])">
            <summary>
            <para>When implemented by a class, creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> based on the data type.</para>
            </summary>
            <param name="dataType">
            <para>The data type to base the creation upon.</para>
            </param>
            <param name="constructorArguments">
            <para>The constructor arguments for the node.</para>
            </param>
            <returns>
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> based on the data type or <see langword="null"/> if one does not exists.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService.AddNodeCreationEntry(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry)">
            <summary>
            <para>When implemented by a class, creates a map between the node and the data that it represents.</para>
            </summary>
            <param name="nodeCreationEntry">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/> object.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService.DoesNodeTypeMatchDataType(System.Type,System.Type)">
            <summary>
            <para>When implemented by a class, determines if a node type matches it's registered data type.</para>
            </summary>
            <param name="nodeType"><para>The node type to compare.</para></param>
            <param name="dataType"><para>The data type to compare.</para></param>
            <returns><para><see langword="true"/> if the node type matches the registered data type; otherwise, <see langword="false"/>.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService.GetNodeType(System.Type)">
            <summary>
            <para>When implemented by a class, gets the node type for the given data type.</para>
            </summary>
            <param name="dataType"><para>The data type that was registered for the node type.</para></param>
            <returns>
            <para>The node type for the data type or <see langword="null"/> (Nothing in Visual Basic) if the type does not exist.</para>
            </returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CustomStorageProviderNode">
            <summary>
            <para>Represents a node for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomStorageProviderData"/> implementation of the current configuration.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CustomStorageProviderNode.#ctor">
            <summary>
            <para>Initalize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CustomStorageProviderNode"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CustomStorageProviderNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.CustomStorageProviderData)">
            <summary>
            <para>Initalize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CustomStorageProviderNode"/> with the custom runtime configuration data.</para>
            </summary>
            <param name="storageProviderData">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomStorageProviderData"/> instance containing the configuration data.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CustomStorageProviderNode.Attributes">
            <summary>
            <para>Gets the set of custom attributes for the node.</para>
            </summary>
            <value>
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/> representing the custom attributes.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CustomStorageProviderNode.TypeName">
            <summary>
            <para>Gets or sets the fully qualified assembly name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.IStorageProviderReader"/>.</para>
            </summary>
            <value>
            <para>The fully qualified assembly name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.IStorageProviderReader"/>.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager">
            <summary>
            <para>Represents <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/> implementation for the configuration runtime design.</para> 
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.Register(System.IServiceProvider)">
            <summary>
            <para>Registers the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings"/> in the application.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.Open(System.IServiceProvider)">
            <summary>
            <para>Opens the configuration settings and registers them with the application.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.Save(System.IServiceProvider)">
            <summary>
            <para>Saves the configuration settings created for the application.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.BuildContext(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary)">
            <summary>
            <para>Adds the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings"/> to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="configurationDictionary">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary"/> object that will contain the configuration data.</para></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlIncludeTypeNode">
            <summary>
            <para>
            Represents a type to be included in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Transformer.XmlSerializerTransformer"/> when serializing and deserializing objects.
            </para>
            </summary>	
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlIncludeTypeNode.#ctor">
            <summary>
            <para>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlIncludeTypeNode"/> class.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlIncludeTypeNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData)">
            <summary>
            <para>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlIncludeTypeNode"/> class with display name and a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlIncludeTypeNode.XmlIncludeTypeData"/> object.
            </para>
            </summary>
            <param name="xmlIncludeTypeData">
            <para>The configuration data that this node represents.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlIncludeTypeNode.OnSited">
            <summary>
            <para>Sets the name of node when sited to match the underlying storage name.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlIncludeTypeNode.OnRenamed(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renamed"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlIncludeTypeNode.TypeName">
            <summary>
            <para>Gets or sets the fully qualified name of a class that implements the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ITransformer"/> interface.</para>
            </summary>
            <value>
            <para>The fully qualified name of a class that implements the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ITransformer"/> interface.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.XmlIncludeTypeNode.XmlIncludeTypeData">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> for this node.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> for this node.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand">
            <summary>
            <para>
            Represents a command that will run the validation for the node the command encapsulates.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand.#ctor(System.IServiceProvider)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="clearErrorLog">
            <para>Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/> should be cleared when the command has executed.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand.#ctor(System.IServiceProvider,System.Boolean,System.Boolean)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>, if the error service should be cleared after the command executes and if the command should report the failures after executing.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="clearErrorLog">
            <para>Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/> should be cleared when the command has executed.</para>
            </param>
            <param name="reportErrorsOnFailure">
            <para>Determines if the command should report errors on failure.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>
            Executes the validation for the current node and all the child nodes.
            </para>
            </summary>
            <param name="node">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to validate.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand.ValidationSucceeded">
            <summary>
            <para>Determines if the validation succeeded.</para>
            </summary>
            <value>
            <para><see langword="true"/> if the validation succeeded; otherwise, <see langword="false"/>.</para>
            <para>The default value is <see langword="false"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand.ReportErrorsOnFailure">
            <summary>
            <para>Determines if a message should be shown when validation fails.</para>
            </summary>
            <value>
            <para><see langword="true"/> if a message should be shown when validation fails, <see langword="false"/>.</para>
            <para>The default value is <see langword="true"/>.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy">
            <devdoc>
            Provides hierarchy management for configuration design managers that implement hierarchies.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy">
            <summary>
            <para>Provides hierarchy management for configuration design managers that implement hierarchies.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.FindNodeByPath(System.String)">
            <summary>
            <para>When implemented by a class, finds a node via it's path.</para>
            </summary>
            <param name="path">
            <para>The path to the node.</para>
            </param>
            <returns>
            <para>The node if found or <see langword="null"/> if not found.</para>
            </returns>
            <remarks>
            <para>Use the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Path"/> property get the path to the node.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.FindNodesByType(System.Type)">
            <summary>
            <para>When implemented by a class, finds nodes by their <see cref="T:System.Type"/>.</para>
            </summary>
            <param name="type">
            <para>The <see cref="T:System.Type"/> of the node.</para>
            </param>
            <returns>
            <para>The nodes found.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.FindNodesByType(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Type)">
            <summary>
            <para>When implemented by a class, finds nodes by their <see cref="T:System.Type"/>.</para>
            </summary>
            <param name="parent">
            <para>The parent to start the search.</para>
            </param>
            <param name="type">
            <para>The <see cref="T:System.Type"/> of the node.</para>
            </param>
            <returns>
            <para>The nodes found.</para>
            </returns>
            <remarks>
            If this is more than one type in the hierachy, this function will only find the first one found.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.FindNodeByType(System.Type)">
            <summary>
            <para>When implemented by a class, finds a node by it's <see cref="T:System.Type"/>.</para>
            </summary>
            <param name="type">
            <para>The <see cref="T:System.Type"/> of the node.</para>
            </param>
            <returns>
            <para>The node if found or <see langword="null"/> if not found.</para>
            </returns>
            <remarks>
            <para>If this is more than one type in the hierachy, this function will only find the first one found.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.FindNodeByType(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Type)">
            <summary>
            <para>When implemented by a class, finds nodes by their <see cref="T:System.Type"/>.</para>
            </summary>
            <param name="parent">
            <para>The parent to start the search.</para>
            </param>
            <param name="type">
            <para>The <see cref="T:System.Type"/> of the node.</para>
            </param>
            <returns>
            <para>The node if found or <see langword="null"/> if not found.</para>
            </returns>
            <remarks>
            <para>If this is more than one type in the hierachy, this function will only find the first one found.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.FindNodeByName(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.String)">
            <summary>
            <para>When implemented by a class, finds nodes by their <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Name"/>.</para>
            </summary>
            <param name="parent">
            <para>The parent to start the search.</para>
            </param>
            <param name="name">
            <para>The name of the node.</para>
            </param>
            <returns>
            <para>The node if found or <see langword="null"/> if not found.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.ContainsNodeType(System.Type)">
            <summary>
            <para>When implemented by a class, determines if a node type exists in the hierarchy.</para>
            </summary>
            <param name="nodeType">
            <para>The <see cref="T:System.Type"/> of the node to find.</para>
            </param>
            <returns>
            <para><see langword="true"/> if the type is contained in the hierarchy; otherwise <see langword="false"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.ContainsNodeType(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Type)">
            <summary>
            <para>When implemented by a class, determines if a node type exists in the hierarchy.</para>
            </summary>
            <param name="parent">
            <para>The parent to start the search.</para>
            </param>
            <param name="nodeType">
            <para>The <see cref="T:System.Type"/> of the node to find.</para>
            </param>
            <returns>
            <para><see langword="true"/> if the type is contained in the hierarchy; otherwise <see langword="false"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.AddNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>When implemented by a class, add a node to the hierarchy.</para>
            </summary>
            <param name="node">
            <para>The node to add to the hierarchy.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.RemoveNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>When implemented by a class, remove a node from the hierarchy.</para>
            </summary>
            <param name="node">
            <para>The node to remove.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.RenameNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.String,System.String)">
            <summary>
            <para>When implemented by a class, renames a node in the hierarchy.</para>
            </summary>
            <param name="node">
            <para>The node to be renamed.</para>
            </param>
            <param name="oldName">
            <para>The old name.</para>
            </param>
            <param name="newName">
            <para>The new name.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.SetSite(System.IServiceProvider)">
            <summary>
            <para>When implemented by a class, sets the <see cref="T:System.IServiceProvider"/> for the hiearchy.</para>
            </summary>
            <param name="serviceProvider">
            <para>The <see cref="T:System.IServiceProvider"/> for the hiearchy.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.Save">
            <summary>
            <para>When implemented by a class, save the application and all it's configuration.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.Open">
            <summary>
            <para>When implemented by a class, opens the application and loads it's configuration.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.Load">
            <summary>
            <para>When implemented by a class, loads all available configuration available for the application.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.BuildConfigurationContext">
            <summary>
            <para>Builds a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.ConfigurationContext"/> from the configuration settings of the current application configuration node.</para>
            </summary>
            <returns><para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.ConfigurationContext"/> based on the current application.</para>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.GetService(System.Type)">
            <summary>
            <para>Gets the requested service.</para>
            </summary>
            <param name="serviceType"><para>The type of service to retrieve.</para></param>
            <returns><para>An instance of the service if it could be found, or a null reference (Nothing in Visual Basic) if it could not be found.</para></returns>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.Saved">
            <summary>
            <para>When implemented by a class, occurs after the hierarchy is saved.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.Id">
            <summary>
            <para>When implemented by a class, gets a unique id for the hierarchy.</para>
            </summary>
            <value>
            <para>A unique id for the hierarchy.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.RootNode">
            <summary>
            <para>When implemented by a class, gets or sets the root node for the hiearchy.</para>
            </summary>
            <value>
            <para>The root node for the hiearchy.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.SelectedNode">
            <summary>
            <para>When implemented by a class, gets or sets the currently selected node in the hierarchy.</para>
            </summary>
            <value>
            <para>The currently selected node in the hierarchy</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.ConfigurationContext">
            <summary>
            <para>When implemented by a class, gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.ConfigurationContext"/> used for this hierarchy.</para>
            </summary>
            <value>
            <para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.ConfigurationContext"/> used for this hierarchy.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.StorageTable">
            <summary>
            <para>When implmented by a class, gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageTable"/> for the current heirarchy.</para>
            </summary>
            <value>
            <para>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageTable"/> for the current heirarchy.
            </para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.FindNodeByPath(System.String)">
            <devdoc>
            Finds a node via it's path. Use the ConfigurationNode.Path property get the path to the node.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.FindNodesByType(System.Type)">
            <devdoc>
            Finds a node by it's type.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.FindNodesByType(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Type)">
            <devdoc>
            Finds nodes by it's type for a parent
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.FindNodeByType(System.Type)">
            <summary>
            <para>Finds a node by it's <see cref="T:System.Type"/>.</para>
            </summary>
            <param name="type">
            <para>The <see cref="T:System.Type"/> of the node.</para>
            </param>
            <returns>
            <para>The node if found or <see langword="null"/> if not found.</para>
            </returns>
            <remarks>
            <para>If this is more than one type in the hierachy, this function will only find the first one found.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.FindNodeByType(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Type)">
            <summary>
            <para>Finds nodes by their <see cref="T:System.Type"/>.</para>
            </summary>
            <param name="parent">
            <para>The parent to start the search.</para>
            </param>
            <param name="type">
            <para>The <see cref="T:System.Type"/> of the node.</para>
            </param>
            <returns>
            <para>The node if found or <see langword="null"/> if not found.</para>
            </returns>
            <remarks>
            <para>If this is more than one type in the hierachy, this function will only find the first one found.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.FindNodeByName(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.String)">
            <summary>
            <para>Finds nodes by their <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Name"/>.</para>
            </summary>
            <param name="parent">
            <para>The parent to start the search.</para>
            </param>
            <param name="name">
            <para>The name of the node.</para>
            </param>
            <returns>
            <para>The node if found or <see langword="null"/> if not found.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.ContainsNodeType(System.Type)">
            <summary>
            <para>Determines if a node type exists in the hierarchy.</para>
            </summary>
            <param name="nodeType">
            <para>The <see cref="T:System.Type"/> of the node to find.</para>
            </param>
            <returns>
            <para><see langword="true"/> if the type is contained in the hierarchy; otherwise <see langword="false"/>.</para>
            </returns>f
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.ContainsNodeType(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Type)">
            <summary>
            <para>When implemented by a class, determines if a node type exists in the hierarchy.</para>
            </summary>
            <param name="parent">
            <para>The parent to start the search.</para>
            </param>
            <param name="nodeType">
            <para>The <see cref="T:System.Type"/> of the node to find.</para>
            </param>
            <returns>
            <para><see langword="true"/> if the type is contained in the hierarchy; otherwise <see langword="false"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.AddNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Add a node to the hierarchy.</para>
            </summary>
            <param name="node">
            <para>The node to add to the hierarchy.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.RemoveNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Remove a node from the hierarchy.</para>
            </summary>
            <param name="node">
            <para>The node to remove.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.RenameNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.String,System.String)">
            <summary>
            <para>Renames a node in the hierarchy.</para>
            </summary>
            <param name="node">
            <para>The node to be renamed.</para>
            </param>
            <param name="oldName">
            <para>The old name.</para>
            </param>
            <param name="newName">
            <para>The new name.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.SetSite(System.IServiceProvider)">
            <summary>
            <para>Sets the <see cref="T:System.IServiceProvider"/> for the hiearchy.</para>
            </summary>
            <param name="serviceProvider">
            <para>The <see cref="T:System.IServiceProvider"/> for the hiearchy.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.Save">
            <summary>
            <para>Save the application and all it's configuration.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.Open">
            <summary>
            <para>Opens the application and loads it's configuration.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.Load">
            <summary>
            <para>Loads all available configuration available for the application.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.BuildConfigurationContext">
            <summary>
            <para>Builds a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.ConfigurationContext"/> from the configuration settings of the current application configuration node.</para>
            </summary>
            <returns><para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.ConfigurationContext"/> based on the current application.</para>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.GetService(System.Type)">
            <summary>
            <para>Gets the requested service.</para>
            </summary>
            <param name="serviceType"><para>The type of service to retrieve.</para></param>
            <returns><para>An instance of the service if it could be found, or a null reference (Nothing in Visual Basic) if it could not be found.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.Id">
            <devdoc>
            Gets a unique id for the hierarchy.
            </devdoc>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.RootNode">
            <devdoc>
            Gets or sets the root node for the hiearchy.
            </devdoc>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.SelectedNode">
            <devdoc>
            Gets or sets the currently selected node in the hierarchy.
            </devdoc>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.ConfigurationContext">
            <devdoc>
            Gets the ConfigurationContext used for this hierarchy.
            </devdoc>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UIHierarchy.StorageTable">
            <devdoc>
            Gets the IStorageTable for the current heirarchy.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveXmlIncludeTypesCommand">
            <devdoc>
            Remove an XmlIncludeType node from the IUIHierarchy
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyConfigurationSectionNode">
            <summary>
            <para>Represents a node for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> of the current configuration. This makes the name read-only.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyConfigurationSectionNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.ReadOnlyConfigurationSectionData)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyConfigurationSectionNode"/> class with the runtime configuration.</para>
            </summary>
            <param name="configurationSectionData">
            <para>The runtime version of the configuration data.</para>
            </param>        
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="configurationSectionData"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyConfigurationSectionNode.Name">
            <summary>
            <para>Gets the name for the node.</para>
            </summary>
            <value>
            <para>The display name for the node.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyAlgorithmStorageProviderNode">
            <summary>
            <para>Represents a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyAlgorithmPairStorageProvider"/> node in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> used for encrypting and decrypting configuration. This class is abstract.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyAlgorithmStorageProviderNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.KeyAlgorithmPairStorageProviderData)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyAlgorithmStorageProviderNode"/> class with a <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyAlgorithmStorageProviderNode.keyAlgorithmPairStorageProviderData"/> object.</para>
            </summary>
            <param name="keyAlgorithmPairStorageProviderData">
            <para>The runtime configuration data for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyAlgorithmPairStorageProvider"/>.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyAlgorithmStorageProviderNode.OnSited">
            <summary>
            <para>Sets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Name"/> of the node when sited.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyAlgorithmStorageProviderNode.OnRenamed(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Sets the name for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.KeyAlgorithmPairStorageProviderData"/> object based on the new name.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyAlgorithmStorageProviderNode.KeyAlgorithmStorageProviderData">
            <summary>
            <para>Gets the runtime configuration data for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyAlgorithmPairStorageProvider"/>.</para>
            </summary>
            <returns>
            <para>The runtime configuration data for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyAlgorithmPairStorageProvider"/>.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyAlgorithmStorageProviderNode.KeyAlgorithmPair">
            <summary>
            <para>Gets or sets the key algorithm pair.</para>
            </summary>
            <value>
            <para>The key algorithm pair</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeAfterCommand">
            <summary>
            <para>Represents a command that will move a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> after a given <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeAfterCommand.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeAfterCommand"/> class with an <see cref="T:System.IServiceProvider"/>, the node to move, and the sibling node to move it after.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="nodeToMove">
            <para>The node to move.</para>
            </param>
            <param name="siblingNode">
            <para>The sibling node to move <paramref name="nodeToMove"/> after.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeAfterCommand.#ctor(System.IServiceProvider,System.Boolean,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeAfterCommand"/> class with an <see cref="T:System.IServiceProvider"/>, the node to move, and the sibling node to move it after.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="clearErrorLog">
            <para>Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/> should be cleared when the command has executed.</para>
            </param>
            <param name="nodeToMove">
            <para>The node to move.</para>
            </param>
            <param name="siblingNode">
            <para>The sibling node to move <paramref name="nodeToMove"/> after.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeAfterCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Executes the moving the node after it's sibling.</para>
            </summary>
            <param name="node">
            <para>The node to execute the command upon.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageTable">
            <summary>
            <para>Provides a list of documents in the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>.</para>
            </summary>
            <remarks>
            <para>The table stores all the files in lower case and performs a lower case on all operations.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageTable.GetStorageCreationCommands">
            <summary>
            <para>When implemented by a class, gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> objects in the table.</para>
            </summary>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommandDictionary"/> object containg the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> objects indexed by name.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageTable.Add(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand)">
            <summary>
            <para>When implmented by a class, adds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> to the table.</para>
            </summary>
            <param name="storageCreationCommand">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> to add.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageTable.Contains(System.String)">
            <summary>
            <para>When implmented by a class, determines if a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> exits table.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/>.</para>
            </param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> exists; otherwise, <see langword="false"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageTable.Remove(System.String)">
            <summary>
            <para>When implmented by a class, removes a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> from the document</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/>.</para>
            </param>
            <remarks>
            <para>If the file is not rooted it will be rooted to the meta configuration files root.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageTable.MetaConfigurationFile">
            <summary>
            <para>When implmented by a class, gets or sets the meta configuration file.</para>
            </summary>
            <value>
            <para>The meta configuration file.</para>
            </value>
            <remarks>
            <para>This file is used to store the meta data for your configuraiton describing the information around the configuration.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyAddedEventHandler">
            <summary>
            <para>Represents the method that will handle the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService.HierarchyAdded"/> event of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService"/>.</para>
            </summary>
            <param name="sender">
            <para>The source of the event.</para>
            </param>
            <param name="e">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyAddedEventArgs"/> that contains the event data.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyAddedEventArgs">
            <summary>
            <para>Provides data for the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService.HierarchyAdded"/> event of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyAddedEventArgs.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyAddedEventArgs"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> object.</para>
            </summary>
            <param name="uiHierarchy">
            <para>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> object.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyAddedEventArgs.UIHierarchy">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> that was added.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> that was added.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditor">
            <summary>
            <para>Provides a user interface for selecting a file name.</para>
            </summary>
            <seealso cref="T:System.Windows.Forms.Design.FileNameEditor"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditor.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditor"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            <para>Edits the specified object using the editor style provided by the GetEditStyle method.</para>
            </summary>
            <param name="context">
            <para>An <para>ITypeDescriptorContext</para> that can be used to gain additional context information.</para>
            </param>
            <param name="serviceProvider">
            <para>A service provider object through which editing services may be obtained.</para>
            </param>
            <param name="value">
            <para>An instance of the value being edited.</para>
            </param>
            <returns>
            <para>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
            <summary>
            <para>Initializes the open file dialog when it is created.</para>
            </summary>
            <param name="openFileDialog">
            <para>The <see cref="T:System.Windows.Forms.OpenFileDialog"/> to use to select a file name. </para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection">
            <summary>
            <para>Represents a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> objects.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.AddRange(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode[])">
            <summary>
            <para>Adds an array of previously created nodes to the collection.</para>
            </summary>
            <param name="nodes">
            <para>An array of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> objects representing the tree nodes to add to the collection.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="nodes"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><paramref name="nodes"/> contains one or more <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.Add(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Adds a previously created node to the end of the collection.</para>
            </summary>
            <param name="node"><para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to add to the collection.</para></param>
            <returns><para>The zero-based index value of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> added to the tree node collection.</para></returns>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="node"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
            <see cref="M:System.Collections.IList.Add(System.Object)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            <para>Adds an item to the <see cref="T:System.Collections.IList"/>.</para>
            </summary>
            <param name="value">
            <para>The <see cref="T:System.Object"/> to add to the <see cref="T:System.Collections.IList"/>.</para>
            </param>
            <returns>
            <para>The position into which the new element was inserted.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.AddWithDefaultChildren(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Adds a previously created node to the end of the collection and adds any default.</para>
            </summary>
            <param name="node"><para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to add to the collection.</para></param>
            <returns><para>The zero-based index value of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> added to the tree node collection.</para></returns>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="node"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.Contains(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Determines whether the specified node is a member of the collection.</para>
            </summary>
            <param name="node"><para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to locate in the collection.</para></param>
            <returns><see langword="true"/> if the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> is a member of the collection; otherwise, <see langword="false"/>.</returns>
            <seealso cref="M:System.Collections.IList.Contains(System.Object)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.Contains(System.String)">
            <summary>
            <para>Determines whether the specified node name is a member of the collection.</para>
            </summary>
            <param name="nodeName"><para>The node name to locate in the collection.</para></param>
            <returns><see langword="true"/> if the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> is a member of the collection; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            <para>Determines whether the <see cref="T:System.Collections.IList"/> contains a specific value.</para>
            </summary>
            <param name="value">
            <para>The <see cref="T:System.Object"/> to locate in the <see cref="T:System.Collections.IList"/>.</para>
            </param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:System.Object"/> is found in the <see cref="T:System.Collections.IList"/>; otherwise, <see langword="false"/></para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.IndexOf(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Determines the index of a specific node in the collection.</para>
            </summary>
            <param name="node"><para>Determines the index of a specific node in the collection.</para></param>
            <returns><para>The index of the node if found in the list; otherwise, -1.</para></returns>
            <seealso cref="M:System.Collections.IList.IndexOf(System.Object)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            <para>Determines the index of a specific item in the <see cref="T:System.Collections.IList"/>.</para>
            </summary>
            <param name="value">
            <para>The <see cref="T:System.Object"/> to locate in the <see cref="T:System.Collections.IList"/>.</para>
            </param>
            <returns>
            <para>The index of value if found in the list; otherwise, -1.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.Insert(System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Inserts a node into the collection at the specified index.</para>
            </summary>
            <param name="index"><para>The zero-based index location where the item is inserted.</para></param>
            <param name="node"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to insert into the collection.</para></param>        
            <seealso cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            <para>Inserts an item to the <see cref="T:System.Collections.IList"/> at the specified position.</para>
            </summary>
            <param name="index"><para>The zero-based index at which value should be inserted.</para></param>
            <param name="value"><para>The <see cref="T:System.Object"/> to insert into the <see cref="T:System.Collections.IList"/>.</para></param>        
            <returns/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.Clear">
            <summary>
            <para>Removes all nodes from the collection.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.CopyTo(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode[],System.Int32)">
            <summary>
            <para>Copies the entire collection into an existing array at a specified location within the array.</para>
            </summary>
            <param name="destination"><para>The destination array.</para></param>
            <param name="index"><para>The index in the destination array at which storing begins.</para></param>
            <seealso cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            <para>copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.</para>
            </summary>
            <param name="destination"><para>The destination array.</para></param>
            <param name="index"><para>The index in the destination array at which storing begins.</para></param>  
            <returns>
            <para>The zero-based index in array at which copying begins.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.Remove(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Removes the specified node from the collection.</para>
            </summary>
            <param name="node"><para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to remove.</para></param>
            <seealso cref="M:System.Collections.IList.Remove(System.Object)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            <para>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"/>.</para>
            </summary>
            <param name="value">
            <para>The <see cref="T:System.Object"/> to remove from the <see cref="T:System.Collections.IList"/>.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.RemoveAt(System.Int32)">
            <summary>
            <para>Removes the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> at the specified index from the collection.</para>
            </summary>
            <param name="index"><para>The index of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to remove.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.GetEnumerator">
            <summary>
            <para>Returns an enumerator that can iterate through a collection.</para>
            </summary>        
            <returns>
            <para>An enumerator that can iterate through a collection.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.Count">
            <summary>
            <para>Gets the total number of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> objects in the collection.</para>
            </summary>
            <value>
            <para>The total number of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> objects in the collection.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            <para>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.</para>
            </summary>        
            <returns>
            <para>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            <para>gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread-safe).</para>
            </summary>        
            <returns>
            <para><see langword="true"/> if access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread-safe); otherwise, <see langword="false"/>.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.System#Collections#IList#IsFixedSize">
            <summary>
            <para>Gets a value indicating whether the <see cref="T:System.Collections.IList"/> has a fixed size.</para>
            </summary>        
            <returns>
            <para><see langword="true"/> if the <see cref="T:System.Collections.IList"/> has a fixed size; otherwise, <see langword="false"/></para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.IsReadOnly">
            <summary>
            <para>Gets a value indicating whether the collection is read-only.</para>
            </summary>
            <value>
            <para><see langword="true"/> if the IList is read-only; otherwise, <see langword="false"/>.</para>
            </value>
            <seealso cref="P:System.Collections.IList.IsReadOnly"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.Item(System.Int32)">
            <summary>
            <para>Gets or sets a node at the given index.</para>
            </summary>        
            <param name="index"><para>The zero-based index of the parameter to retrieve.</para></param>
            <value><para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> at the specified index.</para></value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para>The <paramref name="index"/> value is less than zero or is greater than the number of nodes in the collection..</para>
            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            <para>Gets or sets a element at the given index.</para>
            </summary>        
            <param name="index"><para>The zero-based index of the element to retrieve.</para></param>
            <value><para>The element at the specified index.</para></value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para>The <paramref name="index"/> value is less than zero or is greater than the number of nodes in the collection..</para>
            </exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventHandler">
            <summary>
            <para>Represents the method that handles a  <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Executing"/> event.</para>
            </summary>
            <param name="sender">
            <para>The source of the event.</para>
            </param>
            <param name="e">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs"/> that contains the event data.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs">
            <summary>
            <para>Provides data for a <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Executing"/> event.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs.#ctor">
            <summary>
            <para>Initializes a new instance of  the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs.#ctor(System.Boolean)">
            <summary>
            <para>
            Initializes a new instance of  the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs"/> class with the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs.Cancel"/> property set to the given value.
            </para>
            </summary>
            <param name="cancel">
            <para><see langword="true"/> to cancel the event; otherwise, <see langword="false"/>.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs.Cancel">
            <summary>
            <para>Gets or sets a value indicating whether the event should be canceled.</para>
            </summary>
            <value>
            <para><see langword="true"/> if the event should be canceled; otherwise, <see langword="false"/>.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationData">
            <summary>
            <para>Represents location information for saving and loading an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode"/> object.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationData.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationData.#ctor(System.String,System.String,System.String)">
            <summary>
            <para>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationData"/> class with the specified name, base directory and configuration file path.
            </para>
            </summary>
            <param name="name"><para>The name for the application.</para></param>
            <param name="baseDirectory"><para>A base directory for the application.</para></param>
            <param name="configurationFilePath"><para>A path to the configuration file.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationData.FromCurrentAppDomain">
            <summary>
            <para>
            Creates an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationData"/> object using the properties of the current <see cref="T:System.AppDomain"/>.
            </para>
            </summary>
            <returns><para>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationData"/> object.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationData.Name">
            <summary>
            <para>Gets or sets the name of the application.</para>
            </summary>
            <value>
            <para>The name of the application.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationData.BaseDirectory">
            <summary>
            <para>Gets or sets the base directory of the application.</para>
            </summary>
            <value>
            <para>The base directory of the application.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationData.ConfigurationFilePath">
            <summary>
            <para>Gets or sets the path to the application configuration file.</para>
            </summary>
            <value>
            <para>The path to the application configuration file.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute">
            <summary>
            <para>Specifies a property or event that is validated based on a regular expression.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute"/> class with the regular expression pattern and options.</para>
            </summary>
            <param name="pattern">
            <para>The regular expression pattern to match.</para>
            </param>     
            <param name="options">
            The regular expression options.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.#ctor(System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute"/> class with the regular expression pattern.</para>
            </summary>
            <param name="pattern">
            <para>The regular expression pattern to match.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.#ctor(System.Type)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute"/> class with the regular expression type.</para>
            </summary>
            <param name="compiledRegexType">
            <para>The compiled <see cref="T:System.Type"/> for the regular expression.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.#ctor(System.Type,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute"/> class with the regular expression type and options.</para>
            </summary>
            <param name="compiledRegexType">
            <para>The compiled <see cref="T:System.Type"/> for the regular expression.</para>
            </param>
            <param name="options">
            The regular expression options.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.Validate(System.Object,System.Reflection.PropertyInfo,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection)">
            <summary>
            <para>Validate the ranige data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.</para>
            </summary>
            <param name="instance">
            <para>The instance to validate.</para>
            </param>
            <param name="propertyInfo">
            <para>The property contaning the value to validate.</para>
            </param>
            <param name="errors">
            <para>The collection to add any errors that occur durring the validation.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.Options">
            <summary>
            <para>Gets the <see cref="T:System.Text.RegularExpressions.RegexOptions"/> for the regular expression.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.Text.RegularExpressions.RegexOptions"/> for the regular expression.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.Pattern">
            <summary>
            <para>Gets the pattern for the regular expression.</para>
            </summary>
            <value>
            <para>The pattern for the regular expression</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.CompiledRegexType">
            <summary>
            <para>Gets the compiled <see cref="T:System.Type"/> for the regular expression.</para>
            </summary>
            <value>
            <para>The compiled <see cref="T:System.Type"/> for the regular expression.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SRCategoryAttribute">
            <devdoc>
            Represents a localized vertion of a CategoryAttribute. It uses the local string resources for localization.
            This class cannot be inherited from
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceDependencyAttribute">
            <summary>
            <para>Specifies the dependencies on other services that must be available at run-time to ensure proper functioning.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceDependencyAttribute.#ctor(System.Type)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceDependencyAttribute"/> class with a service type.</para>.
            </summary>
            <param name="serviceType">
            <para>The service <see cref="T:System.Type"/> required by the component.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceDependencyAttribute.ServiceType">
            <summary>
            <para>Gets the service <see cref="T:System.Type"/> of the dependency.</para>
            </summary>
            <value>
            <para>The service <see cref="T:System.Type"/> of the dependency.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService">
            <summary>
            <para>Provides a service to collect errors while processing commands for nodes.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService.ClearErrorLog">
            <summary>
            <para>When implemented by a class, clears all <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService.ValidationErrors"/> and <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService.ConfigurationErrors"/> from the service.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService.LogError(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError)">
            <summary>
            <para>When implemented by a class, logs a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/>.</para>
            </summary>
            <param name="validationError">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> object.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService.LogError(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError)">
            <summary>
            <para>When implemented by a class, logs a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/>.</para>
            </summary>
            <param name="configurationError">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> object.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService.ConfigurationErrors">
            <summary>
            <para>When implemented by a class, gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyConfigurationErrorCollection"/> for containing all <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> objects logged.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyConfigurationErrorCollection"/> for containing all <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> objects logged.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService.ValidationErrors">
            <summary>
            <para>When implemented by a class, gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyValidationErrorCollection"/> for containing all <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> objects logged.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyValidationErrorCollection"/> for containing all <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> objects logged.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyFactory">
            <summary>
            <para>Factory for creating <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> objects for a configration hierarchy.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyFactory.Create(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.IServiceProvider)">
            <summary>
            <para>Create an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> for building application configuration.</para>
            </summary>
            <param name="node">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> that will be the root of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>.</para>
            </param>
            <param name="serviceProvider">
            <para>The <see cref="T:System.IServiceProvider"/> for the heirarchy.</para>
            </param>
            <returns>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> created.</para>
            </returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedAction">
            <summary>
            <para>Specifies the type of node change.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedAction.Insert">
            <summary>
            <para>A node is being inserted.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedAction.Remove">
            <summary>
            <para>A node is being removed from the tree.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedAction.Rename">
            <summary>
            <para>A node is being renamed from the tree.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedAction.Changed">
            <summary>
            <para>A node value is being changed.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedAction.Custom">
            <summary>
            <para>A custom action.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem">
            <summary>
            <para>Represents an individual item that is displayed within the main menu or context menu of the user interface.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem.#ctor(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Windows.Forms.Shortcut,System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InsertionPoint)">
            <summary>
            <para>Initializes a new instance of the class with a specified caption, event handler, associated shortcut key, icon, status bar text, and the insertion point for the menu item.</para>
            </summary>
            <param name="text">
            <para>The caption for the menu item.</para>
            </param>
            <param name="command">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand"/> to execute.</para>
            </param>
            <param name="node">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to execute the command upon.</para>
            </param>
            <param name="shortcut">
            <para>One of the <see cref="T:System.Windows.Forms.Shortcut"/> values.</para>
            </param>
            <param name="statusBarText">
            <para>The text for the status bar.</para>
            </param>
            <param name="insertionPoint">
            <para>One of the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem.InsertionPoint"/> values.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem.Dispose(System.Boolean)">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem"/> and optionally releases the managed resources.</para>
            </summary>
            <param name="disposing">
            <para><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem.CreateRemoveNodeCommand(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Create a menu item for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand"/> for the <paramref name="node"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="node">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to associate with the menu.</para>
            </param>
            <returns>
            <para>An instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand"/> class.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem.CreateValidateNodeCommand(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Create a menu item for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand"/> for the <paramref name="node"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="node">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to associate with the menu.</para>
            </param>
            <returns>
            <para>An instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand"/> class.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem.CreateAddChildNodeMenuItem(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Type,System.String,System.Boolean)">
            <summary>
            <para>Create a menu item for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand"/> for the <paramref name="node"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="node">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to associate with the menu.</para>
            </param>
            <param name="t">
            <para>The type of node to create.</para>
            </param>
            <param name="menuText">
            <para>The text to display in the menu item.</para>
            </param>
            <param name="allowMultiple">
            <para>Allow multiple of the same node typ for the parent <paramref name="node"/>.</para>
            </param>
            <returns>
            <para>An instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand"/> class.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem.CloneMenu">
            <summary>
            <para>Creates a copy of the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem"/>.</para>
            </summary>
            <returns>
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem"/> that represents the duplicated menu item.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem.OnClick(System.EventArgs)">
            <summary>
            <para>Raises the <see cref="E:System.Windows.Forms.MenuItem.Click"/> event and executes the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand"/>.</para>
            </summary>
            <param name="e">
            <para>An <see cref="T:System.EventArgs"/> that contains the event data.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem.StatusBarText">
            <summary>
            <para>Gets or sets the status bar text associated with this menu item.</para>
            </summary>
            <value>
            <para>The status bar text associated with this menu item.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem.InsertionPoint">
            <summary>
            <para>Gets or sets the insertion point for the menu item.</para>
            </summary>
            <value>
            <para>One of the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem.InsertionPoint"/> values.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem.Command">
            <summary>
            <para>Gets or sets the commad to run for this menu item.</para>
            </summary>
            <value>
            <para>The commad to run for this menu item.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationMenuItem.Node">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> for the command.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> for the command </para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError">
            <summary>
            <para>Represents an error that occurs while operating on a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.ConfigurationNode"/> object.</para>
            </summary>   
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.String)">
            <summary>
            <para>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> class with the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.ConfigurationNode"/> and an error message.
            </para>
            </summary>
            <param name="node"><para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.ConfigurationNode"/> object.</para></param>
            <param name="message"><para>The. error message.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.ToString">
            <summary>
            <para>Creates and returns a string representation of the current error.</para>
            </summary>
            <returns><para>A string representation of the current error.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.ConfigurationNode">
            <summary>
            <para>Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.ConfigurationNode"/> where the error originated.</para>
            </summary>
            <value>
            <para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.ConfigurationNode"/> where the error originated.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.Message">
            <summary>
            <para>Gets the error message.</para>
            </summary>
            <value>
            <para>The error message.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SqlConnectionStringEditor">
            <summary>
            <para>Provides a user interface for creating a connection string.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SqlConnectionStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            <para>Edits the specified object's value using the editor style indicated by GetEditStyle.</para>
            </summary>
            <param name="context">
            <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</para>
            </param>
            <param name="provider">
            <para>An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</para>
            </param>
            <param name="value">
            <para>The object to edit.</para>
            </param>
            <returns>
            <para>The new value of the object.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SqlConnectionStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            <para>Gets the editor style used by the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SqlConnectionStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/> method.</para>
            </summary>
            <param name="context">
            <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</para>
            </param>
            <returns>
            <para><see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal"/></para>
            </returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveApplicationConfigurationNodeCommand">
            <summary>
            <para>Represents a command that will remove a node from the tree.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveApplicationConfigurationNodeCommand.#ctor(System.IServiceProvider)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveApplicationConfigurationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveApplicationConfigurationNodeCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveApplicationConfigurationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="clearErrorLog">
            <para>Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/> should be cleared when the command has executed.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveApplicationConfigurationNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Removes the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> (<see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode"/> from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService"/>.</para>
            </summary>
            <param name="node">
            <para>The node to execute the command upon.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyConfigurationErrorCollection">
            <summary>
            <para>Represents a reaonly collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> objects.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyConfigurationErrorCollection.CopyTo(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError[],System.Int32)">
            <summary>
            <para>Copies the entire <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection"/> to a compatible one-dimensional Array, starting at the specified index of the target array.</para>
            </summary>
            <param name="array">
            <para>The one-dimensional <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> array that is the destination of the elements copied from <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorCollection"/>. The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> array must have zero-based indexing.</para>
            </param>
            <param name="index">
            <para>The zero-based index in array at which copying begins.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyConfigurationErrorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            <para>copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index,</para>
            </summary>
            <param name="array">
            <para>The one-dimensional <para></para>Array that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</para>
            </param>
            <param name="index">
            <para>The zero-based index in array at which copying begins.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyConfigurationErrorCollection.GetEnumerator">
            <summary>
            <para>Returns an enumerator that can iterate through a collection.</para>
            </summary>
            <returns>
            <para>An <see cref="T:System.Collections.IEnumerator"/> that can be used to iterate through the collection.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyConfigurationErrorCollection.Count">
            <summary>
            <para>Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"/>.</para>
            </summary>
            <value>
            <para>The number of elements contained in the <see cref="T:System.Collections.ICollection"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyConfigurationErrorCollection.SyncRoot">
            <summary>
            <para>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.</para>
            </summary>
            <value>
            <para>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReadOnlyConfigurationErrorCollection.IsSynchronized">
            <summary>
            <para>Gets a value indicating whether access to the ICollection is synchronized (thread-safe).</para>
            </summary>
            <value>
            <para><see langword="true"/> if access to the ICollection is synchronized (thread-safe); otherwise, <see langword="false"/>.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeBeforeCommand">
            <summary>
            <para>Represents a command that will move a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> before a given <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeBeforeCommand.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeBeforeCommand"/> class with an <see cref="T:System.IServiceProvider"/>, the node to move, and the sibling node to move it before.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="nodeToMove">
            <para>The node to move.</para>
            </param>
            <param name="siblingNode">
            <para>The sibling node to move <paramref name="nodeToMove"/> before.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeBeforeCommand.#ctor(System.IServiceProvider,System.Boolean,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeBeforeCommand"/> class with an <see cref="T:System.IServiceProvider"/>, the node to move, and the sibling node to move it before.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="clearErrorLog">
            <para>Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/> should be cleared when the command has executed.</para>
            </param>
            <param name="nodeToMove">
            <para>The node to move.</para>
            </param>
            <param name="siblingNode">
            <para>The sibling node to move <paramref name="nodeToMove"/> before.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeBeforeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Executes the moving the node before it's sibling.</para>
            </summary>
            <param name="node">
            <para>The node to execute the command upon.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute">
            <summary>
            <para>
            Indicates the base class or interface that must be assignable from the type specified in the property that this attribute decorates.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute.#ctor(System.Type)">
            <summary>
            <para>Initializes a new instance of the  <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute"/> class with the specified <see cref="T:System.Type"/> object.</para>
            </summary>
            <param name="baseType">
            <para>The <see cref="T:System.Type"/> to filter selections.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute.#ctor(System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludeFlags)">
            <summary>
            <para>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute"/> class with the specified <see cref="T:System.Type"/> object and <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludeFlags"/>.
            </para>
            </summary>
            <param name="baseType">
            <para>The <see cref="T:System.Type"/> to filter selections.</para>
            </param>
            <param name="flags">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludeFlags"/> values.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute.BaseType">
            <summary>
            <para>Gets the <see cref="T:System.Type"/> to filter selections.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.Type"/> to filter selections.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute.IncludeFlags">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludeFlags"/> set for the filter.</para>
            </summary>
            <value>
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludeFlags"/> values.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddConfigurationSectionCommand">
            <summary>
            <para>Represents a command for adding a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode"/> to an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionCollectionNode"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddConfigurationSectionCommand.#ctor(System.IServiceProvider,System.Type,System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and the child <see cref="T:System.Type"/> to add.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="childType">
            <para>
            The <see cref="T:System.Type"/> object for the configuration node to create and add to the node.
            </para>
            </param>
            <param name="sectionName">
            <para>The name for the configuration section.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddConfigurationSectionCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode"/> for the parent node.</para>
            </summary>
            <param name="node">
            <para>The parent node to add the newly created <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode"/>.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageTable">
            <devdoc>
            Provides the list of StorageCommands to execute when saving
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageTable.GetStorageCreationCommands">
            <devdoc>
            Gets the StorageCreationCommand objects in the table.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageTable.Add(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand)">
            <devdoc>
            Adds a StorageCreationCommand to the table.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageTable.Contains(System.String)">
            <devdoc>
            Determines if a StorageCreationCommand exits table.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageTable.Remove(System.String)">
            <devdoc>
            Removes a StorageCreationCommand from the table.
            </devdoc>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageTable.MetaConfigurationFile">
            <devdoc>
            Gets or sets the meta configuration file.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SRDescriptionAttribute">
            <devdoc>
            Represents a localized vertion of a DescriptionAttribute. It uses the local strings resouce to get its description.
            This class cannot be inherited from 
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand">
            <summary>
            <para>Represents a command that will remove a node from it's associated <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand.#ctor(System.IServiceProvider)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveApplicationConfigurationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="clearErrorLog">
            <para>Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/> should be cleared when the command has executed.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Removes the node from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>.</para>
            </summary>
            <param name="node">
            <para>The node to execute the command upon.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor">
            <summary>
            <para>Provides a user interface that can edit keys for keyed algorithms at design time.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeySettings)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor"/> class with a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor.KeySettings"/> object.</para>
            </summary>
            <param name="keySettings">
            <para>The key information to edit.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor.Dispose(System.Boolean)">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor"/> and optionally releases the managed resources.</para>
            </summary>
            <param name="disposing">
            <para><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor.KeyIsValid(System.String@)">
            <summary>
            <para>Determines if the current key is valid.</para>
            </summary>
            <param name="message"><para>The error message to display in the user interface if invalid.</para></param>
            <returns>
            <para><see langword="true"/> if the key is valid; otherwise <see langword="false"/></para>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor.OnEnabledChanged(System.EventArgs)">
            <summary>
            <para>Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged"/> event.</para>
            </summary>
            <param name="e">
            <para>An <see cref="T:System.EventArgs"/> that contains the event data</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor.KeySettings">
            <summary>
            <para>Gets or sets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor.KeySettings"/> that are being edited.</para>
            </summary>
            <value>
            <para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor.KeySettings"/> that are being edited.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor.Key">
            <summary>
            <para>Gets or sets the key for the algorithm.</para>
            </summary>
            <value>
            <para>The key for the algorithm</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.KeyEditor.KeyLength">
            <summary>
            <para>Gets the length of the current key.</para>
            </summary>
            <value>
            <para>The length of the current key.</para>
            </value>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmStorageProviderWizard.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmStorageProviderWizard.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair,System.IServiceProvider)">
            <summary>
            Creates an instance.
            </summary>
            <param name="keyAlgorithmPair">The existing key algorithm pair. Pass <c>null</c> for opening an existing key algorithm pair.</param>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmStorageProviderWizard.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmStorageProviderWizard.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmStorageProviderWizard.Path">
            <summary>
            Gets the selected file path.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmStorageProviderWizard.DpapiSettings">
            <summary>
            Gets the selected DPAPI settings.
            </summary>
            <remarks>Will return <c>null</c> if not configured.</remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsControl">
            <devdoc>
            A control for Dpapi settings.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.DpapiSettingsControl.Entropy">
            <devdoc>
            Gets or sets the configured entropy for use with machine mode DPAPI.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.CustomKeyAlgorithmStorageProviderNode">
            <summary>
            <para>Represents a custom key algorithm pair storage provider in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.CustomKeyAlgorithmStorageProviderNode.#ctor">
            <summary>
            <para>Initalize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.CustomKeyAlgorithmStorageProviderNode"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.CustomKeyAlgorithmStorageProviderNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.CustomKeyAlgorithmPairStorageProviderData)">
            <summary>
            <para>Initalize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.CustomKeyAlgorithmStorageProviderNode"/> with the custom runtime configuration data.</para>
            </summary>
            <param name="keyAlgorithmPairStorageProviderData">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomKeyAlgorithmPairStorageProviderData"/> instance containing the configuration data for the provider.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.CustomKeyAlgorithmStorageProviderNode.Attributes">
            <summary>
            <para>Gets a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/> representing the custom attributes used to configure the provider.</para>
            </summary>
            <value>
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/> representing the custom attributes used to configure the provider.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.CustomKeyAlgorithmStorageProviderNode.TypeName">
            <summary>
            <para>Gets or sets the fully qualified type name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ITransformer"/>.</para>
            </summary>
            <value>
            <para>The fully qualified type name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ITransformer"/>.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI">
            <summary>
            <para>Represents the UI for the assembly selector dialog.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.#ctor(System.Type,System.Type)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI"/> class.</para>
            </summary>
            <param name="currentType">
            <para>The current <see cref="T:System.Type"/> selected.</para>
            </param>
            <param name="baseType">
            <para>The <see cref="T:System.Type"/> to filter and verify when loading.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.#ctor(System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludeFlags)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI"/> class.</para>
            </summary>
            <param name="currentType">
            <para>The current <see cref="T:System.Type"/> selected.</para>
            </param>
            <param name="baseType">
            <para>The <see cref="T:System.Type"/> to filter and verify when loading.</para>
            </param>
            <param name="flags">
            <para>The flags for the editor.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by this <see cref="T:System.Windows.Forms.Form"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">
            <para><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.SelectedType">
            <summary>
            <para>Gets the <see cref="T:System.Type"/> selected for use.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.Type"/> selected for use.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.TypeImageList">
            <summary>
            <para>Gets the <see cref="T:System.Windows.Forms.ImageList"/> for the types.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.Windows.Forms.ImageList"/> for the types.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceEditor">
            <summary>
            <para>Provides a user interface that can edit a reference to another node at design time.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            <para>Edits the value of the specified object using the editor style indicated by <seealso cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>.</para>
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information. </param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>The new value of the object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <seealso cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns><see cref="F:System.Drawing.Design.UITypeEditorEditStyle.DropDown"/></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ImageAttribute">
            <summary>
            <para>Defines the image to be associated with the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ImageAttribute.#ctor(System.Type)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> class based on a 16 x 16 bitmap that is embedded as a resource in a specified assembly.</para>
            </summary>
            <param name="t">
            <para>A <para>Type</para> whose defining assembly is searched for the bitmap resource.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ImageAttribute.#ctor(System.Type,System.String)">
            <summary>
            <para>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> class using the specified <see cref="T:System.Type"/> and resource entry name. The type is used to locate the assembly from which to load the <see cref="T:System.Resources.ResourceManager"/> that contains the image.</para></para>
            </summary>
            <param name="t"><para>A <see cref="T:System.Type"/> defined in the assembly that contains the image as an embedded resource.</para></param> 
            <param name="name"><para>The name of the embedded resource.</para></param>        
            <seealso cref="T:System.Drawing.ToolboxBitmapAttribute"/>        
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchySavedEventHandler">
            <summary>
            <para>Represents the method that will handle the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.Saved"/> event of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService"/>.</para>
            </summary>
            <param name="sender">
            <para>The source of the event.</para>
            </param>
            <param name="e">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchySavedEventArgs"/> that contains the event data.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchySavedEventArgs">
            <summary>
            <para>Provides data for the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy.Saved"/> event of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchyService"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchySavedEventArgs.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchySavedEventArgs"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> object.</para>
            </summary>
            <param name="uiHierarchy">
            <para>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> object.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchySavedEventArgs.UIHierarchy">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> that was added.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> that was added.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CustomTransformerNode">
            <summary>
            <para>Represents a node for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomTransformerData"/> implementation of the current configuration.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CustomTransformerNode.#ctor">
            <summary>
            <para>Initalize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CustomTransformerNode"/>..</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CustomTransformerNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.CustomTransformerData)">
            <summary>
            <para>Initalize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CustomTransformerNode"/> with the custom runtime configuration data.</para>
            </summary>
            <param name="transformerData">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomTransformerData"/> instance containing the configuration data.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CustomTransformerNode.Attributes">
            <summary>
            <para>Gets the set of custom attributes for the node.</para>
            </summary>
            <value>
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/> representing the custom attributes.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CustomTransformerNode.TypeName">
            <summary>
            <para>Gets or sets the fully qualified assembly name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ITransformer"/>.</para>
            </summary>
            <value>
            <para>The fully qualified assembly name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ITransformer"/>.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode">
            <summary>
            <para>Represents an application configuration. It is also the root node in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> for an application.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationData)">
            <summary>
            <para>Initializes a new instance of the  <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode"/> class with an <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode.ApplicationData"/> object containing the data for the application.</para>
            </summary>
            <param name="applicationData">
            <para>An <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode.ApplicationData"/> object.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode.OnSited">
            <summary>
            <para>Sets the name of the node and updates the name of the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageTable.MetaConfigurationFile"/> with the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationData.ConfigurationFilePath"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode.OnRenamed(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renamed"/> event and sets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationData.Name"/> to the new node name.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode.OnAddMenuItems">
            <summary>
            <para>Adds the close and validate menu items to the user interface menu system.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode.ApplicationData">
            <summary>
            <para>Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode.ApplicationData"/> for the node.</para>
            </summary>
            <value>
            <para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode.ApplicationData"/> for the node.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode.ConfigurationFile">
            <summary>
            <para>Gets the current configuration file.</para>
            </summary>
            <value>
            <para>The current configuration file.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommandDictionary">
            <summary>
            <para>Represents a strongly-typed dictionary of section name and configuration data entries.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommandDictionary.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommandDictionary"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommandDictionary.Add(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand)">
            <summary>
            <para>Adds the specified configuration data for the specified configuration section name.</para>
            </summary>
            <param name="name"><para>The name of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/>.</para></param>
            <param name="storageCreationCommand"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> object.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommandDictionary.Contains(System.String)">
            <summary>
            <para>Determines whether the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> already exists..</para>
            </summary>
            <param name="name"><para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> to locate.</para></param>
            <returns><para><see langword="true"/> if the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> with the name exists; otherwise, <see langword="false"/>.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommandDictionary.Remove(System.String)">
            <summary>
            <para>Removes the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> from the dictionary forthe specified configuration section.</para>
            </summary>
            <param name="name"><para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> name to remove.</para></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommandDictionary.Keys">
            <summary>
            <para>Gets an <see cref="T:System.Collections.ICollection"/> containing the names of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> objects.</para>
            </summary>
            <value>
            <para>An <see cref="T:System.Collections.ICollection"/> containing the names of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> objects.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommandDictionary.Values">
            <summary>
            <para>Gets an <see cref="T:System.Collections.ICollection"/> containing the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> objects.</para>
            </summary>
            <value>
            <para>An <see cref="T:System.Collections.ICollection"/> containing the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> objects.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommandDictionary.Item(System.String)">
            <summary>
            <para>Gets or sets <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> for the specified name.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/>.</para>
            </param>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> for the specified name.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceProvider">
            <summary>
            <para>This wraps the IOleServiceProvider interface and provides an easy COM+ way to get at services.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceProvider.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IOleServiceProvider)">
            <summary>
            <para>Creates a new ServiceProvider object and uses the given interface to resolve services.</para>
            </summary>
            <param name="oleServiceProvider">
            <para>The IOleServiceProvider interface to use.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="oleServiceProvider"/> is a null reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceProvider.Dispose">
            <summary>
            <para>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceProvider"/> is reclaimed by garbage collection. </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceProvider.Dispose(System.Boolean)">
            <summary>
            <para>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceContainer"/> is reclaimed by garbage collection. </para>
            </summary>
            <param name="disposing"><para><c>true</c> if we are disposing; otherwise, <c>false</c> which means the call is coming from our finalizer.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceProvider.GetService(System.Type)">
            <summary>
            <para>Retrieves the requested service.</para>
            </summary>
            <param name="serviceClass">
            <para>The type of the service to retrieve.</para>
            </param>
            <returns>
            <para>An instance of the service or <c>null</c> if no such service exists.</para>
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="serviceClass"/> is a null reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceProvider.GetService(System.Guid)">
            <summary>
            <para>Retrieves the requested service.</para>
            </summary>
            <param name="guid">
            <para>The GUID of the service to retrieve.</para>
            </param>
            <returns>
            <para>An instance of the service or null if no such service exists.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceProvider.GetSite(System.Guid@,System.Object[])">
            <summary>
            <para>Retrieves the last site set with IObjectWithSite::SetSite. If there's no known site, the object return a failure code.</para>
            </summary>
            <param name="riid">
            <para>The IID of the interface pointer that should be returned in ppvSite.</para>
            </param>
            <param name="ppvSite"><para>Address of pointer variable that receives the interface pointer requested in riid. Upon successful return, *ppvSite contains the requested interface pointer to the site last seen in IObjectWithSite::SetSite. The specific interface returned depends on the riid argument—in essence, the two arguments act identically to those in IUnknown::QueryInterface. If the appropriate interface pointer is available, the object must call IUnknown::AddRef on that pointer before returning successfully. If no site is available, or the requested interface is not supported, this method must *ppvSite to NULL and return a failure code.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceProvider.SetSite(System.Object)">
            <summary>
            <para>Provides the site's IUnknown pointer to the object. The object should hold onto this pointer, calling IUnknown::AddRef in doing so. If the object already has a site, it should call that existing site's IUnknown::Release, save the new site pointer, and call the new site's IUnknown::AddRef.</para>
            </summary>
            <param name="pUnkSite">
            <para>Pointer to the IUnknown interface pointer of the site managing this object. If NULL, the object should call IUnknown::Release on any existing site at which point the object no longer knows its site.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceProvider.Succeeded(System.Int32)">
            <summary>
            <para>Returns true if the given HRESULT is a success HRESULT</para>
            </summary>
            <param name="hr"><para>The HRESULT to test.</para></param>
            <returns><para><c>true</c> if the HRESULT is a success; otherwise <c>false</c>.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceProvider.Failed(System.Int32)">
            <summary>
            <para>Returns true if the given HRESULT is a failure HRESULT</para>
            </summary>
            <param name="hr"><para>The HRESULT to test.</para></param>
            <returns><para><c>true</c> if the HRESULT is a failure; otherwise <c>false</c>.</para></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RegistryStorageProviderNode">
            <summary>
            <para>Represents the node to configure a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider"/> instance.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RegistryStorageProviderNode.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RegistryStorageProviderNode"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RegistryStorageProviderNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RegistryStorageProviderNode"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData"/> instance.</para>
            </summary>
            <param name="data">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData"/> instance.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RegistryStorageProviderNode.RegistryRoot">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Win32.RegistryHive"/> where the data is to be stored.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Win32.RegistryHive"/> where the data is to be stored. The default is <see cref="F:Microsoft.Win32.RegistryHive.CurrentUser"/></para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RegistryStorageProviderNode.RegistrySubKey">
            <summary>
            <para>Gets or sets the sub key where the data is to be stored.</para>
            </summary>
            <value>
            <para>The sub key where the data is to be stored.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RegistryStorageProviderNode.TypeName">
            <summary>
            <para>Gets or sets the <see cref="T:System.Type"/> name of the provider.</para>
            </summary>
            <value>
            <para>The type name of the provider. The default is an empty string.</para>
            </value>
            <remarks>
            <para>Always returns <see cref="P:System.Type.AssemblyQualifiedName"/> for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider"/>.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmPairStorageProviderNode">
            <summary>
            <para>Represents a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.FileKeyAlgorithmPairStorageProvider"/> node in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> used for encrypting and decrypting configuration files.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmPairStorageProviderNode.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmPairStorageProviderNode"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmPairStorageProviderNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.FileKeyAlgorithmPairStorageProviderData)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmPairStorageProviderNode"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.FileKeyAlgorithmPairStorageProviderData"/> object.</para>
            </summary>
            <param name="data">
            <para>The runtime configuration data for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.FileKeyAlgorithmPairStorageProvider"/>..</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmPairStorageProviderNode.Name">
            <summary>
            <para>Gets the name for the node.</para>
            </summary>
            <value>
            <para>The display name for the node.</para>
            </value>
            <remarks>
            <para>The name should be the <seealso cref="P:System.ComponentModel.ISite.Name"/>.</para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            <para>The name already exists in the parent's node collection.</para>
            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmPairStorageProviderNode.File">
            <summary>
            <para>Gets or sets the path of the file for storage.</para>
            </summary>
            <value>
            <para>The path of the file for storage. The default is an empty string.</para>
            </value>
            <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.FileKeyAlgorithmPairStorageProviderData.Path"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmPairStorageProviderNode.DpapiSettings">
            <summary>
            <para>Gets or sets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmPairStorageProviderNode.DpapiSettings"/> used to protect the file.</para>
            </summary>
            <value>
            <para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmPairStorageProviderNode.DpapiSettings"/> used to protect the file or <see langword="null"/> (Nothing in Visual Basic) if no settings exist.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmPairStorageProviderNode.TypeName">
            <summary>
            <para>Gets the fully qualified assembly name for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.FileKeyAlgorithmPairStorageProvider"/>.</para>
            </summary>
            <value>
            <para>The fully qualified assembly name for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.FileKeyAlgorithmPairStorageProvider"/>.</para>
            </value>
            <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.FileKeyAlgorithmPairStorageProviderData.TypeName"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmPairStorageProviderNode.KeyAlgorithmPair">
            <summary>
            <para>Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Protection.FileKeyAlgorithmPairStorageProviderNode.KeyAlgorithmPair"/> that contains the algorithm and key to protect the configuraiton files.</para>
            </summary>
            <remarks>
            <para>
            The editing of a key algorithm pair is not allowed for storage providers.
            Therefore a new storage provider must be created in order to swap out the key.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationService">
            <devdoc>
            Provides the a way to create nodes based on data types.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationService.GetDisplayNames(System.Type)">
            <devdoc>
            Gets the names for the base node type that previous nodes were registered.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationService.GetNodeCreationEntry(System.String)">
            <devdoc>
            Gets the NodeCreationEntry for the displayName.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationService.CreateNode(System.Type)">
            <devdoc>
            Create a node based on the data type.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationService.CreateNode(System.Type,System.Object[])">
            <devdoc>
            Create a node based on the data type and some constructor arguments.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationService.AddNodeCreationEntry(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry)">
            <devdoc>
            Creates a map between the node and the data that it represents.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationService.DoesNodeTypeMatchDataType(System.Type,System.Type)">
            <devdoc>
            Determines if a node type matches it's registered data type.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationService.GetNodeType(System.Type)">
            <devdoc>
            Gets the node type for the given data type.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditorAttribute">
            <summary>
            <para>Specifies the properties for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditor"/> to use to change a property.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditorAttribute.#ctor(System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditorAttribute"/> class.</para>
            </summary>
            <param name="filter">
            <para>The filter for the file names.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditorAttribute.Filter">
            <summary>
            <para>Gets the filter for the dialog.</para>
            </summary>
            <value>
            <para>The filter for the dialog.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddXmlIncludeTypesCommand">
            <devdoc>
            Represents a command for adding a XmlIncludeTypeNode to a ConfigurationSectionNode.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MinimumLengthAttribute">
            <summary>
            <para>
            Specifies a property or event will be validated on a specific minimum length.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MinimumLengthAttribute.#ctor(System.Int32)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MinimumLengthAttribute"/> class with a minimum length.</para>
            </summary>
            <param name="minimumLength">
            <para>The minimum length.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MinimumLengthAttribute.Validate(System.Object,System.Reflection.PropertyInfo,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationErrorCollection)">
            <summary>
            <para>Validate the ranige data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.</para>
            </summary>
            <param name="instance">
            <para>The instance to validate.</para>
            </param>
            <param name="propertyInfo">
            <para>The property contaning the value to validate.</para>
            </param>
            <param name="errors">
            <para>The collection to add any errors that occur durring the validation.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveFileEditor">
            <summary>
            <para>Provides a user interface for saving a file name.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveFileEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            <para>Edits the specified object's value using the editor style indicated by GetEditStyle.</para>
            </summary>
            <param name="context">
            <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</para>
            </param>
            <param name="provider">
            <para>An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</para>
            </param>
            <param name="value">
            <para>The object to edit.</para>
            </param>
            <returns>
            <para>The new value of the object.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveFileEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            <para>Gets the editor style used by the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveFileEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/> method.</para>
            </summary>
            <param name="context">
            <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</para>
            </param>
            <returns>
            <para><see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal"/></para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveFileEditor.InitializeDialog(System.Windows.Forms.SaveFileDialog)">
            <summary>
            <para>Initializes the save file dialog when it is created.</para>
            </summary>
            <param name="saveFileDialog">
            <para>A <see cref="T:System.Windows.Forms.SaveFileDialog"/> instance.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationErrorLogService">
            <devdoc>
            Implements the IConfigurationErrorLogService for logging errors in the design.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerDomain">
            <devdoc>
            Represents the controller for IConfigurationDesignManager objects for an application.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerDomain.Load(System.Reflection.Assembly)">
            <devdoc>
            Searches the specified assembly for ConfigurationDesignManagerAttribute and loads the  specified IConfigurationDesignManager objects into the domain.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerDomain.Open">
            <devdoc>
            Invokes IConfigurationDesignManager.Open on all of the contained IConfigurationDesignManager objects.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerDomain.Save">
            <devdoc>
            Invokes IConfigurationDesignManager.Save on all of the contained IConfigurationDesignManager objects
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerDomain.BuildContext">
            <devdoc>
            Build the context for the design.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerDomain.Register">
            <devdoc>
            Invokes IConfigurationDesignManager.Register on all of the contained IConfigurationDesignManager objects.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerDomain.Load(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerAttribute)">
            <devdoc>
            Loads the IConfigurationDesignManager object from the specified ConfigurationDesignManagerAttribute.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerDomain.Load(System.Type)">
            <devdoc>
            Loads the IConfigurationDesignManager object from the specified Type.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerDomain.LoadFrom(System.String)">
            <devdoc>
            Loads all of the assemblies located at the specified path and searches them for ConfigurationDesignManagerAttribute attributes.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerDomain.Load">
            <devdoc>
            Loads all of the assemblies located at the current AppDomain.BaseDirectory and searches them for ConfigurationDesignManagerAttribute attributes.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDependencyException">
            <summary>
            <para>Represents an exception that occurs while resolving configuration dependencies.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDependencyException.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDependencyException"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDependencyException.#ctor(System.String)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDependencyException"/> class with a specified error message.</para>
            </summary>
            <param name="message"><para>A message that describes the error.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDependencyException.#ctor(System.String,System.Exception)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDependencyException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.</para>
            </summary>
            <param name="message"><para>The error message that explains the reason for the exception.</para></param>
            <param name="innerException"><para>The exception that is the cause of the current exception. If the <paramref name="innerException"/> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDependencyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDependencyException"/> class with serialized data.</para>
            </summary>
            <param name="info"><para>The object that holds the serialized object data.</para></param>
            <param name="context"><para>The contextual information about the source or destination.</para></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CloseApplicationConfigurationCommand">
            <summary>
            <para>Represents a command that will close an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode"/> and remove the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> that it represents.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CloseApplicationConfigurationCommand.#ctor(System.IServiceProvider)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CloseApplicationConfigurationCommand"/> class with an <see cref="T:System.IServiceProvider"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CloseApplicationConfigurationCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CloseApplicationConfigurationCommand"/> class with an <see cref="T:System.IServiceProvider"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The service provider to get service objects.</para>
            </param>
            <param name="clearErrorService">
            <para>Determines if the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/> when the command has executed.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CloseApplicationConfigurationCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Closes the application configuration.</para>
            </summary>
            <param name="node">
            <para>The node to execute the command upon.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddApplicationConfigurationNodeCommand">
            <summary>
            <para>Represents a command for adding a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddApplicationConfigurationNodeCommand.#ctor(System.IServiceProvider)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddApplicationConfigurationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddApplicationConfigurationNodeCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddApplicationConfigurationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.</para>
            </summary>
            <param name="serviceProvider">
            <para>The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</para>
            </param>
            <param name="clearErrorService">
            <para>Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationErrorLogService"/> should be cleared when the command has executed.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddApplicationConfigurationNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            <para>Creates a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode"/> object and adds it to the solution.</para>
            </summary>
            <param name="node">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode"/> is the root of an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIHierarchy"/> so the <paramref name="node"/> is not used, so passing <see langword="null"/> is expected.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddApplicationConfigurationNodeCommand.ApplicationData">
            <summary>
            <para>Gets or sets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddApplicationConfigurationNodeCommand.ApplicationData"/> object that will be used to  initialize the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode"/> object.
            </para>
            </summary>
            <value>
            <para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddApplicationConfigurationNodeCommand.ApplicationData"/> object that will be used to initialize the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ApplicationConfigurationNode"/> object.</para>
            </value>
        </member>
    </members>
</doc>
