<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type='text/xsl' href="scriptsql.xsl"?>
<root xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<database>PetShop</database>
<procedures>
		
		<procedure owner="dbo" name="Category_Get_List" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Gets all records from the Category table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[Id],
					[Name],
					[AdvicePhoto],
					[Timestamp]
				FROM
					dbo.[Category]
					
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Category_GetPaged" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Gets records from the Category table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				DECLARE @RowsToReturn int
				DECLARE @RowCount int
				
				-- First set the rowcount
				SET @RowsToReturn = @PageSize * (@PageIndex + 1)
				--SET ROWCOUNT @RowsToReturn
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [Id] char(36) COLLATE database_default  
				)
				
				-- Insert into the temp table
				declare @SQL as nvarchar(3500)
				SET @SQL = 'INSERT INTO #PageIndex (Id)'
				SET @SQL = @SQL + ' SELECT [Id]'
				SET @SQL = @SQL + ' FROM dbo.[Category]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				 
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				exec sp_executesql @SQL

				-- Return total count
				SELECT @RowCount = @@ROWCOUNT
				
				IF @PageSize <= 0
				BEGIN
				--Return all rows
				SET @PageUpperBound = @RowCount
				END
				
				-- Return total count
				SELECT @RowCount 
					
				--Set RowCount After Total Rows is determined
				SET ROWCOUNT @RowsToReturn

				-- Return paged results
				SELECT O.[Id], O.[Name], O.[AdvicePhoto], O.[Timestamp]
				FROM
				    dbo.[Category] O,
				    #PageIndex PageIndex
				WHERE
O.[Id] = PageIndex.[Id] AND 				    PageIndex.IndexID > @PageLowerBound AND
				    PageIndex.IndexID <= @PageUpperBound
				ORDER BY
				    PageIndex.IndexID
				
				END
			
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Category_Insert" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Inserts a record into the Category table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@AdvicePhoto" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Timestamp" type="timestamp" direction="Output" size="8" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[Category]
					(
					[Id]
					,[Name]
					,[AdvicePhoto]
					)
				VALUES
					(
					@Id
					,@Name
					,@AdvicePhoto
					)
				
									
				-- Select computed columns into output parameters
				SELECT
 @Timestamp = [Timestamp]
				FROM
					dbo.[Category]
				WHERE
[Id] = @Id 
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Category_Update" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Updates a record in the Category table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@OriginalId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@AdvicePhoto" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Timestamp" type="timestamp" direction="Input" size="8" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ReturnedTimestamp" type="timestamp" direction="Output" size="8" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[Category]
				SET
					[Id] = @Id
					,[Name] = @Name
					,[AdvicePhoto] = @AdvicePhoto
				WHERE
[Id] = @OriginalId 
AND [Timestamp] = @Timestamp				
				
				-- Select computed columns into output parameters
				SELECT
 @ReturnedTimestamp = [Timestamp]
				FROM
					dbo.[Category]
				WHERE
[Id] = @Id 
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Category_Delete" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Deletes a record in the Category table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Timestamp" type="timestamp" direction="Input" size="8" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[Category] WITH (ROWLOCK) 
				WHERE
					[Id] = @Id
	AND [Timestamp] = @Timestamp					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Category_GetById" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Select records from the Category table through an index
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Id],
					[Name],
					[AdvicePhoto],
					[Timestamp]
				FROM
					dbo.[Category]
				WHERE
					[Id] = @Id
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Category_Find" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Finds records in the Category table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@AdvicePhoto" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Timestamp" type="timestamp" direction="Input" size="8" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
				
				SELECT   [Id]
	, [Name]
	, [AdvicePhoto]
	, [Timestamp]
				FROM
					dbo.[Category]
				WHERE 
([Id] = @Id OR @Id is null)
AND ([Name] = @Name OR @Name is null)
AND ([AdvicePhoto] = @AdvicePhoto OR @AdvicePhoto is null)
																
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="CreditCard_Get_List" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Gets all records from the CreditCard table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[Id],
					[Number],
					[CardType],
					[ExpiryMonth],
					[ExpiryYear],
					[Timestamp]
				FROM
					dbo.[CreditCard]
					
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="CreditCard_GetPaged" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Gets records from the CreditCard table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				DECLARE @RowsToReturn int
				DECLARE @RowCount int
				
				-- First set the rowcount
				SET @RowsToReturn = @PageSize * (@PageIndex + 1)
				--SET ROWCOUNT @RowsToReturn
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [Id] char(36) COLLATE database_default  
				)
				
				-- Insert into the temp table
				declare @SQL as nvarchar(3500)
				SET @SQL = 'INSERT INTO #PageIndex (Id)'
				SET @SQL = @SQL + ' SELECT [Id]'
				SET @SQL = @SQL + ' FROM dbo.[CreditCard]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				 
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				exec sp_executesql @SQL

				-- Return total count
				SELECT @RowCount = @@ROWCOUNT
				
				IF @PageSize <= 0
				BEGIN
				--Return all rows
				SET @PageUpperBound = @RowCount
				END
				
				-- Return total count
				SELECT @RowCount 
					
				--Set RowCount After Total Rows is determined
				SET ROWCOUNT @RowsToReturn

				-- Return paged results
				SELECT O.[Id], O.[Number], O.[CardType], O.[ExpiryMonth], O.[ExpiryYear], O.[Timestamp]
				FROM
				    dbo.[CreditCard] O,
				    #PageIndex PageIndex
				WHERE
O.[Id] = PageIndex.[Id] AND 				    PageIndex.IndexID > @PageLowerBound AND
				    PageIndex.IndexID <= @PageUpperBound
				ORDER BY
				    PageIndex.IndexID
				
				END
			
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="CreditCard_Insert" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Inserts a record into the CreditCard table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Number" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CardType" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ExpiryMonth" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ExpiryYear" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Timestamp" type="timestamp" direction="Output" size="8" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[CreditCard]
					(
					[Id]
					,[Number]
					,[CardType]
					,[ExpiryMonth]
					,[ExpiryYear]
					)
				VALUES
					(
					@Id
					,@Number
					,@CardType
					,@ExpiryMonth
					,@ExpiryYear
					)
				
									
				-- Select computed columns into output parameters
				SELECT
 @Timestamp = [Timestamp]
				FROM
					dbo.[CreditCard]
				WHERE
[Id] = @Id 
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CreditCard_Update" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Updates a record in the CreditCard table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@OriginalId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Number" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CardType" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ExpiryMonth" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ExpiryYear" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Timestamp" type="timestamp" direction="Input" size="8" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ReturnedTimestamp" type="timestamp" direction="Output" size="8" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[CreditCard]
				SET
					[Id] = @Id
					,[Number] = @Number
					,[CardType] = @CardType
					,[ExpiryMonth] = @ExpiryMonth
					,[ExpiryYear] = @ExpiryYear
				WHERE
[Id] = @OriginalId 
AND [Timestamp] = @Timestamp				
				
				-- Select computed columns into output parameters
				SELECT
 @ReturnedTimestamp = [Timestamp]
				FROM
					dbo.[CreditCard]
				WHERE
[Id] = @Id 
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CreditCard_Delete" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Deletes a record in the CreditCard table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Timestamp" type="timestamp" direction="Input" size="8" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[CreditCard] WITH (ROWLOCK) 
				WHERE
					[Id] = @Id
	AND [Timestamp] = @Timestamp					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="CreditCard_GetById" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Select records from the CreditCard table through an index
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Id],
					[Number],
					[CardType],
					[ExpiryMonth],
					[ExpiryYear],
					[Timestamp]
				FROM
					dbo.[CreditCard]
				WHERE
					[Id] = @Id
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="CreditCard_Find" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Finds records in the CreditCard table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault="null"/>
				<parameter name="@Number" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CardType" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ExpiryMonth" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ExpiryYear" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Timestamp" type="timestamp" direction="Input" size="8" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
				
				SELECT   [Id]
	, [Number]
	, [CardType]
	, [ExpiryMonth]
	, [ExpiryYear]
	, [Timestamp]
				FROM
					dbo.[CreditCard]
				WHERE 
([Id] = @Id OR @Id is null)
AND ([Number] = @Number OR @Number is null)
AND ([CardType] = @CardType OR @CardType is null)
AND ([ExpiryMonth] = @ExpiryMonth OR @ExpiryMonth is null)
AND ([ExpiryYear] = @ExpiryYear OR @ExpiryYear is null)
																
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Product_Get_List" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Gets all records from the Product table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[Id],
					[Name],
					[Description],
					[CategoryId],
					[Timestamp]
				FROM
					dbo.[Product]
					
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Product_GetPaged" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Gets records from the Product table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				DECLARE @RowsToReturn int
				DECLARE @RowCount int
				
				-- First set the rowcount
				SET @RowsToReturn = @PageSize * (@PageIndex + 1)
				--SET ROWCOUNT @RowsToReturn
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [Id] char(36) COLLATE database_default  
				)
				
				-- Insert into the temp table
				declare @SQL as nvarchar(3500)
				SET @SQL = 'INSERT INTO #PageIndex (Id)'
				SET @SQL = @SQL + ' SELECT [Id]'
				SET @SQL = @SQL + ' FROM dbo.[Product]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				 
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				exec sp_executesql @SQL

				-- Return total count
				SELECT @RowCount = @@ROWCOUNT
				
				IF @PageSize <= 0
				BEGIN
				--Return all rows
				SET @PageUpperBound = @RowCount
				END
				
				-- Return total count
				SELECT @RowCount 
					
				--Set RowCount After Total Rows is determined
				SET ROWCOUNT @RowsToReturn

				-- Return paged results
				SELECT O.[Id], O.[Name], O.[Description], O.[CategoryId], O.[Timestamp]
				FROM
				    dbo.[Product] O,
				    #PageIndex PageIndex
				WHERE
O.[Id] = PageIndex.[Id] AND 				    PageIndex.IndexID > @PageLowerBound AND
				    PageIndex.IndexID <= @PageUpperBound
				ORDER BY
				    PageIndex.IndexID
				
				END
			
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Product_Insert" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Inserts a record into the Product table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Description" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CategoryId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Timestamp" type="timestamp" direction="Output" size="8" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[Product]
					(
					[Id]
					,[Name]
					,[Description]
					,[CategoryId]
					)
				VALUES
					(
					@Id
					,@Name
					,@Description
					,@CategoryId
					)
				
									
				-- Select computed columns into output parameters
				SELECT
 @Timestamp = [Timestamp]
				FROM
					dbo.[Product]
				WHERE
[Id] = @Id 
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Product_Update" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Updates a record in the Product table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@OriginalId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Description" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CategoryId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Timestamp" type="timestamp" direction="Input" size="8" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ReturnedTimestamp" type="timestamp" direction="Output" size="8" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[Product]
				SET
					[Id] = @Id
					,[Name] = @Name
					,[Description] = @Description
					,[CategoryId] = @CategoryId
				WHERE
[Id] = @OriginalId 
AND [Timestamp] = @Timestamp				
				
				-- Select computed columns into output parameters
				SELECT
 @ReturnedTimestamp = [Timestamp]
				FROM
					dbo.[Product]
				WHERE
[Id] = @Id 
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Product_Delete" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Deletes a record in the Product table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Timestamp" type="timestamp" direction="Input" size="8" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[Product] WITH (ROWLOCK) 
				WHERE
					[Id] = @Id
	AND [Timestamp] = @Timestamp					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Product_GetByCategoryId" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Select records from the Product table through a foreign key
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@CategoryId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				SELECT
					[Id],
					[Name],
					[Description],
					[CategoryId],
					[Timestamp]
				FROM
					dbo.[Product]
				WHERE
					[CategoryId] = @CategoryId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Product_GetById" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Select records from the Product table through an index
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Id],
					[Name],
					[Description],
					[CategoryId],
					[Timestamp]
				FROM
					dbo.[Product]
				WHERE
					[Id] = @Id
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Product_Find" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Finds records in the Product table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Description" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CategoryId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault="null"/>
				<parameter name="@Timestamp" type="timestamp" direction="Input" size="8" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
				
				SELECT   [Id]
	, [Name]
	, [Description]
	, [CategoryId]
	, [Timestamp]
				FROM
					dbo.[Product]
				WHERE 
([Id] = @Id OR @Id is null)
AND ([Name] = @Name OR @Name is null)
AND ([Description] = @Description OR @Description is null)
AND ([CategoryId] = @CategoryId OR @CategoryId is null)
																
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Item_Get_List" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Gets all records from the Item table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[Id],
					[Name],
					[Description],
					[Price],
					[Currency],
					[Photo],
					[ProductId],
					[Timestamp]
				FROM
					dbo.[Item]
					
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Item_GetPaged" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Gets records from the Item table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				DECLARE @RowsToReturn int
				DECLARE @RowCount int
				
				-- First set the rowcount
				SET @RowsToReturn = @PageSize * (@PageIndex + 1)
				--SET ROWCOUNT @RowsToReturn
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [Id] char(36) COLLATE database_default  
				)
				
				-- Insert into the temp table
				declare @SQL as nvarchar(3500)
				SET @SQL = 'INSERT INTO #PageIndex (Id)'
				SET @SQL = @SQL + ' SELECT [Id]'
				SET @SQL = @SQL + ' FROM dbo.[Item]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				 
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				exec sp_executesql @SQL

				-- Return total count
				SELECT @RowCount = @@ROWCOUNT
				
				IF @PageSize <= 0
				BEGIN
				--Return all rows
				SET @PageUpperBound = @RowCount
				END
				
				-- Return total count
				SELECT @RowCount 
					
				--Set RowCount After Total Rows is determined
				SET ROWCOUNT @RowsToReturn

				-- Return paged results
				SELECT O.[Id], O.[Name], O.[Description], O.[Price], O.[Currency], O.[Photo], O.[ProductId], O.[Timestamp]
				FROM
				    dbo.[Item] O,
				    #PageIndex PageIndex
				WHERE
O.[Id] = PageIndex.[Id] AND 				    PageIndex.IndexID > @PageLowerBound AND
				    PageIndex.IndexID <= @PageUpperBound
				ORDER BY
				    PageIndex.IndexID
				
				END
			
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Item_Insert" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Inserts a record into the Item table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Description" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Price" type="float" direction="Input" size="0" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Currency" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Photo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ProductId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Timestamp" type="timestamp" direction="Output" size="8" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[Item]
					(
					[Id]
					,[Name]
					,[Description]
					,[Price]
					,[Currency]
					,[Photo]
					,[ProductId]
					)
				VALUES
					(
					@Id
					,@Name
					,@Description
					,@Price
					,@Currency
					,@Photo
					,@ProductId
					)
				
									
				-- Select computed columns into output parameters
				SELECT
 @Timestamp = [Timestamp]
				FROM
					dbo.[Item]
				WHERE
[Id] = @Id 
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Item_Update" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Updates a record in the Item table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@OriginalId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Description" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Price" type="float" direction="Input" size="0" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@Currency" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Photo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ProductId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Timestamp" type="timestamp" direction="Input" size="8" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ReturnedTimestamp" type="timestamp" direction="Output" size="8" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[Item]
				SET
					[Id] = @Id
					,[Name] = @Name
					,[Description] = @Description
					,[Price] = @Price
					,[Currency] = @Currency
					,[Photo] = @Photo
					,[ProductId] = @ProductId
				WHERE
[Id] = @OriginalId 
AND [Timestamp] = @Timestamp				
				
				-- Select computed columns into output parameters
				SELECT
 @ReturnedTimestamp = [Timestamp]
				FROM
					dbo.[Item]
				WHERE
[Id] = @Id 
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Item_Delete" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Deletes a record in the Item table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Timestamp" type="timestamp" direction="Input" size="8" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[Item] WITH (ROWLOCK) 
				WHERE
					[Id] = @Id
	AND [Timestamp] = @Timestamp					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Item_GetByProductId" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Select records from the Item table through a foreign key
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@ProductId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				SELECT
					[Id],
					[Name],
					[Description],
					[Price],
					[Currency],
					[Photo],
					[ProductId],
					[Timestamp]
				FROM
					dbo.[Item]
				WHERE
					[ProductId] = @ProductId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Item_GetById" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Select records from the Item table through an index
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Id],
					[Name],
					[Description],
					[Price],
					[Currency],
					[Photo],
					[ProductId],
					[Timestamp]
				FROM
					dbo.[Item]
				WHERE
					[Id] = @Id
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Item_Find" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Finds records in the Item table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Description" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Price" type="float" direction="Input" size="0" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@Currency" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Photo" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ProductId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault="null"/>
				<parameter name="@Timestamp" type="timestamp" direction="Input" size="8" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
				
				SELECT   [Id]
	, [Name]
	, [Description]
	, [Price]
	, [Currency]
	, [Photo]
	, [ProductId]
	, [Timestamp]
				FROM
					dbo.[Item]
				WHERE 
([Id] = @Id OR @Id is null)
AND ([Name] = @Name OR @Name is null)
AND ([Description] = @Description OR @Description is null)
AND ([Price] = @Price OR @Price is null)
AND ([Currency] = @Currency OR @Currency is null)
AND ([Photo] = @Photo OR @Photo is null)
AND ([ProductId] = @ProductId OR @ProductId is null)
																
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Account_Get_List" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Gets all records from the Account table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[Id],
					[FirstName],
					[LastName],
					[StreetAddress],
					[PostalCode],
					[City],
					[StateOrProvince],
					[Country],
					[TelephoneNumber],
					[Email],
					[Login],
					[Password],
					[IWantMyList],
					[IWantPetTips],
					[FavoriteLanguage],
					[CreditCardId],
					[FavoriteCategoryId],
					[Timestamp]
				FROM
					dbo.[Account]
					
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Account_GetPaged" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Gets records from the Account table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				DECLARE @RowsToReturn int
				DECLARE @RowCount int
				
				-- First set the rowcount
				SET @RowsToReturn = @PageSize * (@PageIndex + 1)
				--SET ROWCOUNT @RowsToReturn
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize
				
				-- Create a temp table to store the select results
				CREATE TABLE #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [Id] char(36) COLLATE database_default  
				)
				
				-- Insert into the temp table
				declare @SQL as nvarchar(3500)
				SET @SQL = 'INSERT INTO #PageIndex (Id)'
				SET @SQL = @SQL + ' SELECT [Id]'
				SET @SQL = @SQL + ' FROM dbo.[Account]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				 
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				exec sp_executesql @SQL

				-- Return total count
				SELECT @RowCount = @@ROWCOUNT
				
				IF @PageSize <= 0
				BEGIN
				--Return all rows
				SET @PageUpperBound = @RowCount
				END
				
				-- Return total count
				SELECT @RowCount 
					
				--Set RowCount After Total Rows is determined
				SET ROWCOUNT @RowsToReturn

				-- Return paged results
				SELECT O.[Id], O.[FirstName], O.[LastName], O.[StreetAddress], O.[PostalCode], O.[City], O.[StateOrProvince], O.[Country], O.[TelephoneNumber], O.[Email], O.[Login], O.[Password], O.[IWantMyList], O.[IWantPetTips], O.[FavoriteLanguage], O.[CreditCardId], O.[FavoriteCategoryId], O.[Timestamp]
				FROM
				    dbo.[Account] O,
				    #PageIndex PageIndex
				WHERE
O.[Id] = PageIndex.[Id] AND 				    PageIndex.IndexID > @PageLowerBound AND
				    PageIndex.IndexID <= @PageUpperBound
				ORDER BY
				    PageIndex.IndexID
				
				END
			
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Account_Insert" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Inserts a record into the Account table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@FirstName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LastName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@StreetAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PostalCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@City" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@StateOrProvince" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Country" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@TelephoneNumber" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Login" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Password" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@IWantMyList" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@IWantPetTips" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@FavoriteLanguage" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CreditCardId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@FavoriteCategoryId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Timestamp" type="timestamp" direction="Output" size="8" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[Account]
					(
					[Id]
					,[FirstName]
					,[LastName]
					,[StreetAddress]
					,[PostalCode]
					,[City]
					,[StateOrProvince]
					,[Country]
					,[TelephoneNumber]
					,[Email]
					,[Login]
					,[Password]
					,[IWantMyList]
					,[IWantPetTips]
					,[FavoriteLanguage]
					,[CreditCardId]
					,[FavoriteCategoryId]
					)
				VALUES
					(
					@Id
					,@FirstName
					,@LastName
					,@StreetAddress
					,@PostalCode
					,@City
					,@StateOrProvince
					,@Country
					,@TelephoneNumber
					,@Email
					,@Login
					,@Password
					,@IWantMyList
					,@IWantPetTips
					,@FavoriteLanguage
					,@CreditCardId
					,@FavoriteCategoryId
					)
				
									
				-- Select computed columns into output parameters
				SELECT
 @Timestamp = [Timestamp]
				FROM
					dbo.[Account]
				WHERE
[Id] = @Id 
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Account_Update" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Updates a record in the Account table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@OriginalId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@FirstName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@LastName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@StreetAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@PostalCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@City" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@StateOrProvince" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Country" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@TelephoneNumber" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Login" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Password" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@IWantMyList" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@IWantPetTips" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@FavoriteLanguage" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CreditCardId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@FavoriteCategoryId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Timestamp" type="timestamp" direction="Input" size="8" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ReturnedTimestamp" type="timestamp" direction="Output" size="8" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[Account]
				SET
					[Id] = @Id
					,[FirstName] = @FirstName
					,[LastName] = @LastName
					,[StreetAddress] = @StreetAddress
					,[PostalCode] = @PostalCode
					,[City] = @City
					,[StateOrProvince] = @StateOrProvince
					,[Country] = @Country
					,[TelephoneNumber] = @TelephoneNumber
					,[Email] = @Email
					,[Login] = @Login
					,[Password] = @Password
					,[IWantMyList] = @IWantMyList
					,[IWantPetTips] = @IWantPetTips
					,[FavoriteLanguage] = @FavoriteLanguage
					,[CreditCardId] = @CreditCardId
					,[FavoriteCategoryId] = @FavoriteCategoryId
				WHERE
[Id] = @OriginalId 
AND [Timestamp] = @Timestamp				
				
				-- Select computed columns into output parameters
				SELECT
 @ReturnedTimestamp = [Timestamp]
				FROM
					dbo.[Account]
				WHERE
[Id] = @Id 
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Account_Delete" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Deletes a record in the Account table
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
				<parameter name="@Timestamp" type="timestamp" direction="Input" size="8" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[Account] WITH (ROWLOCK) 
				WHERE
					[Id] = @Id
	AND [Timestamp] = @Timestamp					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Account_GetByFavoriteCategoryId" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Select records from the Account table through a foreign key
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@FavoriteCategoryId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				SELECT
					[Id],
					[FirstName],
					[LastName],
					[StreetAddress],
					[PostalCode],
					[City],
					[StateOrProvince],
					[Country],
					[TelephoneNumber],
					[Email],
					[Login],
					[Password],
					[IWantMyList],
					[IWantPetTips],
					[FavoriteLanguage],
					[CreditCardId],
					[FavoriteCategoryId],
					[Timestamp]
				FROM
					dbo.[Account]
				WHERE
					[FavoriteCategoryId] = @FavoriteCategoryId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Account_GetByCreditCardId" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Select records from the Account table through a foreign key
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@CreditCardId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				SELECT
					[Id],
					[FirstName],
					[LastName],
					[StreetAddress],
					[PostalCode],
					[City],
					[StateOrProvince],
					[Country],
					[TelephoneNumber],
					[Email],
					[Login],
					[Password],
					[IWantMyList],
					[IWantPetTips],
					[FavoriteLanguage],
					[CreditCardId],
					[FavoriteCategoryId],
					[Timestamp]
				FROM
					dbo.[Account]
				WHERE
					[CreditCardId] = @CreditCardId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Account_GetById" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Select records from the Account table through an index
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Id],
					[FirstName],
					[LastName],
					[StreetAddress],
					[PostalCode],
					[City],
					[StateOrProvince],
					[Country],
					[TelephoneNumber],
					[Email],
					[Login],
					[Password],
					[IWantMyList],
					[IWantPetTips],
					[FavoriteLanguage],
					[CreditCardId],
					[FavoriteCategoryId],
					[Timestamp]
				FROM
					dbo.[Account]
				WHERE
					[Id] = @Id
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Account_GetByLogin" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Select records from the Account table through an index
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Login" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Id],
					[FirstName],
					[LastName],
					[StreetAddress],
					[PostalCode],
					[City],
					[StateOrProvince],
					[Country],
					[TelephoneNumber],
					[Email],
					[Login],
					[Password],
					[IWantMyList],
					[IWantPetTips],
					[FavoriteLanguage],
					[CreditCardId],
					[FavoriteCategoryId],
					[Timestamp]
				FROM
					dbo.[Account]
				WHERE
					[Login] = @Login
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Account_Find" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Finds records in the Account table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@Id" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault="null"/>
				<parameter name="@FirstName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@LastName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StreetAddress" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@PostalCode" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@City" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@StateOrProvince" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Country" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@TelephoneNumber" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Login" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Password" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@IWantMyList" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@IWantPetTips" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@FavoriteLanguage" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CreditCardId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault="null"/>
				<parameter name="@FavoriteCategoryId" type="char" direction="Input" size="36" precision="0" scale="0" param="(36)" nulldefault="null"/>
				<parameter name="@Timestamp" type="timestamp" direction="Input" size="8" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
				
				SELECT   [Id]
	, [FirstName]
	, [LastName]
	, [StreetAddress]
	, [PostalCode]
	, [City]
	, [StateOrProvince]
	, [Country]
	, [TelephoneNumber]
	, [Email]
	, [Login]
	, [Password]
	, [IWantMyList]
	, [IWantPetTips]
	, [FavoriteLanguage]
	, [CreditCardId]
	, [FavoriteCategoryId]
	, [Timestamp]
				FROM
					dbo.[Account]
				WHERE 
([Id] = @Id OR @Id is null)
AND ([FirstName] = @FirstName OR @FirstName is null)
AND ([LastName] = @LastName OR @LastName is null)
AND ([StreetAddress] = @StreetAddress OR @StreetAddress is null)
AND ([PostalCode] = @PostalCode OR @PostalCode is null)
AND ([City] = @City OR @City is null)
AND ([StateOrProvince] = @StateOrProvince OR @StateOrProvince is null)
AND ([Country] = @Country OR @Country is null)
AND ([TelephoneNumber] = @TelephoneNumber OR @TelephoneNumber is null)
AND ([Email] = @Email OR @Email is null)
AND ([Login] = @Login OR @Login is null)
AND ([Password] = @Password OR @Password is null)
AND ([IWantMyList] = @IWantMyList OR @IWantMyList is null)
AND ([IWantPetTips] = @IWantPetTips OR @IWantPetTips is null)
AND ([FavoriteLanguage] = @FavoriteLanguage OR @FavoriteLanguage is null)
AND ([CreditCardId] = @CreditCardId OR @CreditCardId is null)
AND ([FavoriteCategoryId] = @FavoriteCategoryId OR @FavoriteCategoryId is null)
																
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ExtendedItem_Get_List" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Gets all records from the ExtendedItem view
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ItemId],
					[ItemName],
					[ItemDescription],
					[ItemPrice],
					[ItemPhoto],
					[ProductId],
					[ProductName],
					[ProductDescription],
					[CategoryId],
					[CategoryName]
				FROM
					dbo.[ExtendedItem]
										
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ExtendedItem_Get" grant="">
			<comment>/*
----------------------------------------------------------------------------------------------------
-- Date Created: mercredi 15 mars 2006

-- Created By: .netTiers (http://www.nettiers.com)
-- Purpose: Gets records from the ExtendedItem view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
</comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
			</parameters>
			<body><![CDATA[
				
				BEGIN

				-- Build the sql query
				declare @SQL as nvarchar(4000)
				SET @SQL = ' SELECT * FROM dbo.[ExtendedItem]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				 
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Execution the query
				exec sp_executesql @SQL
								
				END
								
			]]></body>
		</procedure>
		
</procedures>
</root>
