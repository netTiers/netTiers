<%--
 * $Id: IEntity.cst,v 1.13 2006/02/27 22:09:40 bgjohnso Exp $
 * Last modified by $Author: bgjohnso $
 * Last modified at $Date: 2006/02/27 22:09:40 $
 * $Revision: 1.13 $
--%>
<%@ CodeTemplate Src="..\TemplateLib\CommonSqlCode.cs" Inherits="MoM.Templates.CommonSqlCode" Language="C#" TargetLanguage="C#" Description="The interface that each business object of the domain implements."%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>

<%@ Property Name="NameSpace" Optional="False" Type="System.String" Category="Style" Description="Object Namespace." %>
using System;
using System.Collections.Generic;
using System.Text;

namespace <%=NameSpace%>
{
    /// <summary>
    /// Exposes a factory to create an entity based on a typeString and a default type.
    /// </summary>
    public interface IEntityFactory
    {
        /// <summary>
        /// Create an entity based on a string.  
        /// It will autodiscover the type based on any information we can gather.
        /// </summary>
        /// <param name="typeString">string of entity to discover and create</param>
        /// <param name="defaultType">if string is not found defaultType will be created.</param>
        /// <returns>Created IEntity object</returns>
        IEntity CreateEntity(string typeString, Type defaultType);

        /// <summary>
        /// Create a readonly entity based on a string for views.  
        /// It will autodiscover the type based on any information we can gather.
        /// </summary>
        /// <param name="typeString">string of entity to discover and create</param>
        /// <param name="defaultType">if string is not found defaultType will be created.</param>
        /// <returns>Created IEntity object</returns>
        Object CreateViewEntity(string typeString, Type defaultType);
		
        /// <summary>
        /// Gets the current assembly responsible for entity creation.
        /// </summary>
        /// <value>The current assembly.</value>
        System.Reflection.Assembly CurrentEntityAssembly { get; set;}
    }
}
