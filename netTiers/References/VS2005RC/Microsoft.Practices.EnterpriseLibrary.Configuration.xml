<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Practices.EnterpriseLibrary.Configuration</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangedEventHandler">
            <summary>
            <para>Represents the method that will handle the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.ConfigurationChanged"/> and <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.ConfigurationChanged"/> events.</para>
            </summary>
            <param name="sender">
            <para>The source of the event.</para>
            </param>
            <param name="e">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangedEventArgs"/> that contains the event data.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangedEventArgs">
            <summary>
            <para>Provides data for the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.ConfigurationChanged"/> and <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.ConfigurationChanged"/> event which occur before configuration is changed and committed to storage.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangingEventArgs"/> class with the configuration file, the section name, the old value, and the new value of the changes.</para>
            </summary>
            <param name="configurationFile"><para>The configuration file where the change occured.</para></param>
            <param name="sectionName"><para>The section name of the changes.</para></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangedEventArgs.ConfigurationFile">
            <summary>
            <para>Gets the configuration file of the data that is changing.</para>
            </summary>
            <value>
            <para>The configuration file of the data that is changing.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangedEventArgs.SectionName">
            <summary>
            <para>Gets the section name where the changes occurred.</para>
            </summary>
            <value>
            <para>The section name where the changes occurred.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.FileKeyAlgorithmPairStorageProvider">
            <summary>
            <para>Provides file storage for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/> with optional protection.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProvider">
            <summary>
            <para>Represents an object that consumes configuration. This class is abstract.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.IConfigurationProvider">
            <summary>
            <para>
            This interface specifies the contract that providers created through configuration
            must implement to allow them to be properly created and initialized through reflection.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.IConfigurationProvider.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView)">
            <summary>
            <para>Initializes the provider with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView"/>.</para>
            </summary>
            <param name="configurationView">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView"/> object.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.IConfigurationProvider.ConfigurationName">
            <summary>
            <para>Gets or sets the name of the provider.</para>
            </summary>
            <value>
            <para>The name of the provider.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProvider.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProvider"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProvider.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView)">
            <summary>
            <para>When overridden by a class, initializes the provider with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView"/>.</para>
            </summary>
            <param name="configurationView">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView"/> object.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProvider.ConfigurationName">
            <summary>
            <para>Gets or sets the name of the provider.</para>
            </summary>
            <value><para>The name of the provider.</para></value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyAlgorithmPairStorageProvider">
            <summary>
            <para>Represents storage for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyAlgorithmPairStorageProvider.Load">
            <summary>
            <para>When implemented by a class, loads the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/> from storage.</para>
            </summary>
            <returns>
            <para>Loads the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/> from storage.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyAlgorithmPairStorageProvider.Save(Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair)">
            <summary>
            <para>When implemented by a class, saves the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/> to storage.</para>
            </summary>
            <param name="keyAlgorithmPair">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/> to store.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.FileKeyAlgorithmPairStorageProvider.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView)">
            <summary>
            <para>Initializes the provider with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView"/>.</para>
            </summary>
            <param name="configurationView">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView"/> object.</para>
            </param>
            <remarks>
            <para>The method expects a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.RuntimeConfigurationView"/> object for the <paramref name="configurationView"/></para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.FileKeyAlgorithmPairStorageProvider.Load">
            <summary>
            <para>Loads a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/> from the configured file.</para>
            </summary>
            <returns>
            <para>The deserialized <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/>.</para>
            </returns>
            <exception cref="T:System.InvalidCastException">Thrown when a valid object is loaded, but it is not a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"></see></exception> 
            <exception cref="T:System.Configuration.ConfigurationException">Thrown when system is unable to deserialize the stored <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"></see></exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.FileKeyAlgorithmPairStorageProvider.Save(Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair)">
            <summary>
            <para>Saves a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/> to the configured file.</para>
            </summary>
            <param name="keyAlgorithmPair">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/> to store.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.IConfigurationChangeWatcherFactory">
            <summary>
            Responsible for defining the interface to be supported by classes that are going to 
            create <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.IConfigurationChangeWatcher"></see>s
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.IConfigurationChangeWatcherFactory.CreateConfigurationChangeWatcher">
            <summary>
            <para>
            When implemented by a class, creates an object that is responsible for watching for
            changes in the underlying storage mechanism for configuration persistence. When a change
            occurs, this object must raise its ConfigurationChange event.
            </para>
            </summary>
            <returns>An initialized object that will watch for configuration changes.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerFactory">
            <devdoc>
            The factory class creates ITransformer objects.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderFactory">
            <summary>
            <para>Provides base functionality for creating named instances of a particular provider type.</para>
            </summary>  
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFactory">
            <summary>
            <para>Represents a factory for creating objects from configuration.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFactory.#ctor(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFactory"/> class with the factory name and a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFactory.ConfigurationContext"/>.</para>
            </summary>
            <param name="factoryName">
            <para>The name of the factory.</para>
            </param>
            <param name="configurationContext">
            <para>A <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFactory.ConfigurationContext"/> object</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFactory.GetConfigurationType(System.String)">
            <summary>
            <para>When overriden by a derived class, gets the configuration object <see cref="T:System.Type"/> for the factory to create given the <paramref name="configurationName"/>.</para>
            </summary>
            <param name="configurationName">
            <para>The name of the configuration object to create.</para>
            </param>
            <returns>
            <para>The <see cref="T:System.Type"/> of the configuration object.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFactory.PublishFailureEvent(System.String,System.Exception)">
            <summary>
            <para>Publish an instrumentation event that indicates there was an error while attempting to create a provider.</para>
            </summary>
            <param name="configurationName"><para>The name of the configuration object.</para></param>
            <param name="e"><para>The <see cref="T:System.Exception"/> to publish.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFactory.CreateInstance(System.String)">
            <summary>
            <para>Creates an instance of the named configuration object.</para>
            </summary>
            <param name="configurationName">
            <para>The name of the configuration object.</para>
            </param>
            <returns>
            <para>An instance of the configuration object.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFactory.CreateObject(System.String,System.Type)">
            <summary>
            <para>Construct an instance of a named configuration object by the <paramref name="type"/>.</para>
            </summary>
            <param name="configurationName">
            <para>The name of the configuration object.</para>
            </param>
            <param name="type"><para>The <see cref="T:System.Type"/> to create.</para></param>
            <returns>An instance of the type.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFactory.GetType(System.String)">
            <summary>
            <para>Gets the <see cref="T:System.Type"/> based on a qualified name.</para>
            </summary>
            <param name="typeName">
            <para>The qualified name.</para>
            </param>
            <returns>
            <para>The <see cref="T:System.Type"/> based on the qualified name.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFactory.ConfigurationContext">
            <summary>
            <para>Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFactory.ConfigurationContext"/> for the factory.</para>
            </summary>
            <value>
            <para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFactory.ConfigurationContext"/> for the factory.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFactory.FactoryName">
            <summary>
            <para>Gets the name of the factory.</para>
            </summary>
            <value>
            <para>The name of the factory.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderFactory.#ctor(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderFactory"/>
            </summary>
            <param name="factoryName"><para>A friendly name that will be included in exception messages.</para></param>
            <param name="configurationContext"><para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> to use.</para></param>
            <param name="type"><para>The base type of all providers that this factory will create.</para></param>
            <excpetion cref="T:System.ArgumentNullException">
            <para><paramref name="configurationContext"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><paramref name="factoryName"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><paramref name="type"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </excpetion>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderFactory.CreateConfigurationView">
            <summary>
            <para>When overriden by a derived class, creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView"/> for the factory.</para>
            </summary>
            <returns>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView"/> for the factory.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderFactory.CreateDefaultInstance">
            <summary>
            <para>Create the default insance of the provider object.</para>
            </summary>
            <returns>
            <para>The default provider object instance.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderFactory.GetDefaultInstanceName">
            <summary>
            <para>Gets the default provider name.</para>
            </summary>
            <returns>The default provider name.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderFactory.InitializeConfigurationProvider(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.IConfigurationProvider)">
            <summary>
            <para>Initialize the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.IConfigurationProvider"/> by invoking the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.IConfigurationProvider.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView)"/> method.</para>
            </summary>
            <param name="providerName">
            <para>The name of the provider.</para>
            </param>
            <param name="provider">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.IConfigurationProvider"/> to initialize.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderFactory.CreateObject(System.String,System.Type)">
            <summary>
            <para>Create the named <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.IConfigurationProvider"/> object.</para>
            </summary>
            <param name="providerName">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.IConfigurationProvider"/> to create.</para>
            </param>
            <param name="type"><see cref="T:System.Type"></see> of object to instantiate</param>
            <returns>Instantiated object</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderFactory.ProviderType">
            <summary>
            <para>Gets the <see cref="T:System.Type"/> being created.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.Type"/> being created.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProvider">
            <summary>
            <para>Represents a provider that reads and writes configuration data to storage.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.IStorageProviderReader">
            <summary>
            <para>
            Represents a storage provider reader for configuration data.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.IStorageProviderReader.Read">
            <summary>
            <para>When implemented by a class, reads the configuration from storage</para>
            </summary>        
            <returns>
            <para>The configuration data for the sectionName.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.IStorageProviderReader.CurrentSectionName">
            <summary>
            <para>When implemented by a class, gets the name of the configuration section.</para>
            </summary>
            <value>
            <para>The name of the configuration section.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProvider.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProvider"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProvider.Read">
            <summary>
            <para>When overriden by a derived clas, reads the configuration data from storage.</para>
            </summary>
            <returns>
            <para>The configuration data.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProvider.CreateConfigurationChangeWatcher">
            <summary>
            <para>When overriden by a derived class, creates an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.IConfigurationChangeWatcher"/> for the storage.</para>
            </summary>
            <returns>
            <para>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.IConfigurationChangeWatcher"/> for the storage.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProvider.CurrentSectionName">
            <summary>
            <para>Gets the name of the configuration section.</para>
            </summary>
            <value>
            <para>The name of the configuration section.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.IStorageProviderWriter">
            <summary>
            <para>
            Represents a storage provider writer for configuration data.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.IStorageProviderWriter.Write(System.Object)">
            <summary>
            When implemented by a class, writes the configuration data to storage.
            </summary>
            <param name="value">
            <para>The value to write to storage.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary">
            <summary>
            <para>Represents a strongly-typed dictionary of section name and configuration data entries.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary.Add(System.String,System.Object)">
            <summary>
            <para>Adds the specified configuration data for the specified configuration section name.</para>
            </summary>
            <param name="sectionName"><para>The name of a configuration section.</para></param>
            <param name="configurationData"><para>A configuration data object.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary.Contains(System.String)">
            <summary>
            <para>determines whether the section already exists..</para>
            </summary>
            <param name="sectionName"><para>The configuration section to locate.</para></param>
            <returns><para><see langword="true"/> if the element with the key exists; otherwise, <see langword="false"/>.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary.Remove(System.String)">
            <summary>
            <para>Removes the configuration data from the dictionary forthe specified configuration section.</para>
            </summary>
            <param name="sectionName"><para>The configuration section name to remove.</para></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary.Keys">
            <summary>
            <para>Gets an <see cref="T:System.Collections.ICollection"/> containing the configuraiton section names.</para>
            </summary>
            <value>
            <para>An <see cref="T:System.Collections.ICollection"/> containing the configuraiton section names.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary.Values">
            <summary>
            <para>Gets an <see cref="T:System.Collections.ICollection"/> containing the configuration section values.</para>
            </summary>
            <value>
            <para>An <see cref="T:System.Collections.ICollection"/> containing the configuration section values.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary.Item(System.String)">
            <summary>
            <para>Gets or sets the configuration data for the specified configuration section name.</para>
            </summary>
            <param name="sectionName">
            <para>The name of the configuration section.</para>
            </param>
            <value>
            <para>The configuration data for the specified configuration section name.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData">
            <summary>
            <para>Represents a data transformer for configuration data in configuration.</para>
            </summary>
            <remarks>
            <para>The class maps to the <c>dataTransformer</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData">
            <summary>
            <para>Represents the common configuration data for all providers.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.#ctor(System.String)">
            <summary>
            <para>Intializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData"/> class with a name and a <see cref="T:System.Type"/> name.</para>
            </summary>
            <param name="name"><para>The name of the provider.</para></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name">
            <summary>
            <para>Gets or sets the name of the provider.</para>
            </summary>
            <value><para>The name of the provider.</para></value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.TypeName">
            <summary>
            <para>When implemented by a class, Gets or sets the <see cref="T:System.Type"/> name of the provider.</para>
            </summary>
            <value>
            <para>The type name of the provider. The default is an empty string.</para>
            </value>
            <remarks>
            <para><b>Not to implementers:</b> You do not have to implement the set operation.  If you have only one type for your data object you can ignore the set.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> class..</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData.#ctor(System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> class with a name and fully qualified type name.</para>
            </summary>
            <param name="name">
            <para>The name of the transformer.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData.Clone">
            <summary>
            <para>Creates a new object that is a copy of the current instance.</para>
            </summary>
            <returns>
            <para>A new object that is a copy of this instance.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData.TypeName">
            <summary>
            <para>Gets or sets the type name.</para>
            </summary>
            <value>
            <para>The type name.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.SqlStorageProviderData">
            <summary>
            <para>Represents the configuration data for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.SqlStorageProvider"/>.</para>
            </summary>    	
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData">
            <summary>
            <para>Represents a storage provider to read and write data in configuration.</para>
            </summary>
            <remarks>
            <para>The class maps to the <c>storageProvider</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> class..</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData.#ctor(System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> class with a name and fully qualified type name.</para>
            </summary>
            <param name="name">
            <para>The name of the storage provider.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData.#ctor(System.String,System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> class with a name and fully qualified type name.</para>
            </summary>
            <param name="name">
            <para>The name of the storage provider.</para>
            </param>
            <param name="sectionName">
            <para>The section name for the configuration.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData.Clone">
            <summary>
            <para>Creates a new object that is a copy of the current instance.</para>
            </summary>
            <returns>
            <para>A new object that is a copy of this instance.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData.SectionName">
            <summary>
            <para>Gets or sets the section name for the configuration.</para>
            </summary>
            <value>
            <para>The section name for the configuration.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.SqlStorageProviderData.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.SqlStorageProviderData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.SqlStorageProviderData.#ctor(System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.SqlStorageProviderData"/> class with a name.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.SqlStorageProvider"/> for this data.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.SqlStorageProviderData.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.SqlStorageProviderData"/> class with a name.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.SqlStorageProvider"/> for this data.</para>
            </param>
            <param name="connectionString">
            <para>The connection string to the SQL Server database.</para>
            </param>
            <param name="getStoredProcedure">
            <para>The stored procedure name to get the data.</para>
            </param>
            <param name="setStoredProcedure">
            <para>The stored procedure name to set the data.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.SqlStorageProviderData.Clone">
            <summary>
            <para>Creates a new object that is a copy of the current instance.</para>
            </summary>
            <returns>
            <para>A new object that is a copy of this instance.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.SqlStorageProviderData.ConnectionString">
            <summary>
            <para>Gets or sets the connection string to the SQL Server database.</para>
            </summary>
            <value>
            <para>The connection string to the SQL Server database.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.SqlStorageProviderData.GetStoredProcedure">
            <summary>
            <para>Gets or sets the stored procedure name to get the data.</para>
            </summary>
            <value>
            <para>The stored procedure name to get the data.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.SqlStorageProviderData.SetStoredProcedure">
            <summary>
            <para>Gets or sets the stored procedure name to set the data.</para>
            </summary>
            <value>
            <para>The stored procedure name to set the data.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.SqlStorageProviderData.TypeName">
            <summary>
            <para>Gets or sets the <see cref="T:System.Type"/> name of the provider.</para>
            </summary>
            <value>
            <para>The type name of the provider. The default is an empty string.</para>
            </value>
            <remarks>
            <para>Always returns <see cref="P:System.Type.AssemblyQualifiedName"/> for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.SqlStorageProvider"/>.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings">
            <summary>
            <para>Represents the root of the configuration graph.</para>
            </summary>
            <remarks>
            <para>The class maps to the <c>enterpriselibrary.configurationSettings</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings.SectionName">
            <summary>
            <para>Gets the section name for the library in configuration.</para>
            </summary>
            <value>
            <para>The section name for the library in configuration.</para>
            </value>
            <remarks>
            <para>The secion name is enterpriselibrary.configurationSettings.</para>
            </remarks>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings.ConfigurationNamespace">
            <summary>
            <para>Gets the Xml namespace for this root node.</para>
            </summary>
            <value>
            <para>The Xml namespace for this root node.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings.#ctor(System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings"/> class with a default section name.</para>
            </summary>
            <param name="applicationName">
            <para>The name of the application for these settings.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings.ConfigurationSections">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionDataCollection"/>.</para>
            </summary>
            <value>
            <para>The configuration sections available in configuration. The default is an empty collection.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>configurationSections</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings.ApplicationName">
            <summary>
            <para>Gets or sets the name of the application for these settings.</para>
            </summary>
            <value>
            <para>The name of application for these settings. The default is an empty string.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>applicationName</c> attribute in configuration for the block configuration.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings.Item(System.String)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> associated with the specified <paramref name="name"/>.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="name"/>. If the specified <paramref name="name"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="name"/>.</para>
            </value>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
            <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData.Name"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings.KeyAlgorithmPairStorageProviderData">
            <summary>
            <para>Gets or sets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings.KeyAlgorithmPairStorageProviderData"/> for encrypting sections.</para>
            </summary>
            <value>
            <para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings.KeyAlgorithmPairStorageProviderData"/> for encrypting sections.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>keyAlgorithmStorageProvider</c> attribute in configuration for the configuration.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings.XmlIncludeTypes">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeDataCollection"/>.</para>
            </summary>
            <value>
            <para>The include types available in configuration. The default is an empty collection.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>includeTypes</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher">
            <summary>
            <para>Represents an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.IConfigurationChangeWatcher"/> that watches a file.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.IConfigurationChangeWatcher">
            <summary>
            <para>Provides a way to watch for changes to configuration in storage.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.IConfigurationChangeWatcher.StartWatching">
            <summary>
            When implemented by a subclass, starts the object watching for configuration changes
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.IConfigurationChangeWatcher.StopWatching">
            <summary>
            When implemented by a subclass, stops the object from watching for configuration changes
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.IConfigurationChangeWatcher.ConfigurationChanged">
            <summary>
            Event raised when the underlying persistence mechanism for configuration notices that
            the persistent representation of configuration information has changed.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.IConfigurationChangeWatcher.SectionName">
            <summary>
            When implemented by a subclass, returns the section name that is being watched.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher.#ctor">
            <summary>
            <para>Initialize a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher"/> class</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher.Finalize">
            <summary>
            <para>Allows an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher"/> to attempt to free resources and perform other cleanup operations before the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher"/> is reclaimed by garbage collection.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher.StartWatching">
            <summary>
            <para>Starts watching the configuration file.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher.StopWatching">
            <summary>
            <para>Stops watching the configuration file.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher.Dispose">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher"/> and optionally releases the managed resources.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher.Disposing(System.Boolean)">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher"/> and optionally releases the managed resources.</para>
            </summary>
            <param name="isDisposing">
            <para><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher.OnConfigurationChanged">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher.ConfigurationChanged"/> event.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher.GetCurrentLastWriteTime">
            <summary>
            <para>Returns the <see cref="T:System.DateTime"/> of the last change of the information watched</para>
            </summary>
            <returns>The <see cref="T:System.DateTime"/> of the last modificaiton, or <code>DateTime.MinValue</code> if the information can't be retrieved</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher.BuildThreadName">
            <summary>
            Returns the string that should be assigned to the thread used by the watcher
            </summary>
            <returns>The name for the thread</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher.BuildEventData">
            <summary>
            Builds the change event data, in a suitable way for the specific watcher implementation
            </summary>
            <returns>The change event information</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher.GetEventSourceName">
            <summary>
            Returns the source name to use when logging events
            </summary>
            <returns>The event source name</returns>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher.ConfigurationChanged">
            <summary>
            Event raised when the underlying persistence mechanism for configuration notices that
            the persistent representation of configuration information has changed.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeWatcher.SectionName">
            <summary>
            <para>Gets the name of the configuration section being watched.</para>
            </summary>
            <value>
            <para>The name of the configuration section being watched.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.RuntimeConfigurationView">
            <summary>
            <para>Represents a view of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings"/>.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView">
            <summary>
            <para>Represents a view into configuration data.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView"/> with a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView.ConfigurationContext"/>.</para>
            </summary>
            <param name="context">
            <para>A <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView.ConfigurationContext"/> object.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView.ConfigurationContext">
            <summary>
            <para>Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView.ConfigurationContext"/> for the current view.</para>
            </summary>
            <value>
            <para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView.ConfigurationContext"/> for the current view.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.RuntimeConfigurationView.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.RuntimeConfigurationView"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> object.</para>
            </summary>
            <param name="context">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> object.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.RuntimeConfigurationView.GetTransformerProviderData(System.String)">
            <summary>
            <para>Retrieves the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> for the section.</para>
            </summary>
            <param name="sectionName">
            <para>The name of the section to get the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/></para>
            </param>
            <returns>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> for the section.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.RuntimeConfigurationView.GetConfigurationSettings">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings"/>.</para>
            </summary>
            <returns>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.RuntimeConfigurationView.GetXmlIncludeTypes(System.String)">
            <summary>
            <para>Gets the types used in the <see cref="T:System.Xml.Serialization.XmlSerializer"/> for the section.</para>
            </summary>
            <param name="sectionName">
            <para>The name of the section for the include types.</para>
            </param>
            <returns>
            <para>An array of types to use in the <see cref="T:System.Xml.Serialization.XmlSerializer"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.RuntimeConfigurationView.CollectTypes(Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeDataCollection)">
            <devdoc>
            Full demand needed to protect Type.GetType. LinkDemand insufficient because that only
            checks permissions of calling code, which would be GetXmlIncludeTypes, which has full 
            trust
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.RuntimeConfigurationView.GetStorageProviderData(System.String)">
            <summary>
            <para>Retrieves the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> for the section.</para>
            </summary>
            <param name="sectionName">
            <para>The name of the section to get the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/></para>
            </param>
            <returns>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> for the section.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.RuntimeConfigurationView.GetConfigurationProtector(System.String)">
            <summary>
            <para>Retrieves the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector"/> for the section.</para>
            </summary>
            <param name="sectionName">
            <para>The name of the section to get the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector"/></para>
            </param>
            <returns>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector"/> for the section.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.RuntimeConfigurationView.GetKeyAlgorithmPairStorageProviderData">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.KeyAlgorithmPairStorageProviderData"/> for the configuration.</para>
            </summary>
            <returns>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.KeyAlgorithmPairStorageProviderData"/> for the configuration.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.RuntimeConfigurationView.ConfigurationFile">
            <summary>
            <para>Gets the configuration file containing the configuration meta-data.</para>
            </summary>
            <value>
            <para>The configuration file containing the configuration meta-data.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem">
            <summary>
            <para>The name value pair used in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem.#ctor(System.String,System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/> class with a name and value.</para>
            </summary>
            <param name="name">
            <para>
            <para>The name of the item.</para>
            </para>
            </param>
            <param name="value">
            <para>The value of the item.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem.ToString">
            <summary>
            <para>Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/>.</para>
            </summary>
            <returns>
            <para>The <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem.Name"/> of the item.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem.Name">
            <summary>
            <para>Gets or sets the name of the item.</para>
            </summary>
            <value>
            <para>The name of the item.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem.Value">
            <summary>
            <para>Gets or sets the value of the item.</para>
            </summary>
            <value>
            <para>The value of the item.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettingsLoader">
            <devdoc>
            Reads the "enterpriselibrary.configurationSettings" section of the configuration file. 
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettingsLoader.GetTypes(System.Xml.XPath.XPathNavigator)">
            <devdoc>
            Full demand needed to protect Type.GetType. LinkDemand insufficient because that only
            checks permissions of calling code, which would be Create, which has full 
            trust
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager">
            <summary>
            <para>
            Provides a facade to configuration settings from defined storage in a specified configuration section. 
            </para>
            </summary> 
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.GetConfiguration(System.String)">
            <summary>
            <para>
            Returns configuration settings for a user-defined configuration section.
            </para>
            </summary>
            <param name="sectionName">
            <para>The configuration section to read.</para>
            </param>
            <returns>
            <para>The configuration settings for <paramref name="sectionName"/>.</para>
            </returns>
            <remarks>
            <para>Once a section is read, the data for that section is cached and it will always return the same data.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.WriteConfiguration(System.String,System.Object)">
            <summary>
            <para>
            Write configuration for a section to storage.
            </para>
            </summary>
            <param name="sectionName">
            <para>The name of the section for the configuration data.</para>
            </param>
            <param name="configValue">
            <para>The configuration value to store.</para>
            </param>
            <exception cref="T:System.Configuration.ConfigurationException">
            <para><paramref name="sectionName"/> is not valid section for this configuration.</para>
            <para>- or -</para>
            <para>The section data is read only.</para>
            <para>- or -</para>
            <para>An error occured while reading the configuration to save the data.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.GetCurrentContext">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> for the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager"/>.</para>
            </summary>
            <returns><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> object.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.CreateContext(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary)">
            <summary>
            <para>Creates a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> class with the specified <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary"/>.</para>
            </summary>
            <param name="dictionary"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary"/>.</para></param>
            <returns>
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> object.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.CreateContext">
            <summary>
            <para>Creates a new instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> object.</para>
            </summary>
            <returns>
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> object.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.CreateContext(System.String)">
            <summary>
            <para>Creates a new instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> object for the given <paraname ref="configurationFile"/>.</para>
            </summary>
            <param name="configurationFile">
            <para>The configuration file that contains the meta configuration.</para>
            </param>
            <returns>
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> object.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.ClearSingletonSectionCache(System.String)">
            <summary>
            <para>Removes a section from the internal cache.</para>
            </summary>
            <param name="section">
            <para>The section name to remove.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.ClearSingletonSectionCache">
            <summary>
            <para>Removes all sections from the internal cache.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.OnConfigurationChanged(System.Object,Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangedEventArgs)">
            <devdoc>
            Raises the ConfigurationChanged event.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.OnConfigurationChanging(System.Object,Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangingEventArgs)">
            <devdoc>
            Raises the ConfigurationChanging event.
            </devdoc>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.ConfigurationChanging">
            <summary>
            <para>Occurs before configuration is changed.</para>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.ConfigurationChanged">
            <summary>
            <para>Occurs after configuration is changed.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.Current">
            <devdoc>
            The singleton instance to use with static methods.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData">
            <summary>
            Configuration settings for any DPAPI implementation.
            </summary>
            <remarks>
            See 
            <a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnsecure/html/windataprotection-dpapi.asp">Windows Data Protection</a> on
            MSDN for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData.#ctor">
            <summary>
            <para>Initialize a new instnace of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData.#ctor(System.Byte[],Microsoft.Practices.EnterpriseLibrary.Common.Cryptography.DpapiStorageMode)">
            <summary>
            <para>Initialize a new instnace of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData"/> class with entropy and a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Cryptography.DpapiStorageMode"/>.</para>
            </summary>
            <param name="entropy">
            <para>The machine entropy</para>
            </param>
            <param name="mode">
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Cryptography.DpapiStorageMode"/> values.</para>
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para>The value provided was out of the excepted valid ranges for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Cryptography.DpapiStorageMode"/>.</para>
            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData.Mode">
            <summary>
            <para>Gets or sets the DPAPI storage mode.</para>
            </summary>
            <value>
            <para>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Cryptography.DpapiStorageMode"/> values.</para>
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para>The value provided was out of the excepted valid ranges for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Cryptography.DpapiStorageMode"/>.</para>
            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData.Entropy">
            <summary>
            <para>Gets or sets the machine entropy.</para>
            </summary>
            <value>
            <para>The machine entropy.</para>
            </value>
            <remarks>
            <para>This is only required when the mode is set to <seealso cref="F:Microsoft.Practices.EnterpriseLibrary.Common.Cryptography.DpapiStorageMode.Machine"/>.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData">
            <summary>
            <para>Represents a configuration section in configuration.</para>
            </summary>
            <remarks>
            <para>The class maps to the <c>configurationSection</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData.#ctor(System.String)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> class with a name.</para>
            </summary>
            <param name="name">
            <para>The name of the section.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData.#ctor(System.String,System.Boolean)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> class with a name.</para>
            </summary>
            <param name="name">
            <para>The name of the section.</para>
            </param>
            <param name="encrypt">
            <para>Determines if the section is encrypted or not.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData.#ctor(System.String,System.Boolean,Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData,Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> class with a name, a cache, a storage provider, a data protection provider and a data transformer.</para>
            </summary>
            <param name="name">
            <para>The name of the section.</para>
            </param>
            <param name="encrypt">
            <para>Determines if the section is encrypted or not.</para>
            </param>
            <param name="storageProvider">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> used for the configuration section.</para>
            </param>        
            <param name="transformer">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> used for the section.</para>
            </param>                
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/>        
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData.StorageProvider">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> settings for the section.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> settings for the section. The default is <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </value>
            <remarks>
            <para>This property maps to the <c>storageProvider</c> attribute in configuration for the configuration section.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData.Transformer">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> settings for the section.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> settings for the section. The default is <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </value>
            <remarks>
            <para>This property maps to the <c>dataTransformer</c> attribute in configuration for the configuration section.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData.Name">
            <summary>
            <para>Gets or sets the name of the configuration section.</para>
            </summary>
            <value>
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/>. The default is an empty string.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>name</c> attribute in configuration for the configuration section.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData.Encrypt">
            <summary>
            <para>Gets or sets if the section will be encrypted.</para>
            </summary>
            <value>
            <para><see langword="true"/> if the section will be encrypted; otherwise, <see langword="false"/>. The deafult is <see langword="false"/>.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>encrypt</c> attribute in configuration for the configuration section.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.AppConfigFileStorageProviderData">
            <summary>
            <para>Represents a storage provider to read and write data to an <see cref="T:System.AppDomain"/> configuration file.</para>
            </summary>    	
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.AppConfigFileStorageProviderData.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.AppConfigFileStorageProviderData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.AppConfigFileStorageProviderData.#ctor(System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.AppConfigFileStorageProviderData"/> class with a name.</para>
            </summary>
            <param name="name">
            <para>The name of the provider.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.AppConfigFileStorageProviderData.Clone">
            <summary>
            <para>Creates a new object that is a copy of the current instance.</para>
            </summary>
            <returns>
            <para>A new object that is a copy of this instance.</para>
            </returns>
            <remarks>
            <para>This clone does a deep copy.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.AppConfigFileStorageProviderData.ConfigurationFile">
            <summary>
            <para>Gets the current <see cref="T:System.AppDomain"/> configuraiton file.</para>
            </summary>
            <value>
            <para>The current <see cref="T:System.AppDomain"/> configuraiton file.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.AppConfigFileStorageProviderData.TypeName">
            <summary>
            <para>Gets the fully qualified assembly name for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.XmlFileStorageProvider"/>.</para>
            </summary>
            <value>
            <para>The fully qualified assembly name for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.XmlFileStorageProvider"/>.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider">
            <summary>
            <para>
            Represents a storage provider for configuration data that saves the configuration data to the registry.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider.CreateConfigurationChangeWatcher">
            <summary>
            <para>Creates a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangedRegistryWatcher"/> for this configuration storage.</para>
            </summary>
            <returns>
            <para>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangedRegistryWatcher"/> instance.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView)">
            <summary>
            <para>Initializes this provider to the correct state and context used by the factory creating it.</para>
            </summary>
            <param name="configurationView">
            <para>The cursor to use to get the data specific for the transformer.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider.Read">
            <summary>
            <para>Reads the configuration from storage. The data will come back as an <see cref="T:System.Xml.XmlNode"/>.</para>
            </summary>        
            <returns>
            <para>The configuration data for the section.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider.Write(System.Object)">
            <summary>
            Writes the configuration data to storage.
            </summary>
            <param name="value">
            <para>The value to write to storage. The type must be <see cref="T:System.Xml.XmlNode"/></para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProjectInstaller">
            <summary>
            Installer for configuration event sources. This class is not meant to be used by any callers.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProjectInstaller.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProjectInstaller"></see>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProjectInstaller.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if called from Dispose, false if called from finalizer</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Transformer.XmlSerializerTransformer">
            <summary>
            <para>Represents a specific configuration data builder for building Xml serializable objects.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerProvider">
            <summary>
            <para>Represents an object that transforms configuration data from storage.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ITransformer">
            <summary>
            <para>
            Represents a standard interface for transforming configuration data coming from and to storage.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ITransformer.Deserialize(System.Object)">
            <summary>
            <para>
            When implemented by a class, deserializes the configuration data coming from storage.
            </para>
            </summary>
            <param name="section">
            <para>The data that came from storage.</para>
            </param>
            <returns>
            <para>An object that can be consumed by the calling assembly that wants configuration data.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ITransformer.Serialize(System.Object)">
            <summary>
            <para>
            When implemented by a class, serializes the configuration data coming from the calling assembly and maps it into something that the storage provider can understand.
            </para>
            </summary>
            <param name="value">
            <para>The data to serialize.</para>
            </param>
            <returns>
            <para>The object that can be consumed by the storage provider.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ITransformer.CurrentSectionName">
            <summary>
            <para>Gets the name of the configuration section.</para>
            </summary>
            <value>
            <para>The name of the configuration section.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerProvider.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerProvider"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerProvider.Deserialize(System.Object)">
            <summary>
            <para>When overriden by a class, deserializes the configuration section data.</para>
            </summary>
            <param name="section">
            <para>The configuration section data.</para>
            </param>
            <returns>
            <para>The deserialized object.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerProvider.Serialize(System.Object)">
            <summary>
            <para>When overriden by a class, serialzies the configuration data so it can be saved to storage.</para>
            </summary>
            <param name="value">
            <para>The configuration data to serialzie.</para>
            </param>
            <returns>
            <para>The serailzied object.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerProvider.CurrentSectionName">
            <summary>
            <para>Gets the name of the configuration section.</para>
            </summary>
            <value>
            <para>The name of the configuration section.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Transformer.XmlSerializerTransformer.#ctor">
            <summary>
            <para>
            Intialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Transformer.XmlSerializerTransformer"/> class. 
            </para>
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlSerializerTransformerData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Transformer.XmlSerializerTransformer.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView)">
            <summary>
            <para>Initializes this provider to the correct state and context used by the factory creating it.</para>
            </summary>
            <param name="configurationView">
            <para>The cursor to use to get the data specific for the transformer.</para>
            </param>
            <exception cref="T:System.ArgumentException">
            <para><paramref name="configurationView"/> must be of type <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.RuntimeConfigurationView"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="configurationView"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Transformer.XmlSerializerTransformer.GetTypes">
            <summary>
            <para>Gets the types to use when serializing and deserializing objects to Xml.</para>
            </summary>
            <returns><para>The types to use when serializing and deserializing objects to Xml.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Transformer.XmlSerializerTransformer.Deserialize(System.Object)">
            <summary>
            <para>
            Deserializes the configuration data coming from storage.
            </para>
            </summary>
            <param name="section">
            <para>The data that came from storage.</para>
            </param>
            <returns>
            <para>An object that can be consumed by the calling assembly that wants configuration data.</para>
            </returns>		
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="section"/> can not be <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.Configuration.ConfigurationException">
            <para>The type could not be read from the serialized object.</para>
            <para>- or -</para>
            <para>The 'xmlSerializationSection' could not be read from the given Xml.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Transformer.XmlSerializerTransformer.Serialize(System.Object)">
            <summary>
            <para>
            Serializes the configuration data coming from the calling assembly and maps it into something that the storage provider can understand.
            </para>
            </summary>
            <param name="value">
            <para>The data to serialize.</para>
            </param>
            <returns>
            <para>The object that can be consumed by the storage provider.</para>
            </returns>
            <exception cref="T:System.Xml.XmlException">
            <para>There is a load or parse error in the XML. In this case, the document remains empty.</para>
            </exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.SqlStorageProvider">
            <summary>
            <para>
            Represents a storage provider for configuration data that saves the configuration data to a SQL Server database instance.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.SqlStorageProvider.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.SqlStorageProvider"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.SqlStorageProvider.CreateConfigurationChangeWatcher">
            <summary>
            <para>Creates a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeSqlWatcher"/> for this configuration storage.</para>
            </summary>
            <returns>
            <para>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeSqlWatcher"/> instance.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.SqlStorageProvider.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView)">
            <summary>
            <para>Initializes this provider to the correct state and context used by the factory creating it.</para>
            </summary>
            <param name="configurationView">
            <para>The cursor to use to get the data specific for the transformer.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.SqlStorageProvider.Read">
            <summary>
            <para>Reads the configuration from storage. The data will come back as an <see cref="T:System.Xml.XmlNode"/>.</para>
            </summary>        
            <returns>
            <para>The configuration data for the section.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.SqlStorageProvider.Write(System.Object)">
            <summary>
            Writes the configuration data to storage.
            </summary>
            <param name="value">
            <para>The value to write to storage. The type must be <see cref="T:System.Xml.XmlNode"/></para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.SymmetricAlgorithmKeyCreator">
            <summary>
            <para>Creates keys for a <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/>.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyCreator">
            <summary>
            <para>Represents the creator of keys for security algorithms.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyCreator.GenerateKey">
            <summary>
            <para>When implemented by a class, generates a random key.</para>
            </summary>
            <returns><para>A random key.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyCreator.KeyIsValid(System.Byte[])">
            <summary>
            <para>When implemented by a class, determines if the <paramref name="key"/> is valid.</para>
            </summary>
            <param name="key">The key to test.</param>
            <returns><para><see langword="true"/> if the key is valid; otherwise <see langword="false"/>.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.IKeyCreator.KeyLength">
            <summary>
            <para>When implemented by a class, gets the length of the key.</para>
            </summary>
            <value>The length of the key.</value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.SymmetricAlgorithmKeyCreator.#ctor(System.String)">
            <summary>
            <para>Initializes an instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.SymmetricAlgorithmKeyCreator"/> class for a specific <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/>.</para>
            </summary>
            <param name="symmetricAlgorithmName">The assembly qualified name of a class which derives from a <see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.SymmetricAlgorithmKeyCreator.GenerateKey">
            <summary>
            <para>Generates a random key.</para>
            </summary>
            <returns><para>A random key.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.SymmetricAlgorithmKeyCreator.KeyIsValid(System.Byte[])">
            <summary>
            <para>Determines if the <paramref name="key"/> is valid.</para>
            </summary>
            <param name="key">The key to test.</param>
            <returns><para><see langword="true"/> if the key is valid; otherwise <see langword="false"/>.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.SymmetricAlgorithmKeyCreator.KeyLength">
            <summary>
            <para>Gets the length of the key.</para>
            </summary>
            <value>The length of the key.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NullConfigurationChangeWatcher">
            <summary>
            <para>Represents an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.IConfigurationChangeWatcher"/> that does nothing.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NullConfigurationChangeWatcher.#ctor(System.String)">
            <summary>
            <para>Initialize a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NullConfigurationChangeWatcher"/> class with the name of the section</para>
            </summary>
            <param name="configurationSectionName">
            <para>The name of the configuration section to watch.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NullConfigurationChangeWatcher.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NullConfigurationChangeWatcher.StartWatching">
            <summary>
            <para>Starts watching for configuration changes.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NullConfigurationChangeWatcher.StopWatching">
            <summary>
            <para>Stops watching for configuration changes.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.NullConfigurationChangeWatcher.SectionName">
            <summary>
            <para>Gets the name of the configuration section being watched.</para>
            </summary>
            <value>
            <para>The name of the configuration section being watched.</para>
            </value>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.NullConfigurationChangeWatcher.ConfigurationChanged">
            <summary>
            <para>Event raised when the underlying persistence mechanism for configuration notices that the persistent representation of configuration information has changed.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext">
            <summary>
            Represents a read-only set of configuration data
            indexed by configuration section name.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.IDisposableWrapper)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> class with the specified <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager"/></para>
            </summary>
            <param name="disposableWrapper">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.IDisposableWrapper"/> used to create the context.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.#ctor(System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> class from a configuration file.</para>
            </summary>
            <param name="configurationFile">
            <para>The configuration file containing the meta data.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> class with the specified <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary"/>.</para>
            </summary>
            <param name="dictionary">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationDictionary"/> to intialize the context.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.Finalize">
            <summary>
            <para>Allows the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> to attempt to free resources and perform other cleanup operations before the Object is reclaimed by garbage collection.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.Dispose">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> and optionally releases the managed resources.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.Dispose(System.Boolean)">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> and optionally releases the managed resources.</para>
            </summary>
            <param name="disposing">
            <para><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.GetConfiguration(System.String)">
            <summary>
            <para>
            Gets the configuration settings for a configuration section.
            </para>
            </summary>
            <param name="sectionName">
            <para>The configuration section to read.</para>
            </param>
            <returns>
            <para>The configuration settings for <paramref name="sectionName"/>.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.GetMetaConfiguration">
            <summary>
            <para>
            Gets the meta configuration for the configuration manager.
            </para>
            </summary>
            <returns>
            <para>
            The meta configuration for the configuration manager or null if no entries exists.
            </para>
            </returns>
            <exception cref="T:System.Configuration.ConfigurationException">
            <para>An error occured while reading the meta configuration.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.GetMetaConfiguration(System.String)">
            <summary>
            <para>
            Gets the meta configuration for the configuration manager.
            </para>
            </summary>
            <param name="sectionName">
            <para>The name of the configuration section to retrieve.    </para>
            </param>
            <returns>
            <para>
            The meta configuration for the configuration manager or null if no entries exists.
            </para>
            </returns>
            <exception cref="T:System.Configuration.ConfigurationException">
            <para>An error occured while reading the meta configuration.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.WriteMetaConfiguration(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings)">
            <summary>
            <para>
            Write the meta configuration for the configuration manager to the configuration file.
            </para>
            </summary>
            <param name="configurationSettings">
            The meta configuration to write to configuration.
            </param>
            <exception cref="T:System.Configuration.ConfigurationException">
            <para>An error occured while reading the configuration to save the data.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.WriteMetaConfiguration(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData)">
            <summary>
            <para>
            Write the meta configuration for the configuration manager to the configuration file.
            </para>
            </summary>
            <param name="configurationSectionData">
            The meta configuration to write to configuration.
            </param>
            <exception cref="T:System.Configuration.ConfigurationException">
            <para>An error occured while reading the configuration to save the data.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <para>The configuration section already exists.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.WriteConfiguration(System.String,System.Object)">
            <summary>
            <para>
            Write configuration for a section to storage.
            </para>
            </summary>
            <param name="sectionName">
            <para>The name of the section for the configuration data.</para>
            </param>
            <param name="configValue">
            <para>The configuration value to store.</para>
            </param>
            <exception cref="T:System.Configuration.ConfigurationException">
            <para><paramref name="sectionName"/> is not valid section for this configuration.</para>
            <para>- or -</para>
            <para>The section data is read only.</para>
            <para>- or -</para>
            <para>An error occured while reading the configuration to save the data.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.ClearSectionCache">
            <summary>
            <para>Removes all sections from the internal cache.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.ClearSectionCache(System.String)">
            <summary>
            <para>Removes a section from the internal cache.</para>
            </summary>
            <param name="sectionName">
            <para>The section name to remove.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.IsValidSection(System.String)">
            <summary>
            <para>Determines if a section name is valid in the current configuration file.</para>
            </summary>
            <param name="sectionName">
            <para>The name of the section to validate.</para>
            </param>
            <returns><see langword="true"/> if the section name is valid; otherwise, <see langword="false"/></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.IsReadOnly(System.String)">
            <summary>
            <para>
            Gets a value indicating whether a section in configuration is read-only.
            </para>
            </summary>
            <param name="sectionName">
            <para>
            The section in the configuration.
            </para>
            </param>
            <returns>
            <see langword="true"/> if the configuration section is read-only; otherwise <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="sectionName"/> can not be <see langword="null"/>.</para>
            </exception>		
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.ConfigurationChanging">
            <summary>
            <para>Occurs before configuration is changed.</para>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.ConfigurationChanged">
            <summary>
            <para>Occurs after configuration is changed.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.ConfigurationFile">
            <summary>
            <para>Gets the configuration file used by the current context where the meta data is stored.</para>
            </summary>
            <value>
            <para>The configuration file used by the current context where the meta data is stored.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.TransformerDataCollection">
            <summary>
            <para>Represents a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> objects in configuration.</para>
            </summary>       
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderDataCollection">
            <summary>
            <para>Represents a strongly-typed collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData"/> objects.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderDataCollection.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderDataCollection"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderDataCollection.GetProvider(System.String)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData"/> associated with the specified <paramref name="name"/>.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData"/> to get or set.</para>
            </param>
            <returns>
            <para>The value associated with the specified <paramref name="name"/>. If the specified <paramref name="name"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="name"/>.</para>
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderDataCollection.GetProvider(System.Int32)">
            <summary>
            <para>Gets the value of the entry at the specified index of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderDataCollection"/> instance.</para>
            </summary>
            <param name="index">
            <para>The zero-based index of the value to get.</para>
            </param>
            <returns>
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData"/> object that represents the value of the entry at the specified index.</para>
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is outside the valid range of indexes for the collection.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderDataCollection.SetProvider(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData)">
            <summary>
            <para>Sets the value of the first entry with the specified key in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderDataCollection"/> instance, if found; otherwise, adds an entry with the specified key and value into the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.DataCollection"/> instance.</para>
            </summary>
            <param name="name">
            <para>The string key of the entry to set. The key can be a <see langword="null"/> reference (<see langword="Nothing"/> in Visual Basic)</para>.
            </param>
            <param name="data">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData"/> object that represents the new value of the entry to set. The value can be a <see langword="null"/> reference (<see langword="Nothing"/> in Visual Basic).</para>
            </param>
            <exception cref="T:System.InvalidOperationException">
            <para>The collection already contains an entry for <paramref name="name"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The collection is read-only.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderDataCollection.SetProvider(System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData)">
            <summary>
            <para>Sets the value of the entry at the specified index of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderDataCollection"/> instance.</para>
            </summary>
            <param name="index">
            <para>The zero-based index of the entry to set.</para>
            </param>
            <param name="data">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData"/> object that represents the new value of the entry to set. The value can be a <see langword="null"/> reference (<see langword="Nothing"/> in Visual Basic).</para>
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The collection is read-only.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is outside the valid range of indexes for the collection.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderDataCollection.AddProvider(Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData)">
            <summary>
            <para>Adds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData"/> into the collection.</para>
            </summary>
            <param name="providerData">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData"/> to add. The value can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <remarks>
            <para>If a reference already exists in the collection by <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/>, it will be replaced with the new reference.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="providerData"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <para><seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderDataCollection.AddProvider(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData)">
            <summary>
            <para>Adds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData"/> into the collection.</para>
            </summary>
            <param name="name">
            <para>The name of the key for the <parmref name="providerData"/>. The value can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <param name="providerData">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData"/> to add. The value can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <remarks>
            <para>If a reference already exists in the collection by <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/>, it will be replaced with the new reference.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><paramref name="providerData"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderDataCollection.AddProviders(Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderDataCollection)">
            <summary>
            Adds the items in the specified collection to the current collection.
            </summary>
            <param name="collection">A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderDataCollection"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.TransformerDataCollection.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.TransformerDataCollection"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.TransformerDataCollection.Add(Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData)">
            <summary>
            <para>Adds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> into the collection.</para>
            </summary>
            <param name="transformerData">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> to add. The value can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <remarks>
            <para>If a reference already exists in the collection by <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/>, it will be replaced with the new reference.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="transformerData"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <para><seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.TransformerDataCollection.CopyTo(Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData[],System.Int32)">
            <summary>
            <para>Copies the entire <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.TransformerDataCollection"/> to a compatible one-dimensional <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> array, starting at the specified index of the target array.</para>
            </summary>
            <param name="array">
            <para>The one-dimensional <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> array that is the destination of the elements copied from <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.TransformerDataCollection"/>. The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> array must have zero-based indexing.</para>
            </param>
            <param name="index">
            <para>The zero-based index in array at which copying begins.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.TransformerDataCollection.Item(System.Int32)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> at the specified <paramref name="index"/>.</para>
            </summary>
            <param name="index">
            <para>The index of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="index"/>. If the specified <paramref name="index"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="index"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.TransformerDataCollection.Item(System.String)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> associated with the specified <paramref name="name"/>.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="name"/>. If the specified <paramref name="name"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="name"/>.</para>
            </value>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomTransformerData">
            <summary>
            <para>Represents a custom data transformer for configuration data in configuration.</para>
            </summary>
            <remarks>
            <para>The class maps to the <c>dataTransformer</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomTransformerData.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomTransformerData"/> class..</para>
            </summary>  
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomTransformerData.#ctor(System.String)">
            <summary>
            Initialize a new instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomTransformerData"/> class.
            </summary>
            <param name="name">
            The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomTransformerData"/>.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomTransformerData.#ctor(System.String,System.String)">
            <summary>
            Initialize a new instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomTransformerData"/> class.
            </summary>
            <param name="name">
            The name of the custom handler.
            </param>
            <param name="typeName">
            The type of the custom handler.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomTransformerData.Clone">
            <summary>
            <para>Creates a deep copy of the current instance.</para>
            </summary>
            <returns>
            <para>A deep copy of this instance.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomTransformerData.TypeName">
            <summary>
            <para>Gets or sets the <see cref="T:System.Type"/> name of the provider.</para>
            </summary>
            <remarks>
            <value>
            <para>The type name of the provider. The default is an empty string.</para>
            </value>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomTransformerData.Attributes">
            <summary>
            Gets or sets custom configuration attributes.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.XmlFileStorageProvider">
            <summary>
            <para>
            Represents a storage provider writer for configuration data that saves the configuration data to an external XML file.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.XmlFileStorageProvider.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.XmlFileStorageProvider"/> class.</para>
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlFileStorageProviderData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.XmlFileStorageProvider.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView)">
            <summary>
            <para>Initializes this provider to the correct state and context used by the factory creating it.</para>
            </summary>
            <param name="configurationView">
            <para>The cursor to use to get the data specific for the transformer.</para>
            </param>
            <exception cref="T:System.ArgumentException">
            <para><paramref name="configurationView"/> must be of type <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.RuntimeConfigurationView"/>.</para>
            <para>- or -</para>
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> from the cursor should be of type <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlFileStorageProviderData"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="configurationView"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.XmlFileStorageProvider.CreateConfigurationChangeWatcher">
            <summary>
            <para>Creates a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher"/> for this configuration storage.</para>
            </summary>
            <returns>
            <para>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher"/> instance.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.XmlFileStorageProvider.Read">
            <summary>
            <para>Reads the configuration from storage. The data will come back as an <see cref="T:System.Xml.XmlNode"/>.</para>
            </summary>        
            <returns>
            <para>The configuration data for the section.</para>
            </returns>
            <exception cref="T:System.Configuration.ConfigurationException">
            <para>The signature check has failed for the section.</para>
            <para>- or -</para>
            <para>The data in the section could not be decrypted.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.XmlFileStorageProvider.Write(System.Object)">
            <summary>
            Writes the configuration data to storage.
            </summary>
            <param name="value">
            <para>The value to write to storage. The type must be <see cref="T:System.Xml.XmlNode"/></para>
            </param>
            <exception cref="T:System.Configuration.ConfigurationException">        
            <para>The data in the section could not be encrypted.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.XmlFileStorageProvider.LoadXmlFile(System.String)">
            <devdoc>
            Load the xml file storage.
            </devdoc>        
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.XmlFileStorageProvider.SetApplicationDocumentPathSetting(Microsoft.Practices.EnterpriseLibrary.Configuration.XmlFileStorageProviderData)">
            <devdoc>
            If no path is specified for the configuration file the default is to use the application configuration file.
            </devdoc>        
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.XmlFileStorageProvider.XmlFileName">
            <summary>
            <para>Gets the name of the Xml file used as storage.</para>
            </summary>
            <value>
            <para>The name of the Xml file used as storage.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationRegistryChangingEventArgs">
            <summary>
            <para>Provides data for the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.ConfigurationChanging"/> and <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.ConfigurationChanging"/> event which occur after configuration is changed and committed to storage for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider"/>.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangingEventArgs">
            <summary>
            <para>Provides data for the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.ConfigurationChanging"/> and <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.ConfigurationChanging"/> event which occur after configuration is changed and committed to storage.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangingEventArgs.#ctor(System.String,System.String,System.Object,System.Object)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangingEventArgs"/> class with the configuration file, the section name, the old value, and the new value of the changes.</para>
            </summary>
            <param name="configurationFile"><para>The configuration file where the change occured.</para></param>
            <param name="sectionName"><para>The section name of the changes.</para></param>
            <param name="oldValue"><para>The old value.</para></param>
            <param name="newValue"><para>The new value.</para></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangingEventArgs.OldValue">
            <summary>
            <para>Gets the old value.</para>
            </summary>
            <value>
            <para>The old value.</para>
            </value>
            <remarks>
            <value>If no old value existed this value will be <see langword="null"/>.</value>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangingEventArgs.NewValue">
            <summary>
            <para>Gets the new value.</para>
            </summary>
            <value>
            <para>The new value.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangingEventArgs.Cancel">
            <summary>
            <para>Determines if the changes should be cancled.</para>
            </summary>
            <value>
            <para><see langword="true"/> if the changes should be cancled; otherwise, <see langword="false"/>.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationRegistryChangingEventArgs.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AllowedRegistryHive,System.String,System.String,System.Object,System.Object)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationRegistryChangedEventArgs"/> class with the root <see cref="T:Microsoft.Win32.RegistryHive"/> and the registry sub key where the configuration data is stored, the configuration section name for this data, the old value and the new value.</para>
            </summary>
            <param name="registryRoot">
            <para>The root <see cref="T:Microsoft.Win32.RegistryHive"/>.</para>
            </param>
            <param name="registrySubKey">
            <para>The registry sub key where the configuration data is stored.</para>
            </param>
            <param name="sectionName">
            <para>The name of the configuration section.</para>
            </param>
            <param name="oldValue"><para>The old value.</para></param>
            <param name="newValue"><para>The new value.</para></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationRegistryChangingEventArgs.RegistryRoot">
            <summary>
            <para>Gets the root <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AllowedRegistryHive"/> for the configuration data.</para>
            </summary>
            <value>
            <para>The root <see cref="T:Microsoft.Win32.RegistryHive"/> for the configuration data.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationRegistryChangingEventArgs.RegistrySubKey">
            <summary>
            <para>Gets the registry sub key where the configuration data is stored.</para>
            </summary>
            <value>
            <para>The registry sub key where the configuration data is stored.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangedRegistryWatcher">
            <summary>
            <para>Represents a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.IConfigurationChangeWatcher"/> for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangedRegistryWatcher.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AllowedRegistryHive,System.String,System.String)">
            <summary>
            <para>Initialize an instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangedRegistryWatcher"/> class with the <see cref="T:Microsoft.Win32.RegistryHive"/>, the sub key, and the name of the section.</para>
            </summary>
            <param name="configRegRoot">The root <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AllowedRegistryHive"/>.</param>
            <param name="configRegSubKey">The sub key where the configuration data is stored.</param>
            <param name="configurationSectionName">The configuration section name.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangedRegistryWatcher.Finalize">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher"/> and optionally releases the managed resources.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangedRegistryWatcher.StartWatching">
            <summary>
            <para>Starts watching the configuration file.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangedRegistryWatcher.StopWatching">
            <summary>
            <para>Stops watching the configuration file.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangedRegistryWatcher.Dispose">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher"/> and optionally releases the managed resources.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangedRegistryWatcher.Disposing(System.Boolean)">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher"/> and optionally releases the managed resources.</para>
            </summary>
            <param name="isDisposing">
            <para><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangedRegistryWatcher.OnConfigurationChanged">
            <summary>
            <para>Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangedRegistryWatcher.ConfigurationChanged"/> event.</para>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangedRegistryWatcher.ConfigurationChanged">
            <summary>
            Event raised when the underlying persistence mechanism for configuration notices that
            the persistent representation of configuration information has changed.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangedRegistryWatcher.SectionName">
            <summary>
            <para>Gets the name of the configuration section being watched.</para>
            </summary>
            <value>
            <para>The name of the configuration section being watched.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.StorageProviderDataCollection">
            <summary>
            <para>Represents a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> objects in configuration.</para>
            </summary>       
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.StorageProviderDataCollection.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.StorageProviderDataCollection"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.StorageProviderDataCollection.Add(Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData)">
            <summary>
            <para>Adds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> into the collection.</para>
            </summary>
            <param name="storageProviderData">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> to add. The value can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <remarks>
            <para>If a reference already exists in the collection by <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/>, it will be replaced with the new reference.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="storageProviderData"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <para><seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ProviderData.Name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.StorageProviderDataCollection.CopyTo(Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData[],System.Int32)">
            <summary>
            <para>Copies the entire <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.StorageProviderDataCollection"/> to a compatible one-dimensional <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> array, starting at the specified index of the target array.</para>
            </summary>
            <param name="array">
            <para>The one-dimensional <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> array that is the destination of the elements copied from <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.StorageProviderDataCollection"/>. The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> array must have zero-based indexing.</para>
            </param>
            <param name="index">
            <para>The zero-based index in array at which copying begins.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.StorageProviderDataCollection.Item(System.Int32)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> at the specified <paramref name="index"/>.</para>
            </summary>
            <param name="index">
            <para>The index of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="index"/>. If the specified <paramref name="index"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="index"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Configuration.StorageProviderDataCollection.Item(System.String)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> associated with the specified <paramref name="name"/>.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="name"/>. If the specified <paramref name="name"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="name"/>.</para>
            </value>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ReadOnlyConfigurationSectionData">
            <summary>
            <para>Represents a configuration section in configuration.</para>
            </summary>
            <remarks>
            <para>The class maps to the <c>configurationSection</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ReadOnlyConfigurationSectionData.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ReadOnlyConfigurationSectionData.#ctor(System.String)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> class with a name.</para>
            </summary>
            <param name="name">
            <para>The name of the section.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ReadOnlyConfigurationSectionData.#ctor(System.String,System.Boolean)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> class with a name.</para>
            </summary>
            <param name="name">
            <para>The name of the section.</para>
            </param>
            <param name="encrypt">
            <para>Determines if the section is encrypted or not.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ReadOnlyConfigurationSectionData.#ctor(System.String,System.Boolean,Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData,Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> class with a name, a cache, a storage provider, a data protection provider and a data transformer.</para>
            </summary>
            <param name="name">
            <para>The name of the section.</para>
            </param>
            <param name="encrypt">
            <para>Determines if the section is encrypted or not.</para>
            </param>
            <param name="storageProvider">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/> used for the configuration section.</para>
            </param>        
            <param name="transformer">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/> used for the section.</para>
            </param>                
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderData"/>        
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.TransformerData"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationRegistryChangedEventArgs">
            <summary>
            <para>Provides data for the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.ConfigurationChanged"/> and <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.ConfigurationChanged"/> event which occur before configuration is changed and committed to storage for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationRegistryChangedEventArgs.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AllowedRegistryHive,System.String,System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationRegistryChangedEventArgs"/> class with the root <see cref="T:Microsoft.Win32.RegistryHive"/> and the registry sub key where the configuration data is stored and the configuration section name for this data.</para>
            </summary>
            <param name="registryRoot">
            <para>The root <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AllowedRegistryHive"/>.</para>
            </param>
            <param name="registrySubKey">
            <para>The registry sub key where the configuration data is stored.</para>
            </param>
            <param name="sectionName">
            <para>The name of the configuration section.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationRegistryChangedEventArgs.RegistryRoot">
            <summary>
            <para>Gets the root <see cref="T:Microsoft.Win32.RegistryHive"/> for the configuration data.</para>
            </summary>
            <value>
            <para>The root <see cref="T:Microsoft.Win32.RegistryHive"/> for the configuration data.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationRegistryChangedEventArgs.RegistrySubKey">
            <summary>
            <para>Gets the registry sub key where the configuration data is stored.</para>
            </summary>
            <value>
            <para>The registry sub key where the configuration data is stored.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher">
            <summary>
            <para>Represents an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.IConfigurationChangeWatcher"/> that watches a file.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher.#ctor(System.String,System.String)">
            <summary>
            <para>Initialize a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher"/> class with the path to the configuration file and the name of the section</para>
            </summary>
            <param name="configFilePath">
            <para>The full path to the configuration file.</para>
            </param>
            <param name="configurationSectionName">
            <para>The name of the configuration section to watch.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher.Finalize">
            <summary>
            <para>Allows an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher"/> to attempt to free resources and perform other cleanup operations before the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher"/> is reclaimed by garbage collection.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher.GetCurrentLastWriteTime">
            <summary>
            <para>Returns the <see cref="T:System.DateTime"/> of the last change of the information watched</para>
            <para>The information is retrieved using the watched file modification timestamp</para>
            </summary>
            <returns>The <see cref="T:System.DateTime"/> of the last modificaiton, or <code>DateTime.MinValue</code> if the information can't be retrieved</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher.BuildThreadName">
            <summary>
            Returns the string that should be assigned to the thread used by the watcher
            </summary>
            <returns>The name for the thread</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher.BuildEventData">
            <summary>
            Builds the change event data, including the full path of the watched file
            </summary>
            <returns>The change event information</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher.GetEventSourceName">
            <summary>
            Returns the source name to use when logging events
            </summary>
            <returns>The event source name</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeFileWatcher.SectionName">
            <summary>
            <para>Gets the name of the configuration section being watched.</para>
            </summary>
            <value>
            <para>The name of the configuration section being watched.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection">
            <summary>
            <para>Represents a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/> objects.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.#ctor">
            <summary>
            <para>Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.GetNameValueItem(System.String)">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/> that is
            keyed by the specified name.
            </summary>
            <param name="name">The name of an item in the list.</param>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.Add(System.String,System.String)">
            <summary>
            Adds the specified name and value to the list.
            </summary>
            <param name="name">The name of the item.</param>
            <param name="value">The value of the item.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.Add(System.Object)">
            <summary>
            <para>Adds a value into the collection.</para>
            </summary>
            <param name="item">
            <para>The value to add. The value can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <remarks>
            <para>This method exists to support Xml Serialization.</para>
            </remarks>
            <exception cref="T:System.InvalidCastException">
            <para><paramref name="item"/> could not be cast to the correct type.</para>
            </exception>        
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.Add(Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem)">
            <summary>
            <para>Adds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/> into the collection.</para>
            </summary>
            <param name="item">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/> to add. The value can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <remarks>
            <para>If a reference already exists in the collection by <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData.Name"/>, it will be replaced with the new reference.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="item"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem.Name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.Insert(System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem)">
            <summary>
            <para>Inserts an element into the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/> at the specified index.</para>
            </summary>
            <param name="index">
            <para>The zero-based index at which value should be inserted.</para>
            </param>
            <param name="item">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/> to insert.</para>
            </param>
            <exception name="ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>- or -</para>
            <para><paramref name="index"/> is greater than <seealso cref="P:System.Collections.CollectionBase.Count"/>.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.Remove(System.String)">
            <summary>
            Removes the entry with the specified <paramref name="name"/> from the collection.
            </summary>
            <param name="name">
            <para>The name of the item to remove.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.IndexOf(Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem)">
            <summary>
            <para>Searches for the specified <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/> and returns the zero-based index of the first occurrence within the entire <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/>.</para>
            </summary>
            <param name="item">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/> to locate in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/>.</para>
            </param>
            <returns>
            <para>The zero-based index of the first occurrence of value within the entire <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/>, if found; otherwise, -1.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.Contains(Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem)">
            <summary>
            <para>Determines whether the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/> contains a specific element.</para>
            </summary>
            <param name="item">
            <para>The Object to locate in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/>.</para>
            </param>
            <returns>
            <para><see langword="true"/> if the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection"/> contains the specified value; otherwise, <see langword="false"/></para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.CopyTo(Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem[],System.Int32)">
            <summary>
            Copies the entire NameValueItem list to a 
            compatible one-dimensional array of NameValueItem entries, 
            starting at the specified index of the target array.
            </summary>
            <param name="array">An array of type NameValueItem to which 
            the access control list entries will be copied. The array 
            must have zero-based indexing. </param>
            <param name="index">The index in the array at which to 
            begin copying the NameValueItem list entries.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.OnClear">
            <summary>
            Removes the collection reference from each
            NameValueItem in the list.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.OnClearComplete">
            <summary>
            Clears all items from the dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Checks if the item already exists in the collection.
            </summary>
            <param name="index">The zero-based index at which to insert <c>value</c>.</param>
            <param name="value">The new value of the element at <c>index</c>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Inserts the specified item into the dictionary.
            </summary>
            <param name="index">The index of the item in the list.</param>
            <param name="value">The value of the item to add to the list.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Removes the item at the specified index 
            from the dictionary.
            </summary>
            <param name="index">The index of the item in the list.</param>
            <param name="value">The value of the item at the specified index.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.OnValidate(System.Object)">
            <summary>
            Checks that the argument is of type 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/>.
            </summary>
            <param name="value">The value of the item to add.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Updates the value dictionary with the new value.
            </summary>
            <param name="index">The index of the item in the list.</param>
            <param name="oldValue">The old value that is being replaced.</param>
            <param name="newValue">The new value that is being set.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.Item(System.Int32)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/> associated with the specified <paramref name="index"/>.</para>
            </summary>
            <param name="index">
            <para>The index of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="index"/>.</para>
            </value>              
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is equal to or greater than the length of <c>Count</c>.</para>
            </exception>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItemCollection.Item(System.String)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/> associated with the specified <paramref name="name"/>.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NameValueItem"/> value to get.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="name"/>. If the specified <paramref name="name"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </value>              
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFile">
            <devdoc>
            Represents a configuration file according to the schema for Fx 1.1
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFile.AppendSection(System.String,System.String,System.Xml.XmlNode)">
            <devdoc>
            Append a new section to the configSections of the configuration file given the 
            sectionName and typeName.  The objectData is
            </devdoc>        
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationFile.SectionExists(System.Xml.XmlNode,System.String,System.Boolean)">
            <devdoc>
            Determines if a section exist in the config sections given the configSections node and the name of the section.
            </devdoc>        
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlSerializerTransformerData">
            <summary>
            <para>Represents a data transformer that takes data and serializes / deserializes the configuration data info Xml.</para>
            </summary>      
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlSerializerTransformerData.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlSerializerTransformerData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlSerializerTransformerData.#ctor(System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlSerializerTransformerData"/> class with a name and fully qualified type name.</para>
            </summary>
            <param name="name">
            <para>The name of the transformer.</para>
            </param>       
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlSerializerTransformerData.Clone">
            <summary>
            <para>Creates a new object that is a copy of the current instance.</para>
            </summary>
            <returns>
            <para>A new object that is a copy of this instance.</para>
            </returns>
            <remarks>
            <para>This clone does a deep copy.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlSerializerTransformerData.XmlIncludeTypes">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeDataCollection"/>.</para>
            </summary>
            <value>
            <para>The include types available in configuration. The default is an empty collection.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>includeTypes</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlSerializerTransformerData.TypeName">
            <summary>
            <para>Gets the fully qualified assembly name for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Transformer.XmlSerializerTransformer"/>.</para>
            </summary>
            <value>
            <para>The fully qualified assembly name for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Transformer.XmlSerializerTransformer"/>.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomStorageProviderData">
            <summary>
            <para>Represents a custom storage provider to read and write data in configuration.</para>
            </summary>
            <remarks>
            <para>The class maps to the <c>storageProvider</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomStorageProviderData.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomStorageProviderData"/> class..</para>
            </summary>  
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomStorageProviderData.#ctor(System.String)">
            <summary>
            Initialize a new instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomStorageProviderData"/> class.
            </summary>
            <param name="name">
            The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomStorageProviderData"/>.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomStorageProviderData.#ctor(System.String,System.String)">
            <summary>
            Initialize a new instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomStorageProviderData"/> class.
            </summary>
            <param name="name">
            The name of the custom handler.
            </param>
            <param name="typeName">
            The type of the custom handler.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomStorageProviderData.Clone">
            <summary>
            <para>Creates a deep copy of the current instance.</para>
            </summary>
            <returns>
            <para>A deep copy of this instance.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomStorageProviderData.TypeName">
            <summary>
            <para>Gets or sets the <see cref="T:System.Type"/> name of the provider.</para>
            </summary>
            <remarks>
            <value>
            <para>The type name of the provider. The default is an empty string.</para>
            </value>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomStorageProviderData.Attributes">
            <summary>
            Gets or sets custom configuration attributes.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeSqlWatcher">
            <summary>
            <para>Represents a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.IConfigurationChangeWatcher"/> for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.SqlStorageProvider"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeSqlWatcher.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeSqlWatcher"/> class with a connection string, the name of the stored procedure to get the configuration data, the name of the stored procedure to set the configuration data, and the configuration section name.</para>
            </summary>
            <param name="connectionString">
            <para>The connection string for the SQL Server database that is being watched.</para>
            </param>
            <param name="getStoredProcedure">
            <para>The name of the stored procedure to get the configuration data.</para>
            </param>
            <param name="setStoredProcedure">
            <para>The name of the stored procedure to set the configuration data.</para></param>
            <param name="configurationSectionName">
            <para>The name of the configuration section to watch.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeSqlWatcher.Finalize">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeSqlWatcher"/> and optionally releases the managed resources.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeSqlWatcher.GetCurrentLastWriteTime">
            <summary>
            <para>Returns the <see cref="T:System.DateTime"/> of the last change of the information watched</para>
            </summary>
            <returns>The <see cref="T:System.DateTime"/> of the last modificaiton, or <code>DateTime.MinValue</code> if the information can't be retrieved</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeSqlWatcher.BuildThreadName">
            <summary>
            Returns the string that should be assigned to the thread used by the watcher
            </summary>
            <returns>The name for the thread</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeSqlWatcher.BuildEventData">
            <summary>
            Builds the change event data, in a suitable way for the specific watcher implementation
            </summary>
            <returns>The change event information</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeSqlWatcher.GetEventSourceName">
            <summary>
            Returns the source name to use when logging events
            </summary>
            <returns>The event source name</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationChangeSqlWatcher.SectionName">
            <summary>
            <para>Gets the name of the configuration section being watched.</para>
            </summary>
            <value>
            <para>The name of the configuration section being watched.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData">
            <summary>
            <para>Represents the configuration data for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider"/>.</para>
            </summary>    	
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData"/></para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData.#ctor(System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData"/> with a name.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider"/> for this configuration data.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData.#ctor(System.String,System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData"/> with a name and the sub key in the registry the data is to be stored.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider"/> for this configuration data.</para>
            </param>
            <param name="registrySubKey">
            <para>The sub key where the data is to be stored.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData.#ctor(System.String,System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AllowedRegistryHive)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData"/> with a name and the sub key and the <see cref="T:Microsoft.Win32.RegistryHive"/> where the data is to be stored.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider"/> for this configuration data.</para>
            </param>
            <param name="registrySubKey">
            <para>The sub key where the data is to be stored.</para>
            </param>
            <param name="registryRoot">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AllowedRegistryHive"/> where the data is to be stored.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData.Clone">
            <summary>
            <para>Creates a new object that is a copy of the current instance.</para>
            </summary>
            <returns>
            <para>A new object that is a copy of this instance.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData.TypeName">
            <summary>
            <para>Gets or sets the <see cref="T:System.Type"/> name of the provider.</para>
            </summary>
            <value>
            <para>The type name of the provider. The default is an empty string.</para>
            </value>
            <remarks>
            <para>Always returns <see cref="P:System.Type.AssemblyQualifiedName"/> for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider"/>.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData.RegistryRoot">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Win32.RegistryHive"/> where the data is to be stored.</para>
            </summary>
            <value>
            <para>The <see cref="T:Microsoft.Win32.RegistryHive"/> where the data is to be stored. The default is <see cref="F:Microsoft.Win32.RegistryHive.CurrentUser"/></para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.RegistryStorageProviderData.RegistrySubKey">
            <summary>
            <para>Gets or sets the sub key where the data is to be stored.</para>
            </summary>
            <value>
            <para>The sub key where the data is to be stored.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomKeyAlgorithmPairStorageProviderData">
            <summary>
            <para>Represents a custom storage provider to read and write data in configuration.</para>
            </summary>
            <remarks>
            <para>The class maps to the <c>storageProvider</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.KeyAlgorithmPairStorageProviderData">
            <summary>
            <para>Represents a storage provider to read and write data for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/>.</para>
            </summary>
            <remarks>
            <para>The class maps to the <c>keyAlgorithmStorageProvider</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.KeyAlgorithmPairStorageProviderData.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.KeyAlgorithmPairStorageProviderData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.KeyAlgorithmPairStorageProviderData.#ctor(System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.KeyAlgorithmPairStorageProviderData"/> class..</para>
            </summary>
            <param name="name">
            <para>The name of the storage provider.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.KeyAlgorithmPairStorageProviderData.Clone">
            <summary>
            <para>Creates a new object that is a copy of the current instance.</para>
            </summary>
            <returns>
            <para>A new object that is a copy of this instance.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.KeyAlgorithmPairStorageProviderData.TypeName">
            <summary>
            <para>Gets or sets the type name.</para>
            </summary>
            <value>
            <para>The type name.</para>
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomKeyAlgorithmPairStorageProviderData.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomKeyAlgorithmPairStorageProviderData"/> class..</para>
            </summary>  
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomKeyAlgorithmPairStorageProviderData.#ctor(System.String)">
            <summary>
            Initialize a new instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomKeyAlgorithmPairStorageProviderData"/> class.
            </summary>
            <param name="name">
            The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomKeyAlgorithmPairStorageProviderData"/>.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomKeyAlgorithmPairStorageProviderData.#ctor(System.String,System.String)">
            <summary>
            Initialize a new instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomKeyAlgorithmPairStorageProviderData"/> class.
            </summary>
            <param name="name">
            The name of the custom handler.
            </param>
            <param name="typeName">
            The type of the custom handler.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomKeyAlgorithmPairStorageProviderData.Clone">
            <summary>
            <para>Creates a deep copy of the current instance.</para>
            </summary>
            <returns>
            <para>A deep copy of this instance.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomKeyAlgorithmPairStorageProviderData.TypeName">
            <summary>
            <para>Gets or sets the <see cref="T:System.Type"/> name of the provider.</para>
            </summary>
            <remarks>
            <value>
            <para>The type name of the provider. The default is an empty string.</para>
            </value>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.CustomKeyAlgorithmPairStorageProviderData.Attributes">
            <summary>
            Gets or sets custom configuration attributes.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AppConfigFileStorageProvider">
            <summary>
            <para>
            Represents a storage provider for configuration data that saves the configuration data to the <see cref="T:System.AppDomain"/> configuration file.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AppConfigFileStorageProvider.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AppConfigFileStorageProvider"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AppConfigFileStorageProvider.Read">
            <summary>
            <para>When overriden by a derived clas, reads the configuration data from storage.</para>
            </summary>
            <returns>
            <para>The configuration data.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AppConfigFileStorageProvider.Write(System.Object)">
            <summary>
            <para>Writes the configuration data to storage to the application configuration file.</para>
            </summary>
            <param name="value">
            <para>The value to write to storage.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AppConfigFileStorageProvider.CreateConfigurationChangeWatcher">
            <summary>
            <para>When overriden by a derived class, creates an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.IConfigurationChangeWatcher"/> for the storage.</para>
            </summary>
            <returns>
            <para>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.IConfigurationChangeWatcher"/> for the storage.</para>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AppConfigFileStorageProvider.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView)">
            <summary>
            <para>Initializes this provider to the correct state and context used by the factory creating it.</para>
            </summary>
            <param name="configurationView">
            <para>The cursor to use to get the data specific for the storage provider.</para>
            </param>
            <exception cref="T:System.ArgumentException">
            <para><paramref name="configurationView"/> must be of type <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.RuntimeConfigurationView"/>.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AppConfigFileStorageProvider.AppendSection(System.Xml.XmlNode)">
            <devdoc>
            Append a new section to the configSections of the configuration file given the sectionName and typeName.  
            </devdoc>        
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector">
            <summary>
            <para>Provides functionality to encrypt and decrypt configuraiton data with symetric algorithms defined in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector.Finalize">
            <summary>
            <para>Allows an the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector"/> to attempt to free resources and perform other cleanup operations before the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector"/> is reclaimed by garbage collection. </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector.Dispose">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector"/> and optionally releases the managed resources.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector.Dispose(System.Boolean)">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector"/> and optionally releases the managed resources.</para>
            </summary>
            <param name="disposing">
            <para><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector.Load(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext,System.String)">
            <summary>
            <para>Load the configured protection mechanism for the section. This is the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.KeyAlgorithmPairStorageProviderData"/> to load the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/>.</para>
            </summary>
            <param name="sectionName">
            <para>The name of the section to encrypt.</para>
            </param>
            <param name="context">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> object.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="context"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
            <exception cref="T:System.Configuration.ConfigurationException">
            <para>An error occured in configuration.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector.Encrypt(System.Byte[])">
            <summary>
            <para>Encrypts bytes with the initialized algorithm and key.</para>
            </summary>
            <param name="plaintext"><para>The plaintext in which you wish to encrypt.</para></param>
            <returns><para>The resulting ciphertext.</para></returns>
            <remarks>
            <para>If no encryption is defined, the bytes passed in are returned.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector.Decrypt(System.Byte[])">
            <summary>
            <para>Decrypts bytes with the initialized algorithm and key.</para>
            </summary>
            <param name="ciphertext"><para>The ciphertext in which you wish to decrypt.</para></param>
            <returns><para>The resulting plaintext.</para></returns>
            <remarks>
            <para>If no encryption is defined, the bytes passed in are returned.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationProtector.Encrypted">
            <summary>
            <para>Determines if the data is to be encrypted or not.</para>
            </summary>
            <value>
            <para><see langword="true"/> if the data is to be encrypted; otherwise <see langword="false"/>.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeDataCollection">
            <summary>
            <para>Represents a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData"/>s for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlSerializerTransformerData"/> in configuration.</para>
            </summary>       
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeDataCollection.Add(Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData)">
            <summary>
            <para>Adds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData"/> into the collection.</para>
            </summary>
            <param name="xmlIncludeType">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData"/> to add. The value can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <remarks>
            <para>If a reference already exists in the collection by <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData.Name"/>, it will be replaced with the new reference.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="xmlIncludeType"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            <para>- or -</para>
            <para><seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData.Name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeDataCollection.CopyTo(Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData[],System.Int32)">
            <summary>
            <para>Copies the entire <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeDataCollection"/> to a compatible one-dimensional Array, starting at the specified index of the target array.</para>
            </summary>
            <param name="array">
            <para>The one-dimensional <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData"/> array that is the destination of the elements copied from <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeDataCollection"/>. The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData"/> array must have zero-based indexing.</para>
            </param>
            <param name="index">
            <para>The zero-based index in array at which copying begins.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeDataCollection.Item(System.Int32)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData"/> at the specified <paramref name="index"/>.</para>
            </summary>
            <param name="index">
            <para>The index of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="index"/>. If the specified <paramref name="index"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="index"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeDataCollection.Item(System.String)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData"/> associated with the specified <paramref name="name"/>.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="name"/>. If the specified <paramref name="name"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="name"/>.</para>
            </value>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionDataCollection">
            <summary>
            <para>Represents a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> objectss for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings"/> in configuration.</para>
            </summary>       
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionDataCollection.Add(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData)">
            <summary>
            <para>Adds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> into the collection.</para>
            </summary>
            <param name="configurationSection">
            <para>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> to add. The value can not be a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </param>
            <remarks>
            <para>If a reference already exists in the collection by <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData.Name"/>, it will be replaced with the new reference.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="configurationSection"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <para><seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData.Name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionDataCollection.CopyTo(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData[],System.Int32)">
            <summary>
            <para>Copies the entire <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionDataCollection"/> to a compatible one-dimensional <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> array, starting at the specified index of the target array.</para>
            </summary>
            <param name="array">
            <para>The one-dimensional <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> array that is the destination of the elements copied from <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionDataCollection"/>. The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> array must have zero-based indexing.</para>
            </param>
            <param name="index">
            <para>The zero-based index in array at which copying begins.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionDataCollection.Item(System.Int32)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> at the specified <paramref name="index"/>.</para>
            </summary>
            <param name="index">
            <para>The index of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="index"/>. If the specified <paramref name="index"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="index"/>.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionDataCollection.Item(System.String)">
            <summary>
            <para>Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> associated with the specified <paramref name="name"/>.</para>
            </summary>
            <param name="name">
            <para>The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData"/> to get or set.</para>
            </param>
            <value>
            <para>The value associated with the specified <paramref name="name"/>. If the specified <paramref name="name"/> is not found, attempting to get it returns a <see langword="null"/> reference (Nothing in Visual Basic), and attempting to set it creates a new entry using the specified <paramref name="name"/>.</para>
            </value>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="name"/> is a <see langword="null"/> reference (Nothing in Visual Basic).</para>
            </exception>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.StorageProviderFactory">
            <devdoc>
            The factory that creates IStorageProviderReader / IStorageProviderWriter objects.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmStorageProviderFactory">
            <devdoc>
            The factory that creates IConfigurationStorageProvider objects.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.NullTransformer">
            <devdoc>
            Represents a null transformer object. Introduces the null object pattern since transformers are not required.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NullTransformer.Initialize(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationView)">
            <devdoc>
            This method does nothing by default.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NullTransformer.Deserialize(System.Object)">
            <devdoc>
            This method does nothing by default.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.NullTransformer.Serialize(System.Object)">
            <devdoc>
            This method does nothing by default.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder">
            <summary>
            <para>
            Provides a facade to configuration settings from defined storage in a specified configuration section. 
            </para>
            </summary> 
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.#ctor(System.String)">
            <summary>
            <para>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager"/> class with a configuration file.
            </para>
            </summary>
            <param name="configurationFile">
            <para>
            The file where the configuration settings are defined.
            </para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager"/> class with the preloaded configuration.</para>
            </summary>
            <param name="configurationSettings">
            <para>The preloaded configuration data to initialize the manager.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.Dispose">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder"/> and optionally releases the managed resources.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.Dispose(System.Boolean)">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder"/> and optionally releases the managed resources.</para>
            </summary>
            <param name="disposing">
            <para><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.ReadConfiguration(System.String)">
            <summary>
            <para>
            Reads configuration settings for a user-defined configuration section.
            </para>
            </summary>
            <param name="sectionName">
            <para>The configuration section to read.</para>
            </param>
            <returns>
            <para>The configuration settings for <paramref name="sectionName"/>.</para>
            </returns>
            <exception cref="T:System.ArgumentException">
            <para><paramref name="sectionName"/>can not be <see langword="null"/> (Nothing in Visual Basic).</para>
            </exception>
            <exception cref="T:System.Configuration.ConfigurationException">
            <para><paramref name="sectionName"/> is not valid for this configuration.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.WriteConfiguration(System.String,System.Object)">
            <summary>
            <para>
            Write configuration for a section to storage.
            </para>
            </summary>
            <param name="sectionName">
            <para>The name of the section for the configuration data.</para>
            </param>
            <param name="configValue">
            <para>The configuration value to store.</para>
            </param>
            <exception cref="T:System.Configuration.ConfigurationException">
            <para><paramref name="sectionName"/> is not valid section for this configuration.</para>
            <para>- or -</para>
            <para>The section data is read only.</para>
            <para>- or -</para>
            <para>An error occured while reading the configuration to save the data.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.WriteMetaConfiguration(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings)">
            <summary>
            <para>
            Write the meta configuration for the configuration manager to the configuration file.
            </para>
            </summary>
            <param name="configurationSettings">
            The meta configuration to write to configuration.
            </param>
            <exception cref="T:System.Configuration.ConfigurationException">
            <para>An error occured while reading the configuration to save the data.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.WriteMetaConfig(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSectionData)">
            <summary>
            <para>
            Write the meta configuration for the configuration manager to the configuration file.
            </para>
            </summary>
            <param name="configurationSectionData">
            The meta configuration to write to configuration.
            </param>
            <exception cref="T:System.Configuration.ConfigurationException">
            <para>An error occured while reading the configuration to save the data.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <para>The configuration section already exists.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.ReadMetaConfiguration">
            <summary>
            <para>
            Read the meta configuration for the configuration manager.
            </para>
            </summary>
            <returns>
            <para>
            The meta configuration for the configuration manager or null if no entries exists.
            </para>
            </returns>
            <exception cref="T:System.Configuration.ConfigurationException">
            <para>An error occured while reading the meta configuration.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.ReadMetaConfiguration(System.String)">
            <summary>
            <para>
            Read the meta configuration for the configuration manager.
            </para>
            </summary>
            <param name="sectionName">
            <para>The name of the configuration section to retrieve.    </para>
            </param>
            <returns>
            <para>
            The meta configuration for the configuration manager or null if no entries exists.
            </para>
            </returns>
            <exception cref="T:System.Configuration.ConfigurationException">
            <para>An error occured while reading the meta configuration.</para>
            </exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.IsReadOnly(System.String)">
            <summary>
            <para>
            Gets a value indicating whether a section in configuration is read-only.
            </para>
            </summary>
            <param name="sectionName">
            <para>
            The section in the configuration.
            </para>
            </param>
            <returns>
            <see langword="true"/> if the configuration section is read-only; otherwise <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="sectionName"/> can not be <see langword="null"/>.</para>
            </exception>		
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.IsValidSection(System.String)">
            <summary>
            <para>Determines if a section name is valid in the current configuration file.</para>
            </summary>
            <param name="sectionName">
            <para>The name of the section to validate.</para>
            </param>
            <returns><see langword="true"/> if the section name is valid; otherwise, <see langword="false"/></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.ClearSectionCache(System.String)">
            <summary>
            <para>Removes a section from the internal cache.</para>
            </summary>
            <param name="sectionName">
            <para>The section name to remove.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.ClearSectionCache">
            <summary>
            <para>Removes all sections from the internal cache.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.OnConfigurationChanging(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangingEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.ConfigurationChanging"/> event.</para>
            </summary>
            <param name="e">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangingEventArgs"/> that contains the event data.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.OnConfigurationChanged(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangedEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.ConfigurationChanged"/> event.</para>
            </summary>
            <param name="e">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangedEventArgs"/> that contains the event data.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.CreateContext">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/> for the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager"/>.</para>
            </summary>
            <returns><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext"/>.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.Serialize(Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationSettings)">
            <devdoc>
            Serialize the block configuration into an XmlNode.
            </devdoc>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.ConfigurationChanging">
            <summary>
            <para>Occurs before configuration is changed.</para>
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.ConfigurationChanged">
            <summary>
            <para>Occurs after configuration is changed.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.MsCorLibDirectory">
            <devdoc>
            Get the directory for current NDP
            </devdoc>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationBuilder.MachineConfigurationFile">
            <devdoc>
            Get the machine configuration file.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationSqlChangingEventArgs">
            <summary>
            <para>Provides data for the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.ConfigurationChanging"/> and <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.ConfigurationChanging"/> event which occur after configuration is changed and committed to storage for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.SqlStorageProvider"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationSqlChangingEventArgs.#ctor(System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationSqlChangingEventArgs"/> class the connection string to the SQL Server database, the stored procedure name to get the data, the stored procedure name to set the data, the configuration section name for this data, the old value and the new value.</para>
            </summary>
            <param name="connectionString">
            <para>The connection string to the SQL Server database.</para>
            </param>
            <param name="getStoredProcedure">
            <para>The stored procedure name to get the data.</para>
            </param>
            <param name="setStoredProcedure">
            <para>The stored procedure name to set the data.</para>
            </param>
            <param name="sectionName">
            <para>The name of the configuration section.</para>
            </param>
            <param name="oldValue"><para>The old value.</para></param>
            <param name="newValue"><para>The new value.</para></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationSqlChangingEventArgs.ConnectionString">
            <summary>
            <para>Gets the connection string to the SQL Server database.</para>
            </summary>
            <value>
            <para>The connection string to the SQL Server database.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationSqlChangingEventArgs.GetStoredProcedure">
            <summary>
            <para>Gets the stored procedure name to get the data.</para>
            </summary>
            <value>
            <para>The stored procedure name to get the data.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationSqlChangingEventArgs.SetStoredProcedure">
            <summary>
            <para>Gets or sets the stored procedure name to set the data.</para>
            </summary>
            <value>
            <para>The stored procedure name to set the data.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangingEventHandler">
            <summary>
            <para>Represents the method that will handle the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.ConfigurationChanging"/> and <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.ConfigurationChanging"/> events.</para>
            </summary>
            <param name="sender">
            <para>The source of the event.</para>
            </param>
            <param name="e">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationChangingEventArgs"/> that contains the event data.</para>
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlFileStorageProviderData">
            <summary>
            <para>Represents a storage provider to read and write data in configuration from an Xml file.</para>
            </summary>    	
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlFileStorageProviderData.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlFileStorageProviderData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlFileStorageProviderData.#ctor(System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlFileStorageProviderData"/> class with a name.</para>
            </summary>
            <param name="name">
            <para>The name of the provider.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlFileStorageProviderData.#ctor(System.String,System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlFileStorageProviderData"/> class with a name and path to the file.</para>
            </summary>
            <param name="name">
            <para>The name of the provider.</para>
            </param>
            <param name="path">
            <para>The path to the file with the data.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlFileStorageProviderData.Clone">
            <summary>
            <para>Creates a new object that is a copy of the current instance.</para>
            </summary>
            <returns>
            <para>A new object that is a copy of this instance.</para>
            </returns>
            <remarks>
            <para>This clone does a deep copy.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlFileStorageProviderData.Path">
            <summary>
            <para>Gets or sets the path of the Xml file to store configuration.</para>
            </summary>
            <value>
            <para>The path of the Xml file to store configuration. The default is an empty string.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>path</c> attribute in configuration for the provider.</para>
            </remarks>        
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlFileStorageProviderData.TypeName">
            <summary>
            <para>Gets the fully qualified assembly name for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.XmlFileStorageProvider"/>.</para>
            </summary>
            <value>
            <para>The fully qualified assembly name for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.XmlFileStorageProvider"/>.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.FileKeyAlgorithmPairStorageProviderData">
            <summary>
            <para>Represents a storage provider to read and write data for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/> for a file.</para>
            </summary>
            <remarks>
            <para>The class maps to the <c>keyAlgorithmStorageProvider</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.FileKeyAlgorithmPairStorageProviderData.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.FileKeyAlgorithmPairStorageProviderData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.FileKeyAlgorithmPairStorageProviderData.#ctor(System.String,System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.FileKeyAlgorithmPairStorageProviderData"/> class with a name, fully qualified type name and file path.</para>
            </summary>
            <param name="name">
            <para>The name of the storage provider.</para>
            </param>
            <param name="path">
            <para>The path to the file to store the pair.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.FileKeyAlgorithmPairStorageProviderData.#ctor(System.String,System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.FileKeyAlgorithmPairStorageProviderData"/> class with a name, fully qualified type name, file path and the DPAPI settings.</para>
            </summary>
            <param name="name">
            <para>The name of the storage provider.</para>
            </param>
            <param name="path">
            <para>The path to the file to store the pair.</para>
            </param>
            <param name="dpapiSettings">
            <para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.DpapiSettingsData"/> object.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.FileKeyAlgorithmPairStorageProviderData.Clone">
            <summary>
            <para>Creates a new object that is a copy of the current instance.</para>
            </summary>
            <returns>
            <para>A new object that is a copy of this instance.</para>
            </returns>
            <remarks>
            <para>This clone does a deep copy.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.FileKeyAlgorithmPairStorageProviderData.Path">
            <summary>
            <para>Gets or sets the path of the file for storage.</para>
            </summary>
            <value>
            <para>The path of the file for storage. The default is an empty string.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>path</c> attribute in configuration for the provider.</para>
            </remarks>        
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.FileKeyAlgorithmPairStorageProviderData.DpapiSettings">
            <summary>
            <para>Gets the settings for DPAPI protection (optional).</para>
            </summary>
            <value>
            <para>The settings for DPAPI protection (optional).</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.FileKeyAlgorithmPairStorageProviderData.TypeName">
            <summary>
            <para>Gets the fully qualified assembly name for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.FileKeyAlgorithmPairStorageProvider"/>.</para>
            </summary>
            <value>
            <para>The fully qualified assembly name for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.FileKeyAlgorithmPairStorageProvider"/>.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AllowedRegistryHive">
            <summary>
            <para></para>Represents the possible values for to use with the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.RegistryStorageProvider"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AllowedRegistryHive.CurrentUser">
            <summary>
            <para>Represents the HKEY_CURRENT_USER base key.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AllowedRegistryHive.LocalMachine">
            <summary>
            <para>Represents the HKEY_LOCAL_MACHINE base key.</para>
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.AllowedRegistryHive.Users">
            <summary>
            <para>Represents the HKEY_USERS base key.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyedHashAlgorithmKeyCreator">
            <summary>
            <para>Creates keys for a <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyedHashAlgorithmKeyCreator.#ctor(System.String)">
            <summary>
            <para>Initializes an instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyedHashAlgorithmKeyCreator"/> class for a specific <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/>.</para>
            </summary>
            <param name="typeName">The assembly qualified name of a class which derives from a <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyedHashAlgorithmKeyCreator.GenerateKey">
            <summary>
            <para>Generates a random key.</para>
            </summary>
            <returns><para>A random key.</para></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyedHashAlgorithmKeyCreator.KeyIsValid(System.Byte[])">
            <summary>
            <para>Determines if the <paramref name="key"/> is valid.</para>
            </summary>
            <param name="key">The key to test.</param>
            <returns><para><see langword="true"/> if the key is valid; otherwise <see langword="false"/>.</para></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyedHashAlgorithmKeyCreator.KeyLength">
            <summary>
            <para>Gets the length of the key.</para>
            </summary>
            <value>The length of the key.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair">
            <summary>
            <para>Represents the key algrithm pair for encrypting configuration sections.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair.#ctor">
            <summary>
            <para>Instantiate a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair.#ctor(System.Byte[],System.String)">
            <summary>
            <para>Instantiate a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/> class with a key and algorithm type name.</para>
            </summary>
            <param name="key">
            <para>The key for the algorithm.</para>
            </param>
            <param name="algorithmTypeName">
            <para>The fully qualified type name for the algorithm.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair.Finalize">
            <summary>
            <para>Allows an the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/> to attempt to free resources and perform other cleanup operations before the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/> is reclaimed by garbage collection. </para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair.Dispose">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/> and optionally releases the managed resources.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair.Dispose(System.Boolean)">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair"/> and optionally releases the managed resources.</para>
            </summary>
            <param name="disposing">
            <para><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair.Key">
            <summary>
            <para>Gets or sets the key for the pair.</para>
            </summary>
            <value>
            <para>The key for the pair.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Protection.KeyAlgorithmPair.AlgorithmTypeName">
            <summary>
            <para>Gets or sets the algorithm type name.</para>
            </summary>
            <value>
            <para>The algorithm type name.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationSqlChangedEventArgs">
            <summary>
            <para>Provides data for the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationManager.ConfigurationChanged"/> and <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.ConfigurationContext.ConfigurationChanged"/> event which occur before configuration is changed and committed to storage for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.SqlStorageProvider"/>.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationSqlChangedEventArgs.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationSqlChangedEventArgs"/> class the connection string to the SQL Server database, the stored procedure name to get the data, the stored procedure name to set the data, and the configuration section name for this data.</para>
            </summary>
            <param name="connectionString">
            <para>The connection string to the SQL Server database.</para>
            </param>
            <param name="getStoredProcedure">
            <para>The stored procedure name to get the data.</para>
            </param>
            <param name="setStoredProcedure">
            <para>The stored procedure name to set the data.</para>
            </param>
            <param name="sectionName">
            <para>The name of the configuration section.</para>
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationSqlChangedEventArgs.ConnectionString">
            <summary>
            <para>Gets the connection string to the SQL Server database.</para>
            </summary>
            <value>
            <para>The connection string to the SQL Server database.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationSqlChangedEventArgs.GetStoredProcedure">
            <summary>
            <para>Gets the stored procedure name to get the data.</para>
            </summary>
            <value>
            <para>The stored procedure name to get the data.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Storage.ConfigurationSqlChangedEventArgs.SetStoredProcedure">
            <summary>
            <para>Gets or sets the stored procedure name to set the data.</para>
            </summary>
            <value>
            <para>The stored procedure name to set the data.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData">
            <summary>
            <para>Represents a type to include in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlSerializerTransformerData"/>.</para>
            </summary>
            <remarks>
            <para>The class maps to the <c>configurationSection</c> element in configuration.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData.#ctor(System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData"/> class with a name and fully qualified type name.</para>
            </summary>
            <param name="name">
            <para>The name of the transformer.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData.#ctor(System.String,System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData"/> class with a name and fully qualified type name.</para>
            </summary>
            <param name="name">
            <para>The name of the transformer.</para>
            </param>
            <param name="typeName">
            <para>The fully qualified type name of the transformer.</para>
            </param>      
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData.Name">
            <summary>
            <para>Gets or sets the name of the include types.</para>
            </summary>
            <value>
            <para>The name of the include type. The default is an empty string.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>name</c> attribute in configuration for the type.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.XmlIncludeTypeData.TypeName">
            <summary>
            <para>Gets or sets the name of the transformer.</para>
            </summary>
            <value>
            <para>The name of the transformer. The default is an empty string.</para>
            </value>
            <remarks>
            <para>This property maps to the <c>type</c> attribute in configuration for the type.</para>
            </remarks>
        </member>
    </members>
</doc>
