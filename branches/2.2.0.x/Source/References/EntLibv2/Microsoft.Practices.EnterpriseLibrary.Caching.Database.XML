<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Practices.EnterpriseLibrary.Caching.Database</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Caching.Database.Configuration.DataCacheStorageData">
            <summary>
            Configuration information for DataCacheStorageData. This class represents the extra information, over and
            above what is defined in <see cref="T:Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheStorageData"/>, needed to connect caching to the Data block.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Caching.Database.Configuration.DataCacheStorageData.#ctor">
            <overloads>
            Initializes an instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Caching.Database.Configuration.DataCacheStorageData"/> class.
            </overloads>
            <summary>
            Initializes an instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Caching.Database.Configuration.DataCacheStorageData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Caching.Database.Configuration.DataCacheStorageData.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Caching.Database.Configuration.DataCacheStorageData"/> class with a name, database instance name, and partion name.
            </summary>
            <param name="name">
            The name of the provider.
            </param>
            <param name="databaseInstanceName">
            Name of the database instance to use for storage. Instance must be defined in Data configuration.
            </param>
            <param name="partitionName">
            Name of the particular section inside of a database used to store this provider's data. This 
            field allows different applications to share the same database safely, preventing any modification of 
            one application's data by a provider from another application.
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Caching.Database.Configuration.DataCacheStorageData.DatabaseInstanceName">
            <summary>
            Name of the database instance to use for storage. Instance must be defined in Data configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Caching.Database.Configuration.DataCacheStorageData.PartitionName">
            <summary>
            Name of the particular section inside of a database used to store this provider's data. This 
            field allows different applications to share the same database safely, preventing any modification of 
            one application's data by a provider from another application.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Caching.Database.Configuration.DataBackingStoreAssembler">
            <summary>
            This type supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Represents the process to build a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Caching.Database.DataBackingStore"/> described by a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Caching.Database.Configuration.DataCacheStorageData"/> configuration object.
            </summary>
            <remarks>This type is linked to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Caching.Database.Configuration.DataCacheStorageData"/> type and it is used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreCustomFactory"/> 
            to build the specific <see cref="T:Microsoft.Practices.EnterpriseLibrary.Caching.IBackingStore"/> object represented by the configuration object.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Caching.Database.Configuration.DataBackingStoreAssembler.Assemble(Microsoft.Practices.ObjectBuilder.IBuilderContext,Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheStorageData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <summary>
            This method supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Builds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Caching.Database.DataBackingStore"/> based on an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Caching.Database.Configuration.DataCacheStorageData"/>.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreCustomFactory"/>
            <param name="context">The <see cref="T:Microsoft.Practices.ObjectBuilder.IBuilderContext"/> that represents the current building process.</param>
            <param name="objectConfiguration">The configuration object that describes the object to build. Must be an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Caching.Database.Configuration.DataCacheStorageData"/>.</param>
            <param name="configurationSource">The source for configuration objects.</param>
            <param name="reflectionCache">The cache to use retrieving reflection information.</param>
            <returns>A fully initialized instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Caching.Database.DataBackingStore"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Caching.Database.DataBackingStore">
            <summary>
            Implementation of a BackingStore to allow CacheItems to be stored through Data block
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Caching.Database.DataBackingStore.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.IStorageEncryptionProvider)">
            <summary>
            This is public purely for unit testing purposes and should never be called by application code
            </summary>
            <param name="database">Database to use for persistence</param>
            <param name="databasePartitionName">Partition name in database</param>
            <param name="encryptionProvider">Provider used for encryption</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Caching.Database.DataBackingStore.Remove(System.Int32)">
            <summary>
            Removes the item identified by the key from the database
            </summary>
            <param name="storageKey">Key of CacheItem to remove.</param>
            <remarks>Exceptions thrown depend on the implementation of the underlying database.</remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Caching.Database.DataBackingStore.UpdateLastAccessedTime(System.Int32,System.DateTime)">
            <summary>
            Updates the last accessed time for the CacheItem identified by the key
            </summary>
            <param name="storageKey">Key of item to update</param>
            <param name="lastAccessedTime">New timestamp for updated item</param>
            <remarks>Exceptions thrown depend on the implementation of the underlying database.</remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Caching.Database.DataBackingStore.Flush">
            <summary>
            Flushes all CacheItems from database. If an exception is thrown during the flush, the database is left unchanged.
            </summary>
            <remarks>Exceptions thrown depend on the implementation of the underlying database.</remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Caching.Database.DataBackingStore.LoadDataFromStore">
            <summary>
            Loads data from persistence store.
            </summary>
            <returns>Unfiltered hashtable of cache items loaded from persistence store.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Caching.Database.DataBackingStore.RemoveOldItem(System.Int32)">
            <summary>
            Removed existing item stored in persistence store with same key as new item
            </summary>
            <param name="storageKey">Item being removed from cache.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Caching.Database.DataBackingStore.AddNewItem(System.Int32,Microsoft.Practices.EnterpriseLibrary.Caching.CacheItem)">
            <summary>
            Adds new item to persistence store
            </summary>
            <param name="storageKey">Unique key for storage item.</param>
            <param name="newItem">Item to be added to cache. May not be null.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Caching.Database.DataBackingStore.Count">
            <summary>
            Returns number of items stored in database
            </summary>
        </member>
    </members>
</doc>
