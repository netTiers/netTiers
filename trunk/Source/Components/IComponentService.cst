<%--
 * $Id: IEntity.cst,v 1.13 2006/02/27 22:09:40 bgjohnso Exp $
 * Last modified by $Author: bgjohnso $
 * Last modified at $Date: 2006/02/27 22:09:40 $
 * $Revision: 1.13 $
--%>
<%@ CodeTemplate Src="..\TemplateLib\CommonSqlCode.cs" Inherits="MoM.Templates.CommonSqlCode" Language="C#" TargetLanguage="C#" Description="The interface that each business object of the domain implements." ResponseEncoding="UTF-8" NoWarn="0108,0618,1572,1573,1574,0162,2002"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>

<%@ Property Name="NameSpace" Optional="False" Type="System.String" Category="Style" Description="Object Namespace." %>
<%@ Assembly Name="SchemaExplorer" %>

using System;
using System.ComponentModel;
using System.Collections.Generic;

namespace <%=NameSpace%>
{
	/// <summary>
	/// The interface that each component business domain service of the model implements.
	/// </summary>
	public interface IComponentService
	{
		/// <summary>
		///	Provides a List of Processors to execute business process logic in.
		/// </summary>
		///<value>A list of business rule processors to execute</value>
		IList<IProcessor> ProcessorList {get; set;}

		/// <summary>
		///	Provides a Notification Pattern of Process Results.
		/// </summary>
		///<value>A list of business rule processors to execute</value>
		ServiceResult ServiceProcessResult{get;}
				
		/// <summary>
		///	Provides a way to terminate the Processor calls upon an exception. 
		/// </summary>
		///<value>bool value determining to stop once an exceptions been thrown. </value>		
		bool AbortOnFailure {get; set; }

		/// <summary>
		/// Event to indicate that a processor is about to begin.
		/// </summary>
		event ProcessStartingHandler ProcessStarting;

		/// <summary>
		/// Event to indicate that a processor has just ended.
		/// </summary>
		event ProcessEndedHandler ProcessEnded;
		
	}
}
