<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider">
            <summary>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider"/> implementation that caches the athenticated session information and
            performs token handling.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider.#ctor(System.Int32,System.Int32,Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider.SaveIdentity(System.Security.Principal.IIdentity)">
            <summary>
            Caches an authenticated <see cref="T:System.Security.Principal.IIdentity"/> object.
            </summary>
            <param name="identity">
            <see cref="T:System.Security.Principal.IIdentity"/> object representing an authenticated user.
            </param>
            <returns>Token to identify the cached Identity</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider.SaveIdentity(System.Security.Principal.IIdentity,Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Caches an authenticated <see cref="T:System.Security.Principal.IIdentity"/> object using an existing token
            enabling the grouping of related items.
            </summary>
            <param name="identity">
            IIdentity object representing an authenticated user.
            </param>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider.SavePrincipal(System.Security.Principal.IPrincipal)">
            <summary>
            Caches an authenticated IPrincipal object.
            </summary>
            <param name="principal">
            IPrincipal object representing an authenticated user and roles.
            </param>
            <returns>Token to identify the cached IPrincipal object</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider.SavePrincipal(System.Security.Principal.IPrincipal,Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Caches an authenticated IPrincipal object using an existing token
            enabling the grouping of related items.
            </summary>
            <param name="principal">
            IPrincipal object representing an authenticated user.
            </param>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider.SaveProfile(System.Object)">
            <summary>
            Caches a profile for an authenticated user.
            </summary>
            <param name="profile">
            Object representing the profile of authenticated user.
            </param>
            <returns>Token to identify the cached Profile object</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider.SaveProfile(System.Object,Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Caches a profile for an authenticated user using an existing token
            (enabling the grouping of related items).
            </summary>
            <param name="profile">
            Object representing the profile of authenticated user.
            </param>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider.ExpireIdentity(Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Purges an existing IIdentity object from the cache.
            </summary>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider.ExpirePrincipal(Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Purges an existing IPrincipal object from the cache.
            </summary>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider.ExpireProfile(Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Purges an existing Profile object from the cache.
            </summary>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider.GetIdentity(Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Gets an existing IIdentity object from the cache.
            </summary>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
            <returns>A cached IIdentity object</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider.GetPrincipal(Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Gets an existing IPrincipal object from the cache.
            </summary>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
            <returns>A cached IPrincipal object</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider.GetProfile(Microsoft.Practices.EnterpriseLibrary.Security.IToken)">
            <summary>
            Gets an existing Profile object from the cache.
            </summary>
            <param name="token">
            Token identifying an existing cached entity.
            </param>
            <returns>A cached Profile object</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.Configuration.CachingStoreProviderData">
            <summary>
            Configuration data for the Security Cache.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.Configuration.CachingStoreProviderData.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.Configuration.CachingStoreProviderData"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.Configuration.CachingStoreProviderData.#ctor(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.Configuration.CachingStoreProviderData"/> class with 
            a specified name, sliding expiration, absolute expiration and cache manager instance name. 
            </summary>
            <param name="name">The name if the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider"/> instance.</param>
            <param name="slidingExpiration">The number of minutes between the time the added object was last accessed and when that object expires.</param>
            <param name="absoluteExpiration">The number of minutes in which an added object expires and is removed from the cache.</param>
            <param name="cacheManager">The name of the CacheManager instance that is used to store cached items.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.Configuration.CachingStoreProviderData.CacheManager">
            <summary>
            Gets or sets the Caching Block Cache instance name.
            </summary>
            <value>Caching Block Cache Instance Name.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.Configuration.CachingStoreProviderData.SlidingExpiration">
            <summary>
            Gets or sets the Sliding Session Expiration duration (in minutes).
            </summary>
            <value>Sliding Session Expiration duration</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.Configuration.CachingStoreProviderData.AbsoluteExpiration">
            <summary>
            Gets or sets the Absolute Session Expiration duration (in minutes).
            </summary>
            <value>Absolute Session Expiration duration</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.Configuration.CachingStoreProviderAssembler">
            <summary>
            This type supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Represents the process to build a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider"/> described by a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/> configuration object.
            </summary>
            <remarks>This type is linked to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/> type and it is used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityCacheProviderCustomFactory"/> 
            to build the specific <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.ISecurityCacheProvider"/> object represented by the configuration object.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.Configuration.CachingStoreProviderAssembler.Assemble(Microsoft.Practices.ObjectBuilder.IBuilderContext,Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <summary>
            This method supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Builds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider"/> based on an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecurityCacheProviderData"/>.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Security.SecurityCacheProviderCustomFactory"/>
            <param name="context">The <see cref="T:Microsoft.Practices.ObjectBuilder.IBuilderContext"/> that represents the current building process.</param>
            <param name="objectConfiguration">The configuration object that describes the object to build. Must be an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.Configuration.CachingStoreProviderData"/>.</param>
            <param name="configurationSource">The source for configuration objects.</param>
            <param name="reflectionCache">The cache to use retrieving reflection information.</param>
            <returns>A fully initialized instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.SecurityCacheItem">
            <summary>
            Represents an item stored in SecurityCache
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.SecurityCacheItem.Identity">
            <summary>
            The IIdentity to cache.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.SecurityCacheItem.Profile">
            <summary>
            The profile to cache.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.SecurityCacheItem.Principal">
            <summary>
             The IPrincipal to cache.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.SecurityCacheItem.IsRemoveable">
            <devDoc>
            A cache item is deemed removeable if all properties are null
            </devDoc>
        </member>
    </members>
</doc>
