<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.ServiceHosting.ServiceRuntime</name>
	</assembly>
	<members>
		<member name="T:Microsoft.ServiceHosting.ServiceRuntime.ILocalResource">
			<summary>Represents the local storage space reserved for a service.</summary>
		</member>
		<member name="T:Microsoft.ServiceHosting.ServiceRuntime.RoleEntryPoint">
			<summary>Provides methods to manage the initialization, starting, and stopping of a service, as well as for monitoring the health of the service.</summary>
		</member>
		<member name="M:Microsoft.ServiceHosting.ServiceRuntime.RoleEntryPoint.AcceptShutdown">
			<summary>Undocumented. For future use only.</summary>
		</member>
		<member name="M:Microsoft.ServiceHosting.ServiceRuntime.RoleEntryPoint.GetHealthStatus">
			<summary>Returns the current health status of a role.</summary>
			<returns><see cref="T:Microsoft.ServiceHosting.ServiceRuntime.RoleStatus"></see></returns>
		</member>
		<member name="M:Microsoft.ServiceHosting.ServiceRuntime.RoleEntryPoint.Initialize">
			<summary>Initializes and starts the role.</summary>
			<returns>True/False</returns>
		</member>
		<member name="M:Microsoft.ServiceHosting.ServiceRuntime.RoleEntryPoint.Start">
			<summary>Starts the role.</summary>
		</member>
		<member name="M:Microsoft.ServiceHosting.ServiceRuntime.RoleEntryPoint.Stop">
			<summary>Stops the running role with an appropriate shut down sequence.</summary>
		</member>
		<member name="T:Microsoft.ServiceHosting.ServiceRuntime.RoleException">
			<summary>Raises an error when an invalid operation occurs within a role.</summary>
		</member>
		<member name="M:Microsoft.ServiceHosting.ServiceRuntime.RoleException.#ctor(System.String)">
			<param name="message">The message to provide when the exception occurs.</param>
		</member>
		<member name="M:Microsoft.ServiceHosting.ServiceRuntime.RoleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<param name="context">Describes the source and destination of the serialized stream, as well as a means for serialization to retain that context and an additional caller-defined context.</param>
			<param name="info">Stores the name, type, and value of the data to be serialized in the case where an exception occurs on a remote computer.</param>
		</member>
		<member name="M:Microsoft.ServiceHosting.ServiceRuntime.RoleException.#ctor(System.String,System.Exception)">
			<param name="inner">The internal exception raised by the role.</param>
			<param name="message">The message to provide when the exception occurs.</param>
		</member>
		<member name="T:Microsoft.ServiceHosting.ServiceRuntime.RoleManager">
			<summary>Provides methods to log messages and raise alerts, retrieve service configuration settings, and return the location of the local storage resource.</summary>
		</member>
		<member name="M:Microsoft.ServiceHosting.ServiceRuntime.RoleManager.GetConfigurationSetting(System.String)">
			<summary>Returns the value of the named configuration setting from the service configuration file.</summary>
			<returns>A string containing the value of the configuration setting.</returns>
			<param name="roleSettingName">The name of the configuration setting to retrieve.</param>
		</member>
		<member name="M:Microsoft.ServiceHosting.ServiceRuntime.RoleManager.GetLocalResource(System.String)">
			<summary>Returns a reference to the local store named in the service definition file.</summary>
			<param name="localResourceName">The name of the local store resource.</param>
		</member>
		<member name="M:Microsoft.ServiceHosting.ServiceRuntime.RoleManager.RegisterShutdownEvent(System.String)">
			<summary>Undocumented. For future use only.</summary>
			<param name="shutdownEventName">Undocumented. For future use only.</param>
		</member>
		<member name="M:Microsoft.ServiceHosting.ServiceRuntime.RoleManager.WriteToLog(System.String,System.String)">
			<summary>Writes a string value to the log.</summary>
			<param name="eventLogName">The type of event to be written to the log. Permitted string values are Critical, Error, Warning, Information, Verbose.</param>
			<param name="message">The message to write to the log. </param>
		</member>
		<member name="P:Microsoft.ServiceHosting.ServiceRuntime.RoleManager.IsRoleManagerRunning">
			<summary>Determines whether the role is running in a fabric.</summary>
			<returns>True/False</returns>
		</member>
		<member name="T:Microsoft.ServiceHosting.ServiceRuntime.RoleStatus">
			<summary>An enumeration providing information about the current status of a role.</summary>
		</member>
		<member name="F:Microsoft.ServiceHosting.ServiceRuntime.RoleStatus.Healthy">
			<summary>The role is currently healthy.</summary>
		</member>
		<member name="F:Microsoft.ServiceHosting.ServiceRuntime.RoleStatus.NonExistent">
			<summary>The role does not exist.</summary>
		</member>
		<member name="F:Microsoft.ServiceHosting.ServiceRuntime.RoleStatus.Started">
			<summary>The role has started.</summary>
		</member>
		<member name="F:Microsoft.ServiceHosting.ServiceRuntime.RoleStatus.Starting">
			<summary>The role is starting.</summary>
		</member>
		<member name="F:Microsoft.ServiceHosting.ServiceRuntime.RoleStatus.Stopped">
			<summary>The role has stopped.</summary>
		</member>
		<member name="F:Microsoft.ServiceHosting.ServiceRuntime.RoleStatus.Stopping">
			<summary>The role is stopping.</summary>
		</member>
		<member name="F:Microsoft.ServiceHosting.ServiceRuntime.RoleStatus.Unhealthy">
			<summary>The role is currently unhealthy.</summary>
		</member>
	</members>
</doc>