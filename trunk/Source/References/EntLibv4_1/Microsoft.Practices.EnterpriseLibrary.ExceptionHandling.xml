<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Practices.EnterpriseLibrary.ExceptionHandling</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData">
            <summary>
            Configuration object for Custom Providers.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlerData">
            <summary>
            Represents the configuration for an <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.IExceptionHandler"/>.
            </summary>    
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlerData.#ctor">
            <summary>
            Initializes an instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlerData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlerData.#ctor(System.String,System.Type)">
            <summary>
            Initializes an instance of an <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlerData"/> class with a name and an <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.IExceptionHandler"/> type.
            </summary>
            <param name="name">
            The name of the configured <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.IExceptionHandler"/>.
            </param>
            <param name="type">
            The configured <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.IExceptionHandler"/> type.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.#ctor">
            <summary>
            Initializes with default values.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.#ctor(System.String,System.Type)">
            <summary>
            Initializes with name and provider type.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.#ctor(System.String,System.String)">
            <summary>
            Initializes with name and provider type.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.SetAttributeValue(System.String,System.String)">
            <summary>
            Sets the attribute value for a key.
            </summary>
            <param name="key">The attribute name.</param>
            <param name="value">The attribute value.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>
            Modifies the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData"/> object to remove all values that should not be saved. 
            </summary>
            <param name="sourceElement">A <see cref="T:System.Configuration.ConfigurationElement"/> object at the current level containing a merged view of the properties.</param>
            <param name="parentElement">A parent <see cref="T:System.Configuration.ConfigurationElement"/> object or <see langword="null"/> if this is the top level.</param>		
            <param name="saveMode">One of the <see cref="T:System.Configuration.ConfigurationSaveMode"/> values.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.Reset(System.Configuration.ConfigurationElement)">
            <summary>
            Resets the internal state of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData"/> object, 
            including the locks and the properties collection.
            </summary>
            <param name="parentElement">The parent element.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.IsModified">
            <summary>
            Indicates whether this configuration element has been modified since it was last 
            saved or loaded when implemented in a derived class.
            </summary>
            <returns><see langword="true"/> if the element has been modified; otherwise, <see langword="false"/>. </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>
            Called when an unknown attribute is encountered while deserializing the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData"/> object.
            </summary>
            <param name="name">The name of the unrecognized attribute.</param>
            <param name="value">The value of the unrecognized attribute.</param>
            <returns><see langword="true"/> if the processing of the element should continue; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#ExceptionHandling#Configuration#CustomHandlerData}#BaseGetPropertyValue(System.Configuration.ConfigurationProperty)">
            <summary>Invokes the inherited behavior.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#ExceptionHandling#Configuration#CustomHandlerData}#BaseSetPropertyValue(System.Configuration.ConfigurationProperty,System.Object)">
            <summary>Invokes the inherited behavior.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#ExceptionHandling#Configuration#CustomHandlerData}#BaseUnmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Invokes the inherited behavior.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#ExceptionHandling#Configuration#CustomHandlerData}#BaseReset(System.Configuration.ConfigurationElement)">
            <summary>Invokes the inherited behavior.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#ExceptionHandling#Configuration#CustomHandlerData}#BaseIsModified">
            <summary>Invokes the inherited behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.Attributes">
            <summary>
            Gets or sets custom configuration attributes.
            </summary>        		
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.Properties">
            <summary>
            Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection"/> of the properties that are defined for 
            this configuration element when implemented in a derived class. 
            </summary>
            <value>
            A <see cref="T:System.Configuration.ConfigurationPropertyCollection"/> of the properties that are defined for this
            configuration element when implemented in a derived class. 
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData.Microsoft#Practices#EnterpriseLibrary#Common#Configuration#IHelperAssistedCustomConfigurationData{Microsoft#Practices#EnterpriseLibrary#ExceptionHandling#Configuration#CustomHandlerData}#Helper">
            <summary>
            Gets the helper.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings">
            <summary>
            Represents the Exception Handling Application Block configuration section in a configuration file.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings.SectionName">
            <summary>
            Gets the configuration section name for the library.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings.GetExceptionHandlingSettings(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings"/> section in the configuration source.
            </summary>
            <param name="configurationSource">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> to get the section from.</param>
            <returns>The exception handling section.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings.#ctor">
            <summary>
            Initializes a new instance of an <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings.ExceptionPolicies">
            <summary>
            Gets a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData"/> objects.
            </summary>
            <value>
            A collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData"/> objects.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData">
            <summary>
            Represents the configuration for an <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicy"/>.
            </summary>    		
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData.#ctor">
            <summary>
            Creates a new instance of ExceptionPolicyData.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData"/> class with a name.
            </summary>
            <param name="name">
            The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData"/>.
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData.ExceptionTypes">
            <summary>
            Gets a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData"/> objects.
            </summary>
            <value>
            A collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData"/> objects.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData">
            <summary>
            Represents the configuration for an <see cref="T:System.Exception"/>
            that will be handled by an exception policy.
            </summary>		
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData.#ctor(System.String,System.Type,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.PostHandlingAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData"/> class with a name, the <see cref="T:System.Exception"/> type and a <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData.PostHandlingAction"/>.
            </summary>
            <param name="name">The name of the configured exception.</param>
            <param name="type">The <see cref="T:System.Exception"/> type.</param>
            <param name="postHandlingAction">One of the <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData.PostHandlingAction"/> values.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData.#ctor(System.String,System.String,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.PostHandlingAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData"/> class with a name, the fully qualified type name of the <see cref="T:System.Exception"/> and a <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData.PostHandlingAction"/>.
            </summary>
            <param name="name">The name of the configured exception.</param>
            <param name="typeName">The fully qualified type name of the <see cref="T:System.Exception"/> type.</param>
            <param name="postHandlingAction">One of the <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData.PostHandlingAction"/> values.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData.Type">
            <summary>
            Gets or sets the <see cref="T:System.Exception"/> type.
            </summary>
            <value>
            The <see cref="T:System.Exception"/> type
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData.TypeName">
            <summary>
            Gets or sets the fully qualified type name of the <see cref="T:System.Exception"/> type.
            </summary>
            <value>
            The fully qualified type name of the <see cref="T:System.Exception"/> type.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData.PostHandlingAction">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData.PostHandlingAction"/> for the exception.
            </summary>
            <value>
            One of the <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData.PostHandlingAction"/> values.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData.ExceptionHandlers">
            <summary>
            Gets a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlerData"/> objects.
            </summary>
            <value>
            A collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlerData"/> objects.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerDataManageabilityProvider">
            <summary>
            Provides an implementation for <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData"/> that
            splits policy overrides processing and WMI objects generation, performing approriate logging of 
            policy processing errors.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerDataManageabilityProvider.ProviderTypePropertyName">
            <summary>
            The name of the provider type property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerDataManageabilityProvider.AttributesPropertyName">
            <summary>
            The name of the attributes property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerDataManageabilityProvider.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerDataManageabilityProvider"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerDataManageabilityProvider.AddAdministrativeTemplateDirectives(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)">
            <summary>
            Adds the ADM instructions that describe the policies that can be used to override the properties of
            a specific instance of the configuration element type managed by the receiver.
            </summary>
            <param name="contentBuilder">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder"/> to which the Adm instructions are to be appended.</param>
            <param name="configurationObject">The configuration object instance.</param>
            <param name="configurationSource">The configuration source from where to get additional configuration
            information, if necessary.</param>
            <param name="elementPolicyKeyName">The key for the element's policies.</param>
            <remarks>
            The default implementation for this method creates a policy, using 
            <see cref="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1.ElementPolicyNameTemplate"/> to create the policy name and invoking
            <see cref="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1.AddElementAdministrativeTemplateParts(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,`0,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)"/>
            to add the policy parts.
            Subclasses managing objects that must not create a policy must override this method to just add the parts.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerDataManageabilityProvider.AddElementAdministrativeTemplateParts(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)">
            <summary>
            Adds the ADM parts that represent the properties of
            a specific instance of the configuration element type managed by the receiver.
            </summary>
            <param name="contentBuilder">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder"/> to which the Adm instructions are to be appended.</param>
            <param name="configurationObject">The configuration object instance.</param>
            <param name="configurationSource">The configuration source from where to get additional configuration
            information, if necessary.</param>
            <param name="elementPolicyKeyName">The key for the element's policies.</param>
            <remarks>
            Subclasses that manage custom provider's configuration objects with additional properties may
            override this method to add the corresponding parts.
            </remarks>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1.AddAdministrativeTemplateDirectives(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,`0,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerDataManageabilityProvider.GenerateWmiObjects(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData,System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting})">
            <summary>
            Creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting"/> instances that describe the 
            configurationObject.
            </summary>
            <param name="configurationObject">The configuration object for instances that must be managed.</param>
            <param name="wmiSettings">A collection to where the generated WMI objects are to be added.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomExceptionHandlerDataWmiMapper">
            <summary>
            Represents a mapper for custom exception handler configuration to Wmi.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomExceptionHandlerDataWmiMapper.GenerateWmiObjects(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData,System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting})">
            <summary>
            Creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerSetting"/> instances that describe the 
            configurationObject.
            </summary>
            <param name="data">The configuration object for instances that must be managed.</param>
            <param name="wmiSettings">A collection to where the generated WMI objects are to be added.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerSetting">
            <summary>
            Represents the configuration information from a 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.CustomHandlerData"/> instance.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting">
            <summary>
            Represents the configuration information for an instance of a concrete subclass of
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlerData"/>.
            </summary>
            <remarks>
            There way to relate the objects representing an <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData"/> instance
            and the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlerData"/> instances in its
            <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData.ExceptionHandlers"/> collection is through
            the <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.ExceptionType"/> and
            <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.Policy"/> properties. Also,
            the order of the handlers in the Handlers collection is represented with the 
            <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.Order"/> property as the order 
            of the handlers is relevant to the exception handling process.
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionPolicySetting"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerSetting"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerSetting"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerSetting"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.#ctor(System.Configuration.ConfigurationElement,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting"/> class.
            </summary>
            <param name="name">The name of the exception handler.</param>
            <param name="sourceElement"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.Publish">
            <summary>
            Makes the setting available for WMI clients.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.Revoke">
            <summary>
            Makes the setting unavailable for WMI clients.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.ClearPublishedInstances">
            <summary>
            Clear collection of published instances.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.GetInstances``1">
            <summary>
            Returns an enumeration of the published <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionSetting"/> instances.
            </summary>
            <typeparam name="T">A valid <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.NamedConfigurationSetting"/> class.</typeparam>
            <returns><see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.NamedConfigurationSetting"/></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.BindInstance``1(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.NamedConfigurationSetting"/> instance corresponding to the provided values for the key properties.
            </summary>
            <param name="applicationName">The value for the ApplicationName key property.</param>
            <param name="sectionName">The value for the SectionName key property.</param>
            <param name="policy"></param>
            <param name="exceptionType"></param>
            <param name="name">The value for the Name key property.</param>
            <returns>The published <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.NamedConfigurationSetting"/> instance specified by the values for the key properties,
            or <see langword="null"/> if no such an instance is currently published.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.Name">
            <summary>
            Gets the name that identifies the represented configuration information.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.ApplicationName">
            <summary>
            Get and set the application name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.SectionName">
            <summary>
            Get and set the section name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.ExceptionType">
            <summary>
            Gets the type of the exception to which the handler is registered.
            </summary>
            <remarks>
            This property is used toghether with <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.Policy"/>
            to relate the objects representing exception policies, exception types and exception handlers.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.Policy">
            <summary>
            Gets the name of the policy to which the handler is registered.
            </summary>
            <remarks>
            This property is used toghether with <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.ExceptionType"/>
            to relate the objects representing exception policies, exception types and exception handlers.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting.Order">
            <summary>
            Gets the order for the represented hadler among the collection of handlers registered to hande the 
            same exception type in the same exception policy.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerSetting.#ctor(System.Configuration.ConfigurationElement,System.String,System.String,System.String[])">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerSetting"/> class with a configuration element, the name of the handler, 
            the filter type, and the attributes for the handler.
            </summary>
            <param name="sourceElement">The configuration element.</param>
            <param name="name">The name of the handler.</param>
            <param name="filterType">The filter type.</param>
            <param name="attributes">The attributes for the handler.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerSetting.GetInstances">
            <summary>
            Returns an enumeration of the published <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerSetting"/> instances.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerSetting.BindInstance(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerSetting"/> instance corresponding to the provided values for the key properties.
            </summary>
            <param name="ApplicationName">The value for the ApplicationName key property.</param>
            <param name="SectionName">The value for the SectionName key property.</param>
            <param name="Policy"></param>
            <param name="ExceptionType"></param>
            <param name="Name">The value for the Name key property.</param>
            <returns>The published <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerSetting"/> instance specified by the values for the key properties, or <see langword="null"/> if no such an instance is currently published.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerSetting.SaveChanges(System.Configuration.ConfigurationElement)">
            <summary>
            Saves the changes on the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerSetting"/> to its corresponding configuration object.
            </summary>
            <param name="sourceElement">The configuration object on which the changes must be saved.</param>
            <returns><see langword="true"/> if changes have been saved, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerSetting.HandlerType">
            <summary>
            Gets the name of the type for the custom exception handler.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.CustomHandlerSetting.Attributes">
            <summary>
            Gets the collection of attributes for the custom exception handler represented as a 
            <see cref="T:System.String"/> array of key/value pairs.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsManageabilityProvider">
            <summary>
            <para>This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.</para>
            Represents the behavior required to provide Group Policy updates and to publish the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting"/> 
            instances associated to the configuration information for the Exception Handling Application Block, and it also manages
            the creation of the ADM template categories and policies required to edit Group Policy Objects for the block.
            </summary>
            <remarks>
            This class performs the actual Group Policy update and Wmi object generation for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings"/>
            configuration section and its <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData"/> instances together with the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData"/>
            objects they contain. Processing for <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlerData"/> instances is delegated to 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProvider"/> objects registered to the handler data types.
            </remarks>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsManageabilityProvider.PoliciesKeyName">
            <summary>
            The name of the policies property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsManageabilityProvider.PolicyTypesPropertyName">
            <summary>
            The name of the policy types property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsManageabilityProvider.PolicyTypePostHandlingActionPropertyName">
            <summary>
            The name of the policy post handling action property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsManageabilityProvider.PolicyTypeHandlersPropertyName">
            <summary>
            The name of the exception handlers property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsManageabilityProvider.#ctor(System.Collections.Generic.IDictionary{System.Type,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProvider})">
            <summary>
            <para>This method supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.</para>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsManageabilityProvider"/> class with a 
            given set of manageability providers to use when dealing with the configuration for exception handlers.
            </summary>
            <param name="subProviders">The mapping from configuration element type to
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProvider"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsManageabilityProvider.AddAdministrativeTemplateDirectives(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)">
            <summary>
            <para>This method supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.</para>
            Adds the ADM instructions that describe the policies that can be used to override the configuration
            information for the Exception Handling Application Block.
            </summary>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProvider.AddAdministrativeTemplateDirectives(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,System.Configuration.ConfigurationSection,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsManageabilityProvider.OverrideWithGroupPoliciesForConfigurationSection(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey)">
            <summary>
            Overrides the <paramref name="configurationSection"/>'s properties with the Group Policy values from 
            the registry.
            </summary>
            <param name="configurationSection">The configuration section that must be managed.</param>
            <param name="policyKey">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey"/> which holds the Group Policy overrides.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsManageabilityProvider.OverrideWithGroupPoliciesAndGenerateWmiObjectsForConfigurationElements(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings,System.Boolean,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey,System.Boolean,System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting})">
            <summary>
            Overrides the <paramref name="configurationSection"/>'s configuration elements' properties 
            with the Group Policy values from the registry, if any, and creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting"/> 
            instances that describe these configuration elements.
            </summary>
            <param name="configurationSection">The configuration section that must be managed.</param>
            <param name="readGroupPolicies"><see langword="true"/> if Group Policy overrides must be applied; otherwise, 
            <see langword="false"/>.</param>
            <param name="machineKey">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey"/> which holds the Group Policy overrides for the 
            configuration section at the machine level, or <see langword="null"/> 
            if there is no such registry key.</param>
            <param name="userKey">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey"/> which holds the Group Policy overrides for the 
            configuration section at the user level, or <see langword="null"/> 
            if there is no such registry key.</param>
            <param name="generateWmiObjects"><see langword="true"/> if WMI objects must be generated; otherwise, 
            <see langword="false"/>.</param>
            <param name="wmiSettings">A collection to where the generated WMI objects are to be added.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsManageabilityProvider.GenerateWmiObjectsForConfigurationSection(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings,System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting})">
            <summary>
            
            </summary>
            <param name="configurationSection"></param>
            <param name="wmiSettings"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsManageabilityProvider.SectionCategoryName">
            <summary>
            Gets the name of the category that represents the whole configuration section.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsManageabilityProvider.SectionName">
            <summary>
            Gets the name of the managed configuration section.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsWmiMapper">
            <summary>
            Represensta a mapper for excetion handling configuration to Wmi.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsWmiMapper.GenerateWmiObjects(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings,System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting})">
            <summary>
            Creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting"/> instances that describe the 
            configurationObject.
            </summary>
            <param name="configurationObject">The configuration object for instances that must be managed.</param>
            <param name="wmiSettings">A collection to where the generated WMI objects are to be added.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsWmiMapper.GenerateExceptionTypeWmiObjects(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData,System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting})">
            <summary>
            Creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting"/> instances that describe the configurationObject.
            </summary>
            <param name="exceptionType"><see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData"/> instance with Exception settings.</param>
            <param name="parentPolicy"><see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData"/> instance with Exception Policy settings.</param>
            <param name="wmiSettings">A collection to where the generated WMI objects are to be added.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlingSettingsWmiMapper.GenerateExceptionPolicyDataWmiObjects(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData,System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting})">
            <summary>
            Creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionPolicySetting"/> instances that describe the 
            configurationObject.
            </summary>
            <param name="policy">The configuration object for instances that must be managed.</param>
            <param name="wmiSettings">A collection to where the generated WMI objects are to be added.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionPolicySetting">
            <summary>
            Represents the configuration information for a 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData"/> instance.
            </summary>
            <remarks>
            ExceptionPolicyData do not have any properties of their own that are not collections of other configuration objects.
            Instances of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionPolicySetting"/> are still published for the sake of completeness.
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionPolicySetting.#ctor(System.Configuration.ConfigurationElement,System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionPolicySetting"/> class with a configuration element and the name of the policy.
            </summary>
            <param name="sourceElement">The configuration element for the policy.</param>
            <param name="name">The name of the policy</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionPolicySetting.GetInstances">
            <summary>
            Returns an enumeration of the published <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionPolicySetting"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionPolicySetting.BindInstance(System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionPolicySetting"/> instance corresponding to the provided values for the key properties.
            </summary>
            <param name="ApplicationName">The value for the ApplicationName key property.</param>
            <param name="SectionName">The value for the SectionName key property.</param>
            <param name="Name">The value for the Name key property.</param>
            <returns>The published <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionPolicySetting"/> instance specified by the values for
            the key properties, or <see langword="null"/> if no such an instance is currently published.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionPolicySetting.SaveChanges(System.Configuration.ConfigurationElement)">
            <summary>
            Saves the changes on the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionPolicySetting"/> to its corresponding configuration object.
            </summary>
            <param name="sourceElement">The configuration object on which the changes must be saved.</param>
            <returns><see langword="true"/> if changes have been saved, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting">
            <summary>
            Represents the configuration information for a 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData"/> instance.
            </summary>
            <remarks>
            ExceptionTypeData instances are held by 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData"/>, but
            the wmi objects that represent them related only by matching values for the 
            <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting.Policy"/>
            property.
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionPolicySetting"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionHandlerSetting"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting.#ctor(System.Configuration.ConfigurationElement,System.String,System.String,System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting"/> class with a coniguration source,
            the name of the exception type, the type name and the post handling action.
            </summary>
            <param name="sourceElement"></param>
            <param name="name"></param>
            <param name="exceptionTypeName"></param>
            <param name="postHandlingAction"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting.Publish">
            <summary>
            Makes the setting available for WMI clients.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting.Revoke">
            <summary>
            Makes the setting unavailable for WMI clients.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting.ClearPublishedInstances">
            <summary>
            Clear collection of published instances.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting.GetInstances">
            <summary>
            Returns an enumeration of the published <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting.BindInstance(System.String,System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting"/> instance corresponding to the provided values for the key properties.
            </summary>
            <param name="ApplicationName">The value for the ApplicationName key property.</param>
            <param name="SectionName">The value for the SectionName key property.</param>
            <param name="Policy"></param>
            <param name="Name">The value for the Name key property.</param>
            <returns>The published <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting"/> instance specified by the values for the key properties,
            or <see langword="null"/> if no such an instance is currently published.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting.SaveChanges(System.Configuration.ConfigurationElement)">
            <summary>
            Saves the changes on the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting"/> to its corresponding configuration object.
            </summary>
            <param name="sourceElement">The configuration object on which the changes must be saved.</param>
            <returns><see langword="true"/> if changes have been saved, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting.Name">
            <summary>
            Gets the name that identifies the represented configuration information.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting.ApplicationName">
            <summary>
            Get and set the application name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting.SectionName">
            <summary>
            Get and set the section name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting.ExceptionTypeName">
            <summary>
            Gets the name of the exception type to handle.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting.Policy">
            <summary>
            Gets the name of the policy to which the represented 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData"/> instance
            belongs.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ExceptionTypeSetting.PostHandlingAction">
            <summary>
            Gets the name of the value for the for the post handling action.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.Properties.Resources.CustomHandlerAttributesPartName">
            <summary>
              Looks up a localized string similar to Attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.Properties.Resources.CustomHandlerTypePartName">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.Properties.Resources.ExceptionTypeHandlersPartName">
            <summary>
              Looks up a localized string similar to Handlers.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.Properties.Resources.ExceptionTypePolicyNameTemplate">
            <summary>
              Looks up a localized string similar to Specify settings for exception type &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.Properties.Resources.ExceptionTypePostHandlingActionPartName">
            <summary>
              Looks up a localized string similar to Post handling action.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.Properties.Resources.HandlerPartNameTemplate">
            <summary>
              Looks up a localized string similar to Handler: &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.Properties.Resources.ReplaceHandlerExceptionMessagePartName">
            <summary>
              Looks up a localized string similar to Exception message.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.Properties.Resources.ReplaceHandlerExceptionTypePartName">
            <summary>
              Looks up a localized string similar to Exception type.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.Properties.Resources.SectionCategoryName">
            <summary>
              Looks up a localized string similar to Exception handling.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.Properties.Resources.SectionPolicyName">
            <summary>
              Looks up a localized string similar to Specify settings for the Exception Handling Application Block.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.Properties.Resources.WrapHandlerExceptionMessagePartName">
            <summary>
              Looks up a localized string similar to Exception message.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.Properties.Resources.WrapHandlerExceptionTypePartName">
            <summary>
              Looks up a localized string similar to Exception type.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerDataManageabilityProvider">
            <summary>
            Provides an implementation for <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData"/> that
            splits policy overrides processing and WMI objects generation, performing approriate logging of 
            policy processing errors.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerDataManageabilityProvider.ExceptionMessagePropertyName">
            <summary>
            The name of the exception message property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerDataManageabilityProvider.ReplaceExceptionTypePropertyName">
            <summary>
            The name of the replace excetion type property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerDataManageabilityProvider.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerDataManageabilityProvider"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerDataManageabilityProvider.AddAdministrativeTemplateDirectives(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)">
            <summary>
            Adds the ADM instructions that describe the policies that can be used to override the properties of
            a specific instance of the configuration element type managed by the receiver.
            </summary>
            <param name="contentBuilder">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder"/> to which the Adm instructions are to be appended.</param>
            <param name="configurationObject">The configuration object instance.</param>
            <param name="configurationSource">The configuration source from where to get additional configuration
            information, if necessary.</param>
            <param name="elementPolicyKeyName">The key for the element's policies.</param>
            <remarks>
            The default implementation for this method creates a policy, using 
            <see cref="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1.ElementPolicyNameTemplate"/> to create the policy name and invoking
            <see cref="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1.AddElementAdministrativeTemplateParts(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,`0,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)"/>
            to add the policy parts.
            Subclasses managing objects that must not create a policy must override this method to just add the parts.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerDataManageabilityProvider.AddElementAdministrativeTemplateParts(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)">
            <summary>
            Adds the ADM parts that represent the properties of
            a specific instance of the configuration element type managed by the receiver.
            </summary>
            <param name="contentBuilder">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder"/> to which the Adm instructions are to be appended.</param>
            <param name="configurationObject">The configuration object instance.</param>
            <param name="configurationSource">The configuration source from where to get additional configuration
            information, if necessary.</param>
            <param name="elementPolicyKeyName">The key for the element's policies.</param>
            <remarks>
            Subclasses managing objects that must not create a policy will likely need to include the elements' keys when creating the parts.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerDataManageabilityProvider.OverrideWithGroupPolicies(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey)">
            <summary>
            Overrides the <paramref name="configurationObject"/>'s properties with the Group Policy values from the 
            registry.
            </summary>
            <param name="configurationObject">The configuration object for instances that must be managed.</param>
            <param name="policyKey">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey"/> which holds the Group Policy overrides for the 
            configuration element.</param>
            <remarks>Subclasses implementing this method must retrieve all the override values from the registry
            before making modifications to the <paramref name="configurationObject"/> so any error retrieving
            the override values will cancel policy processing.</remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerDataManageabilityProvider.GenerateWmiObjects(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData,System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting})">
            <summary>
            Creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting"/> instances that describe the 
            configurationObject.
            </summary>
            <param name="configurationObject">The configuration object for instances that must be managed.</param>
            <param name="wmiSettings">A collection to where the generated WMI objects are to be added.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerDataManageabilityProvider.ElementPolicyNameTemplate">
            <summary>
            Gets the template for the name of the policy associated to the object.
            </summary>
            <remarks>
            Elements that override 
            <see cref="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1.AddAdministrativeTemplateDirectives(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,`0,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)"/>
            to avoid creating a policy must still override this property.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerDataWmiMapper">
            <summary>
            Represents a mapper for a replace handler configuration to Wmi.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerDataWmiMapper.GenerateWmiObjects(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData,System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting})">
            <summary>
            Creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings"/> instances that describe the 
            configurationObject.
            </summary>
            <param name="configurationObject">The configuration object for instances that must be managed.</param>
            <param name="wmiSettings">A collection to where the generated WMI objects are to be added.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerDataWmiMapper.SaveChanges(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerSetting,System.Configuration.ConfigurationElement)">
            <summary>
            Save the changes in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData"/> instance.
            </summary>
            <param name="replaceHandlerSettingSetting">Changed <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerSetting"/> instance.</param>
            <param name="sourceElement">Parent <see cref="T:System.Configuration.ConfigurationElement"/>.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerSetting">
            <summary>
            Represents the configuration information from a 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData"/> instance.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlerData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerSetting.#ctor(System.Configuration.ConfigurationElement,System.String,System.String,System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerSetting"/> class with a configuration source element,
            the name of the handler, the exception message for the handler, and the handler type.
            </summary>
            <param name="sourceElement">The configuraiton source.</param>
            <param name="name">The name of the handler.</param>
            <param name="exceptionMessage">The exception message.</param>
            <param name="replaceExceptionType">The type of the replace exception.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerSetting.GetInstances">
            <summary>
            Returns an enumeration of the published <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerSetting"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerSetting.BindInstance(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerSetting"/> instance corresponding to the provided values for the key properties.
            </summary>
            <param name="ApplicationName">The value for the ApplicationName key property.</param>
            <param name="SectionName">The value for the SectionName key property.</param>
            <param name="Policy"></param>
            <param name="ExceptionType"></param>
            <param name="Name">The value for the Name key property.</param>
            <returns>The published <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerSetting"/> instance specified by the values for the key properties,
            or <see langword="null"/> if no such an instance is currently published.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerSetting.SaveChanges(System.Configuration.ConfigurationElement)">
            <summary>
            Saves the changes on the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerSetting"/> to its corresponding configuration object.
            </summary>
            <param name="sourceElement">The configuration object on which the changes must be saved.</param>
            <returns><see langword="true"/> if changes have been saved, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerSetting.ExceptionMessage">
            <summary>
            Gets the message for the new replacing exception.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.ReplaceHandlerSetting.ReplaceExceptionType">
            <summary>
            Gets the name of the type for the new replacing exception.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerDataManageabilityProvider">
            <summary>
            Provides an implementation for <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData"/> that
            splits policy overrides processing and WMI objects generation, performing approriate logging of 
            policy processing errors.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerDataManageabilityProvider.ExceptionMessagePropertyName">
            <summary>
            The name of the exception message property.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerDataManageabilityProvider.WrapExceptionTypePropertyName">
            <summary>
            The name of the wrap excetion type property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerDataManageabilityProvider.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerDataManageabilityProvider"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerDataManageabilityProvider.AddAdministrativeTemplateDirectives(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)">
            <summary>
            Adds the ADM instructions that describe the policies that can be used to override the properties of
            a specific instance of the configuration element type managed by the receiver.
            </summary>
            <param name="contentBuilder">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder"/> to which the Adm instructions are to be appended.</param>
            <param name="configurationObject">The configuration object instance.</param>
            <param name="configurationSource">The configuration source from where to get additional configuration
            information, if necessary.</param>
            <param name="elementPolicyKeyName">The key for the element's policies.</param>
            <remarks>
            The default implementation for this method creates a policy, using 
            <see cref="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1.ElementPolicyNameTemplate"/> to create the policy name and invoking
            <see cref="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1.AddElementAdministrativeTemplateParts(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,`0,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)"/>
            to add the policy parts.
            Subclasses managing objects that must not create a policy must override this method to just add the parts.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerDataManageabilityProvider.AddElementAdministrativeTemplateParts(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)">
            <summary>
            Adds the ADM parts that represent the properties of
            a specific instance of the configuration element type managed by the receiver.
            </summary>
            <param name="contentBuilder">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder"/> to which the Adm instructions are to be appended.</param>
            <param name="configurationObject">The configuration object instance.</param>
            <param name="configurationSource">The configuration source from where to get additional configuration
            information, if necessary.</param>
            <param name="elementPolicyKeyName">The key for the element's policies.</param>
            <remarks>
            Subclasses managing objects that must not create a policy will likely need to include the elements' keys when creating the parts.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerDataManageabilityProvider.OverrideWithGroupPolicies(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey)">
            <summary>
            Overrides the <paramref name="configurationObject"/>'s properties with the Group Policy values from the 
            registry.
            </summary>
            <param name="configurationObject">The configuration object for instances that must be managed.</param>
            <param name="policyKey">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.IRegistryKey"/> which holds the Group Policy overrides for the 
            configuration element.</param>
            <remarks>Subclasses implementing this method must retrieve all the override values from the registry
            before making modifications to the <paramref name="configurationObject"/> so any error retrieving
            the override values will cancel policy processing.</remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerDataManageabilityProvider.GenerateWmiObjects(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData,System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting})">
            <summary>
            Creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting"/> instances that describe the 
            configurationObject.
            </summary>
            <param name="configurationObject">The configuration object for instances that must be managed.</param>
            <param name="wmiSettings">A collection to where the generated WMI objects are to be added.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerDataManageabilityProvider.ElementPolicyNameTemplate">
            <summary>
            Gets the template for the name of the policy associated to the object.
            </summary>
            <remarks>
            Elements that override 
            <see cref="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1.AddAdministrativeTemplateDirectives(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Adm.AdmContentBuilder,`0,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,System.String)"/>
            to avoid creating a policy must still override this property.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerDataWmiMapper">
            <summary>
            Represents a mapper for wrap hanlder configuration to Wmi.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerDataWmiMapper.GenerateWmiObjects(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData,System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSetting})">
            <summary>
            Creates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerSetting"/> instances that describe the 
            configurationObject.
            </summary>
            <param name="configurationObject">The configuration object for instances that must be managed.</param>
            <param name="wmiSettings">A collection to where the generated WMI objects are to be added.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerDataWmiMapper.SaveChanges(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerSetting,System.Configuration.ConfigurationElement)">
            <summary>
            Save the changes in a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData"/> instance.
            </summary>
            <param name="wrapHandlerSettingSetting">Changed <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerSetting"/> instance.</param>
            <param name="sourceElement">Parent <see cref="T:System.Configuration.ConfigurationElement"/>.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerSetting">
            <summary>
            Represents the configuration information from a 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData"/> instance.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlerData"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerSetting.#ctor(System.Configuration.ConfigurationElement,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="exceptionMessage"></param>
            <param name="wrapExceptionType"></param>
            <param name="sourceElement"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerSetting.GetInstances">
            <summary>
            Returns an enumeration of the published <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerSetting"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerSetting.BindInstance(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerSetting"/> instance corresponding to the provided values for the key properties.
            </summary>
            <param name="ApplicationName">The value for the ApplicationName key property.</param>
            <param name="SectionName">The value for the SectionName key property.</param>
            <param name="Policy"></param>
            <param name="ExceptionType"></param>
            <param name="Name">The value for the Name key property.</param>
            <returns>The published <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerSetting"/> instance specified by the values for the key properties,
            or <see langword="null"/> if no such an instance is currently published.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerSetting.SaveChanges(System.Configuration.ConfigurationElement)">
            <summary>
            Saves the changes on the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerSetting"/> to its corresponding configuration object.
            </summary>
            <param name="sourceElement">The configuration object on which the changes must be saved.</param>
            <returns><see langword="true"/> if changes have been saved, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerSetting.ExceptionMessage">
            <summary>
            Gets the message for the wrapping exception.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Manageability.WrapHandlerSetting.WrapExceptionType">
            <summary>
            Gets the name of the type for the wrapping exception.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData">
            <summary>
            Represents the configuration data for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler"/>.
            </summary>		
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData"/> class with a name, exception message, and replace exception type name.
            </summary>
            <param name="name">
            The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData"/>.
            </param>
            <param name="exceptionMessage">
            The exception message replacement.
            </param>
            <param name="replaceExceptionTypeName">
            The fully qualified assembly name the type of the replacement exception.
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData.ExceptionMessage">
            <summary>
            Gets or sets the message for the replacement exception.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData.ExceptionMessageResourceName">
            <summary>
            !~!
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData.ExceptionMessageResourceType">
            <summary>
            !~!
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData.ReplaceExceptionType">
            <summary>
            Gets or sets the type of the replacement exception.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData.ReplaceExceptionTypeName">
            <summary>
            Gets or sets the fully qualified type name of the replacement exception.
            </summary>
            <value>
            The fully qualified type name of the replacement exception.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerAssembler">
            <summary>
            This type supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Represents the process to build a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler"/> described by a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData"/> configuration object.
            </summary>
            <remarks>This type is linked to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData"/> type and it is used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlerCustomFactory"/> 
            to build the specific <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.IExceptionHandler"/> object represented by the configuration object.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerAssembler.Assemble(Microsoft.Practices.ObjectBuilder2.IBuilderContext,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlerData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <summary>
            This method supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Builds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler"/> based on an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData"/>.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlerCustomFactory"/>
            <param name="context">The <see cref="T:Microsoft.Practices.ObjectBuilder2.IBuilderContext"/> that represents the current building process.</param>
            <param name="objectConfiguration">The configuration object that describes the object to build. Must be an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ReplaceHandlerData"/>.</param>
            <param name="configurationSource">The source for configuration objects.</param>
            <param name="reflectionCache">The cache to use retrieving reflection information.</param>
            <returns>A fully initialized instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Unity.ExceptionHandlingBlockExtension">
            <summary>
            Container extension to the policies required to create the Exception Handling Application Block's
            objects described in the configuration file.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Unity.ExceptionHandlingBlockExtension.Initialize">
            <summary>
            Adds the policies describing the Exception Handling Application Block's objects.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Unity.ReplaceHandlerPolicyCreator">
            <summary>
            This type supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Represents the process to create the container policies required to create a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.Unity.WrapHandlerPolicyCreator">
            <summary>
            This type supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Represents the process to create the container policies required to create a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData">
            <summary>
            Represents the configuration data for a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler"/>.
            </summary>	
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData"/> class with a name, an exception message, and the fully qualified assembly name of the type of the wrapping exception.
            </summary>
            <param name="name">
            The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData"/>.
            </param>
            <param name="exceptionMessage">
            The exception message replacement.
            </param>
            <param name="wrapExceptionTypeName">
            The fully qualified assembly name of type of the wrapping exception
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData.ExceptionMessage">
            <summary>
            Gets or sets the message for the replacement exception.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData.ExceptionMessageResourceType">
            <summary>
            !~!
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData.ExceptionMessageResourceName">
            <summary>
            !~!
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData.WrapExceptionType">
            <summary>
            Gets or sets the type of the replacement exception.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData.WrapExceptionTypeName">
            <summary>
            Gets or sets the fully qualified type name of the replacement exception.
            </summary>
            <value>
            The fully qualified type name of the replacement exception.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerAssembler">
            <summary>
            This type supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Represents the process to build a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler"/> described by a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData"/> configuration object.
            </summary>
            <remarks>This type is linked to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData"/> type and it is used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlerCustomFactory"/> 
            to build the specific <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.IExceptionHandler"/> object represented by the configuration object.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerAssembler.Assemble(Microsoft.Practices.ObjectBuilder2.IBuilderContext,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlerData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <summary>
            This method supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Builds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler"/> based on an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData"/>.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlerCustomFactory"/>
            <param name="context">The <see cref="T:Microsoft.Practices.ObjectBuilder2.IBuilderContext"/> that represents the current building process.</param>
            <param name="objectConfiguration">The configuration object that describes the object to build. Must be an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.WrapHandlerData"/>.</param>
            <param name="configurationSource">The source for configuration objects.</param>
            <param name="reflectionCache">The cache to use retrieving reflection information.</param>
            <returns>A fully initialized instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.DefaultExceptionHandlingErrorEventArgs">
            <summary>
            Provides data for the DefaultExceptionHandlingInstrumentationProvider.exceptionHandlingErrorOccurred event.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.DefaultExceptionHandlingErrorEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.DefaultExceptionHandlingErrorEventArgs"/> class.
            </summary>
            <param name="policyName">The name of the associated policy.</param>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.DefaultExceptionHandlingErrorEventArgs.PolicyName">
            <summary>
            Gets the name of the policy associated to the error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.DefaultExceptionHandlingErrorEventArgs.Message">
            <summary>
            Gets the message that describes the error.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter">
            <summary>
            Represents the base class from which all implementations of exception formatters must derive. The formatter provides functionality for formatting <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.Exception"/> objects.
            </summary>	
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.#ctor(System.Exception,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter"/> class with an <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.Exception"/> to format.
            </summary>
            <param name="exception">The <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.Exception"/> object to format.</param>
            <param name="handlingInstanceId">The id of the handling chain.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.Format">
            <summary>
            Formats the <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.Exception"/> into the underlying stream.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteException(System.Exception,System.Exception)">
            <summary>
            Formats the exception and all nested inner exceptions.
            </summary>
            <param name="exceptionToFormat">The exception to format.</param>
            <param name="outerException">The outer exception. This 
            value will be null when writing the outer-most exception.</param>
            <remarks>
            <para>This method calls itself recursively until it reaches
            an exception that does not have an inner exception.</para>
            <para>
            This is a template method which calls the following
            methods in order
            <list type="number">
            <item>
            <description><see cref="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteExceptionType(System.Type)"/></description>
            </item>
            <item>
            <description><see cref="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteMessage(System.String)"/></description>
            </item>
            <item>
            <description><see cref="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteSource(System.String)"/></description>
            </item>
            <item>
            <description><see cref="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteHelpLink(System.String)"/></description>
            </item>
            <item>
            <description><see cref="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteReflectionInfo(System.Exception)"/></description>
            </item>
            <item>
            <description><see cref="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteStackTrace(System.String)"/></description>
            </item>
            <item>
            <description>If the specified exception has an inner exception
            then it makes a recursive call. <see cref="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteException(System.Exception,System.Exception)"/></description>
            </item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteReflectionInfo(System.Exception)">
            <summary>
            Formats an <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.Exception"/> using reflection to get the information.
            </summary>
            <param name="exceptionToFormat">
            The <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.Exception"/> to be formatted.
            </param>
            <remarks>
            <para>This method reflects over the public, instance properties 
            and public, instance fields
            of the specified exception and prints them to the formatter.  
            Certain property names are ignored
            because they are handled explicitly in other places.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteDescription">
            <summary>
            When overridden by a class, writes a description of the caught exception.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteDateTime(System.DateTime)">
            <summary>
            When overridden by a class, writes the current time.
            </summary>
            <param name="utcNow">The current time.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteExceptionType(System.Type)">
            <summary>
            When overridden by a class, writes the <see cref="T:System.Type"/> of the current exception.
            </summary>
            <param name="exceptionType">The <see cref="T:System.Type"/> of the exception.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteMessage(System.String)">
            <summary>
            When overridden by a class, writes the <see cref="P:System.Exception.Message"/>.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteSource(System.String)">
            <summary>
            When overridden by a class, writes the value of the <see cref="P:System.Exception.Source"/> property.
            </summary>
            <param name="source">The source of the exception.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteHelpLink(System.String)">
            <summary>
            When overridden by a class, writes the value of the <see cref="P:System.Exception.HelpLink"/> property.
            </summary>
            <param name="helpLink">The help link for the exception.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteStackTrace(System.String)">
            <summary>
            When overridden by a class, writes the value of the <see cref="P:System.Exception.StackTrace"/> property.
            </summary>
            <param name="stackTrace">The stack trace of the exception.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WritePropertyInfo(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            When overridden by a class, writes the value of a <see cref="T:System.Reflection.PropertyInfo"/> object.
            </summary>
            <param name="propertyInfo">The reflected <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
            <param name="value">The value of the <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteFieldInfo(System.Reflection.FieldInfo,System.Object)">
            <summary>
            When overridden by a class, writes the value of a <see cref="T:System.Reflection.FieldInfo"/> object.
            </summary>
            <param name="fieldInfo">The reflected <see cref="T:System.Reflection.FieldInfo"/> object.</param>
            <param name="value">The value of the <see cref="T:System.Reflection.FieldInfo"/> object.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.WriteAdditionalInfo(System.Collections.Specialized.NameValueCollection)">
            <summary>
            When overridden by a class, writes additional properties if available.
            </summary>
            <param name="additionalInformation">Additional information to be included with the exception report</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.Exception">
            <summary>
            Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.Exception"/> to format.
            </summary>
            <value>
            The <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.Exception"/> to format.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.HandlingInstanceId">
            <summary>
            Gets the id of the handling chain requesting a formatting.
            </summary>
            <value>
            The id of the handling chain requesting a formatting, or <see cref="F:System.Guid.Empty"/> if no such id is available.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.AdditionalInfo">
            <summary>
            Gets additional information related to the <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.Exception"/> but not
            stored in the exception (eg: the time in which the <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.Exception"/> was 
            thrown).
            </summary>
            <value>
            Additional information related to the <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.Exception"/> but not
            stored in the exception (for example, the time when the <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionFormatter.Exception"/> was 
            thrown).
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandingInstaller">
            <summary>
            Let the system know that the InstallUtil.exe tool will be run against this assembly
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandingInstaller.#ctor">
            <summary>
            Represents the installer for the instrumentation events. Not intended for direct use.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandingInstaller.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandingInstaller.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandingInstaller.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlerCustomFactory">
            <summary>
            This type supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Represents the process to build an <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.IExceptionHandler"/> described by an isntance <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlerData"/> configuration object.
            </summary>
            <remarks>
            This is used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfiguredObjectStrategy"/> when an instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.IExceptionHandler"/> class is requested to 
            a properly configured <see cref="T:Microsoft.Practices.ObjectBuilder2.IBuilder"/> instance.
            </remarks>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlerCustomFactory.Instance">
            <summary>
            This field supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingConfigurationView">
            <summary>
            <para>Represents a view for navigating the <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingConfigurationView.ExceptionHandlingSettings"/> configuration data.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingConfigurationView.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingConfigurationView"/> class with an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> object.</para>
            </summary>
            <param name="configurationSource">
            <para>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> object.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingConfigurationView.GetExceptionPolicyData(System.String)">
            <summary>
            <para>Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData"/> from configuration by name.</para>
            </summary>
            <param name="policyName">
            <para>The name of the policy in configuration.</para>
            </param>
            <returns>
            <para>An <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData"/> object.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingConfigurationView.ExceptionHandlingSettings">
            <summary>
            <para>Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingConfigurationView.ExceptionHandlingSettings"/> configuration data.</para>
            </summary>
            <returns>
            <para>The <see cref="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingConfigurationView.ExceptionHandlingSettings"/> configuration data.</para>
            </returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingErrorEventArgs">
            <summary>
            Provides data for the <see cref="E:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider.exceptionHandlingErrorOccurred"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingErrorEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingErrorEventArgs"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingErrorEventArgs.Message">
            <summary>
            Gets the message that describes the error.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingException">
            <summary>
            An exception that occurred during the exception handling process.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingException.#ctor">
            <summary>
            Initializes with defaults.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingException.#ctor(System.String)">
            <summary>
            Initializes with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes with a specified error 
            message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            <para>The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManager">
            <summary>
            Non-static entry point to the exception handling functionality.
            </summary>
            <remarks>
            Instances of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManager"/> can be used to replace references to the static <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicy"/>
            facade.
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicy"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManager.HandleException(System.Exception,System.String,System.Exception@)">
            <summary>
            Handles the specified <see cref="T:System.Exception"/>
            object according to the rules configured for <paramref name="policyName"/>.
            </summary>
            <param name="exceptionToHandle">An <see cref="T:System.Exception"/> object.</param>
            <param name="policyName">The name of the policy to handle.</param>
            <param name="exceptionToThrow">The new <see cref="T:System.Exception"/> to throw, if any.</param>
            <remarks>
            If a rethrow is recommended and <paramref name="exceptionToThrow"/> is <see langword="null"/>,
            then the original exception <paramref name="exceptionToHandle"/> should be rethrown; otherwise,
            the exception returned in <paramref name="exceptionToThrow"/> should be thrown.
            </remarks>
            <returns>
            Whether or not a rethrow is recommended. 
            </returns>
            <example>
            The following code shows the usage of the 
            exception handling framework.
            <code>
            try
            {
            	Foo();
            }
            catch (Exception e)
            {
                Exception exceptionToThrow;
            	if (exceptionManager.HandleException(e, name, out exceptionToThrow))
            	{
            	  if(exceptionToThrow == null)
            	    throw;
            	  else
            	    throw exceptionToThrow;
            	}
            }
            </code>
            </example>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManager.HandleException(System.Exception,System.String)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManager.HandleException(System.Exception,System.String)">
            <summary>
            Handles the specified <see cref="T:System.Exception"/>
            object according to the rules configured for <paramref name="policyName"/>.
            </summary>
            <param name="exceptionToHandle">An <see cref="T:System.Exception"/> object.</param>
            <param name="policyName">The name of the policy to handle.</param>        
            <returns>
            Whether or not a rethrow is recommended.
            </returns>
            <example>
            The following code shows the usage of the 
            exception handling framework.
            <code>
            try
            {
            	Foo();
            }
            catch (Exception e)
            {
            	if (exceptionManager.HandleException(e, name)) throw;
            }
            </code>
            </example>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManager.Process(System.Action,System.String)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManager.Process(System.Action,System.String)">
            <summary>
            Excecutes the supplied delegate <paramref name="action"/> and handles 
            any thrown exception according to the rules configured for <paramref name="policyName"/>.
            </summary>
            <param name="action">The delegate to execute.</param>
            <param name="policyName">The name of the policy to handle.</param>        
            <example>
            The following code shows the usage of this method.
            <code>
            	exceptionManager.Process(() =&gt; { Foo(); }, "policy");
            </code>
            </example>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManager.HandleException(System.Exception,System.String)"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManagerImpl">
            <summary>
            Non-static entry point to the exception handling functionality.
            </summary>
            <remarks>
            Instances of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManagerImpl"/> can be used to replace references to the static <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicy"/>
            facade.
            </remarks>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicy"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManagerImpl.#ctor(System.Collections.Generic.IDictionary{System.String,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyImpl})">
            <summary>
            Initializes a new instance of the class <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManagerImpl"/> with a set of policies.
            </summary>
            <param name="exceptionPolicies"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManagerImpl.HandleException(System.Exception,System.String)">
            <summary>
            Handles the specified <see cref="T:System.Exception"/>
            object according to the rules configured for <paramref name="policyName"/>.
            </summary>
            <param name="exceptionToHandle">An <see cref="T:System.Exception"/> object.</param>
            <param name="policyName">The name of the policy to handle.</param>        
            <returns>
            Whether or not a rethrow is recommended.
            </returns>
            <example>
            The following code shows the usage of the 
            exception handling framework.
            <code>
            try
            {
            	Foo();
            }
            catch (Exception e)
            {
            	if (exceptionManager.HandleException(e, name)) throw;
            }
            </code>
            </example>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManagerImpl.Process(System.Action,System.String)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManagerImpl.HandleException(System.Exception,System.String,System.Exception@)">
            <summary>
            Handles the specified <see cref="T:System.Exception"/>
            object according to the rules configured for <paramref name="policyName"/>.
            </summary>
            <param name="exceptionToHandle">An <see cref="T:System.Exception"/> object.</param>
            <param name="policyName">The name of the policy to handle.</param>
            <param name="exceptionToThrow">The new <see cref="T:System.Exception"/> to throw, if any.</param>
            <remarks>
            If a rethrow is recommended and <paramref name="exceptionToThrow"/> is <see langword="null"/>,
            then the original exception <paramref name="exceptionToHandle"/> should be rethrown; otherwise,
            the exception returned in <paramref name="exceptionToThrow"/> should be thrown.
            </remarks>
            <returns>
            Whether or not a rethrow is recommended. 
            </returns>
            <example>
            The following code shows the usage of the 
            exception handling framework.
            <code>
            try
            {
            	Foo();
            }
            catch (Exception e)
            {
                Exception exceptionToThrow;
            	if (exceptionManager.HandleException(e, name, out exceptionToThrow))
            	{
            	  if(exceptionToThrow == null)
            	    throw;
            	  else
            	    throw exceptionToThrow;
            	}
            }
            </code>
            </example>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManagerImpl.HandleException(System.Exception,System.String)"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManagerImpl.Process(System.Action,System.String)">
            <summary>
            Excecutes the supplied delegate <paramref name="action"/> and handles 
            any thrown exception according to the rules configured for <paramref name="policyName"/>.
            </summary>
            <param name="action">The delegate to execute.</param>
            <param name="policyName">The name of the policy to handle.</param>        
            <example>
            The following code shows the usage of this method.
            <code>
            	exceptionManager.Process(() =&gt; { Foo(); }, "policy");
            </code>
            </example>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManagerImpl.HandleException(System.Exception,System.String)"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyCustomFactory">
            <summary>
            This type supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Represents the process to build an <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyImpl"/> described by a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData"/> configuration object.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyCustomFactory.CreateObject(Microsoft.Practices.ObjectBuilder2.IBuilderContext,System.String,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <summary>
            This method supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Builds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyImpl"/> based on an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionPolicyData"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.Practices.ObjectBuilder2.IBuilderContext"/> that represents the current building process.</param>
            <param name="name">The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyImpl"/> that should be created.</param>
            <param name="configurationSource">The source for configuration objects.</param>
            <param name="reflectionCache">The cache to use retrieving reflection information.</param>
            <returns>A fully initialized instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyImpl"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyCustomFactory.GetConfiguration(System.String,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            Returns the configuration object that represents the named <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyImpl"/> instance in the configuration source.
            </summary>
            <param name="id">The name of the required instance.</param>
            <param name="configurationSource">The configuration source where to look for the configuration object.</param>
            <returns>The configuration object that represents the instance with name <paramref name="name"/> in the logging 
            configuration section from <paramref name="configurationSource"/></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyEntryCustomFactory">
            <summary>
            This type supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Represents the general process to build an <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyEntry"/> object given a instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyEntryCustomFactory.Instance">
            <summary>
            This field supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyEntryCustomFactory.Create(Microsoft.Practices.ObjectBuilder2.IBuilderContext,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ObjectBuilder.ConfigurationReflectionCache)">
            <summary>
            This method supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Builds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyEntry"/> based on an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionTypeData"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.Practices.ObjectBuilder2.IBuilderContext"/> that represents the current building process.</param>
            <param name="objectConfiguration">The configuration object that describes the object to build.</param>
            <param name="configurationSource">The source for configuration objects.</param>
            <param name="reflectionCache">The cache to use retrieving reflection information.</param>
            <returns>A fully initialized instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyEntry"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyFactory">
            <summary>
            Factory for <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyImpl"/>s. This class is responsible for creating all the internal
            classes needed to implement a CacheManager.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyFactory.#ctor">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyFactory"/> class 
            with the default configuration source.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyFactory.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyFactory"/> class 
            with the given configuration source.</para>
            </summary>
            <param name="configurationSource">The configuration source that contains information on how to build the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyImpl"/> instances</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingEventLoggerCustomFactory">
            <summary>
            This type supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Represents the process to build a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingEventLogger"/> according to the instrumentation configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingEventLoggerCustomFactory.DoCreateObject(Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.Configuration.InstrumentationConfigurationSection)">
            <summary>
            This method supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Builds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingEventLogger"/>.
            </summary>
            <param name="instrumentationConfigurationSection">The instrumentation section that is used as configuration.</param>
            <returns>A fully initialized instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingEventLogger"/>.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingEventLogger">
            <summary>
            Is the instrumentation gateway when no instances of the objects from the block are involved.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingEventLogger.#ctor(System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingEventLogger"/> class.
            </summary>
            <param name="performanceCountersEnabled"><code>true</code> if updating performance counters is allowed, <code>false</code> otherwise.</param>
            <param name="eventLoggingEnabled"><code>true</code> if writing to the event log is allowed, <code>false</code> otherwise.</param>
            <param name="wmiEnabled"><code>true</code> if firing WMI events is allowed, <code>false</code> otherwise.</param>
            <param name="applicationInstanceName">The application name to use with performance counters.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingEventLogger.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingEventLogger"/> class, specifying whether 
            logging to the event log and firing WMI events is allowed.
            </summary>
            <param name="eventLoggingEnabled"><code>true</code> if writing to the event log is allowed, <code>false</code> otherwise.</param>
            <param name="wmiEnabled"><code>true</code> if firing WMI events is allowed, <code>false</code> otherwise.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingEventLogger.LogConfigurationError(System.Exception,System.String)">
            <summary>
            Logs the occurrence of a configuration error for the Enterprise Library Exception Handling Application Block through the 
            available instrumentation mechanisms.
            </summary>
            <param name="exception">The exception raised for the configuration error.</param>
            <param name="policyName">The name of the Exception policy in which the configuration error was detected.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingEventLogger.LogInternalError(System.String,System.String)">
            <summary>
            Logs the occurrence of an internal error for the Enterprise Library Exception Handling Application Block through the 
            available instrumentation mechanisms.
            </summary>
            <param name="policyName">The name of the Exception policy in which the error was occurred.</param>
            <param name="exceptionMessage">The message that represents the exception thrown when the configuration error was detected.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingEventLogger.ExceptionHandlingErrorOccurred(System.Object,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.DefaultExceptionHandlingErrorEventArgs)">
            <summary>
            Handler for the <see cref="E:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingInstrumentationProvider.exceptionHandlingErrorOccurred"/> event.
            </summary>
            <param name="sender">The originator of the event.</param>
            <param name="e">The event parameters.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingInstrumentationProvider">
            <summary>
            Defines the logical events that can be instrumented for the exception handling block's <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManagerImpl"/>.
            </summary>
            <remarks>
            The concrete instrumentation is provided by an object bound to the events of the provider. 
            The default listener, automatically bound during construction, is <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingEventLogger"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingInstrumentationProvider.FireExceptionHandlingErrorOccurred(System.String,System.String)">
            <summary>
            Fires the <see cref="E:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingInstrumentationProvider.exceptionHandlingErrorOccurred"/> event.
            </summary>
            <param name="policyName">The name of the policy involved with the errror.</param>
            <param name="message">The message that describes the failure.</param>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.DefaultExceptionHandlingInstrumentationProvider.exceptionHandlingErrorOccurred">
            <summary>
            Occurs when an error is detected while trying to determine the policy to use.
            </summary>
            <remarks>
            Errors detected while processing a policy are notified by the policy itself.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingConfigurationFailureEvent">
            <summary>
            Represents the WMI event fired when an error in the configuration for the exception handling block is detected.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingEvent">
            <summary>
            Base class for exception handling WMI events.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingConfigurationFailureEvent.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingConfigurationFailureEvent"/> class.
            </summary>
            <param name="policyName">The name of the policy which contained configuration errors.</param>
            <param name="exceptionMessage">The message that represents the exception thrown when the configuration error was detected.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingConfigurationFailureEvent.PolicyName">
            <summary>
            Gets the name of the policy which contained configuration errors.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingConfigurationFailureEvent.ExceptionMessage">
            <summary>
            Gets the message that represents the exception thrown when the configuration error was detected.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationListener">
            <summary>
            Provides the concrete instrumentation for the logical events raised by a <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationListener.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationListener"/> class.
            </summary>
            <param name="instanceName">The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicy"/> this instrumentation listener is bound to.</param>
            <param name="performanceCountersEnabled"><code>true</code> if performance counters should be updated.</param>
            <param name="eventLoggingEnabled"><code>true</code> if event log entries should be written.</param>
            <param name="wmiEnabled"><code>true</code> if WMI events should be fired.</param>
            <param name="applicationInstanceName">The application instance name</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationListener.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.IPerformanceCounterNameFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationListener"/> class.
            </summary>
            <param name="instanceName">The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicy"/> this instrumentation listener is bound to.</param>
            <param name="performanceCountersEnabled"><code>true</code> if performance counters should be updated.</param>
            <param name="eventLoggingEnabled"><code>true</code> if event log entries should be written.</param>
            <param name="wmiEnabled"><code>true</code> if WMI events should be fired.</param>
            <param name="nameFormatter">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.IPerformanceCounterNameFormatter"/> that is used to creates unique name for each <see cref="T:System.Diagnostics.PerformanceCounter"/> instance.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationListener.ExceptionHandled(System.Object,System.EventArgs)">
            <summary>
            This method supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Handler for the <see cref="E:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider.exceptionHandled"/> event.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Data for the event.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationListener.ExceptionHandlerExecuted(System.Object,System.EventArgs)">
            <summary>
            This method supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Handler for the <see cref="E:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider.exceptionHandlerExecuted"/> event.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Data for the event.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationListener.ExceptionHandlingErrorOccurred(System.Object,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionHandlingErrorEventArgs)">
            <summary>
            This method supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Handler for the <see cref="E:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider.exceptionHandlingErrorOccurred"/> event.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Data for the event.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationListener.CreatePerformanceCounters(System.String[])">
            <summary>
            Creates the performance counters to instrument the logging events to the instance names.
            </summary>
            <param name="instanceNames">The instance names for the performance counters.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider">
            <summary>
            Defines the logical events that can be instrumented for the exception handling block.
            </summary>
            <remarks>
            The concrete instrumentation is provided by an object bound to the events of the provider. 
            The default listener, automatically bound during construction, is <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationListener"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider.FireExceptionHandledEvent">
            <summary>
            Fires the <see cref="E:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider.exceptionHandled"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider.FireExceptionHandlerExecutedEvent">
            <summary>
            Fires the <see cref="E:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider.exceptionHandlerExecuted"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider.FireExceptionHandlingErrorOccurred(System.String)">
            <summary>
            Fires the <see cref="E:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider.exceptionHandlingErrorOccurred"/> event.
            </summary>
            <param name="errorMessage">The message that describes the failure.</param>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider.exceptionHandlerExecuted">
            <summary>
            Occurs when an exception handler is executed.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider.exceptionHandled">
            <summary>
            Occurs when an Exception is handled.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider.exceptionHandlingErrorOccurred">
            <summary>
            Occurs when an error occurs handling an Exception is handled.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicy">
            <summary>
            Represents a policy with exception types and
            exception handlers. 
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicy.HandleException(System.Exception,System.String)">
            <summary>
            The main entry point into the Exception Handling Application Block.
            Handles the specified <see cref="T:System.Exception"/>
            object according to the given <paramref name="configurationContext"></paramref>.
            </summary>
            <param name="exceptionToHandle">An <see cref="T:System.Exception"/> object.</param>
            <param name="policyName">The name of the policy to handle.</param>        
            <returns>
            Whether or not a rethrow is recommended.
            </returns>
            <example>
            The following code shows the usage of the 
            exception handling framework.
            <code>
            try
            {
            	Foo();
            }
            catch (Exception e)
            {
            	if (ExceptionPolicy.HandleException(e, name)) throw;
            }
            </code>
            </example>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicy.HandleException(System.Exception,System.String,System.Exception@)">
            <summary>
            Handles the specified <see cref="T:System.Exception"/>
            object according to the rules configured for <paramref name="policyName"/>.
            </summary>
            <param name="exceptionToHandle">An <see cref="T:System.Exception"/> object.</param>
            <param name="policyName">The name of the policy to handle.</param>
            <param name="exceptionToThrow">The new <see cref="T:System.Exception"/> to throw, if any.</param>
            <remarks>
            If a rethrow is recommended and <paramref name="exceptionToThrow"/> is <see langword="null"/>,
            then the original exception <paramref name="exceptionToHandle"/> should be rethrown; otherwise,
            the exception returned in <paramref name="exceptionToThrow"/> should be thrown.
            </remarks>
            <returns>
            Whether or not a rethrow is recommended. 
            </returns>
            <example>
            The following code shows the usage of the 
            exception handling framework.
            <code>
            try
            {
            	Foo();
            }
            catch (Exception e)
            {
                Exception exceptionToThrow;
            	if (ExceptionPolicy.HandleException(e, name, out exceptionToThrow))
            	{
            	  if(exceptionToThrow == null)
            	    throw;
            	  else
            	    throw exceptionToThrow;
            	}
            }
            </code>
            </example>
            <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionManagerImpl.HandleException(System.Exception,System.String)"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyEntry">
            <summary>
            Represents an entry in an <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicy"/> containing
            an exception type as the key and a list of 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.IExceptionHandler"/> objects as the value.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyEntry.#ctor(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.PostHandlingAction,System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.IExceptionHandler})">
            <summary>
            Instantiates a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyEntry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyEntry.Handle(System.Exception)">
            <summary>
            Handles all exceptions in the chain.
            </summary>
            <param name="exceptionToHandle">The <c>Exception</c> to handle.</param>
            <returns>Whether or not a rethrow is recommended.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyEntry.IntentionalRethrow(System.Exception,System.Exception)">
            <devdoc>
            Rethrows the given exception.  Placed in a seperate method for
            easier viewing in the stack trace.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyEntry.SetInstrumentationProvider(Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider)">
            <summary>
            Attaches an <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider"/> to be used for instrumentation on this instance.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider"/> that is attached.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyImpl">
            <summary>
            Represents a policy for handling exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyImpl.#ctor(System.String,System.Collections.Generic.Dictionary{System.Type,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyEntry})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyImpl"/> class with the policy name and a dictionary of policy entries.
            </summary>
            <param name="policyName">The policy name.</param>
            <param name="policyEntries">A set of <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyEntry"/> objects.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyImpl.HandleException(System.Exception)">
            <summary>
            Checks if there is a policy entry that matches
            the type of the exception object specified by the
            <see cref="T:System.Exception"/> parameter
            and if so, invokes the handlers associated with that entry.
            </summary>
            <param name="exceptionToHandle">The <c>Exception</c> to handle.</param>
            <returns>Whether or not a rethrow is recommended.</returns>
            <remarks>
            The algorithm for matching the exception object to a 
            set of handlers mimics that of a standard .NET exception policy.
            The specified exception object will be matched to a single 
            exception policy entry by traversing its inheritance hierarchy. 
            This means that if a <c>FileNotFoundException</c>, for example, is 
            caught, but the only exception type that the exception policy 
            knows how to handle is System.Exception, the event handlers 
            for <c>System.Exception</c> will be invoked because 
            <c>FileNotFoundException</c> ultimately derives from <c>System.Exception</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyImpl.GetPolicyEntry(System.Type)">
            <summary>
            Gets the policy entry associated with the specified key.
            </summary>
            <param name="exceptionType">Type of the exception.</param>
            <returns>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyEntry"/> corresponding to this exception type.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyImpl.GetInstrumentationEventProvider">
            <summary>
            Gets the instrumentation provider that is used to fire instrumentation events for this instance.
            </summary>
            <returns>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingInstrumentationProvider"/> that is used to fire instrumentation events for this instance.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicyImpl.FindExceptionPolicyEntry(System.Type)">
            <devDoc>
            Traverses the specified type's inheritance hiearchy
            </devDoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionUtility">
            <summary>
            Provides common functions for the Exception Handling Application Block classes. Cannot inherit from this class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionUtility.FormatExceptionMessage(System.String,System.Guid)">
            <summary>
            Formats a message by replacing the token "{handlingInstanceID}" with the handlingInstanceID.
            </summary>
            <param name="message">The original message.</param>
            <param name="handlingInstanceId">The handlingInststanceID passed into the exceptionHandlerData.</param>
            <returns>The formatted message.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionUtility.FormatExceptionHandlingExceptionMessage(System.String,System.Exception,System.Exception,System.Exception)">
            <summary>
            Formats an exception message so that it can be sent to the event log later, by someone else.
            </summary>
            <param name="policyName">The policy that is running.</param>
            <param name="offendingException">The exception that occured in the chain.</param>
            <param name="chainException">The exception when the chain failed.</param>
            <param name="originalException">The original exception.</param>		
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.IExceptionHandler">
            <summary>
            Defines the contract for an ExceptionHandler.  An ExceptionHandler contains specific handling
            logic (i.e. logging the exception, replacing the exception, etc.) that is executed in a chain of multiple
            ExceptionHandlers.  A chain of one or more ExceptionHandlers is executed based on the exception type being 
            handled, as well as the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicy"/>.  <seealso cref="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ExceptionPolicy.HandleException(System.Exception,System.String)"/>
            </summary>    
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.IExceptionHandler.HandleException(System.Exception,System.Guid)">
            <summary>
            <para>When implemented by a class, handles an <see cref="T:System.Exception"/>.</para>
            </summary>
            <param name="exception"><para>The exception to handle.</para></param>        
            <param name="handlingInstanceId">
            <para>The unique ID attached to the handling chain for this handling instance.</para>
            </param>
            <returns><para>Modified exception to pass to the next exceptionHandlerData in the chain.</para></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingFailureEvent">
            <summary>
            Represents the WMI event fired when an error ocurred in the exception handling block.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingFailureEvent.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingFailureEvent"/> class.
            </summary>
            <param name="instanceName">The name of the exception policy this failure ocurred in.</param>
            <param name="exceptionMessage">The message that represents the exception causing the failure.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingFailureEvent.ExceptionMessage">
            <summary>
            Gets the message that represents the exception causing the failure.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Instrumentation.ExceptionHandlingFailureEvent.InstanceName">
            <summary>
            Gets the name of the exception policy this failure ocurred in.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.PostHandlingAction">
            <summary>
            Determines what action should occur after an exception is handled by the configured exception handling chain. 
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.PostHandlingAction.None">
            <summary>
            Indicates that no rethrow should occur.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.PostHandlingAction.NotifyRethrow">
            <summary>
            Notify the caller that a rethrow is recommended.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.PostHandlingAction.ThrowNewException">
            <summary>
            Throws the exception after the exception has been handled by all handlers in the chain.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.AdditionalInfo">
            <summary>
              Looks up a localized string similar to Additional Info:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.BlockName">
            <summary>
              Looks up a localized string similar to Enterprise Library Exception Handling Application Block.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.ChainException">
            <summary>
              Looks up a localized string similar to HANDLING CHAIN EXCEPTION:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.ConfigurationFailureCreatingPolicy">
            <summary>
              Looks up a localized string similar to A configuration failure occurred while creating policy ‘{0}’..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.ErrorHandlingExceptionMessage">
            <summary>
              Looks up a localized string similar to The error occurred while handling an exception for policy &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.ExceptionHandledHelpResource">
            <summary>
              Looks up a localized string similar to Exceptions Handled/sec is the rate at which exceptions were handled..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.ExceptionHandlerExecutedHelpResource">
            <summary>
              Looks up a localized string similar to Exception Handlers Executed/sec is the rate at which exception handlers were executed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.ExceptionNullException">
            <summary>
              Looks up a localized string similar to Unable to rethrow exception: The exception to throw is null..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.ExceptionPolicyNotFound">
            <summary>
              Looks up a localized string similar to The policy with name &apos;{0}&apos; cannot be found. Exception handling aborted..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.ExceptionSimpleProviderNotFound">
            <summary>
              Looks up a localized string similar to The requested exception policy &apos;{0}&apos; could not be found..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.ExceptionStringNullOrEmpty">
            <summary>
              Looks up a localized string similar to The value can not be an empty string or null..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.ExceptionTypeNotException">
            <summary>
              Looks up a localized string similar to The type must be of type Exception..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.ExceptionWasCaught">
            <summary>
              Looks up a localized string similar to An exception of type &apos;{0}&apos; occurred and was caught..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.FieldAccessFailed">
            <summary>
              Looks up a localized string similar to Access failed.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.HelpLink">
            <summary>
              Looks up a localized string similar to Help link : {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.InnerException">
            <summary>
              Looks up a localized string similar to Inner Exception.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.Message">
            <summary>
              Looks up a localized string similar to Message : {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.OffendingException">
            <summary>
              Looks up a localized string similar to OFFENDING EXCEPTION:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.OriginalException">
            <summary>
              Looks up a localized string similar to ORIGINAL EXCEPTION:.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.PermissionDenied">
            <summary>
              Looks up a localized string similar to Permission Denied.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.PolicyName">
            <summary>
              Looks up a localized string similar to POLICY NAME: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.PropertyAccessFailed">
            <summary>
              Looks up a localized string similar to Access failed.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.Source">
            <summary>
              Looks up a localized string similar to Source : {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.StackTrace">
            <summary>
              Looks up a localized string similar to Stack Trace.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.StackTraceUnavailable">
            <summary>
              Looks up a localized string similar to The stack trace is unavailable..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.TotalExceptionHandlersExecutedHelpResource">
            <summary>
              Looks up a localized string similar to Total Exceptions Handlers Executed is the total number which exception handlers were executed..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.TotalExceptionsHandledHelpResource">
            <summary>
              Looks up a localized string similar to Total Exceptions Handled is the total number of exceptions handled..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.TypeString">
            <summary>
              Looks up a localized string similar to Type : {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.UnableToHandleException">
            <summary>
              Looks up a localized string similar to Unable to handle exception: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Properties.Resources.UndefinedValue">
            <summary>
              Looks up a localized string similar to &lt;undefined value&gt;.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler">
            <summary>
            Replaces the exception in the chain of handlers with a cleansed exception.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler"/> class with an exception message and the type of <see cref="T:System.Exception"/> to use.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="replaceExceptionType">The type of <see cref="T:System.Exception"/> to use to replace.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Utility.IStringResolver,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler"/> class with an exception message
            resolver and the type of <see cref="T:System.Exception"/> to use.
            </summary>
            <param name="exceptionMessageResolver">The exception message resolver.</param>
            <param name="replaceExceptionType">The type of <see cref="T:System.Exception"/> to use to replace.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler.HandleException(System.Exception,System.Guid)">
            <summary>
            Replaces the exception with the configured type for the specified policy.
            </summary>
            <param name="exception">The original exception.</param>        
            <param name="handlingInstanceId">The unique identifier attached to the handling chain for this handling instance.</param>
            <returns>Modified exception to pass to the next exceptionHandlerData in the chain.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler.ReplaceException(System.String)">
            <summary>
            Replaces an exception with a new exception of a specified type.
            </summary>                
            <param name="replaceExceptionMessage">The message for the new exception.</param>
            <returns>The replaced or "cleansed" exception.  Returns null if unable to replace the exception.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler.ReplaceExceptionType">
            <summary>
            The type of exception to replace.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler.ExceptionMessage">
            <summary>
            Gets the message for the new exception.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter">
            <summary>
            Represents an exception formatter that formats exception objects as text.
            </summary>	
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.#ctor(System.IO.TextWriter,System.Exception)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter"/> using the specified
            <see cref="T:System.IO.TextWriter"/> and <see cref="T:System.Exception"/>
            objects.
            </summary>
            <param name="writer">The stream to write formatting information to.</param>
            <param name="exception">The exception to format.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.#ctor(System.IO.TextWriter,System.Exception,System.Guid)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter"/> using the specified
            <see cref="T:System.IO.TextWriter"/> and <see cref="T:System.Exception"/>
            objects.
            </summary>
            <param name="writer">The stream to write formatting information to.</param>
            <param name="exception">The exception to format.</param>
            <param name="handlingInstanceId">The id of the handling chain.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.Format">
            <summary>
            Formats the <see cref="T:System.Exception"/> into the underlying stream.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.WriteDescription">
            <summary>
            Writes a generic description to the underlying text stream.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.WriteException(System.Exception,System.Exception)">
            <summary>
            Writes and formats the exception and all nested inner exceptions to the <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="exceptionToFormat">The exception to format.</param>
            <param name="outerException">The outer exception. This 
            value will be null when writing the outer-most exception.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.WriteDateTime(System.DateTime)">
            <summary>
            Writes the current date and time to the <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="utcNow">The current time.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.WriteExceptionType(System.Type)">
            <summary>
            Writes the value of the <see cref="P:System.Type.AssemblyQualifiedName"/>
            property for the specified exception type to the <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="exceptionType">The <see cref="T:System.Type"/> of the exception.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.WriteMessage(System.String)">
            <summary>
            Writes the value of the <see cref="P:System.Exception.Message"/>
            property to the underyling <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.WriteSource(System.String)">
            <summary>
            Writes the value of the specified source taken
            from the value of the <see cref="P:System.Exception.Source"/>
            property to the <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="source">The source of the exception.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.WriteHelpLink(System.String)">
            <summary>
            Writes the value of the specified help link taken
            from the value of the <see cref="P:System.Exception.HelpLink"/>
            property to the <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="helpLink">The exception's help link.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.WritePropertyInfo(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            Writes the name and value of the specified property to the <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="propertyInfo">The reflected <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
            <param name="value">The value of the <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.WriteFieldInfo(System.Reflection.FieldInfo,System.Object)">
            <summary>
            Writes the name and value of the specified field to the <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="fieldInfo">The reflected <see cref="T:System.Reflection.FieldInfo"/> object.</param>
            <param name="value">The value of the <see cref="T:System.Reflection.FieldInfo"/> object.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.WriteStackTrace(System.String)">
            <summary>
            Writes the value of the <see cref="P:System.Exception.StackTrace"/> property to the <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="stackTrace">The stack trace of the exception.</param>
            <remarks>
            If there is no stack trace available, an appropriate message will be displayed.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.WriteAdditionalInfo(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Writes the additional properties to the <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="additionalInformation">Additional information to be included with the exception report</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.Indent">
            <summary>
            Indents the <see cref="T:System.IO.TextWriter"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter.Writer">
            <summary>
            Gets the underlying <see cref="T:System.IO.TextWriter"/>
            that the current formatter is writing to.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler">
            <summary>
            Wraps the current exception in the handling chain with a new exception of a specified type.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler.#ctor(System.String,System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler"/> class with an exception message and the type of <see cref="T:System.Exception"/> to use.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="wrapExceptionType">The type of <see cref="T:System.Exception"/> to use to wrap.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Utility.IStringResolver,System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler"/> class with an exception message resolver
            and the type of <see cref="T:System.Exception"/> to use.
            </summary>
            <param name="exceptionMessageResolver">The exception message resolver.</param>
            <param name="wrapExceptionType">The type of <see cref="T:System.Exception"/> to use to wrap.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler.HandleException(System.Exception,System.Guid)">
            <summary>
            <para>Wraps the <see cref="T:System.Exception"/> with the configuration exception type.</para>
            </summary>
            <param name="exception"><para>The exception to handle.</para></param>        
            <param name="handlingInstanceId">
            <para>The unique ID attached to the handling chain for this handling instance.</para>
            </param>
            <returns><para>Modified exception to pass to the next exceptionHandlerData in the chain.</para></returns>        
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler.WrapExceptionType">
            <summary>
            <para>Gets the <see cref="T:System.Type"/> of exception to wrap the original exception with.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.Type"/> of exception to wrap the original exception with.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler.WrapExceptionMessage">
            <summary>
            <para>Gets the message of the wrapped exception.</para>
            </summary>
            <value>
            <para>The message of the wrapped exception.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter">
            <summary>
            Represents an exception formatter that formats exception objects as XML.
            </summary>	
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter.#ctor(System.Xml.XmlWriter,System.Exception,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter"/> class using the specified <see cref="T:System.Xml.XmlWriter"/> and <see cref="T:System.Exception"/> objects.
            </summary>
            <param name="xmlWriter">The <see cref="T:System.Xml.XmlWriter"/> in which to write the XML.</param>
            <param name="exception">The <see cref="T:System.Exception"/> to format.</param>
            <param name="handlingInstanceId">The id of the handling chain.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter.#ctor(System.IO.TextWriter,System.Exception,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter"/> class using the specified <see cref="T:System.IO.TextWriter"/> and <see cref="T:System.Exception"/> objects.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> in which to write the XML.</param>
            <param name="exception">The <see cref="T:System.Exception"/> to format.</param>
            <remarks>
            An <see cref="T:System.Xml.XmlTextWriter"/> with indented formatting is created from the  specified <see cref="T:System.IO.TextWriter"/>.
            </remarks>
            <param name="handlingInstanceId">The id of the handling chain.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter.Format">
            <summary>
            Formats the <see cref="T:System.Exception"/> into the underlying stream.
            </summary>       
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter.WriteDateTime(System.DateTime)">
            <summary>
            Writes the current date and time to the <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="utcNow">The current time.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter.WriteMessage(System.String)">
            <summary>
            Writes the value of the <see cref="P:System.Exception.Message"/> property to the <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter.WriteDescription">
            <summary>
            Writes a generic description to the <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter.WriteHelpLink(System.String)">
            <summary>
            Writes the value of the specified help link taken
            from the value of the <see cref="P:System.Exception.HelpLink"/>
            property to the <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="helpLink">The exception's help link.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter.WriteStackTrace(System.String)">
            <summary>
            Writes the value of the specified stack trace taken from the value of the <see cref="P:System.Exception.StackTrace"/> property to the <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="stackTrace">The stack trace of the exception.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter.WriteSource(System.String)">
            <summary>
            Writes the value of the specified source taken from the value of the <see cref="P:System.Exception.Source"/> property to the <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="source">The source of the exception.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter.WriteExceptionType(System.Type)">
            <summary>
            Writes the value of the <see cref="P:System.Type.AssemblyQualifiedName"/>
            property for the specified exception type to the <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="exceptionType">The <see cref="T:System.Type"/> of the exception.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter.WriteException(System.Exception,System.Exception)">
            <summary>
            Writes and formats the exception and all nested inner exceptions to the <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="exceptionToFormat">The exception to format.</param>
            <param name="outerException">The outer exception. This value will be null when writing the outer-most exception.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter.WritePropertyInfo(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            Writes the name and value of the specified property to the <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="propertyInfo">The reflected <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
            <param name="value">The value of the <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter.WriteFieldInfo(System.Reflection.FieldInfo,System.Object)">
            <summary>
            Writes the name and value of the <see cref="T:System.Reflection.FieldInfo"/> object to the <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="fieldInfo">The reflected <see cref="T:System.Reflection.FieldInfo"/> object.</param>
            <param name="value">The value of the <see cref="T:System.Reflection.FieldInfo"/> object.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter.WriteAdditionalInfo(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Writes additional information to the <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="additionalInformation">Additional information to be included with the exception report</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter.Writer">
            <summary>
            Gets the underlying <see cref="T:System.Xml.XmlWriter"/> that the formatted exception is written to.
            </summary>
            <value>
            The underlying <see cref="T:System.Xml.XmlWriter"/> that the formatted exception is written to.
            </value>
        </member>
    </members>
</doc>
