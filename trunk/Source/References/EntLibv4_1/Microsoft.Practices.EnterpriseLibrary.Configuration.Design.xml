<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Practices.EnterpriseLibrary.Configuration.Design</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddConfigurationApplicationNodeCommand">
            <summary>
            Represents a command for adding a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand">
            <summary>
            Represents a command to execute against a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="clearErrorLog">
            Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/> should be cleared when the command has executed.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Dispose">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand"/> and optionally releases the managed resources.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">
            <see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Execute(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Executes the command.
            </summary>
            <param name="node">
            The node to execute on the command on.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            When overridden by a class, executes the core logic of the command.
            </summary>
            <param name="node">
            The node to execute the command upon.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.OnExecuting(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs)">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Executing"/> event.
            </summary>
            <param name="e">
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs"/> containing the event data.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.OnExecuted(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Executed"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> containing the event data.</param>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Executing">
            <summary>
            Occurs as the command is about to be executed.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Executed">
            <summary>
            Occurs after the commmand has completed execution.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Events">
            <summary>
            Gets the list of event handlers that are attached to this command.
            </summary>
            <value>
            An <see cref="T:System.ComponentModel.EventHandlerList"/> that provides the delegates for this component
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.ServiceProvider">
            <summary>
            Gets the service provider for the command.
            </summary>
            <value>
            The service provider for the command.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.UIService">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService"/>.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.ConfigurationUIHierarchyService">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService"/>.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.CurrentHierarchy">
            <summary>
            Gets the currently selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>.
            </summary>
            <value>
            The currently selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.ErrorLogService">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/>.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/>.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddConfigurationApplicationNodeCommand.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddConfigurationApplicationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddConfigurationApplicationNodeCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddConfigurationApplicationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="clearErrorService">
            Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/> should be cleared when the command has executed.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddConfigurationApplicationNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Creates a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode"/> object and adds it to the solution.
            </summary>
            <param name="node">
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode"/> is the root of an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> so the <paramref name="node"/> is not used, so passing <see langword="null"/> is expected.
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand">
            <summary>
            Represents a command that adds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> as a child of the  <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> that this command is executing upon.    
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand.#ctor(System.IServiceProvider,System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="childType">
            The <see cref="T:System.Type"/> object for the configuration node to create and add to the node.        
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand.#ctor(System.IServiceProvider,System.Boolean,System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="clearErrorService">
            Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/> should be cleared when the command has executed.
            </param>
            <param name="childType">
            The <see cref="T:System.Type"/> object for the configuration node to create and add to the node.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Creates an instance of the child node class and adds it as a child of the parent node.
            </summary>
            <param name="node">
            The parent node to add the newly created <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand.ChildNode"/>.
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddChildNodeCommand.ChildNode">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> that was added as a result of the command being executed.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> that was added as a result of the command being executed. 
            The default is a <see langword="null"/> reference(Nothing in Visual Basic).
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddConfigurationSourceSectionNodeCommand">
            <summary>
            Represents a command that adds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceSectionNode"/> as a child of the  <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> that this command is executing upon.    
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddConfigurationSourceSectionNodeCommand.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddConfigurationSourceSectionNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.AddConfigurationSourceSectionNodeCommand.OnExecuted(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Executed"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> containing the event data.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute">
            <summary>
            Indicates the base class or interface that must be assignable from the type specified in the property that this attribute decorates.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the  <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute"/> class with the specified <see cref="T:System.Type"/> object.
            </summary>
            <param name="baseType">
            The <see cref="T:System.Type"/> to filter selections.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the  <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute"/> class with the specified base <see cref="T:System.Type"/> object and configuration <see cref="T:System.Type"/>.
            </summary>
            <param name="baseType">The base <see cref="T:System.Type"/> to filter.</param>
            <param name="configurationType">The configuration object <see cref="T:System.Type"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute.#ctor(System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludes)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute"/> class with the specified <see cref="T:System.Type"/> object and <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute.TypeSelectorIncludes"/>.
            </summary>
            <param name="baseType">
            The <see cref="T:System.Type"/> to filter selections.
            </param>
            <param name="typeSelectorIncludes">
            One of the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute.TypeSelectorIncludes"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute.#ctor(System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludes,System.Type)">
            <summary>
            Initializes a new instance of the  <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute"/> class with the specified base <see cref="T:System.Type"/> object and configuration <see cref="T:System.Type"/>.
            </summary>
            <param name="typeSelectorIncludes">
            One of the <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute.typeSelectorIncludes"/> values.
            </param>
            <param name="baseType">The base <see cref="T:System.Type"/> to filter.</param>
            <param name="configurationType">The configuration object <see cref="T:System.Type"/>.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute.TypeSelectorIncludes">
            <summary>
            Gets the includes for the type selector.
            </summary>
            <value>
            The includes for the type selector.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute.BaseType">
            <summary>
            Gets the <see cref="T:System.Type"/> to filter selections.
            </summary>
            <value>
            The <see cref="T:System.Type"/> to filter selections.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.BaseTypeAttribute.ConfigurationType">
            <summary>
            Gets the configuration object <see cref="T:System.Type"/>.
            </summary>
            <value>
            The configuration object <see cref="T:System.Type"/>.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode">
            <summary>
            Base node for configuration sections.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode">
            <summary>
            Represents a designtime node for a particular configuration element. This class is abstract.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.#ctor(System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> class with a name.
            </summary>		
            <param name="name">The name of the node.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Dispose">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> and optionally releases the managed resources.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">
            <see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.MoveAfter(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Moves the specified child node immediately after the specified reference node.
            </summary>
            <param name="childNode">The existing child node to move.</param>
            <param name="siblingNode">The existing child node after which the <i>childNode</i> will be placed.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.MoveBefore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Moves the specified node immediately before the specified reference node.
            </summary>
            <param name="childNode">The existing child node to move.</param>
            <param name="siblingNode">The existing child node before which the <i>childNode</i> will be placed.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ToString">
            <summary>
            Creates and returns a string representation of the current node.
            </summary>
            <returns>A string representation of the current node.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Remove">
            <summary>
            Removes the current node from its parent node.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Validate(System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            Perform custom validation for this node.
            </summary>
            <param name="errors">The list of errors to add any validation errors.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.System#IComparable#CompareTo(System.Object)">
            <summary>
            Compares the specified node to the current node based on the value of the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Name"/> property.
            </summary>
            <param name="obj">An object to compare.&gt;</param>
            <returns>
            A signed integer that indicates the relative order of this node and the node being compared.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.CompareTo(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Compares the specified node to the current node based on the value of the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Name"/> property.
            </summary>
            <param name="node">A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to compare.</param>
            <returns>
            A signed integer that indicates the relative order of this node and the node being compared.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.AddNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Add a node to the current node's collection.
            </summary>
            <param name="configurationNode">The node to add.</param>
            <returns>The index of the added node.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.RemoveNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Remove a specific node from the current node's collection.
            </summary>
            <param name="configurationNode">The node to remove.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ClearChildNodes">
            <summary>
            Clear the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Nodes"/> collection.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Rename(System.String)">
            <summary>
            Rename the current node.
            </summary>
            <param name="newName">The new node name.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Rename(System.String,System.Boolean)">
            <summary>
            Rename the current node and determine if the parent node should be notified and events should be fired..
            </summary>
            <param name="newName">The new node name.</param>
            <param name="notify"><c>true</c> if the parent node should be notified and the <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildAdded"/> and <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildAdding"/> events are fired; otherwise, <c>false</c>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnChildRemoving(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildRemoving"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnChildRemoved(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildRemoved"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnRemoving(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Removing"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnRemoved(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Removed"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnChildMoved(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeMovedEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildMoved"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnRenaming(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renaming"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnRenamed(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renamed"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnChildAdding(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildAdding"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.OnChildAdded(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs)">
            <summary>
            <para>Raises the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildAdded"/> event.</para>
            </summary>
            <param name="e"><para>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> that contains the event data.</para></param>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renaming">
            <summary>
            Occurs after the name of the current node changes.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renamed">
            <summary>
            Occurs after the name of the current node changes.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildRemoving">
            <summary>
            Occurs before a child node of the current node is removed.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildRemoved">
            <summary>
            Occurs after a child node of the current node is removed.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildAdding">
            <summary>
            Occurs after a child node is added to the current node.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildAdded">
            <summary>
            Occurs after a child node is added to the current node.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildMoved">
            <summary>
            Occurs after a child node is moved from its parent's node collection.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Removing">
            <summary>
            Occurs before the current node is removed from its parent's node collection.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Removed">
            <summary>
            Occurs after the current node is removed from its parent's node collection.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Disposed">
            <summary>
            Occurs after the current node is disposed.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Site">
            <summary>
            Gets or sets the <see cref="T:System.ComponentModel.ISite"/> for the node.
            </summary>
            <value>
            The <see cref="T:System.ComponentModel.ISite"/> for the node.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Index">
            <summary>
            Gets the position of this node in the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Nodes"/>.
            </summary>
            <value>
            The position of this node in the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Nodes"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Nodes">
            <summary>
            Gets the collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> objects assigned to the current configuration node.
            </summary>
            <value>
            The collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> objects assigned to the current configuration node.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Name">
            <summary>
            Gets or sets the name of the node.
            </summary>
            <value>
            The name of the node.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.PreviousSibling">
            <summary>
            Gets the node immediately preceding this node.
            </summary>
            <value>
            The preceding <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>. If there is no preceding node, a <see langword="null"/> reference (Nothing in Visual Basic) is returned.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.NextSibling">
            <summary>
            Gets the node immediately following this node.
            </summary>
            <value>
            The next <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>. If there is no next node, a <see langword="null"/> reference (Nothing in Visual Basic) is returned.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.FirstNode">
            <summary>
            Gets the first child node in the node collection.
            </summary>
            <value>
            The first child <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> in the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Nodes"/> collection.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.LastNode">
            <summary>
            Gets the first child node in the node collection.
            </summary>
            <value>
            The first child <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> in the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Nodes"/> collection.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Parent">
            <summary>
            Gets the parent configuration node of the the current configuration node.
            </summary>
            <value>
            The parent configuration node of the the current configuration node.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Path">
            <summary>
            Gets the path from the root node to the current node.
            </summary>
            <value>
            The path from the root node to the current node.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Id">
            <summary>
            Gets a runtime-generated, non-persisted unique identifier for this node.
            </summary>
            <value>
            A runtime-generated, non-persisted unique identifier for this node.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Hierarchy">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> containing this node.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> containing this node. The default is <see langword="null"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.SortChildren">
            <summary>
            Gets if children added to the node are sorted.
            </summary>
            <value>
            <see langword="true"/> if nodes add are sorted; otherwise <see langword="false"/>. The default is <see langword="true"/>.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode.#ctor">
            <summary>
            Initializes a new instance of class <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of class <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode"/> with the supplied name.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode.ProtectionProvider">
            <summary>
            Gets or sets the name of the protection provider to use for the represented section.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode.RequirePermission">
            <summary>
            Gets or sets the flag indicating the section requires permission to be retrieved.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceSectionNodeBuilder">
            <summary>
            Represnets a configuration source node builder.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeBuilder">
            <summary>
            Represents a base class to for use when building your node graph from your configuration objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeBuilder.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeBuilder"/> class with a <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeBuilder.LogError(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.String)">
            <summary>
            Log an error when building the node graph.
            </summary>
            <param name="node">The node where the error occurred.</param>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeBuilder.LogNodeMapError(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Reflection.MemberInfo)">
            <summary>
            Load an error when creating a node.
            </summary>
            <param name="node">The node where the error occurred.</param>
            <param name="configType">The type trying to be created.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeBuilder.NodeCreationService">
            <summary>
            Gets a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService"/>.
            </summary>
            <value>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeBuilder.ServiceProvider">
            <summary>
            Gets the <see cref="T:System.IServiceProvider"/>.
            </summary>
            <value>
            The <see cref="T:System.IServiceProvider"/>.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceSectionNodeBuilder.#ctor(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationSourceSection)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceSectionNodeBuilder"/> class with a service provider and a configuration section.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <param name="configurationSourceSection">The configuration section to build.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceSectionNodeBuilder.Build">
            <summary>
            Build a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceSectionNode"/>.
            </summary>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceSectionNode"/> object.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CloseConfigurationApplicationCommand">
            <summary>
            Represents a command that will close an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode"/> and remove the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> that it represents.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CloseConfigurationApplicationCommand.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CloseConfigurationApplicationCommand"/> class with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CloseConfigurationApplicationCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CloseConfigurationApplicationCommand"/> class with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">
            The service provider to get service objects.
            </param>
            <param name="clearErrorService">
            Determines if the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/> when the command has executed.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CloseConfigurationApplicationCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Closes the application configuration.
            </summary>
            <param name="node">
            The node to execute the command upon.
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs">
            <summary>
            Provides data for a <see cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand.Executing"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs.#ctor">
            <summary>
            Initializes a new instance of  the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandExecutingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event should be canceled.
            </summary>
            <value>
            <see langword="true"/> if the event should be canceled; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandState">
            <summary>
            The state of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandState.Enabled">
            <summary>
            The command is enabled.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandState.Disabled">
            <summary>
            The command is disabled.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar">
            <summary>
            Represents an encapsulation for registering commands for a configuration design. The class is abstract.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar"/> class with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.Register">
            <summary>
            Register the commands.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddMoveUpDownCommands(System.Type)">
            <summary>
            Add move up and move down commands to all instances of a particular type.
            </summary>		
            <param name="registerType">
            The <see cref="T:System.Type"/> to apply the commands.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddMoveUpCommand(System.Type)">
            <summary>
            Add move up command to all instances of a particular type.
            </summary>		
            <param name="registerType">
            The <see cref="T:System.Type"/> to apply the commands.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddMoveDownCommand(System.Type)">
            <summary>
            Add move down command to all instances of a particular type.
            </summary>		
            <param name="registerType">
            The <see cref="T:System.Type"/> to apply the commands.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddDefaultCommands(System.Type)">
            <summary>
            Adds the default remove and validate commands to all instances of a particular type.
            </summary>		
            <param name="registerType">
            The <see cref="T:System.Type"/> to apply the commands.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddRemoveCommand(System.Type)">
            <summary>
            Add the remove command to all the instances of a particular type.
            </summary>
            <param name="registerType">
            The <see cref="T:System.Type"/> to apply the commands.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddValidateCommand(System.Type)">
            <summary>
            Add the validate command to all the instances of a particular type.
            </summary>
            <param name="registerType">
            The <see cref="T:System.Type"/> to apply the commands.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddMultipleChildNodeCommand(System.String,System.String,System.Type,System.Type)">
            <summary>
            Add a <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddChildNodeCommand(System.String,System.String,System.Type,System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMultiplicity)"/> and allows the node type to be created multiple times.
            </summary>		
            <param name="text">The text of the command.</param>
            <param name="longText">The long text of the command.</param>
            <param name="nodeType">
            The node type to display the command upon.
            </param>
            <param name="registerType">
            The <see cref="T:System.Type"/> the command creates.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddMultipleChildNodeCommand(System.String,System.String,System.Type,System.Type,System.Type)">
            <summary>
            Add a <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddChildNodeCommand(System.String,System.String,System.Type,System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMultiplicity)"/> and allows the node type to be created multiple times.
            </summary>		
            <param name="text">The text of the command.</param>
            <param name="longText">The long text of the command.</param>
            <param name="nodeType">
            The node type to display the command upon.
            </param>
            <param name="childType">
            The child node type created.
            </param>
            <param name="registerType">
            The <see cref="T:System.Type"/> to apply the commands.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddSingleChildNodeCommand(System.String,System.String,System.Type,System.Type)">
            <summary>
            Add a <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddChildNodeCommand(System.String,System.String,System.Type,System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMultiplicity)"/> and allows the node type to be created only once.
            </summary>		
            <param name="text">The text of the command.</param>
            <param name="longText">The long text of the command.</param>
            <param name="nodeType">
            The node type to display the command upon.
            </param>
            <param name="registerType">
            The <see cref="T:System.Type"/> the command creates.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddSingleChildNodeCommand(System.String,System.String,System.Type,System.Type,System.Type)">
            <summary>
            Add a <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddChildNodeCommand(System.String,System.String,System.Type,System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMultiplicity)"/> and allows the node type to be created only once.
            </summary>		
            <param name="text">The text of the command.</param>
            <param name="longText">The long text of the command.</param>
            <param name="nodeType">
            The node type to display the command upon.
            </param>
            <param name="childType">
            The child node type created.
            </param>
            <param name="registerType">
            The <see cref="T:System.Type"/> to apply the command.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddChildNodeCommand(System.String,System.String,System.Type,System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMultiplicity)">
            <summary>
            Add a <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddChildNodeCommand(System.String,System.String,System.Type,System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMultiplicity)"/> and allows the node type to be created only once.
            </summary>		
            <param name="text">The text of the command.</param>
            <param name="longText">The long text of the command.</param>
            <param name="childType">The child type that will be created.</param>
            <param name="nodeType">The node type for the command.</param>
            <param name="registerType">
            The <see cref="T:System.Type"/> to apply the command.
            </param>
            <param name="nodeMultiplicity">One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMultiplicity"/> values.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.AddUICommand(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand,System.Type)">
            <summary>
            Add a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> object to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUICommandService"/>.
            </summary>
            <param name="uiCommand">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> to add.</param>
            <param name="registerType">The <see cref="T:System.Type"/> the command is registered.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandRegistrar.ServiceProvider">
            <summary>
            Gets the a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </summary>
            <value>
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode">
            <summary>
            Represents the root node of the configuration application.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationFile)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationFile"/> instance..
            </summary>
            <param name="configurationApplicationFile">A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationFile"/> instance.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode.Name">
            <summary>
            Gets the name of the node.
            </summary>		
            <value>
            The name of the node.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode.ConfigurationFile">
            <summary>
            Gets or sets the application's configuration file.
            </summary>
            <value>
            The application's configuration file.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationFile">
            <summary>
            Represents the file for a application's configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationFile.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationFile"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationFile.#ctor(System.String,System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationFile"/> class with a base directory and file path.
            </summary>
            <param name="baseDirectory">The base directory of the application.</param>
            <param name="configurationFilePath">The configuration file.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationFile.FromCurrentAppDomain">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationFile"/> from the current <see cref="T:System.AppDomain"/>.
            </summary>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationFile"/> from the current <see cref="T:System.AppDomain"/>.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationFile.BaseDirectory">
            <summary>
            Gets or sets the base directory of the application.
            </summary>
            <value>
            The base directory of the application.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationFile.ConfigurationFilePath">
            <summary>
            Gets or sets the configuration file.
            </summary>
            <value>
            The configuration file.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager">
            <summary>
            Represents the mechanism to register a configuration section(s) in the design time environment.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager">
            <summary>
            Represents the object that will manage the design of configuration..
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager.Register(System.IServiceProvider)">
            <summary>
            When implemented by a class, allows the registration of configuration nodes and commands into the configuration tree.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager.Save(System.IServiceProvider)">
            <summary>
            When implemented by a class, saves the configuration data for the implementer.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager.Open(System.IServiceProvider)">
            <summary>
            When implemented by a class, opens the configuration for the application.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager.BuildConfigurationSource(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.DictionaryConfigurationSource)">
            <summary>
            When implemented by a class, adds the configuration data for the current implementer to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.DictionaryConfigurationSource"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="dictionaryConfigurationSource">
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.DictionaryConfigurationSource"/> object that will contain the configuration data.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.Register(System.IServiceProvider)">
            <summary>
            When overridden by a class, Register any mechanisms needed for the design manager into the design time.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.Save(System.IServiceProvider)">
            <summary>
            Save the current defined configuration to an external <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/>.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.Open(System.IServiceProvider)">
            <summary>
            Open the configuration for this design manager.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.BuildConfigurationSource(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.DictionaryConfigurationSource)">
            <summary>
            Builds the currently defined configuration in design time.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <param name="dictionaryConfigurationSource">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.DictionaryConfigurationSource"/> to save the configuration.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.OpenCore(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode,System.Configuration.ConfigurationSection)">
            <summary>
            When overriden by a class, allows design managers to perform specific operations when opening configuration.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <param name="rootNode">The root node of the application.</param>
            <param name="section">The <see cref="T:System.Configuration.ConfigurationSection"/> that was opened from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.GetConfigurationSource(System.IServiceProvider)">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> to used by the design manager to save and open configuration.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <returns>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> to used by the design manager to save and open configuration</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.GetConfigurationParameter(System.IServiceProvider)">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationParameter"/> to used by the design manager to save and open configuration.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <returns>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationParameter"/> to used by the design manager to save and open configuration</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.GetConfigurationSectionInfo(System.IServiceProvider)">
            <summary>
            Gets the a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionInfo"/> for the configuration for this design manager.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionInfo"/> for the configuration for this design manager.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.ProtectConfigurationSection(System.Configuration.ConfigurationSection,System.String)">
            <summary>
            TODO
            </summary>
            <param name="section"></param>
            <param name="protectionProviderName"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.GetProtectionProviderName(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode)">
            <summary>
            
            </summary>
            <param name="sectionNode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManager.SetProtectionProvider(System.Configuration.ConfigurationSection,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionNode)">
            <summary>
            
            </summary>
            <param name="configurationSection"></param>
            <param name="sectionNode"></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeMovedEventArgs">
            <summary>
            Provides data for the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildMoved"/> events.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs">
            <summary>
            Provides data for the 
            <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildAdded"/>,
            <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.ChildRemoved"/>,	
            <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Removed"/>, and
            <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Renamed"/> events.
            </summary>    
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> class the node it was performed upon, and the parent node.
            </summary>        
            <param name="node">
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> that the action occurred upon.
            </param>
            <param name="parent">The parent node of the <paramref name="node"/>.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs.Node">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> for the action.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> for the action.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs.ParentNode">
            <summary>
            Gets the parent node of the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs.Node"/> object.
            </summary>
            <value>
            The parent node of the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs.Node"/> object.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeMovedEventArgs.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs"/> class the node it was performed upon, the parent node, the old index and new index.
            </summary>        
            <param name="node">
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> that the action occurred upon.
            </param>
            <param name="parent">The parent node of the <paramref name="node"/>.</param>
            <param name="oldIndex">The old index of the node being moved.</param>
            <param name="newIndex">The new index of the node being moved.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeMovedEventArgs.NewIndex">
            <summary>
            Gets the new index of the node being moved.
            </summary>
            <value>
            The new index of the node being moved.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeMovedEventArgs.OldIndex">
            <summary>
            Gets the old index of the node being moved.
            </summary>
            <value>
            The old index of the node being moved.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionInfo">
            <summary>
            Represents the information about a configuration section. This is used by a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionInfo.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Configuration.ConfigurationSection,System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionInfo"/> class with the node representing the root of the configuration, the ConfigurationSection and the section name.
            </summary>
            <param name="node">The root node of the configuration.</param>
            <param name="section">The configuration section.</param>
            <param name="sectionName">The name of the section.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionInfo.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Configuration.ConfigurationSection,System.String,System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionInfo"/> class with the node representing the root of the configuration, the ConfigurationSection and the section name.
            </summary>
            <param name="node">The root node of the configuration.</param>
            <param name="section">The configuration section.</param>
            <param name="sectionName">The name of the section.</param>
            <param name="protectionProviderName">TODO: add comment</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionInfo.Node">
            <summary>
            Gets the root node of the configuration.
            </summary>
            <value>
            The root node of the configuration.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionInfo.Section">
            <summary>
            Gets the configuration section.
            </summary>
            <value>
            The configuration section.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionInfo.SectionName">
            <summary>
            Gets the configuration section name.
            </summary>
            <value>
            The configuration section name.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionInfo.ProtectionProviderName">
            <summary>
            TODO: add comment
            </summary>
            <value>
            TODO: add comment
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceConfigurationDesignManager">
            <summary>
            Represents the design manager for the configuration sources section.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceConfigurationDesignManager.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceConfigurationDesignManager"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceConfigurationDesignManager.Register(System.IServiceProvider)">
            <summary>
            Register the commands and node maps needed for the design manager into the design time.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceConfigurationDesignManager.OpenCore(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode,System.Configuration.ConfigurationSection)">
            <summary>
            Opens the configuration sources section, builds the design time nodes and adds them to the application node.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <param name="rootNode">The root node of the application.</param>
            <param name="section">The <see cref="T:System.Configuration.ConfigurationSection"/> that was opened from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceConfigurationDesignManager.GetConfigurationSectionInfo(System.IServiceProvider)">
            <summary>
            Gets the a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionInfo"/> for the configuration sources.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionInfo"/> for the configuration for the configuration sources.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceConfigurationDesignManager.GetConfigurationParameter(System.IServiceProvider)">
            <summary>
            Gets a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationParameter"/> based on the applications configuration file.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationParameter"/> based on the applications configuration file.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceConfigurationDesignManager.GetConfigurationSource(System.IServiceProvider)">
            <summary>
            Gets a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSource"/> based on the applications configuration file.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSource"/> based on the applications configuration file.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMapRegistrar">
            <summary>
            A helper base class for registering node creation.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMapRegistrar.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMapRegistrar"/> class with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMapRegistrar.Register">
            <summary>
            Registers the node maps.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMapRegistrar.AddSingleNodeMap(System.String,System.Type,System.Type)">
            <summary>
            Adds a node map that can only be created once.
            </summary>		
            <param name="text">The text to display to the user.</param>
            <param name="nodeType">The type of node to create.</param>
            <param name="dataType">The configuration type for the node.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMapRegistrar.AddMultipleNodeMap(System.String,System.Type,System.Type)">
            <summary>
            Adds a node map that can only be created more than once.
            </summary>		
            <param name="text">The text to display to the user.</param>
            <param name="nodeType">The type of node to create.</param>
            <param name="dataType">The configuration type for the node.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMapRegistrar.ServiceProvider">
            <summary>
            Gets the a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </summary>
            <value>
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.EnvironmentOverridableAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.EnvironmentOverridableAttribute.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="canOverride"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.EnvironmentOverridableAttribute.CanOverride">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FlagsEditor">
            <summary>
            Editor for flag enums.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FlagsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits a flags enum value.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>The new value, if changed; otherwise <paramref name="value"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FlagsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style.
            </summary>
            <returns>The <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.DropDown"/> value.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IEnvironmentalOverridesSerializable">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IEnvironmentalOverridesSerializable.DesializeFromString(System.String)">
            <summary>
            
            </summary>
            <param name="serializedContents"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IEnvironmentalOverridesSerializable.SerializeToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IPluginDirectoryProvider">
            <summary>
            TODO: ADD COMMENT
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IPluginDirectoryProvider.PluginDirectory">
            <summary>
            TODO: ADD COMMENT
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.LoadAssemblyFromCacheDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.LoadAssemblyFromCacheDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.LoadAssemblyFromCacheDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ConfigurationManageabilityProviderAttributeRetriever">
            <summary>
            This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.
            Encapsulates the logic to retrieve the attributes for registered manageability providers from assembly dll files.
            </summary>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProviderAttribute"/>
            <seealso cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderAttribute"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ConfigurationManageabilityProviderAttributeRetriever.#ctor">
            <summary>
            This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ConfigurationManageabilityProviderAttributeRetriever"/> class that
            will retrieve attributes from the assemblies located in the running application's base directory.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ConfigurationManageabilityProviderAttributeRetriever.#ctor(System.String)">
            <summary>
            This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ConfigurationManageabilityProviderAttributeRetriever"/> class that
            will retrieve attributes from the assemblies located in the given directory.
            </summary>
            <param name="baseDirectory">The directory where to look for assembly files.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ConfigurationManageabilityProviderAttributeRetriever.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ConfigurationManageabilityProviderAttributeRetriever"/> class that
            will retrieve attributes from the given assembly names.
            </summary>
            <param name="fileNames">The name of the assemblies where to look for attributes.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ConfigurationManageabilityProviderAttributeRetriever.LoadRegisteredManageabilityProviders(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProviderAttribute},System.Collections.Generic.ICollection{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderAttribute})">
            <devdoc>
            Loads the assemblies specified by the assembly names and retrieves the manageability provider attributes from them.
            The attributes are stored for later use.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ConfigurationManageabilityProviderAttributeRetriever.LoadAttributes``1(System.Reflection.Assembly,System.Collections.Generic.ICollection{``0})">
            <devdoc>
            Retrieves the attributes of type <typeparamref name="T"/> from the given assembly.
            </devdoc>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ConfigurationManageabilityProviderAttributeRetriever.SectionManageabilityProviderAttributes">
            <summary>
            This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.
            Gets the retrieved <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProviderAttribute"/> instances.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ConfigurationManageabilityProviderAttributeRetriever.ElementManageabilityProviderAttributes">
            <summary>
            This type supports the Enterprise Library Manageability Extensions infrastructure and is not intended to 
            be used directly from your code.
            Gets the retrieved <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderAttribute"/> instances.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ExportAdmTemplateNodeCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ExportAdmTemplateNodeCommand.#ctor(System.IServiceProvider)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ExportAdmTemplateNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceConfigurationDesignManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceConfigurationDesignManager.Register(System.IServiceProvider)">
            <summary>
            Register the commands and node maps needed for the design manager into the design time.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementBuilder">
            <summary>
            Represents a builder for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Configuration.ManageableConfigurationSourceElement"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementBuilder.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementNode)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementBuilder"/> class with the node to build the element.
            </summary>
            <param name="node">The node to user to build the element</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementBuilder.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ConfigurationManageabilityProviderAttributeRetriever)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementBuilder"/> class with the node to build the element.
            </summary>
            <param name="node">The node to user to build the element</param>
            <param name="retriever">
            The retriver for the configuration attribute.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementBuilder.Build">
            <summary>
            Builds the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Configuration.ManageableConfigurationSourceElement"/> object.
            </summary>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Configuration.ManageableConfigurationSourceElement"/> object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementBuilder.BuildSectionManageabilityProvidersData(System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProviderAttribute},System.Collections.Generic.IEnumerable{Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderAttribute})">
            <summary>
            Builds a collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Configuration.ConfigurationSectionManageabilityProviderData"/> objects.
            </summary>
            <returns>A collection of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Configuration.ConfigurationSectionManageabilityProviderData"/> objects.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceElementNode">
            <summary>
            Represents a design time node for a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceElementNode.ConfigurationSourceElement"/>. The class is abstract.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceElementNode.#ctor(System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceElementNode"/> class with a name.
            </summary>
            <param name="name">The name of the node.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceElementNode.ConfigurationSourceElement">
            <summary>
            When overridden by a class, gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceElementNode.ConfigurationSourceElement"/> this node represents.
            </summary>
            <value>
            The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceElementNode.ConfigurationSourceElement"/> this node represents.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceElementNode.ConfigurationSource">
            <summary>
            When overridden by a class, gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> that this node represents.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> that this node represents.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceElementNode.ConfigurationParameter">
            <summary>
            When overridden by a class, gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationParameter"/> that this node represents.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationParameter"/> that this node represents.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementNode.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.Configuration.ManageableConfigurationSourceElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementNode.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementNode.File">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementNode.EnableWmi">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementNode.EnableGroupPolicies">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementNode.ApplicationName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementNode.ConfigurationSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementNode.ConfigurationSourceElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.ManageableConfigurationSourceElementNode.ConfigurationParameter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.AdmGenerationDialogErrorTitle">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.AdmTemplateDialogFilter">
            <summary>
              Looks up a localized string similar to ADM Files(*.adm)|*.adm.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.CategoryGeneral">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.ConfigurationFileDialogFilter">
            <summary>
              Looks up a localized string similar to Configuration Files(web.config, *.exe.config, app.config)|web.config;*.exe.config;app.config|All Files(*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.ErrorGeneratingAdmFile">
             <summary>
               Looks up a localized string similar to An error occurred creating the ADM template.
            {0}.
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.GenerateAdmTemplateCommandText">
            <summary>
              Looks up a localized string similar to Generate ADM Template.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.GenerateAdmTemplateLongCommandText">
            <summary>
              Looks up a localized string similar to Generate ADM Template and save it to a file....
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.ManageableConfigurationSourceUICommandLongText">
            <summary>
              Looks up a localized string similar to Adds the manageable configuration source element..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.ManageableConfigurationSourceUICommandText">
            <summary>
              Looks up a localized string similar to Manageable ConfigurationSource.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.ManageableSourceApplicationNameDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the application name for the source..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.ManageableSourceEnableGPDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the value to enable overriding of settings through Group Policies..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.ManageableSourceEnableWmiDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the value to enable publication of settings through WMI..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.ManageableSourceFileDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the file to use for the source..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.SaveApplicationBeforeExportingAdmRequest">
            <summary>
              Looks up a localized string similar to The application has not been saved, would you like to save before exporting?.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.SaveApplicationCaption">
            <summary>
              Looks up a localized string similar to Save Application.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Manageability.Properties.Resources.TypeNameDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the type for the element..
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenFileConfigurationApplicationNodeCommand">
            <summary>
            Represents a command that will open an application configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenFileConfigurationApplicationNodeCommand.#ctor(System.IServiceProvider,System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenFileConfigurationApplicationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="file"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenFileConfigurationApplicationNodeCommand.#ctor(System.IServiceProvider,System.String,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenFileConfigurationApplicationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="file"></param>
            <param name="clearErrorLog">
            Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/> should be cleared when the command has executed.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenFileConfigurationApplicationNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Opens a previously saved configuration.
            </summary>
            <param name="node">
            The node to execute the command upon.
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.EditableKeyValue">
            <summary>
            Represents a key value pair that is editable in the design time.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.EditableKeyValue.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.EditableKeyValue"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.EditableKeyValue.#ctor(System.String,System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.EditableKeyValue"/> class with a key and vlaue.
            </summary>
            <param name="key">The key for the pair.</param>
            <param name="value">The value for the pair.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.EditableKeyValue.ToString">
            <summary>
            Returns a string representation of the key value pair.
            </summary>
            <returns>A string representation of the key value pair.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.EditableKeyValue.Key">
            <summary>
            Gets or sets the key for the pair.
            </summary>
            <value>
            The key for the pair.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.EditableKeyValue.Value">
            <summary>
            Gets or set the value for the pair.
            </summary>
            <value>
            The value for the pair.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveAsConfigurationApplicationNodeCommand">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveConfigurationApplicationNodeCommand">
            <summary>
            Represents a command that will save an application configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveConfigurationApplicationNodeCommand.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveConfigurationApplicationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveConfigurationApplicationNodeCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveConfigurationApplicationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="clearErrorLog">
            Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/> should be cleared when the command has executed.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveConfigurationApplicationNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Saves the application configuration.
            </summary>
            <param name="node">
            The node to execute the command upon.
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveConfigurationApplicationNodeCommand.SaveSucceeded">
            <summary>
            Determines if the saving of the application was suseccesful.
            </summary>
            <value>
            <see langword="true"/> if the saving of the application was suseccesful; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveAsConfigurationApplicationNodeCommand.#ctor(System.IServiceProvider,System.String)">
            <summary>
            TODO
            </summary>
            <param name="serviceProvider"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveAsConfigurationApplicationNodeCommand.#ctor(System.IServiceProvider,System.String,System.Boolean)">
            <summary>
            TODO
            </summary>
            <param name="serviceProvider"></param>
            <param name="filePath"></param>
            <param name="updateApplicationNode"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveAsConfigurationApplicationNodeCommand.#ctor(System.IServiceProvider,System.Boolean,System.String)">
            <summary>
            TODO
            </summary>
            <param name="serviceProvider"></param>
            <param name="clearErrorLog"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveAsConfigurationApplicationNodeCommand.#ctor(System.IServiceProvider,System.Boolean,System.String,System.Boolean)">
            <summary>
            TODO
            </summary>
            <param name="serviceProvider"></param>
            <param name="clearErrorLog"></param>
            <param name="filePath"></param>
            <param name="updateApplicationNode"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveAsConfigurationApplicationNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            TODO
            </summary>
            <param name="node"></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildException">
            <summary>
            Represents an error while building a type from a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildException"/> class with the given message.
            </summary>
            <param name="message">The message describing the error.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildException"/> class with the given message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message describing the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or 
            <see langword="null"/> if no inner exception is specified. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildException.#ctor(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildException"/> class with the given message and a 
            reference to the inner exception that is the cause of this exception and the node where the error was 
            detected.
            </summary>
            <param name="message">The message describing the error.</param>
            <param name="failingNode">The node where the type build failure was detected.</param>
            <param name="innerException">The exception that is the cause of the current exception, or 
            <see langword="null"/> if no inner exception is specified. </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildException"/> class with serialized data.
            </summary>
            <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information 
            about the source or destination. </param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the 
            exception being thrown. </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildException.FailingNode">
            <summary>
            The node where the error was detected.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNodeConstraint">
            <summary>
            Represents a constraint on a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNodeConstraint.#ctor(System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludes)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNodeConstraint"/> class.
            </summary>
            <param name="baseType">The base type (class or interface) from which the constrained type should derive.</param>
            <param name="configurationType">The base type from which a type specified by the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationElementTypeAttribute"/>
            bound to the constrained type should derive, or <see langword="null"/> if no such constraint is necessary.
            </param>
            <param name="typeSelectorIncludes">Additional constraints.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNodeConstraint.BaseType">
            <summary>
            Gets the base type (class or interface) from which the constrained type should derive.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNodeConstraint.ConfigurationType">
            <summary>
            Gets the base type from which a type specified by the 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationElementTypeAttribute"/> 
            bound to the constrained type should derive, or <see langword="null"/> if no such constraint is necessary.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNodeConstraint.TypeSelectorIncludes">
            <summary>
            Gets the additional constraints.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode">
            <summary>
            Represents a type in the data structure used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI"/> to specify types.
            </summary>
            <remarks>
            A node holds a <see cref="T:System.Type"/>, and if the type is an open generic type the node will have children 
            representing the generic type parameters.
            <para/>
            A node can be asked to create the type it represents. Doing so might throw exceptions if the represented type
            is not valid (e.g. if the types assigned to the child nodes of a node representing a generic type do not satisfy 
            the parameter constraints); the node doesn't attempt to validate whether the specified type can be built, 
            letting the .NET framework perform the necessary validations.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNodeConstraint)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode"/> with a type constraint.
            </summary>
            <param name="constraint">The constraint for the node.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode"/> representing a generic parameter node.
            </summary>
            <param name="genericTypeParameter">The type representing the generic type parameter.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode.CreateTreeForType(System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNodeConstraint)">
            <summary>
            Creates a tree of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode"/> instances that represents the <paramref name="nodeType"/> type.
            </summary>
            <param name="nodeType">The <see cref="T:System.Type"/> to represent.</param>
            <param name="typeConstraint">The type constraint that the limits what types can be specified
            for the root of the tree.</param>
            <returns>A tree of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode"/> representing <paramref name="nodeType"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode.BuildType">
            <summary>
            Creates the type representing by the receiving node and its children.
            </summary>
            <returns>The represented type.</returns>
            <exception cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildException">when there is an error building the type (e.g. if the 
            types assigned to the child nodes of a node representing a generic type do not satisfy the parameter
            constraints)</exception>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode.SetNodeType(System.Type)">
            <summary>
            Sets the <see cref="T:System.Type"/> the node represents, and updates its children to represent generic type 
            parameters when an open generic type is involved.
            </summary>
            <param name="nodeType">The new type the node represents.</param>
            <returns><see langword="true"/> if the update caused the child nodes to change; otherwise 
            <see langword="false"/></returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode.ParameterType">
            <summary>
            Gets the generic type parameter associated to the node, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode.Constraint">
            <summary>
            Gets the constraint that should be used to filter the available types this node can hold.
            </summary>
            <remarks>
            This constraint is less detailed than the constraints that can be specified for a generic type parameter,
            so satisfying this constraint does not guarantee that the type can be built.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode.NodeType">
            <summary>
            Gets the type currently set for this node.
            </summary>
            <remarks>
            This is not the same as <see cref="T:System.Type"/> represented by the node, which involves the current node and its
            children, should there be any.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode.GenericParameterNodes">
            <summary>
            Gets the children of a node.
            </summary>
            <remarks>
            Child nodes represent generic type parameters.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeBuildNode.Description">
            <summary>
            Gets a description of the current node.
            </summary>
            <remarks>
            The description of a node includes whether its type has been set and whether it represents a generic
            type parameter.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeNodeNameFormatter">
            <summary>
            Used to create a friendly name for configurations nodes that represent types.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeNodeNameFormatter.CreateName(System.String)">
            <summary>
            Creates a friendly name based on a typeName, which can be used as a displayname within a graphical tool.
            </summary>
            <param name="typeName">The typeName that should be used.</param>
            <returns>A friendly name that can be used as a display name.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ProtectionProviderValidationAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationAttribute">
            <summary>
            Represents an attribute that will validate a property or field.  The class is abstract.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationAttribute.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationAttribute"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationAttribute.Validate(System.Object,System.Reflection.PropertyInfo,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError},System.IServiceProvider)">
            <summary>
            Validate the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.
            </summary>
            <param name="instance">
            The instance to validate.
            </param>
            <param name="propertyInfo">
            The property containing the value to validate.
            </param>
            <param name="errors">
            The collection to add any errors that occur during the validation.
            </param>
            <param name="provider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>		
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationAttribute.ValidateCore(System.Object,System.Reflection.PropertyInfo,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            Validate the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.
            </summary>
            <param name="instance">
            The instance to validate.
            </param>
            <param name="propertyInfo">
            The property containing the value to validate.
            </param>
            <param name="errors">
            The collection to add any errors that occur during the validation.
            </param>		
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationAttribute.ServiceProvider">
            <summary>
            Gets the a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </summary>
            <value>
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ProtectionProviderValidationAttribute.ValidateCore(System.Object,System.Reflection.PropertyInfo,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            
            </summary>
            <param name="instance"></param>
            <param name="propertyInfo"></param>
            <param name="errors"></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationNodeCommand">
            <summary>
            Creates the list of storage commands for the nodes.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationNodeCommand.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationNodeCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="clearErrorLog">
            Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/> should be cleared when the command has executed.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Creates the commands and adds them to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageService"/>.
            </summary>
            <param name="node">The node to execute the command upon.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ExternalConfigurationFileStorageCreationCommand">
            <summary>
            Creates configuration stored in a external file.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileStorageCreationCommand">
            <summary>
            Creates configuration stored in a file. This class is abstract.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand">
            <summary>
            Creates the physical storage for configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand.#ctor(System.String,System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> class with a name and <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="name">The name of the storage to create.</param>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand.Execute">
            <summary>
            When overriden by a class, executes the command to create the storage.
            </summary>
            <value>
            Executes the command to create the storage.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand.LogError(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand.Name">
            <summary>
            Gets the name of the storage to create.
            </summary>
            <value>
            The name of the storage to create.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand.ServiceProvider">
            <summary>
            Gets or sets the <see cref="T:System.IServiceProvider"/> for the command.
            </summary>
            <value>
            The <see cref="T:System.IServiceProvider"/> for the command.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileStorageCreationCommand.#ctor(System.String,System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileStorageCreationCommand"/> class with a file name and <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="fileName">The name of the file to create.</param>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileStorageCreationCommand.CanOverwriteFile">
            <summary>
            Determines if the current <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileStorageCreationCommand.FileName"/> can be overwrriten. It will prompt the user throuth the user interface if the user wants to overwrite the file.
            </summary>
            <returns>
            <see langword="true"/> if the file can be overwritten; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileStorageCreationCommand.GetAbsolutePathFromConfigurationPath(System.String,System.String)">
            <summary>
            Gets the absolute path for a file based on the application's configuration file location.
            </summary>
            <param name="configurationFile">The application's configuration file.</param>
            <param name="filePath">The file to get the absolute path for.</param>
            <returns>The absolute path to the file.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileStorageCreationCommand.FileName">
            <summary>
            Gets or sets the name of the file to create.
            </summary>
            <value>
            The name of the file to create.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ExternalConfigurationFileStorageCreationCommand.#ctor(System.String,System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ExternalConfigurationFileStorageCreationCommand"/> class with a file name and <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="fileName">The name of the file to create.</param>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ExternalConfigurationFileStorageCreationCommand.Execute">
            <summary>
            Executes the creation of the file.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileConfigurationSourceElementNode">
            <summary>
            Represents a design time node for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSourceElement"/> configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileConfigurationSourceElementNode.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSourceElement"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileConfigurationSourceElementNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSourceElement)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSourceElement"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSourceElement"/>.
            </summary>
            <param name="element">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSourceElement"/> to initialize.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileConfigurationSourceElementNode.Type">
            <summary>
            Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileConfigurationSourceElementNode.Type"/> of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/>.
            </summary>
            <value>
            The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileConfigurationSourceElementNode.Type"/> of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileConfigurationSourceElementNode.File">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileConfigurationSourceElementNode.ConfigurationSourceElement">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSourceElement"/> this node represents.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSourceElement"/> this node represents.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileConfigurationSourceElementNode.ConfigurationSource">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> that this node represents.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> that this node represents.
            </value>
            <remarks>
            Returns a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSource"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FileConfigurationSourceElementNode.ConfigurationParameter">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationParameter"/> that this node represents.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationParameter"/> that this node represents.
            </value>
            <remarks>
            Returns a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationParameter"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ExternalConfigurationFileStorageCreationAttribute">
            <summary>
            Creates a storage creation command for configuration files.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationAttribute">
            <summary>
            Represents a mechanism to attribute properties that need a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/>. This class is abstract
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationAttribute.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationAttribute"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationAttribute.CreateCommand(System.Object,System.Reflection.PropertyInfo,System.IServiceProvider)">
            <summary>
            Create the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> for the property.
            </summary>
            <param name="instance">The instance for the property.</param>
            <param name="propertyInfo">The property this attribute applies.</param>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> instance.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ExternalConfigurationFileStorageCreationAttribute.CreateCommand(System.Object,System.Reflection.PropertyInfo,System.IServiceProvider)">
            <summary>
            Create the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ExternalConfigurationFileStorageCreationCommand"/> for the file.
            </summary>
            <param name="instance">The instance for the property. This should be a file name.</param>
            <param name="propertyInfo">The property this attribute applies.</param>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> instance.</returns>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ExternalConfigurationFileStorageCreationCommand"/> instance based on the file.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationConfigurationDesignManager">
            <summary>
            Represents the design manager for the instrumentation section.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationConfigurationDesignManager.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationConfigurationDesignManager"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationConfigurationDesignManager.Register(System.IServiceProvider)">
            <summary>
            Register the commands and node maps needed for the design manager into the design time.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationConfigurationDesignManager.OpenCore(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode,System.Configuration.ConfigurationSection)">
            <summary>
            Opens the instrumenation section, builds the design time nodes and adds them to the application node.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <param name="rootNode">The root node of the application.</param>
            <param name="section">The <see cref="T:System.Configuration.ConfigurationSection"/> that was opened from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationConfigurationDesignManager.GetConfigurationSectionInfo(System.IServiceProvider)">
            <summary>
            Gets the a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionInfo"/> for the instrumentation section.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <returns>A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSectionInfo"/> for the configuration for the configuration sources.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerAttribute">
            <summary>
            Indicates the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/> defined in an assembly.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerAttribute"/> class with a <see cref="T:System.Type"/> implementing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/>.
            </summary>
            <param name="configurationDesignManager">
            A <see cref="T:System.Type"/> implementing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/>.
            </param>        
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerAttribute.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerAttribute"/> class with a <see cref="T:System.Type"/> implementing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/> and a dependent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/>.
            </summary>
            <param name="configurationDesignManager">
            A <see cref="T:System.Type"/> implementing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/>.
            </param> 
            <param name="dependentConfigurationDesignManager">
            The <see cref="T:System.Type"/> of the dependent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/>.
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerAttribute.ConfigurationDesignManager">
            <summary>
            Gets the <see cref="T:System.Type"/> implementing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/>.
            </summary>
            <value>
            The <see cref="T:System.Type"/> implementing <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerAttribute.DependentConfigurationDesignManager">
            <summary>
            Gets the <see cref="T:System.Type"/> of the dependent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/>.
            </summary>
            <value>
            The <see cref="T:System.Type"/> of the dependent <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationDesignManager"/>.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerDomain.Load(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerAttribute)">
            <devdoc>
            Loads the IConfigurationDesignManager object from the specified ConfigurationDesignManagerAttribute.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerDomain.Load(System.Type,System.Type)">
            <devdoc>
            Loads the IConfigurationDesignManager object from the specified Type.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerDomain.LoadFrom(System.String)">
            <devdoc>
            Loads all of the assemblies located at the specified path and searches them for ConfigurationDesignManagerAttribute attributes.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerDomain.Load">
            <devdoc>
            Loads all of the assemblies located at the current AppDomain.BaseDirectory and searches them for ConfigurationDesignManagerAttribute attributes.
            </devdoc>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerProxy.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="managerType"></param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationDesignManagerProxy.BuildConfigurationSource(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.DictionaryConfigurationSource)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="dictionaryConfigurationSource"></param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError">
            <summary>
            Represents an error that occurs while operating on a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.ConfigurationNode"/> object.
            </summary>   
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> class with the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.ConfigurationNode"/> and an error message.
            </summary>
            <param name="node">The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.ConfigurationNode"/> object.</param>
            <param name="message">The. error message.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.ToString">
            <summary>
            Creates and returns a string representation of the current error.
            </summary>
            <returns>A string representation of the current error.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.ConfigurationNode">
            <summary>
            Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.ConfigurationNode"/> where the error originated.
            </summary>
            <value>
            The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.ConfigurationNode"/> where the error originated.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError.Message">
            <summary>
            Gets the error message.
            </summary>
            <value>
            The error message.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IReadOnlyCollection`1">
            <summary>
            Represents a collection that is readonly.
            </summary>
            <typeparam name="T">The types of objects in the collection.</typeparam>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IReadOnlyCollection`1.Contains(`0)">
            <summary>
            When implemented by a class, determines if the item is in the collection.
            </summary>
            <param name="item">The item to find.</param>
            <returns><c>true</c> if the item is in the collection; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IReadOnlyCollection`1.Contains(System.String)">
            <summary>
            When implemented by a class, determines if the item is in the collection based on name.
            </summary>
            <param name="nodeName">The name of the item to find.</param>
            <returns><c>true</c> if the item is in the collection; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IReadOnlyCollection`1.ForEach(System.Action{`0})">
            <summary>
            When implemented by a class, performs the specified action on each item.
            </summary>
            <param name="action">The Action to perform on each element.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IReadOnlyCollection`1.Item(System.String)">
            <summary>
            When implemented by a class, gets the item based on the name.
            </summary>
            <param name="name">The name of the item to get.</param>
            <returns>The item based on the name.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IReadOnlyCollection`1.Item(System.Int32)">
            <summary>
            When implemented by a class, gets the item at the specified index.
            </summary>
            <param name="index">The index of the item to get.</param>
            <returns>The item at the specified index.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IReadOnlyCollection`1.Count">
            <summary>
            When implemented by a class, gets the count of items in the collection.
            </summary>
            <value>
            The count of items in the collection.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyAddedEventArgs">
            <summary>
            Provides data for the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService.HierarchyAdded"/> event of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService"/>.
            </summary>    
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyAddedEventArgs.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyAddedEventArgs"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> object.
            </summary>
            <param name="uiHierarchy">
            An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> object.
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyAddedEventArgs.UIHierarchy">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> that was added.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> that was added.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceSectionNode">
            <summary>
            Represents the design time node for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationSourceSection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceSectionNode.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceSectionNode.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceSectionNode"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">
            <see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceSectionNode.Name">
            <summary>
            Gets the name of the node.
            </summary>
            <value>
            The name of the node.
            </value>
            <remarks>
            Overridden to make readonly in the design time.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceSectionNode.SelectedSource">
            <summary>
            Gets or sets the selected (default) configuration source for the application.
            </summary>
            <value>
            The selected (default) configuration source for the application.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceSectionNode.ConfigurationSource">
            <summary>
            Gets the selected configuration source.
            </summary>
            <value>
            The selected configuration source.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationSourceSectionNode.ConfigurationParameter">
            <summary>
            Gets the configuration parameter for the selected configuration source.
            </summary>
            <value>
            The configuration parameter for the selected configuration source.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand">
            <summary>
            Represents a way to describe a UI command.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.#ctor(System.IServiceProvider,System.String,System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandState,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand,System.Windows.Forms.Shortcut,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InsertionPoint,System.Drawing.Icon)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> class.
            </summary>		
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <param name="text">The text for the command.</param>
            <param name="longText">The text that will be in the status bar.</param>
            <param name="commandState">One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandState"/> values.</param>		
            <param name="command">The command to execute.</param>		
            <param name="shortcut">A short cut for the command.</param>
            <param name="insertionPoint">One of the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.InsertionPoint"/> values.</param>
            <param name="icon">The icon for the command.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.#ctor(System.IServiceProvider,System.String,System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandState,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMultiplicity,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand,System.Type,System.Windows.Forms.Shortcut,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InsertionPoint,System.Drawing.Icon)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> class.
            </summary>		
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <param name="text">The text for the command.</param>
            <param name="longText">The text that will be in the status bar.</param>
            <param name="commandState">One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandState"/> values.</param>		
            <param name="multiplicity">One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMultiplicity"/> values.</param>
            <param name="command">The command to execute.</param>		
            <param name="nodeType">The node type that will be created when the command is executed.</param>
            <param name="shortcut">A short cut for the command.</param>
            <param name="insertionPoint">One of the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.InsertionPoint"/> values.</param>
            <param name="icon">The icon for the command.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.Dispose">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> and optionally releases the managed resources.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">
            <see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.CreateSingleUICommand(System.IServiceProvider,System.String,System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand,System.Type)">
            <summary>
            Create an instance of a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> that only allows single creation.
            </summary>		
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
            <param name="text">The text for the command.</param>
            <param name="longText">The text that will be in the status bar.</param>		
            <param name="command">The command to execute.</param>				
            <param name="nodeType">The type of node to be created.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.CreateMultipleUICommand(System.IServiceProvider,System.String,System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand,System.Type)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="text"></param>
            <param name="longText"></param>
            <param name="command"></param>
            <param name="nodeType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.GetCommandState(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Gets the sate of the command based on the node.
            </summary>
            <value>
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandState"/> values.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.Execute(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Executes the command.
            </summary>
            <param name="node">The node to execute the command.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.Text">
            <summary>
            Gets the text for the command.
            </summary>
            <value>
            The text for the command.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.LongText">
            <summary>
            Gets the text to display in a status bar.
            </summary>
            <value>
            The text to display in a status bar.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.InsertionPoint">
            <summary>
            Gets the insertion point for the command.
            </summary>
            <value>
            One of the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.InsertionPoint"/> values.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.Shortcut">
            <summary>
            Gets the short cut for the command.
            </summary>
            <value>
            One of the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.Shortcut"/> values.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand.Icon">
            <summary>
            Gets the icon to use for the command.
            </summary>
            <value>
            The icon to use for the command.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ErrorLogService">
            <summary>
            Provides a service to collect errors while processing commands for nodes.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService">
            <summary>
            Provides a service to collect errors while processing commands for nodes.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService.ForEachValidationErrors(System.Action{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            When implemented by a class, performs the specified action on each validation error.
            </summary>
            <param name="action">The Action to perform on each element.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService.ForEachConfigurationErrors(System.Action{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError})">
            <summary>
            When implemented by a class, performs the specified action on each configuration error.
            </summary>
            <param name="action">The Action to perform on each element.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService.ClearErrorLog">
            <summary>
            When implemented by a class, clears all the errors in the log.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService.LogError(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError)">
            <summary>
            When implemented by a class, log a validation error.
            </summary>
            <param name="validationError">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> to log.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService.LogError(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError)">
            <summary>
            When implemented by a class, log a configuration error.
            </summary>
            <param name="configurationError">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> to log</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService.LogErrors(System.Configuration.ConfigurationErrorsException)">
            <summary>
            When implemented by a class, logs the configuration errors from within a <see cref="T:System.Configuration.ConfigurationErrorsException"/>.
            </summary>
            <param name="configurationErrors">The <see cref="T:System.Configuration.ConfigurationErrorsException"/> that contains errors to log.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService.ValidationErrorCount">
            <summary>
            When implemented by a class, gets the number of validation errors that occurred.
            </summary>
            <value>
            The number of validation errors that occurred.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService.ConfigurationErrorCount">
            <summary>
            When implemented by a class, gets the number of configuration errors that occurred.
            </summary>
            <value>
            The number of configuration errors that occurred.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ErrorLogService.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ErrorLogService"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ErrorLogService.ForEachValidationErrors(System.Action{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            Performs the specified action on each validation error.
            </summary>
            <param name="action">The Action to perform on each element.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ErrorLogService.ForEachConfigurationErrors(System.Action{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError})">
            <summary>
            Performs the specified action on each configuration error.
            </summary>
            <param name="action">The Action to perform on each element.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ErrorLogService.ClearErrorLog">
            <summary>
            Clears all the errors in the log.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ErrorLogService.LogError(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError)">
            <summary>
            Log a validation error.
            </summary>
            <param name="validationError">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> to log.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ErrorLogService.LogError(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError)">
            <summary>
            Log a configuration error.
            </summary>
            <param name="configurationError">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> to log</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ErrorLogService.LogErrors(System.Configuration.ConfigurationErrorsException)">
            <summary>
            Log the configuration errors from within a <see cref="T:System.Configuration.ConfigurationErrorsException"/>.
            </summary>
            <param name="configurationErrors">The <see cref="T:System.Configuration.ConfigurationErrorsException"/> that contains errors to log.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ErrorLogService.ValidationErrorCount">
            <summary>
            Gets the number of validation errors that occurred.
            </summary>
            <value>
            The number of validation errors that occurred.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ErrorLogService.ConfigurationErrorCount">
            <summary>
            Gets the number of configuration errors that occurred.
            </summary>
            <value>
            The number of configuration errors that occurred.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditor">
            <summary>
            Provides a user interface for selecting a file name.
            </summary>
            <seealso cref="T:System.Windows.Forms.Design.FileNameEditor"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditor.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditor"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object using the editor style provided by the GetEditStyle method.
            </summary>
            <param name="context">
            An ITypeDescriptorContext that can be used to gain additional context information.
            </param>
            <param name="provider">
            A service provider object through which editing services may be obtained.
            </param>
            <param name="value">
            An instance of the value being edited.
            </param>
            <returns>
            The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
            <summary>
            Initializes the open file dialog when it is created.
            </summary>
            <param name="openFileDialog">
            The <see cref="T:System.Windows.Forms.OpenFileDialog"/> to use to select a file name. 
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditorAttribute">
            <summary>
            Specifies the properties for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditor"/> to use to change a property.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditorAttribute.#ctor(System.Type,System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditorAttribute"/> class with the <see cref="T:System.Type"/> containing the resources and the resource key.
            </summary>
            <param name="resourceType">The <see cref="T:System.Type"/> containing the resources.</param>
            <param name="resourceKey">The resource key.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.FilteredFileNameEditorAttribute.Filter">
            <summary>
            Gets the filter for the dialog.
            </summary>
            <value>
            The filter for the dialog.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyRemovedEventArgs">
            <summary>
            Provides data for the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService.HierarchyAdded"/> event of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService"/>.
            </summary>    
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyRemovedEventArgs.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyRemovedEventArgs"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> object.
            </summary>
            <param name="uiHierarchy">
            An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> object.
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchyRemovedEventArgs.UIHierarchy">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> that was added.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> that was added.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchySavedEventArgs">
            <summary>
            Provides data for the <seealso cref="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.Saved"/> event of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService"/>.
            </summary>    
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchySavedEventArgs.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchySavedEventArgs"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> object.
            </summary>
            <param name="uiHierarchy">
            An <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> object.
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.HierarchySavedEventArgs.UIHierarchy">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> that was added.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> that was added.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ImageAttribute">
            <summary>
            Defines the image to be associated with the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute">
            <summary>
            Specifies the image to be displayed when a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> is viewed in the user interface.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> class using the specified <see cref="T:System.Type"/> and resource entry name. The type is used to locate the assembly from which to load the <see cref="T:System.Resources.ResourceManager"/> that contains the image.
            </summary>
            <param name="componentType">A <see cref="T:System.Type"/> defined in the assembly that contains the image as an embedded resource.</param>
            <param name="name">The name of the embedded resource.</param>
            <seealso cref="T:System.Drawing.ToolboxBitmapAttribute"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> object based on a 16 x 16 bitmap that is embedded  as a resource in a specified assembly.
            </summary>
            <param name="componentType">
            A <see cref="T:System.Type"/> whose defining assembly is searched for the bitmap resource.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute.GetLargeImage">
            <summary>
            Gets the large (32 x 32) <see cref="T:System.Drawing.Image"/> associated with this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> object.
            </summary>
            <returns>The large <see cref="T:System.Drawing.Image"/> associated with this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute.GetImage">
            <summary>
            Gets the small (16 x 16) <see cref="T:System.Drawing.Image"/> associated with this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> object.
            </summary>
            <returns>The small <see cref="T:System.Drawing.Image"/> associated with this <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> object.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute.Name">
            <summary>
            Gets the name of the embedded bitmap resource.
            </summary>
            <value>
            The name of the embedded bitmap resource.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute.ComponentType">
            <summary>
            Gets a <see cref="T:System.Type"/> whose defining assembly is searched for the bitmap resource.
            </summary>
            <value>
            A <see cref="T:System.Type"/> whose defining assembly is searched for the bitmap resource.
            </value>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ImageAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> class based on a 16 x 16 bitmap that is embedded as a resource in a specified assembly.
            </summary>
            <param name="t">
            A Type whose defining assembly is searched for the bitmap resource.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ImageAttribute.#ctor(System.Type,System.String)">
            <summary>
            
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeImageAttribute"/> class using the specified <see cref="T:System.Type"/> and resource entry name. The type is used to locate the assembly from which to load the <see cref="T:System.Resources.ResourceManager"/> that contains the image.
            </summary>
            <param name="t">A <see cref="T:System.Type"/> defined in the assembly that contains the image as an embedded resource.</param> 
            <param name="name">The name of the embedded resource.</param>        
            <seealso cref="T:System.Drawing.ToolboxBitmapAttribute"/>        
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUICommandService">
            <summary>
            Represents a service for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUICommandService.AddCommand(System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand)">
            <summary>
            When implemented by a class, add a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> for a particular <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> the command applies.</param>
            <param name="command">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> to add.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUICommandService.RemoveCommand(System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand)">
            <summary>
            When implemented by a class, remove a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> for a particular <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> the command applies.</param>
            <param name="command">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> to Remove.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUICommandService.ForEach(System.Type,System.Action{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand})">
            <summary>
            When implemented by a class, performs the specified action on each item.
            </summary>		
            <param name="type">The <see cref="T:System.Type"/> the command applies.</param>
            <param name="action">The Action to perform on each element.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService">
            <summary>
            Provides a service for creating nodes based on data types.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService.CreateNodeByDataType(System.Type)">
            <summary>
            When implemented by a class, creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> based on the data type.
            </summary>
            <param name="dataType">
            The data type to base the creation upon.
            </param>
            <returns>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> based on the data type or <see langword="null"/> if one does not exists.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService.CreateNodeByDataType(System.Type,System.Object[])">
            <summary>
            When implemented by a class, creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> based on the data type.
            </summary>
            <param name="dataType">
            The data type to base the creation upon.
            </param>
            <param name="constructorArguments">
            The constructor arguments for the node.
            </param>
            <returns>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> based on the data type or <see langword="null"/> if one does not exists.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService.AddNodeCreationEntry(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry)">
            <summary>
            When implemented by a class, creates a map between the node and the data that it represents.
            </summary>
            <param name="nodeCreationEntry">
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/> object.
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeNameCreationService">
            <summary>
            Provides a service that can generate unique names for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeNameCreationService.GetUniqueName(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Gets a unique name for the node.
            </summary>
            <param name="nodeName">The current name of the node.</param>
            <param name="node">The node to rename.</param>
            <param name="parentNode">The parent of the node.</param>
            <returns>A unique name.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InsertionPoint">
            <summary>
            Points on the main menu where <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> objets can be sited.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InsertionPoint.Action">
            <summary>
            The item will become a menu item of the main task menu.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InsertionPoint.Help">
            <summary>
            The item will become a menu item of the main help menu.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InsertionPoint.New">
            <summary>
            Will create a new menu item in the action menu item and add to it's submenu.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode">
            <summary>
            Represents the design time node for the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode.InstrumentationConfigurationSection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.Configuration.InstrumentationConfigurationSection)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode"/> class with a <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode.InstrumentationConfigurationSection"/> instance.
            </summary>
            <param name="instrumentationSection">A <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode.InstrumentationConfigurationSection"/> instance.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode.Name">
            <summary>
            Gets the name of the node.
            </summary>
            <value>
            The name of the node.
            </value>
            <remarks>
            Overriden so it is readonly in the designer.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode.PerformanceCountersEnabled">
            <summary>
            Gets or sets if performance counters are enabled.
            </summary>
            <value>
            <c>true</c> if performace counters are enabled; otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode.EventLoggingEnabled">
            <summary>
            Gets or sets if event logging is enabled.
            </summary>
            <value>
            <c>true</c> if event logging is eabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode.WmiEnabled">
            <summary>
            Gets or sets if WMI is enabled.
            </summary>
            <value>
            <c>true</c> if WMI is enabled; otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode.ApplicationInstanceName">
            <summary>
            Gets or sets the value of ApplicationInstanceName.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode.InstrumentationConfigurationSection">
            <summary>
            Gets the configured <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode.InstrumentationConfigurationSection"/>.
            </summary>
            <value>
            The configured <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.InstrumentationNode.InstrumentationConfigurationSection"/>.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy">
            <summary>
            Provides hierarchy management for each configuration application.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.FindNodeByPath(System.String)">
            <summary>
            When implemented by a class, finds a node via it's path.
            </summary>
            <param name="path">
            The path to the node.
            </param>
            <returns>
            The node if found or <see langword="null"/> if not found.
            </returns>
            <remarks>
            Use the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Path"/> property get the path to the node.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.FindNodeById(System.Guid)">
            <summary>
            
            </summary>
            <param name="configurationNodeId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.FindNodesByType(System.Type)">
            <summary>
            When implemented by a class, finds nodes by their <see cref="T:System.Type"/>.
            </summary>
            <param name="type">
            The <see cref="T:System.Type"/> of the node.
            </param>
            <returns>
            The nodes found.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.FindNodesByType(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Type)">
            <summary>
            When implemented by a class, finds nodes by their <see cref="T:System.Type"/>.
            </summary>
            <param name="parent">
            The parent to start the search.
            </param>
            <param name="type">
            The <see cref="T:System.Type"/> of the node.
            </param>
            <returns>
            The nodes found.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.FindNodeByType(System.Type)">
            <summary>
            When implemented by a class, finds a node by it's <see cref="T:System.Type"/>.
            </summary>
            <param name="type">
            The <see cref="T:System.Type"/> of the node.
            </param>
            <returns>
            The node if found or <see langword="null"/> if not found.
            </returns>
            <remarks>
            If this is more than one type in the hierachy, this function will only find the first one found.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.FindNodeByType(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Type)">
            <summary>
            When implemented by a class, finds nodes by their <see cref="T:System.Type"/>.
            </summary>
            <param name="parent">
            The parent to start the search.
            </param>
            <param name="type">
            The <see cref="T:System.Type"/> of the node.
            </param>
            <returns>
            The node if found or <see langword="null"/> if not found.
            </returns>
            <remarks>
            If this is more than one type in the hierachy, this function will only find the first one found.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.FindNodeByName(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.String)">
            <summary>
            When implemented by a class, finds nodes by their <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Name"/>.
            </summary>
            <param name="parent">
            The parent to start the search.
            </param>
            <param name="name">
            The name of the node.
            </param>
            <returns>
            The node if found or <see langword="null"/> if not found.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.ContainsNodeType(System.Type)">
            <summary>
            When implemented by a class, determines if a node type exists in the hierarchy.
            </summary>
            <param name="nodeType">
            The <see cref="T:System.Type"/> of the node to find.
            </param>
            <returns>
            <see langword="true"/> if the type is contained in the hierarchy; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.ContainsNodeType(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Type)">
            <summary>
            When implemented by a class, determines if a node type exists in the hierarchy.
            </summary>
            <param name="parent">
            The parent to start the search.
            </param>
            <param name="nodeType">
            The <see cref="T:System.Type"/> of the node to find.
            </param>
            <returns>
            <see langword="true"/> if the type is contained in the hierarchy; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.AddNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            When implemented by a class, add a node to the hierarchy.
            </summary>
            <param name="node">
            The node to add to the hierarchy.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.RemoveNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            When implemented by a class, remove a node from the hierarchy.
            </summary>
            <param name="node">
            The node to remove.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.RenameNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.String,System.String)">
            <summary>
            When implemented by a class, renames a node in the hierarchy.
            </summary>
            <param name="node">
            The node to be renamed.
            </param>
            <param name="oldName">
            The old name.
            </param>
            <param name="newName">
            The new name.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.Save">
            <summary>
            When implemented by a class, save the application and all it's configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.Open">
            <summary>
            When implemented by a class, opens the application and loads it's configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.Load">
            <summary>
            When implemented by a class, loads all available configuration available for the application.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.BuildConfigurationSource">
            <summary>
            When implemented by a class, builds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> from the configuration settings of the current application configuration node.
            </summary>
            <returns>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> based on the current application..</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.GetService(System.Type)">
            <summary>
            When implemented by a class, gets the requested service.
            </summary>
            <param name="serviceType">The type of service to retrieve.</param>
            <returns>An instance of the service if it could be found, or a null reference (Nothing in Visual Basic) if it could not be found.</returns>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.Saved">
            <summary>
            When implemented by a class, occurs after the hierarchy is saved.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.Id">
            <summary>
            When implemented by a class, gets a unique id for the hierarchy.
            </summary>
            <value>
            A unique id for the hierarchy.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.RootNode">
            <summary>
            When implemented by a class, gets the root node for the hierarchy.
            </summary>
            <value>
            The root node for the hierarchy.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.SelectedNode">
            <summary>
            When implemented by a class, gets or sets the currently selected node in the hierarchy.
            </summary>
            <value>
            The currently selected node in the hierarchy
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.StorageService">
            <summary>
            When implemented by a class, gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageService"/> for the current hierarchy.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageService"/> for the current hierarchy.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.ConfigurationSource">
            <summary>
            When implemented by a class, gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> for the current hierarchy.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> for the current hierarchy.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy.ConfigurationParameter">
            <summary>
            When implemented by a class, gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationParameter"/> for the current hierarchy.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationParameter"/> for the current hierarchy.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService">
            <summary>
            Provides a container and management for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService.AddHierarchy(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy)">
            <summary>
            When implemented by a class, adds a hierarchy to the container.
            </summary>
            <param name="hierarchy">
            The hierarchy to add.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService.GetHierarchy(System.Guid)">
            <summary>
            When implemented by a class, gets a hierarchy from the container.
            </summary>
            <param name="id">The identifier for the hierarchy.</param>
            <returns>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> if found, or <see langword="null"/> if not found.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService.GetAllHierarchies">
            <summary>
            When implemented by a class, gets all the hierarchies in the service.
            </summary>
            <returns>
            All the hierarchies in the service.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService.RemoveHierarchy(System.Guid)">
            <summary>
            When implemented by a class, removes a hierarchy from the container.
            </summary>
            <param name="id">
            The identifier of the hierarchy to remove.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService.RemoveHierarchy(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy)">
            <summary>
            When implemented by a class, removes a hierarchy from the container.
            </summary>
            <param name="hierarchy">
            The hierarchy to remove.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService.SaveAll">
            <summary>
            When implemented by a class, saves all the hierarchies by calling save on all <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService.HierarchyAdded">
            <summary>
            When implemented by a class, occurs after an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> is added.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService.HierarchyRemoved">
            <summary>
            When implemented by a class, occurs after an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> is removed.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService.SelectedHierarchy">
            <summary>
            When implemented by a class, gets or sets the current selected hierarchy.
            </summary>
            <value>
            The current selected hierarchy.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageService">
            <summary>
            Provides a list of storage commands in the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>.
            </summary>    
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageService.ForEach(System.Action{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand})">
            <summary>
            When implemented by a class, performs the specified action on each item.
            </summary>
            <param name="action">The Action to perform on each element.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageService.Add(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand)">
            <summary>
            When implemented by a class, adds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> to the table.
            </summary>
            <param name="storageCreationCommand">
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> to add.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageService.Contains(System.String)">
            <summary>
            When implemented by a class, determines if a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> exits table.
            </summary>
            <param name="name">
            The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/>.
            </param>
            <returns>
            <see langword="true"/> if the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> exists; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageService.Remove(System.String)">
            <summary>
            When implemented by a class, removes a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> from the document
            </summary>
            <param name="name">
            The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/>.
            </param>        
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageService.Clear">
            <summary>
            When implemented by a class, clears all the commands in the list.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageService.ConfigurationFile">
            <summary>
            When implemented by a class, gets or sets the meta configuration file.
            </summary>
            <value>
            The meta configuration file.
            </value>
            <remarks>
            This file is used to store the meta data for your configuration describing the information around the configuration.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService">
            <summary>
            Enables interaction with the user interface of the development environment object that is hosting the designer.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.BeginUpdate">
            <summary>
            When implemented by a class, notifies the user interface that an update is occuring.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.EndUpdate">
            <summary>
            When implemented by a class, notifies the user interface that an update has ended.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowSaveDialog(System.Windows.Forms.SaveFileDialog)">
            <summary>
            When implemented by a class, displays a <see cref="T:System.Windows.Forms.SaveFileDialog"/> in the user interface.
            </summary>
            <param name="dialog">
            The <see cref="T:System.Windows.Forms.SaveFileDialog"/> to display.
            </param>
            <returns>
            One of the <see cref="T:System.Windows.Forms.DialogResult"/> values.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowOpenDialog(System.Windows.Forms.OpenFileDialog)">
            <summary>
            When implemented by a class, displays an <see cref="T:System.Windows.Forms.OpenFileDialog"/> in the user interface.
            </summary>
            <param name="dialog">
            The <see cref="T:System.Windows.Forms.OpenFileDialog"/> to display.
            </param>
            <returns>
            One of the <see cref="T:System.Windows.Forms.DialogResult"/> values.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ActivateNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            When implemented by a class, avtivates a node.
            </summary>
            <param name="node">
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to activate.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.DisplayErrorLog(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService)">
            <summary>
            When implemented by a class, displays the validation errors.
            </summary>
            <param name="errorLogService">
            The errorLogToDisplay.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.SetUIDirty(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy)">
            <summary>
            When implemented by a class, sets the hierarchy dirty indicating the UI should indicate a model change.
            </summary>
            <param name="hierarchy">
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> to set dirty in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService"/>.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.IsDirty(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy)">
            <summary>
            When implemented by a class, determines if the given <paramref name="hierarchy"/> has been modified.
            </summary>
            <param name="hierarchy">A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> object.</param>
            <returns><see langword="true"/> if the given <paramref name="hierarchy"/> has been modified; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.SetStatus(System.String)">
            <summary>
            When implemented by a class, updates the status text in the user interface.
            </summary>
            <param name="status">
            The status to display.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ClearErrorDisplay">
            <summary>
            Clear the errors in the user interface.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowError(System.Exception)">
            <summary>
            When implemented by a class, displays the specified exception and information about the exception.
            </summary>
            <param name="e">
            The <see cref="T:System.Exception"/> to display.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowError(System.Exception,System.String)">
            <summary>
            When implemented by a class, displays the specified exception and information about the exception.
            </summary>
            <param name="e">
            The <see cref="T:System.Exception"/> to display.
            </param>
            <param name="message">
            A message to display that provides information about the exception
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowError(System.Exception,System.String,System.String)">
            <summary>
            When implemented by a class, displays the specified exception and information about the exception.
            </summary>
            <param name="e">
            The <see cref="T:System.Exception"/> to display.
            </param>
            <param name="message">
            A message to display that provides information about the exception
            </param>
            <param name="caption">
            The caption for the message.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowError(System.String)">
            <summary>
            When implemented by a class, displays the specified error message.
            </summary>
            <param name="message">
            The error message to display.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowError(System.String,System.String)">
            <summary>
            When implemented by a class, displays the specified error message.
            </summary>
            <param name="message">
            The error message to display.
            </param>
            <param name="caption">
            The caption for the message.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowMessage(System.String)">
            <summary>
            When implemented by a class, displays the specified message.
            </summary>
            <param name="message">
            The message to display.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowMessage(System.String,System.String)">
            <summary>
            When implemented by a class, displays the specified message with the specified caption.
            </summary>
            <param name="message">
            The message to display.
            </param>
            <param name="caption">
            The caption for the message.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.ShowMessage(System.String,System.String,System.Windows.Forms.MessageBoxButtons)">
            <summary>
            When implemented by a class, displays the specified message in a message box with the specified caption and buttons to place on the dialog box.
            </summary>
            <param name="message">
            The message to display.
            </param>
            <param name="caption">
            The caption for the message.
            </param>
            <param name="buttons">
            One of the <see cref="T:System.Windows.Forms.MessageBoxButtons"/> values.
            </param>
            <returns>
            One of the <see cref="T:System.Windows.Forms.DialogResult"/> values.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.RefreshPropertyGrid">
            <summary>
            refreshes the currenlty selected node in the designers propertygrid
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService.OwnerWindow">
            <summary>
            When implemented by a class, gets the owner window.
            </summary>
            <value>
            The owner window.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.LinkNodeHelper">
            <summary>
            Helper to link a nodes rename and remove events.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.LinkNodeHelper.CreateReference``1(``0,``0,System.EventHandler{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs})">
            <summary>
            Create a reference for a node's removed event.
            </summary>
            <typeparam name="T">The type of node to link.</typeparam>
            <param name="oldReference">The old reference.</param>
            <param name="newReference">The new reference</param>
            <param name="referenceRemovedHandler">The handler for the removed event.</param>
            <returns>A new node with the removed hooked to the handler.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.LinkNodeHelper.CreateReference``1(``0,``0,System.EventHandler{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs},System.EventHandler{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeChangedEventArgs})">
            <summary>
            Create a reference for a node's removed event.
            </summary>
            <typeparam name="T">The type of node to link.</typeparam>
            <param name="oldReference">The old reference.</param>
            <param name="newReference">The new reference</param>
            <param name="referenceRemovedHandler">The handler for the removed event.</param>
            <param name="referenceRenamedHandler">The handler for the renamed event.</param>
            <returns>A new node with the removed and renamed events hooked to the handler.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveDownConfigurationUICommand">
            <summary>
            A command used to invoke the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeAfterCommand"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveDownConfigurationUICommand.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveDownConfigurationUICommand"/> with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveDownConfigurationUICommand.GetCommandState(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Gets the command state of the node.
            </summary>
            <param name="node">The node used to get the command state.</param>
            <returns>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandState"/> values.</returns>
            <remarks>
            If the node is the last node in the list, the command state will be <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandState.Disabled"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveUpConfigurationUICommand">
            <summary>
            A command used to invoke the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeBeforeCommand"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveUpConfigurationUICommand.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveUpConfigurationUICommand"/> with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveUpConfigurationUICommand.GetCommandState(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Gets the command state of the node.
            </summary>
            <param name="node">The node used to get the command state.</param>
            <returns>One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandState"/> values.</returns>
            <remarks>
            If the node is the first node in the list, the command state will be <see cref="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.CommandState.Disabled"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMultiplicity">
            <summary>
            Values that either allow or disallow multiple nodes in a parent.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMultiplicity.Allow">
            <summary>
            Allows multiple nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeMultiplicity.Disallow">
            <summary>
            Disallows multiple nodes.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UICommandService">
            <summary>
            Represents a service for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UICommandService.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UICommandService"/> class with an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService"/>.
            </summary>
            <param name="hierarchyService">A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService"/> instance.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UICommandService.AddCommand(System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand)">
            <summary>
            Add a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> for a particular <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> the command applies.</param>
            <param name="command">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> to add.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UICommandService.RemoveCommand(System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand)">
            <summary>
            Remove a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> for a particular <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> the command applies.</param>
            <param name="command">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand"/> to Remove.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.UICommandService.ForEach(System.Type,System.Action{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUICommand})">
            <summary>
            Performs the specified action on each item.
            </summary>		
            <param name="type">The <see cref="T:System.Type"/> the command applies.</param>
            <param name="action">The Action to perform on each element.</param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeAfterCommand">
            <summary>
            Represents a command that will move a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> after a given <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeAfterCommand.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeAfterCommand"/> class with an <see cref="T:System.IServiceProvider"/>, the node to move, and the sibling node to move it after.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeAfterCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Executes the moving the node after it's sibling.
            </summary>
            <param name="node">
            The node to execute the command upon.
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeBeforeCommand">
            <summary>
            Represents a command that will move a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> before a given <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeBeforeCommand.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeBeforeCommand"/> class with an <see cref="T:System.IServiceProvider"/>, the node to move, and the sibling node to move it before.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.MoveNodeBeforeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Executes the moving the node before it's sibling.
            </summary>
            <param name="node">
            The node to execute the command upon.
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry">
            <summary>
            Represents a entry for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService"/> that contains the data to create a node.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand,System.Type,System.Type,System.String,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/> with a command, the node type to create, the configuration data type associated with the node, name to display for this node, and if there can be more than one node of the type.
            </summary>
            <param name="configurationNodeCommand">The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.ConfigurationNodeCommand"/> used to create the node.</param>
            <param name="nodeType">The <see cref="T:System.Type"/> of the node to create.</param>
            <param name="dataType">The <see cref="T:System.Type"/> of the configuration data associated with the <paramref name="nodeType"/>.</param>
            <param name="displayName">The name to display in the user interface to create the node.</param>
            <param name="allowMultiple">
            Determines if more than one of the node type can exist.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.CreateNodeCreationEntryWithMultiples(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand,System.Type,System.Type,System.String)">
            <summary>
            Create a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/> that allows multiple nodes in the same parent node with a command, the node type to create, the configuration data type associated with the node and name to display for this node.
            </summary>
            <param name="configurationNodeCommand">The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.ConfigurationNodeCommand"/> used to create the node.</param>
            <param name="nodeType">The <see cref="T:System.Type"/> of the node to create.</param>
            <param name="dataType">The <see cref="T:System.Type"/> of the configuration data associated with the <paramref name="nodeType"/>.</param>
            <param name="displayName">The name to display in the user interface to create the node.</param>
            <returns>The new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/> object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.CreateNodeCreationEntryNoMultiples(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNodeCommand,System.Type,System.Type,System.String)">
            <summary>
            Create a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/> that does not allows multiple nodes in the same parent node with a command, the node type to create, the configuration data type associated with the node and name to display for this node.
            </summary>
            <param name="configurationNodeCommand">The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.ConfigurationNodeCommand"/> used to create the node.</param>
            <param name="nodeType">The <see cref="T:System.Type"/> of the node to create.</param>
            <param name="dataType">The <see cref="T:System.Type"/> of the configuration data associated with the <paramref name="nodeType"/>.</param>
            <param name="displayName">The name to display in the user interface to create the node.</param>
            <returns>The new <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/> object.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.DataType">
            <summary>
            Gets the configuration data type associated with the node type.
            </summary>
            <value>
            The configuration data type associated with the node type.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.NodeType">
            <summary>
            Gets the node type to create.
            </summary>
            <value>
            The node type to create.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.DisplayName">
            <summary>
            Gets the display name to show in the user interface that creats the node.
            </summary>
            <value>
            The display name to show in the user interface that creats the node.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.ConfigurationNodeCommand">
            <summary>
            Gets the command used to create the node.
            </summary>
            <value>
            The commad used to create the node.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.AllowMultiple">
            <summary>
            Determines if more than one of the node type can exist.
            </summary>
            <value>
            <see langword="true"/> if more than one of the node type can exist; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry.BaseTypeToCompare">
            <summary>
            Gets or sets the base type of the node type that will be compared to determine if the type can allow multiple.
            </summary>
            <value>
            The base type of the node type that will be compared to determine if the type can allow multiple.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationService">
            <summary>
            Provides a service for creating nodes based on data types.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationService.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationService"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationService.CreateNodeByDataType(System.Type)">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> based on the data type.
            </summary>
            <param name="dataType">
            The data type to base the creation upon.
            </param>
            <returns>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> based on the data type or <see langword="null"/> if one does not exists.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationService.CreateNodeByDataType(System.Type,System.Object[])">
            <summary>
            Creates a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> based on the data type.
            </summary>
            <param name="dataType">
            The data type to base the creation upon.
            </param>
            <param name="constructorArguments">
            The constructor arguments for the node.
            </param>
            <returns>
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> based on the data type or <see langword="null"/> if one does not exists.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationService.AddNodeCreationEntry(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry)">
            <summary>
            Creates a map between the node and the data that it represents.
            </summary>
            <param name="nodeCreationEntry">
            A <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeCreationEntry"/> object.
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeNameCreationService">
            <summary>
            Provides a service that can generate unique names for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeNameCreationService.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeNameCreationService"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.NodeNameCreationService.GetUniqueName(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Gets a unique name for the node.
            </summary>
            <param name="nodeName">The current name of the node.</param>
            <param name="node">The node to rename.</param>
            <param name="parentNode">The parent of the node.</param>
            <returns>A unique name.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenConfigurationApplicationNodeCommand">
            <summary>
            Represents a command that will open an application configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenConfigurationApplicationNodeCommand.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenConfigurationApplicationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenConfigurationApplicationNodeCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenConfigurationApplicationNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="clearErrorLog">
            Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/> should be cleared when the command has executed.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.OpenConfigurationApplicationNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Opens a previously saved configuration.
            </summary>
            <param name="node">
            The node to execute the command upon.
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ParentNodeNotification">
            <summary>
            Determines if a child node should notify it's parent when an event occurs.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ParentNodeNotification.Notify">
            <summary>
            Notify the parent.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ParentNodeNotification.DoNotNotify">
            <summary>
            Do not notify the parent.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ApplicationNodeName">
            <summary>
              Looks up a localized string similar to Application Configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AssembliesLabelText">
            <summary>
              Looks up a localized string similar to Assemblies.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.AssemblyLoadFailedErrorMessage">
            <summary>
              Looks up a localized string similar to Unable to load the assembly. The error message is &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CategoryGeneral">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CategoryName">
            <summary>
              Looks up a localized string similar to (Name).
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CategoryProtection">
            <summary>
              Looks up a localized string similar to Protection.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CategorySection">
            <summary>
              Looks up a localized string similar to Configuration section.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CloseApplicationUICommandLongText">
            <summary>
              Looks up a localized string similar to Close the current application configuration..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CloseApplicationUICommandText">
            <summary>
              Looks up a localized string similar to Close Application.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ConfigurationErrorToString">
             <summary>
               Looks up a localized string similar to {0} at path {1}.
            {2}
            
            .
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ConfigurationFileDialogFilter">
            <summary>
              Looks up a localized string similar to Configuration Files(web.config, *.exe.config, app.config)|web.config;*.exe.config;app.config|All Files(*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ConfigurationFilePathDescription">
            <summary>
              Looks up a localized string similar to The path to the application configuration file..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ConfigurationSourceNodeName">
            <summary>
              Looks up a localized string similar to Configuration Sources.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ConfigurationSourceUICommandLongText">
            <summary>
              Looks up a localized string similar to Add configuration sources to the application.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ConfigurationSourceUICommandText">
            <summary>
              Looks up a localized string similar to Configuration Sources.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CustomAttributesDuplicateKeyError">
            <summary>
              Looks up a localized string similar to The custom attributes collection contains multiple entries of the key &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.CustomAttributesKeyNullError">
            <summary>
              Looks up a localized string similar to The custom attribute at position {0} is empty..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.DefaultApplicationName">
            <summary>
              Looks up a localized string similar to Application.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.EnumTypesFailedErrorMessage">
            <summary>
              Looks up a localized string similar to Unable to load references for the specified assembly, please ensure all references are in the same directory as the assembly which is loaded..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorBuildingType">
            <summary>
              Looks up a localized string similar to Error building the specified type: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ErrorFileCouldNotBeOpened">
            <summary>
              Looks up a localized string similar to The file &apos;{0}&apos; could not be opened..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.EventLoggingEnabledDescription">
            <summary>
              Looks up a localized string similar to Gets or sets if Event Logging is enabled..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionCannotSetClosedGenerics">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionComponentNotHierarchyNode">
            <summary>
              Looks up a localized string similar to Can only add IHierarchyNode objects to this container..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionConfigNodeExpected">
            <summary>
              Looks up a localized string similar to The type must be a ConfigurationNode..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionFilesNotSaved">
            <summary>
              Looks up a localized string similar to Could not save one or more of the application files..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionInvalidComponentName">
            <summary>
              Looks up a localized string similar to The name {0} is invalid for the component..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionLowerBoundOutOfRange">
            <summary>
              Looks up a localized string similar to The lowerBound value &apos;{0}&apos; is not less than or equal to the upperBound value &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionManagerDependencyNotFound">
            <summary>
              Looks up a localized string similar to The configuration design manger {0} has a dependency on {1} that could not be loaded..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionNoBaseTypeAttribute">
            <summary>
              Looks up a localized string similar to There is not a valid base type attribute for the selector..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionNodeAlreadyInCollection">
            <summary>
              Looks up a localized string similar to The node already exists in the collection..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionNodeMapNotRegistered">
            <summary>
              Looks up a localized string similar to A node type map is not registered for the configuration type {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionNodeNameAlreadyExists">
            <summary>
              Looks up a localized string similar to A sibling node with the name &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionNoRefTypeAttribute">
            <summary>
              Looks up a localized string similar to The reference type for the node was not set.  Please add the ReferenceTypeAttribute to your property..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionNotAssignableType">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; must be assignable from the type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionOnlyReorderSiblings">
            <summary>
              Looks up a localized string similar to Can only re-order sibling nodes..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionStringNullOrEmpty">
            <summary>
              Looks up a localized string similar to The value can not be null or string or empty..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionTypeBuildTypeExceptionMakingGeneric">
             <summary>
               Looks up a localized string similar to The type cannot be built: generic type cannot be made.
            {0}..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionTypeBuildTypeNotSet">
            <summary>
              Looks up a localized string similar to The type cannot be built: type not set..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionTypeNotCompatibleWithConstraints">
            <summary>
              Looks up a localized string similar to The type is not compatible with the node constraints..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionTypeNotConfigurationNode">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; must be a type of ConfigurationNode..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionTypeNotValid">
            <summary>
              Looks up a localized string similar to The type {0} is not valid..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ExceptionValueNullMessage">
            <summary>
              Looks up a localized string similar to The value for {0} can not be null..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.FileConfigurationSourceUICommandLongText">
            <summary>
              Looks up a localized string similar to Add the file configuration source element..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.FileConfigurationSourceUICommandText">
            <summary>
              Looks up a localized string similar to File Configuration Source.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.FileSourceFileDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the file to use for the source..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.GenericFileFilter">
            <summary>
              Looks up a localized string similar to All Files(*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.GenericSaveFile">
            <summary>
              Looks up a localized string similar to Save File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.InstrumentationNodeName">
            <summary>
              Looks up a localized string similar to Instrumentation.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.InstrumentationUICommandLongText">
            <summary>
              Looks up a localized string similar to Add instrumentation to the application.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.InstrumentationUICommandText">
            <summary>
              Looks up a localized string similar to Instrumentation.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.KeyValueEditorFormat">
            <summary>
              Looks up a localized string similar to Key: {0}, Value: {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.MaxLengthExceededErrorMessage">
            <summary>
              Looks up a localized string similar to The length of the string {0} must not exceed {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.MinLengthExceededErrorMessage">
            <summary>
              Looks up a localized string similar to The string {0} must have a length of at least {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.MismatchedPasswordCaption">
            <summary>
              Looks up a localized string similar to Passwords do not match.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.MismatchedPasswordMessage">
            <summary>
              Looks up a localized string similar to The passwords do not match. Passwords are case sensitive (e.g. &quot;password&quot; does not equal &quot;PassWord&quot;). Please try again..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.MoveDownMenuItemText">
            <summary>
              Looks up a localized string similar to Move Down.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.MoveDownStatusText">
            <summary>
              Looks up a localized string similar to Move currently selected node down.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.MoveUpMenuItemText">
            <summary>
              Looks up a localized string similar to Move Up.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.MoveUpStatusText">
            <summary>
              Looks up a localized string similar to Move currently selected node up.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.NodeNameDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the node..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.None">
            <summary>
              Looks up a localized string similar to (none).
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.NoProtectionProvider">
            <summary>
              Looks up a localized string similar to (no protection).
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.NoTypesFoundInAssemblyCaption">
            <summary>
              Looks up a localized string similar to No Types Found In Assembly..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.NoTypesFoundInAssemblyErrorMessage">
            <summary>
              Looks up a localized string similar to There were no types found in the assembly &apos;{0}&apos; that implement or inherit from the base type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.OpenApplicationCaption">
            <summary>
              Looks up a localized string similar to Open Application.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.OpenApplicationErrorMessage">
            <summary>
              Looks up a localized string similar to One or more errors occurred while trying to open the configuration..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.OverwriteFileCaption">
            <summary>
              Looks up a localized string similar to Save of Read-Only File.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.OverwriteFileMessage">
             <summary>
               Looks up a localized string similar to The file {0} cannot be saved because it is write-protected.
            
            Do you want to remove the write-protection and overwrite the file in its current location..
             </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.PerformanceCountersEnabledDescription">
            <summary>
              Looks up a localized string similar to Gets or sets if Performance Counters are enabled..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ProtectionNotSupportedOnConfigurationSource">
            <summary>
              Looks up a localized string similar to Protecting the configuration is not supported on the current ConfigurationSource..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.RegExErrorMessage">
            <summary>
              Looks up a localized string similar to The value {0} does not match the regular expression..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.RemoveUICommandLongText">
            <summary>
              Looks up a localized string similar to Remove current node.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.RemoveUICommandText">
            <summary>
              Looks up a localized string similar to Remove.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveApplicationCaption">
            <summary>
              Looks up a localized string similar to Save Application.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveApplicationErrorMessage">
            <summary>
              Looks up a localized string similar to One or more errors occurred while trying to save the configuration..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveApplicationErrorRequestMessage">
            <summary>
              Looks up a localized string similar to One or more errors occurred while trying to save the configuration. Would you still like to close the application without saving?.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SaveApplicationRequest">
            <summary>
              Looks up a localized string similar to The application has not been saved, would you like to save before closing?.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SelectedSourceDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the default configuration source..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SystemConfigurationSourceElementNodeCreationText">
            <summary>
              Looks up a localized string similar to System Configuration Source.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SystemConfigurationSourceUICommandLongText">
            <summary>
              Looks up a localized string similar to Adds the system configuration source element..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.SystemConfigurationSourceUICommandText">
            <summary>
              Looks up a localized string similar to System ConfigurationSource.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.TypeNameDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the type for the element..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.TypeNotGenericTypeParameter">
            <summary>
              Looks up a localized string similar to The type {0} does not represent a generic type parameter as expected..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.TypeParameterUndefined">
            <summary>
              Looks up a localized string similar to &lt;undefined&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.TypeSelectorClassRootNodeText">
            <summary>
              Looks up a localized string similar to Classes that inherit from {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.TypeSelectorClassRootNodeTextWithConfigurationType">
            <summary>
              Looks up a localized string similar to Classes that inherit from {0} and have a ConfigurationElementType of &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.TypeSelectorInterfaceRootNodeText">
            <summary>
              Looks up a localized string similar to Types that implement {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.TypeSelectorInterfaceRootNodeTextWithConfigurationType">
            <summary>
              Looks up a localized string similar to Types that implement {0} and have a ConfigurationElementType of &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.TypeSubclassErrorMsg">
            <summary>
              Looks up a localized string similar to The selected type must be a subclass of {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.UniqueNameErrorMessage">
            <summary>
              Looks up a localized string similar to The name {0} should be unique within the application block..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidateUICommandLongText">
            <summary>
              Looks up a localized string similar to Validate current node..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidateUICommandText">
            <summary>
              Looks up a localized string similar to Validate.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationCaption">
            <summary>
              Looks up a localized string similar to Validation.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationErrorsMessage">
            <summary>
              Looks up a localized string similar to One or more validation errors occurred..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValidationErrorToString">
            <summary>
              Looks up a localized string similar to The property {0} is invalid for {1}. Message: {2}.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValueNotInRangeErrorMessage">
            <summary>
              Looks up a localized string similar to The value for {0} is not in the specified range..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.ValueOutsideRangeErrorMessage">
            <summary>
              Looks up a localized string similar to The value for {0} is not outside of the specified range..
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Properties.Resources.WMIEnabledDescription">
            <summary>
              Looks up a localized string similar to Gets or sets if WMI is enabled..
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceEditor">
            <summary>
            Provides a user interface that can edit a reference to another node at design time.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value of the specified object using the editor style indicated by <seealso cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"/>.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information. </param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>The new value of the object.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <seealso cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns><see cref="F:System.Drawing.Design.UITypeEditorEditStyle.DropDown"/></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceEditorUI">
            <devdoc>
            The UI for the reference type selector.
            </devdoc>    
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceEditorUI.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceTypeAttribute">
            <summary>
            Specifies the <see cref="T:System.Type"/> that a node references.
            </summary>	
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceTypeAttribute.#ctor(System.Type)">
            <summary>
            Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceTypeAttribute"/> class with type to reference.
            </summary>
            <param name="referenceType">
            The <see cref="T:System.Type"/> of the reference.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceTypeAttribute.#ctor(System.Type,System.Boolean)">
            <summary>
            
            </summary>
            <param name="referenceType"></param>
            <param name="localOnly"></param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceTypeAttribute.ReferenceType">
            <summary>
            Gets the <see cref="T:System.Type"/> to reference.
            </summary>
            <value>
            The <see cref="T:System.Type"/> to reference.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ReferenceTypeAttribute.LocalOnly">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand">
            <summary>
            Represents a command that will remove a node from it's associated <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="clearErrorLog">
            Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/> should be cleared when the command has executed.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.RemoveNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Removes the node from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>.
            </summary>
            <param name="node">
            The node to execute the command upon.
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ResourceStringLoader">
            <summary>
            Helper class to load resources strings.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ResourceStringLoader.LoadString(System.String,System.String)">
            <summary>
            Load a resource string.
            </summary>
            <param name="baseName">The base name of the resource.</param>
            <param name="resourceName">The resource name.</param>
            <returns>The string from the resource.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ResourceStringLoader.LoadString(System.String,System.String,System.Reflection.Assembly)">
            <summary>
            Load a resource string.
            </summary>
            <param name="baseName">The base name of the resource.</param>
            <param name="resourceName">The resource name.</param>
            <param name="asm">The assembly to load the resource from.</param>
            <returns>The string from the resource.</returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveFileEditor">
            <summary>
            Provides a user interface for saving a file name.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveFileEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by GetEditStyle.
            </summary>
            <param name="context">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.
            </param>
            <param name="provider">
            An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.
            </param>
            <param name="value">
            The object to edit.
            </param>
            <returns>
            The new value of the object.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveFileEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveFileEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.
            </param>
            <returns>
            <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal"/>
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SaveFileEditor.InitializeDialog(System.Windows.Forms.FileDialog)">
            <summary>
            Initializes the save file dialog when it is created.
            </summary>
            <param name="fileDialog">
            A <see cref="T:System.Windows.Forms.FileDialog"/> instance.
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SelectedImageAttribute">
            <summary>
            Defines the image to be displayed when a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> is not selected in the user interface.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SelectedImageAttribute.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the  <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SelectedImageAttribute"/> class using the specified <see cref="T:System.Type"/> and resource entry name. The type is used locate the assembly from which to load the  <see cref="T:System.Resources.ResourceManager"/> that contains the image.
            </summary>
            <param name="componentType">
            A <see cref="T:System.Type"/> defined in the assembly that contains the image as an embedded resource.
            </param>
            <param name="name">The name of the embedded resource.</param>
            <seealso cref="T:System.Drawing.ToolboxBitmapAttribute"/>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SelectedImageAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SelectedImageAttribute"/> class based on a 16 x 16 bitmap that is embedded as a resource in a specified assembly.
            </summary>
            <param name="componentType">A <see cref="T:System.Type"/> whose defining assembly is  searched for the bitmap resource.</param>
            <seealso cref="T:System.Drawing.ToolboxBitmapAttribute"/>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper">
            <summary>
            A utility class to help with common service related activities.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.LogError(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Exception)">
            <summary>
            Log an error to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="node">The configuration node associated with the error.</param>
            <param name="e">The <see cref="T:System.Exception"/> to log.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.LogError(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError)">
            <summary>
            Log a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="error">
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> to log.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.LogError(System.IServiceProvider,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError)">
            <summary>
            Log a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> to the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="error">
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationError"/> to log.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.DisplayErrors(System.IServiceProvider)">
            <summary>
            Display the errors from the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/> in the user interface.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetUIService(System.IServiceProvider)">
            <summary>
            Gets the registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <returns>The registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUIService"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetUIHierarchyService(System.IServiceProvider)">
            <summary>
            Gets the registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <returns>The registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchyService"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetCurrentHierarchy(System.IServiceProvider)">
            <summary>
            Gets the current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <returns>The current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetCurrentConfigurationSource(System.IServiceProvider)">
            <summary>
            Gets the current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>'s <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <returns>The current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>'s <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetCurrentConfigurationParameter(System.IServiceProvider)">
            <summary>
            Gets the current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>'s <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationParameter"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <returns>The current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>'s <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationParameter"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetNameCreationService(System.IServiceProvider)">
            <summary>
            Gets the registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeNameCreationService"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <returns>The registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeNameCreationService"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetCurrentStorageService(System.IServiceProvider)">
            <summary>
            Gets the registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageService"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <returns>The registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageService"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetCurrentRootNode(System.IServiceProvider)">
            <summary>
            Gets the current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>'s root <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <returns>The current selected <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>'s root <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetApplicationConfigurationFile(System.IServiceProvider)">
            <summary>
            Gets the file associated with the currently selected root node.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <returns>The file associated with the currently selected root node.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetUICommandService(System.IServiceProvider)">
            <summary>
            Gets the registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUICommandService"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <returns>The registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IUICommandService"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetErrorService(System.IServiceProvider)">
            <summary>
            Gets the registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <returns>The registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetNodeCreationService(System.IServiceProvider)">
            <summary>
            Gets the registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <returns>The registered <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.INodeCreationService"/>.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ServiceHelper.GetPluginDirectoryService(System.IServiceProvider)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy">
            <summary>
            Provides hierarchy management for each configuration application.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationApplicationNode,System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy"/> class.
            </summary>
            <param name="rootNode">The root node of the hierarchy.</param>
            <param name="serviceProvider">The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.Dispose">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy"/> and optionally releases the managed resources.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.FindNodeByPath(System.String)">
            <summary>
            Finds a node via it's path.
            </summary>
            <param name="path">
            The path to the node.
            </param>
            <returns>
            The node if found or <see langword="null"/> if not found.
            </returns>
            <remarks>
            Use the <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Path"/> property get the path to the node.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.FindNodeById(System.Guid)">
            <summary>
            
            </summary>
            <param name="configurationNodeId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.FindNodesByType(System.Type)">
            <summary>
            Finds nodes by their <see cref="T:System.Type"/>.
            </summary>
            <param name="type">
            The <see cref="T:System.Type"/> of the node.
            </param>
            <returns>
            The nodes found.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.FindNodesByType(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Type)">
            <summary>
            Finds nodes by their <see cref="T:System.Type"/>.
            </summary>
            <param name="parent">
            The parent to start the search.
            </param>
            <param name="type">
            The <see cref="T:System.Type"/> of the node.
            </param>
            <returns>
            The nodes found.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.FindNodeByType(System.Type)">
            <summary>
            Finds a node by it's <see cref="T:System.Type"/>.
            </summary>
            <param name="type">
            The <see cref="T:System.Type"/> of the node.
            </param>
            <returns>
            The node if found or <see langword="null"/> if not found.
            </returns>
            <remarks>
            If this is more than one type in the hierachy, this function will only find the first one found.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.FindNodeByType(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Type)">
            <summary>
            Finds nodes by their <see cref="T:System.Type"/>.
            </summary>
            <param name="parent">
            The parent to start the search.
            </param>
            <param name="type">
            The <see cref="T:System.Type"/> of the node.
            </param>
            <returns>
            The node if found or <see langword="null"/> if not found.
            </returns>
            <remarks>
            If this is more than one type in the hierachy, this function will only find the first one found.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.FindNodeByName(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.String)">
            <summary>
            Finds nodes by their <seealso cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode.Name"/>.
            </summary>
            <param name="parent">
            The parent to start the search.
            </param>
            <param name="name">
            The name of the node.
            </param>
            <returns>
            The node if found or <see langword="null"/> if not found.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.ContainsNodeType(System.Type)">
            <summary>
            Determines if a node type exists in the hierarchy.
            </summary>
            <param name="nodeType">
            The <see cref="T:System.Type"/> of the node to find.
            </param>
            <returns>
            <see langword="true"/> if the type is contained in the hierarchy; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.ContainsNodeType(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.Type)">
            <summary>
            Determines if a node type exists in the hierarchy.
            </summary>
            <param name="parent">
            The parent to start the search.
            </param>
            <param name="nodeType">
            The <see cref="T:System.Type"/> of the node to find.
            </param>
            <returns>
            <see langword="true"/> if the type is contained in the hierarchy; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.AddNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Add a node to the hierarchy.
            </summary>
            <param name="node">
            The node to add to the hierarchy.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.RemoveNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            Remove a node from the hierarchy.
            </summary>
            <param name="node">
            The node to remove.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.RenameNode(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.String,System.String)">
            <summary>
            Renames a node in the hierarchy.
            </summary>
            <param name="node">
            The node to be renamed.
            </param>
            <param name="oldName">
            The old name.
            </param>
            <param name="newName">
            The new name.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.Save">
            <summary>
            Save the application and all it's configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.Open">
            <summary>
            Opens the application and loads it's configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.Load">
            <summary>
            Loads all available configuration available for the application.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.BuildConfigurationSource">
            <summary>
            Builds an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> from the configuration settings of the current application configuration node.
            </summary>
            <returns>The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> based on the current application..</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.GetService(System.Type)">
            <summary>
            Gthe requested service.
            </summary>
            <param name="serviceType">The type of service to retrieve.</param>
            <returns>An instance of the service if it could be found, or a null reference (Nothing in Visual Basic) if it could not be found.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.System#ComponentModel#IContainer#Add(System.ComponentModel.IComponent,System.String)">
            <summary>
            Adds the specified <see cref="T:System.ComponentModel.IComponent"/> to the <see cref="T:System.ComponentModel.IContainer"/>, and assigns a name to the component. 
            </summary>
            <param name="component">The <see cref="T:System.ComponentModel.IComponent"/> to add.</param>
            <param name="name">The name to assign to the <see cref="T:System.ComponentModel.IComponent"/>.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.System#ComponentModel#IContainer#Add(System.ComponentModel.IComponent)">
            <summary>
            Adds the specified <see cref="T:System.ComponentModel.IComponent"/> to the <see cref="T:System.ComponentModel.IContainer"/>.
            </summary>
            <param name="component">The <see cref="T:System.ComponentModel.IComponent"/> to add.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.System#ComponentModel#IContainer#Remove(System.ComponentModel.IComponent)">
            <summary>
            Removes a component from the <see cref="T:System.ComponentModel.IContainer"/>. 
            </summary>
            <param name="component">The <see cref="T:System.ComponentModel.IComponent"/> to remove.</param>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.Saved">
            <summary>
            Occurs after the hierarchy is saved.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.Id">
            <summary>
            Gets a unique id for the hierarchy.
            </summary>
            <value>
            A unique id for the hierarchy.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.RootNode">
            <summary>
            Gets the root node for the hierarchy.
            </summary>
            <value>
            The root node for the hierarchy.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.SelectedNode">
            <summary>
            Gets or sets the currently selected node in the hierarchy.
            </summary>
            <value>
            The currently selected node in the hierarchy
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.StorageService">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageService"/> for the current hierarchy.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IStorageService"/> for the current hierarchy.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.ConfigurationSource">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> for the current hierarchy.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> for the current hierarchy.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.ConfigurationParameter">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationParameter"/> for the current hierarchy.
            </summary>
            <value>
            the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationParameter"/> for the current hierarchy.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchy.System#ComponentModel#IContainer#Components">
            <summary>
            Gets all the components in the <see cref="T:System.ComponentModel.IContainer"/>.
            </summary>
            <value>
            A collection of <see cref="T:System.ComponentModel.IComponent"/> objects that represents all the components in the <see cref="T:System.ComponentModel.IContainer"/>.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService">
            <summary>
            Provides a container and management for <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService.Dispose">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService"/> and optionally releases the managed resources.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">
            <see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService.AddHierarchy(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy)">
            <summary>
            Adds a hierarchy to the container.
            </summary>
            <param name="hierarchy">
            The hierarchy to add.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService.GetHierarchy(System.Guid)">
            <summary>
            Gets a hierarchy from the container.
            </summary>
            <param name="id">The identifier for the hierarchy.</param>
            <returns>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> if found, or <see langword="null"/> if not found.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService.GetAllHierarchies">
            <summary>
            Gets all the hierarchies in the service.
            </summary>
            <returns>
            All the hierarchies in the service.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService.RemoveHierarchy(System.Guid)">
            <summary>
            Removes a hierarchy from the container.
            </summary>
            <param name="id">
            The identifier of the hierarchy to remove.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService.RemoveHierarchy(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy)">
            <summary>
            Removes a hierarchy from the container.
            </summary>
            <param name="hierarchy">
            The hierarchy to remove.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService.SaveAll">
            <summary>
            Saves all the hierarchies by calling save on all <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService.HierarchyAdded">
            <summary>
            Occurs after an <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/> is added.
            </summary>
        </member>
        <member name="E:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService.HierarchyRemoved">
            <summary>
            Occurs when a hierarchy is removed.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationUIHierarchyService.SelectedHierarchy">
            <summary>
            Gets or sets the current selected hierarchy.
            </summary>
            <value>
            The current selected hierarchy.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SRCategoryAttribute">
            <summary>
            Represents a localized <see cref="T:System.ComponentModel.CategoryAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SRCategoryAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SRCategoryAttribute"/> class with the <see cref="T:System.Type"/> containing the resources and the resource name.
            </summary>
            <param name="category">The resources string name.</param>
            <param name="resourceType">The <see cref="T:System.Type"/> containing the resource strings.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SRCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Gets the localized string based on the key.
            </summary>
            <param name="value">The key to the string resources.</param>
            <returns>The localized string.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SRCategoryAttribute.ResourceType">
            <summary>
            Gets the type that contains the resources.
            </summary>
            <value>
            The type that contains the resources.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SRDescriptionAttribute">
            <summary>
            Represents a localized <see cref="T:System.ComponentModel.DescriptionAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SRDescriptionAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SRDescriptionAttribute"/> class with the <see cref="T:System.Type"/> containing the resources and the resource name.
            </summary>
            <param name="description">The resources string name.</param>
            <param name="resourceType">The <see cref="T:System.Type"/> containing the resource strings.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SRDescriptionAttribute.ResourceType">
            <summary>
            Gets the resource type for the resources strings.
            </summary>
            <value>
            The resource type for the resources strings.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SRDescriptionAttribute.Description">
            <summary>
            Gets the description stored in the attribute.
            </summary>
            <value>
            The description stored in the attribute.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageService">
            <summary>
            Provides a list of storage commands in the current <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IConfigurationUIHierarchy"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageService.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageService"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageService.ForEach(System.Action{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand})">
            <summary>
            Performs the specified action on each item.
            </summary>
            <param name="action">The Action to perform on each element.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageService.Add(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand)">
            <summary>
            Adds a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> to the table.
            </summary>
            <param name="storageCreationCommand">
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> to add.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageService.Contains(System.String)">
            <summary>
            Determines if a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> exits table.
            </summary>
            <param name="name">
            The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/>.
            </param>
            <returns>
            <see langword="true"/> if the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> exists; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageService.Remove(System.String)">
            <summary>
            Removes a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/> from the document
            </summary>
            <param name="name">
            The name of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageCreationCommand"/>.
            </param> 
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageService.Clear">
            <summary>
            Clears all the commands in the list.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.StorageService.ConfigurationFile">
            <summary>
            Gets or sets the meta configuration file.
            </summary>
            <value>
            The meta configuration file.
            </value>
            <remarks>
            This file is used to store the meta data for your configuration describing the information around the configuration.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SystemConfigurationSourceElementNode">
            <summary>
            Represents a design time node for the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.SystemConfigurationSourceElement"/> configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SystemConfigurationSourceElementNode.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.SystemConfigurationSourceElement"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SystemConfigurationSourceElementNode.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.SystemConfigurationSourceElement)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.SystemConfigurationSourceElement"/> class with a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.SystemConfigurationSourceElement"/>.
            </summary>
            <param name="element">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.SystemConfigurationSourceElement"/> to initialize.</param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SystemConfigurationSourceElementNode.Type">
            <summary>
            Gets the <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SystemConfigurationSourceElementNode.Type"/> of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/>.
            </summary>
            <value>
            The <see cref="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SystemConfigurationSourceElementNode.Type"/> of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SystemConfigurationSourceElementNode.ConfigurationSourceElement">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.SystemConfigurationSourceElement"/> this node represents.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.SystemConfigurationSourceElement"/> this node represents.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SystemConfigurationSourceElementNode.ConfigurationSource">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> that this node represents.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource"/> that this node represents.
            </value>
            <remarks>
            Returns a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSource"/> based on the application's configuration file.
            </remarks>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.SystemConfigurationSourceElementNode.ConfigurationParameter">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationParameter"/> that this node represents.
            </summary>
            <value>
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationParameter"/> that this node represents.
            </value>
            <remarks>
            Returns a <see cref="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationParameter"/> based on the application's configuration file.
            </remarks>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeImages">
            <devdoc>
            This is the enumaration for the image indexes in the RunTimeTypeSelector.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelector">
            <summary>
            Represents a selector for types
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelector.#ctor(System.Type,System.Type,System.Windows.Forms.TreeView)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelector"/> class with the current type, the base type
            and a <see cref="T:System.Windows.Forms.TreeView"/> to display the types.
            </summary>
            <param name="currentType">The current type.</param>
            <param name="baseType">The base type for the current type.</param>
            <param name="treeView">A <see cref="T:System.Windows.Forms.TreeView"/> to display the types.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelector.#ctor(System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludes,System.Windows.Forms.TreeView)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelector"/> class with the current type, the base type
            a flag for what types to include, and a <see cref="T:System.Windows.Forms.TreeView"/> to display the types.
            </summary>
            <param name="currentType">The current type.</param>
            <param name="baseType">The base type for the current type.</param>
            <param name="flags">One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludes"/> values.</param>
            <param name="treeView">A <see cref="T:System.Windows.Forms.TreeView"/> to display the types.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelector.#ctor(System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludes,System.Type,System.Windows.Forms.TreeView)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelector"/> class with the current type, the base type
            a flag for what types to include, a configuration type and a <see cref="T:System.Windows.Forms.TreeView"/> to display the types.
            </summary>
            <param name="currentType">The current type.</param>
            <param name="baseType">The base type for the current type.</param>
            <param name="flags">One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludes"/> values.</param>
            <param name="configurationType">The configurtion type.</param>
            <param name="treeView">A <see cref="T:System.Windows.Forms.TreeView"/> to display the types.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelector.IsTypeValid(System.Type)">
            <summary>
            Determines if a type is valid.
            </summary>
            <param name="selectedType">The selected type.</param>
            <returns>true if the type is valid; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelector.LoadTreeView(System.Reflection.Assembly)">
            <summary>
            Loads the tree based on an assembly.
            </summary>
            <param name="assembly">The assembly to use to load the tree.</param>
            <returns>true if the tree contains the assembly; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelector.LoadFilteredTreeView(System.Reflection.Assembly)">
            <summary>
            Loads the tree based on an assembly, filtering the types based on the last known filter.
            </summary>
            <param name="assembly">The assembly to use to load the tree.</param>
            <returns>true if the tree contains the assembly; otherwise false.</returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelector.AssembliesRootNode">
            <summary>
            The root node of the tree.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelector.TypeToVerify">
            <summary>
            The type to verify.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelector.TreeNodeTable">
            <devdoc>
            Represents the table of tree nodes by assembly type.
            </devdoc>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorEditor">
            <summary>
            Provides a user interface for seleting a <see cref="T:System.Type"/>.
            </summary>
            <remarks>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorEditor"/> is a <see cref="T:System.Drawing.Design.UITypeEditor"/> that provides a dialog box for selecting a <see cref="T:System.Type"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorEditor.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorEditor"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by <seealso cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/>.
            </summary>
            <param name="context">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.
            </param>
            <param name="provider">
            An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.
            </param>
            <param name="value">
            The object to edit.
            </param>
            <returns>
            The fully qualifed type name for the chosen type.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <seealso cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information
            </param>
            <returns>
            <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal"/> for this editor.
            </returns>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorEditor.GetBaseType(System.ComponentModel.ITypeDescriptorContext)">
            <devdoc>
            Get the base type of the object to use to filter possible types.
            </devdoc>        
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludes">
            <summary>
            Provides attributes for the filter of types.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludes.None">
            <summary>
            No filter are applied to types.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludes.AbstractTypes">
            <summary>
            Inclue abstract types in the filter.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludes.Interfaces">
            <summary>
            Inclue interfaces in the filter.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludes.BaseType">
            <summary>
            Inclue base types in the filter.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludes.NonpublicTypes">
            <summary>
            Inclue non public types in the filter.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI">
            <summary>
            <para>Represents the UI for the assembly selector dialog.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.#ctor(System.Type,System.Type)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI"/> class.</para>
            </summary>
            <param name="currentType">
            <para>The current <see cref="T:System.Type"/> selected.</para>
            </param>
            <param name="baseType">
            <para>The <see cref="T:System.Type"/> to filter and verify when loading.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.#ctor(System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludes)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI"/> class.</para>
            </summary>
            <param name="currentType">
            <para>The current <see cref="T:System.Type"/> selected.</para>
            </param>
            <param name="baseType">
            <para>The <see cref="T:System.Type"/> to filter and verify when loading.</para>
            </param>
            <param name="flags">
            <para>The flags for the editor.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.#ctor(System.Type,System.Type,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorIncludes,System.Type)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI"/> class.</para>
            </summary>
            <param name="currentType">
            <para>The current <see cref="T:System.Type"/> selected.</para>
            </param>
            <param name="baseType">
            <para>The <see cref="T:System.Type"/> to filter and verify when loading.</para>
            </param>
            <param name="flags">
            <para>The flags for the editor.</para>
            </param>
            <param name="configurationType">The base configuration type the selected type must reference.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by this <see cref="T:System.Windows.Forms.Form"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">
            <para><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.CollapseAssemlbyNodes">
            <summary>
            Collapses all assemlby treeview nodes in the UI.
            </summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.SelectedType">
            <summary>
            <para>Gets the <see cref="T:System.Type"/> selected for use.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.Type"/> selected for use.</para>
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.TypeSelectorUI.TypeImageList">
            <summary>
            <para>Gets the <see cref="T:System.Windows.Forms.ImageList"/> for the types.</para>
            </summary>
            <value>
            <para>The <see cref="T:System.Windows.Forms.ImageList"/> for the types.</para>
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand">
            <summary>
            Represents a command that will run the validation for the node the command encapsulates.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand.#ctor(System.IServiceProvider)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/> and if the error service should be cleared after the command executes.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="clearErrorLog">
            Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/> should be cleared when the command has executed.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand.#ctor(System.IServiceProvider,System.Boolean,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand"/> class with an <see cref="T:System.IServiceProvider"/>, if the error service should be cleared after the command executes and if the command should report the failures after executing.
            </summary>
            <param name="serviceProvider">
            The a mechanism for retrieving a service object; that is, an object that provides custom support to other objects.
            </param>
            <param name="clearErrorLog">
            Determines if all the messages in the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.IErrorLogService"/> should be cleared when the command has executed.
            </param>
            <param name="reportErrorsOnFailure">
            Determines if the command should report errors on failure.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand.ExecuteCore(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode)">
            <summary>
            
            Executes the validation for the current node and all the child nodes.
            
            </summary>
            <param name="node">
            The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode"/> to validate.
            </param>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand.ValidationSucceeded">
            <summary>
            Determines if the validation succeeded.
            </summary>
            <value>
            <see langword="true"/> if the validation succeeded; otherwise, <see langword="false"/>.
            The default value is <see langword="false"/>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ValidateNodeCommand.ReportErrorsOnFailure">
            <summary>
            Determines if a message should be shown when validation fails.
            </summary>
            <value>
            <see langword="true"/> if a message should be shown when validation fails, <see langword="false"/>.
            The default value is <see langword="true"/>.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute">
            <summary>
            Specifies a property or event will be validated on a specific range.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Int32"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.Single,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Single,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Single"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.String"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.Double,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Double,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Double"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.Int16,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Int16,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Int16"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.Byte,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Byte,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Byte"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.Char,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Char,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Char"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.Decimal,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Decimal,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Decimal"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.#ctor(System.IComparable,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.IComparable,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialzie a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.IComparable"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.ValidateCore(System.Object,System.Reflection.PropertyInfo,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            Validate the range data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.
            </summary>
            <param name="instance">
            The instance to validate.
            </param>
            <param name="propertyInfo">
            The property containing the value to validate.
            </param>
            <param name="errors">
            The collection to add any errors that occur during the validation.
            </param>		
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.LowerBound">
            <summary>
            Gets the lower bound of the range.
            </summary>
            <value>
            The lower bound of the range.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.UpperBound">
            <summary>
            Gets the upper bound of the range.
            </summary>
            <value>
            The upper bound of the range.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.LowerBoundType">
            <summary>
            Gets the lower bound type condition.
            </summary>
            <value>
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute.UpperBoundType">
            <summary>
            Gets the upper bound type condition.
            </summary>
            <value>
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ApplicationConfigurationFileValidationAttribute">
            <summary>
            Represents the validation for the application configuration file.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidationAttribute">
            <summary>
            Validates that a file can be created or is writable.
            <remarks>
            This validation assumes that the property is a file.
            </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidationAttribute.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidationAttribute"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidationAttribute.ValidateCore(System.Object,System.Reflection.PropertyInfo,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            Validate the range data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.
            </summary>
            <param name="instance">
            The instance to validate.
            </param>
            <param name="propertyInfo">
            The property containing the value to validate.
            </param>
            <param name="errors">
            The collection to add any errors that occur during the validation.
            </param>		
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.FileValidationAttribute.ContextPath">
            <summary>
            Returns the path which should be used to validate relative paths.
            </summary>
            <value>The path from the current configuration file.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ApplicationConfigurationFileValidationAttribute.ContextPath">
            <summary>
            Returns the context path which should be used to validate relative paths.
            </summary>
            <value>The context path which should be used to validate relative paths.</value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.CustomAttributesValidationAttribute">
            <summary>
            Validates the attributes for a custom provider.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.CustomAttributesValidationAttribute.ValidateCore(System.Object,System.Reflection.PropertyInfo,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            Validate the attribute data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.
            </summary>
            <param name="instance">
            The instance to validate.
            </param>
            <param name="propertyInfo">
            The property containing the value to validate.
            </param>
            <param name="errors">
            The collection to add any errors that occur during the validation.
            </param>		
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute">
            <summary>
            Specifies a property or event will be validated on a specific range and make sure that the value is outside that range.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Int32,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Int32"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.Single,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Single,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Single"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.String,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.String"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>       
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.Double,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Double,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Double"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.Int16,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Int16,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Int16"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.Byte,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Byte,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Byte"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.Char,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Char,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Char"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.#ctor(System.Decimal,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType,System.Decimal,Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.AssertRangeAttribute"/> class with an <see cref="T:System.Decimal"/> lower and upper bounds.
            </summary>
            <param name="lowerBound">
            The lower bound of the range.
            </param>
            <param name="lowerBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
            <param name="upperBound">
            The lower bound of the range.
            </param>
            <param name="upperBoundType">
            One of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType"/> values.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.DenyRangeAttribute.ValidateCore(System.Object,System.Reflection.PropertyInfo,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            Validate the range data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.
            </summary>
            <param name="instance">
            The instance to validate.
            </param>
            <param name="propertyInfo">
            The property containing the value to validate.
            </param>
            <param name="errors">
            The collection to add any errors that occur durring the validation.
            </param>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MaximumLengthAttribute">
            <summary>
            Specifies a property or event will be validated on a specific maximum length.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MaximumLengthAttribute.#ctor(System.Int32)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MaximumLengthAttribute"/> class with a maximum length.
            </summary>
            <param name="maximumLength">
            The maximum length.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MaximumLengthAttribute.ValidateCore(System.Object,System.Reflection.PropertyInfo,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            Validate the range data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.
            </summary>
            <param name="instance">
            The instance to validate.
            </param>
            <param name="propertyInfo">
            The property containing the value to validate.
            </param>
            <param name="errors">
            The collection to add any errors that occur during the validation.
            </param>		
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MaximumLengthAttribute.MaximumLength">
            <summary>
            Gets the maximum length.
            </summary>
            <value>
            The maximum length.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MinimumLengthAttribute">
            <summary>
            Specifies a property or event will be validated on a specific minimum length.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MinimumLengthAttribute.#ctor(System.Int32)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MinimumLengthAttribute"/> class with a minimum length.
            </summary>
            <param name="minimumLength">
            The minimum length.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MinimumLengthAttribute.ValidateCore(System.Object,System.Reflection.PropertyInfo,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            Validate the range data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.
            </summary>
            <param name="instance">
            The instance to validate.
            </param>
            <param name="propertyInfo">
            The property containing the value to validate.
            </param>
            <param name="errors">
            The collection to add any errors that occur during the validation.
            </param>		
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.MinimumLengthAttribute.MinimumLength">
            <summary>
            Gets the minimum length.
            </summary>
            <value>
            The minimum length.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType">
            <summary>
            A value describing the boundary conditions for a range.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType.Inclusive">
            <summary>
            The range should include the boundary.
            </summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RangeBoundaryType.Exclusive">
            <summary>
            The range should exclude the boundary.
            </summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute">
            <summary>
            Specifies a property or event that is validated based on a regular expression.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute"/> class with the regular expression pattern and options.
            </summary>
            <param name="pattern">
            The regular expression pattern to match.
            </param>     
            <param name="options">
            The regular expression options.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.#ctor(System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute"/> class with the regular expression pattern.
            </summary>
            <param name="pattern">
            The regular expression pattern to match.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.#ctor(System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute"/> class with the regular expression type.
            </summary>
            <param name="compiledRegexType">
            The compiled <see cref="T:System.Type"/> for the regular expression.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.#ctor(System.Type,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute"/> class with the regular expression type and options.
            </summary>
            <param name="compiledRegexType">
            The compiled <see cref="T:System.Type"/> for the regular expression.
            </param>
            <param name="options">
            The regular expression options.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.ValidateCore(System.Object,System.Reflection.PropertyInfo,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            Validate the ranige data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.
            </summary>
            <param name="instance">
            The instance to validate.
            </param>
            <param name="propertyInfo">
            The property contaning the value to validate.
            </param>
            <param name="errors">
            The collection to add any errors that occur durring the validation.
            </param>		
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.Options">
            <summary>
            Gets the options for the regular expression.
            </summary>
            <value>One of the <see cref="T:System.Text.RegularExpressions.RegexOptions"/> values.</value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.OptionsSpecified">
            <summary>
            Determines if the <see cref="T:System.Text.RegularExpressions.RegexOptions"/> were specified.
            </summary>
            <value>
            <c>true</c> if the options where specified; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.Pattern">
            <summary>
            Gets the regular expression pattern to match.
            </summary>
            <value>
            The regular expression pattern to match.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RegexAttribute.CompiledRegexType">
            <summary>
            Gets the compiled <see cref="T:System.Type"/> for the regular expression.
            </summary>
            <value>
            The compiled <see cref="T:System.Type"/> for the regular expression.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RequiredAttribute">
            <summary>
            Specifies a property or event that is required.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RequiredAttribute.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RequiredAttribute"/> class
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.RequiredAttribute.ValidateCore(System.Object,System.Reflection.PropertyInfo,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            Validate the required data for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.
            </summary>
            <param name="instance">
            The instance to validate.
            </param>
            <param name="propertyInfo">
            The property containing the value to validate.
            </param>
            <param name="errors">
            The collection to add any errors that occur during the validation.
            </param>		
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.TypeValidationAttribute">
            <summary>
            Specifies a type name should be validated to ensure that it is a valid <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.TypeValidationAttribute.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.TypeValidationAttribute"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.TypeValidationAttribute.ValidateCore(System.Object,System.Reflection.PropertyInfo,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            Validate the <see cref="T:System.Type"/> for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/>.
            </summary>
            <param name="instance">
            The instance to validate.
            </param>
            <param name="propertyInfo">
            The property containing the value to validate.
            </param>
            <param name="errors">
            The collection to add any errors that occur during the validation.
            </param>        		
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.UniqueNameAttribute">
            <summary>
            Validate that each instance of a <see cref="T:System.Type"/> has a unique name.
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.UniqueNameAttribute.#ctor(System.Type,System.Type)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.UniqueNameAttribute"/> class with a <see cref="T:System.Type"/>.
            </summary>
            <param name="nodeType">The <see cref="T:System.Type"/> to have a unique name.</param>
            <param name="containerType">The root node type of where the name has to be unique.</param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.UniqueNameAttribute.ValidateCore(System.Object,System.Reflection.PropertyInfo,System.Collections.Generic.IList{Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError})">
            <summary>
            Validate value is unique for the given <paramref name="instance"/> and the <paramref name="propertyInfo"/> across a <see cref="T:System.Type"/>.
            </summary>
            <param name="instance">
            The instance to validate.
            </param>
            <param name="propertyInfo">
            The property containing the value to validate.
            </param>
            <param name="errors">
            The collection to add any errors that occur during the validation.
            </param> 		
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.UniqueNameAttribute.ContainerType">
            <summary>
            Gets the root node type of where the name has to be unique.
            </summary>
            <value>
            The root node type of where the name has to be unique.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.UniqueNameAttribute.NodeType">
            <summary>
            Gets the node <see cref="T:System.Type"/> that has to have a unique name.
            </summary>
            <value>
            The node <see cref="T:System.Type"/> that has to have a unique name.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError">
            <summary>
            Collects information relevant to a warning or error returned by validation.
            </summary>    
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.#ctor(Microsoft.Practices.EnterpriseLibrary.Configuration.Design.ConfigurationNode,System.String,System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError"/> calss with the invalid object, property name, and error message.
            </summary>
            <param name="invalidItem">
            The object that did not validate.
            </param>
            <param name="propertyName">
            The name of the property that is invalid.
            </param>
            <param name="errorMessage">
            The message that describes the error.
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.ToString">
            <summary>
            Returns the string representatio of the error.
            </summary>
            <returns>
            The string representatio of the error
            </returns>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.PropertyName">
            <summary>
            Gets the property name of the failed validation.
            </summary>
            <value>
            The property name of the failed validation.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.Message">
            <summary>
            Gets or sets the message for the error.
            </summary>
            <value>
            The message for the error.
            </value>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.Validation.ValidationError.InvalidItem">
            <summary>
            Gets or sets the invalid object that that valid validation.
            </summary>
            <value>
            The invalid object that that valid validation.
            </value>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WaitCursor">
            <summary>
            Provides a simple way to set a wait cursor (or other cursor)
            around a block of code.
            </summary>
            <example>
            using( WaitCursor wait = new WaitCursor()
            {
            	// Do something
            }
            </example>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WaitCursor.#ctor">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WaitCursor"/> class.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WaitCursor.#ctor(System.Windows.Forms.Cursor)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WaitCursor"/> class.</para>
            </summary>
            <param name="cursor">
            <para>The <see cref="T:System.Windows.Forms.Cursor"/> to use as the wait <see cref="T:System.Windows.Forms.Cursor"/>.</para>
            </param>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WaitCursor.Dispose">
            <summary>
            <para>Releases the unmanaged resources used by the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Configuration.Design.WaitCursor"/> and optionally releases the managed resources.</para>
            </summary>
        </member>
    </members>
</doc>
