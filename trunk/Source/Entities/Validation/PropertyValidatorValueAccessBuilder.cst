<%@ CodeTemplate Src="..\..\TemplateLib\CommonSqlCode.cs" Inherits="MoM.Templates.CommonSqlCode" Language="C#" TargetLanguage="C#" Description="BrokenRule class for validation." ResponseEncoding="UTF-8" NoWarn="0108,0618,1572,1573,1574,0162,2002"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>

<%@ Property Name="NameSpace" Optional="False" Type="System.String" Category="Style" Description="Object Namespace." %>
<%@ Assembly Name="SchemaExplorer" %>
#region Using directives
using System;
using System.Collections.Generic;
using System.Reflection;
using System.Text;

using Microsoft.Practices.EnterpriseLibrary.Validation;
#endregion Using directives

namespace <%=NameSpace%>.Validation
{
	/// <summary>
	/// Property Validator Value Access Builder
	/// </summary>
	internal class PropertyValidatorValueAccessBuilder: MemberValueAccessBuilder
	{
        /// <summary>
        /// Does the get field value access.
        /// </summary>
        /// <param name="fieldInfo">The field info.</param>
        /// <returns></returns>
		protected override ValueAccess DoGetFieldValueAccess(FieldInfo fieldInfo)
		{
			throw new NotSupportedException();
		}

        /// <summary>
        /// Does the get method value access.
        /// </summary>
        /// <param name="methodInfo">The method info.</param>
        /// <returns></returns>
		protected override ValueAccess DoGetMethodValueAccess(MethodInfo methodInfo)
		{
			throw new NotSupportedException();
		}

        /// <summary>
        /// Does the get property value access.
        /// </summary>
        /// <param name="propertyInfo">The property info.</param>
        /// <returns></returns>
		protected override ValueAccess DoGetPropertyValueAccess(PropertyInfo propertyInfo)
		{
			return new PropertyValidatorValueAccess(propertyInfo.Name);
		}
	}
}
