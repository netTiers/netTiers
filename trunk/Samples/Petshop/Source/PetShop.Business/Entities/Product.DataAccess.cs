//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated using CSLA 3.6.x CodeSmith Templates.
//     Changes to this file will be lost after each regeneration.
//     To extend the functionality of this class, please modify the partial class 'Product.cs'.
//
//     Template: SwitchableObject.DataAccess.cst
//     Template website: http://code.google.com/p/codesmith/
// </autogenerated>
//------------------------------------------------------------------------------
#region using declarations

using System;

using Csla;
using Csla.Data;

using PetShop.Data;

#endregion

namespace PetShop.Business
{
	public partial class Product
	{
		#region Root Data Access
		
		[RunLocal]
		protected override void DataPortal_Create()
		{
			//base.DataPortal_Create();

			ValidationRules.CheckRules();
		}
		
		private void DataPortal_Fetch(ProductCriteria criteria)
		{
            using(SafeDataReader reader = DataAccessLayer.Instance.ProductFetch(criteria.StateBag)) 
			{
				if(reader.Read())
				{	
					Fetch(reader);
				}
			}
        }
		
		[Transactional(TransactionalTypes.TransactionScope)]
		protected override void DataPortal_Insert()
		{
			using(SafeDataReader reader = DataAccessLayer.Instance.ProductInsert(ReadProperty(_productIdProperty), ReadProperty(_nameProperty), ReadProperty(_descnProperty), ReadProperty(_imageProperty), ReadProperty(_categoryIdProperty)))
			{
				if(reader.Read())
				{

				}
			}
            
            FieldManager.UpdateChildren(this);
		}
		
		[Transactional(TransactionalTypes.TransactionScope)]
		protected override void DataPortal_Update()
		{
            using(SafeDataReader reader = DataAccessLayer.Instance.ProductUpdate(ReadProperty(_productIdProperty), ReadProperty(_nameProperty), ReadProperty(_descnProperty), ReadProperty(_imageProperty), ReadProperty(_categoryIdProperty)))
            {
			}
            
            FieldManager.UpdateChildren(this);
		}
		
		[Transactional(TransactionalTypes.TransactionScope)]
		protected override void DataPortal_DeleteSelf()
		{
            DataPortal_Delete(new ProductCriteria(ProductId));
        }
		
		[Transactional(TransactionalTypes.TransactionScope)]
		protected override void DataPortal_Delete(object criteria)
		{
			ProductCriteria theCriteria = criteria as ProductCriteria;
            if (theCriteria != null)
            {
				using(SafeDataReader reader = DataAccessLayer.Instance.ProductDelete(theCriteria.StateBag)) 
				{
				}
			}
        }

		#endregion
		
		#region Child Data Access

		protected override void Child_Create()
		{
			// TODO: load default values
			// omit this override if you have no defaults to set
		    //base.Child_Create();
		}
	
		private void Child_Fetch(SafeDataReader reader)
		{
			Fetch(reader);
            
            MarkAsChild();
		}
		
		private void Child_Insert()
		{
			using(SafeDataReader reader = DataAccessLayer.Instance.ProductInsert(ReadProperty(_productIdProperty), ReadProperty(_nameProperty), ReadProperty(_descnProperty), ReadProperty(_imageProperty), ReadProperty(_categoryIdProperty)))
			{
				if(reader.Read())
				{

				}
			}
		}
		
		private void Child_Update()
		{
            using(SafeDataReader reader = DataAccessLayer.Instance.ProductUpdate(ReadProperty(_productIdProperty), ReadProperty(_nameProperty), ReadProperty(_descnProperty), ReadProperty(_imageProperty), ReadProperty(_categoryIdProperty)))
            {
			}
		}
		
		private void Child_DeleteSelf()
		{
			DataPortal_Delete(new ProductCriteria(ProductId));
		}

		#endregion

        private void Fetch(SafeDataReader reader)
		{
			LoadProperty(_productIdProperty, reader.GetString("ProductId"));
			LoadProperty(_nameProperty, reader.GetString("Name"));
			LoadProperty(_descnProperty, reader.GetString("Descn"));
			LoadProperty(_imageProperty, reader.GetString("Image"));

			LoadProperty(_categoryIdProperty, reader.GetString("CategoryId"));

            MarkOld();
        }

	}
}