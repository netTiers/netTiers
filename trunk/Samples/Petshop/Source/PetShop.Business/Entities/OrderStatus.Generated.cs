//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated using CSLA 3.6.x CodeSmith Templates.
//     Changes to this file will be lost after each regeneration.
//     To extend the functionality of this class, please modify the partial class 'OrderStatus.cs'.
//
//     Template path: EditableRoot.Generated.cst
//     Template website: http://code.google.com/p/codesmith/
// </autogenerated>
//------------------------------------------------------------------------------
#region using declarations

using System;

using Csla;
using Csla.Data;
using Csla.Validation;

#endregion

namespace PetShop.Business
{
	[Serializable]
	public partial class OrderStatus : BusinessBase< OrderStatus >
	{
        #region Contructor(s)

		private OrderStatus()
		{ /* Require use of factory methods */ }
        
        internal OrderStatus(SafeDataReader reader)
        {
            Fetch(reader);
        }
        
		#endregion
        
		#region Validation Rules
		
		protected override void AddBusinessRules()
		{
            if(AddBusinessValidationRules())
                return;
                
			ValidationRules.AddRule(CommonRules.StringRequired, "Status");
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs("Status", 2));
		}
		
		#endregion
		
		#region Business Methods


		private static readonly PropertyInfo< int > _orderIdProperty = RegisterProperty< int >(p => p.OrderId);
		[System.ComponentModel.DataObjectField(true, false)]
		public int OrderId
		{
			get { return GetProperty(_orderIdProperty); }				
            set
            {
                OnPropertyChanging("OrderId");
                SetProperty(_orderIdProperty, value);
                OnPropertyChanged("OrderId");
            }
		}
		
		private static readonly PropertyInfo< int > _lineNumProperty = RegisterProperty< int >(p => p.LineNum);
		[System.ComponentModel.DataObjectField(true, false)]
		public int LineNum
		{
			get { return GetProperty(_lineNumProperty); }				
            set
            {
                OnPropertyChanging("LineNum");
                SetProperty(_lineNumProperty, value);
                OnPropertyChanged("LineNum");
            }
		}
		
		private static readonly PropertyInfo< SmartDate > _timestampProperty = RegisterProperty< SmartDate >(p => p.Timestamp);
		public SmartDate Timestamp
		{
			get { return GetProperty(_timestampProperty); }				
            set
            {
                OnPropertyChanging("Timestamp");
                SetProperty(_timestampProperty, value);
                OnPropertyChanged("Timestamp");
            }
		}
		
		private static readonly PropertyInfo< string > _statusProperty = RegisterProperty< string >(p => p.Status);
		public string Status
		{
			get { return GetProperty(_statusProperty); }				
            set
            {
                OnPropertyChanging("Status");
                SetProperty(_statusProperty, value);
                OnPropertyChanged("Status");
            }
		}
		
		#endregion
		
		#region Factory Methods 
		
		public static OrderStatus NewOrderStatus()
		{
			return DataPortal.Create< OrderStatus >();
		}
		
		public static OrderStatus GetOrderStatus(int orderId, int lineNum)
		{
			return DataPortal.Fetch< OrderStatus >(
                new OrderStatusCriteria(orderId, lineNum));
		}

        public static OrderStatus GetOrderStatus(int orderId)
		{
            return DataPortal.Fetch< OrderStatus >(
                new OrderStatusCriteria { OrderId = orderId });
        }

        public static void DeleteOrderStatus(int orderId, int lineNum)
		{
                DataPortal.Delete(new OrderStatusCriteria(orderId, lineNum));
		}

        #endregion
        
		#region Protected Overriden Method(s)
		
		// NOTE: This is needed for Composite Keys. 
		private readonly Guid _guidID = Guid.NewGuid();
		protected override object GetIdValue()
        {
            return _guidID;
        }
		
		#endregion
	}
}