<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nettiers.AdventureWorks.Entities</name>
    </assembly>
    <members>
        <member name="T:Nettiers.AdventureWorks.Entities.IUnitMeasure">
            <summary>
            	The data structure representation of the 'UnitMeasure' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IUnitMeasure.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IUnitMeasure.UnitMeasureCode">
            <summary>			
            UnitMeasureCode : Primary key.
            </summary>
            <remarks>Member of the primary key of the underlying table "UnitMeasure"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IUnitMeasure.OriginalUnitMeasureCode">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IUnitMeasure.Name">
            <summary>
            Name : Unit of measure description.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IUnitMeasure.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IUnitMeasure.BillOfMaterialsCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _billOfMaterialsUnitMeasureCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IUnitMeasure.ProductCollectionGetByWeightUnitMeasureCode">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productWeightUnitMeasureCodeGetByWeightUnitMeasureCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IUnitMeasure.ProductVendorCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productVendorUnitMeasureCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IUnitMeasure.ProductCollectionGetBySizeUnitMeasureCode">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productWeightUnitMeasureCodeGetBySizeUnitMeasureCode
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ITestVariant">
            <summary>
            	The data structure representation of the 'TestVariant' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ITestVariant.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITestVariant.TestVariantId">
            <summary>			
            TestVariantId : 
            </summary>
            <remarks>Member of the primary key of the underlying table "TestVariant"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITestVariant.VariantField">
            <summary>
            VariantField : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IStateProvince">
            <summary>
            	The data structure representation of the 'StateProvince' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IStateProvince.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStateProvince.StateProvinceId">
            <summary>			
            StateProvinceID : Primary key for StateProvince records.
            </summary>
            <remarks>Member of the primary key of the underlying table "StateProvince"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStateProvince.StateProvinceCode">
            <summary>
            StateProvinceCode : ISO standard state or province code.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStateProvince.CountryRegionCode">
            <summary>
            CountryRegionCode : ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. 
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStateProvince.IsOnlyStateProvinceFlag">
            <summary>
            IsOnlyStateProvinceFlag : 0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStateProvince.Name">
            <summary>
            Name : State or province description.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStateProvince.TerritoryId">
            <summary>
            TerritoryID : ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStateProvince.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStateProvince.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStateProvince.AddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _addressStateProvinceId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStateProvince.SalesTaxRateCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesTaxRateStateProvinceId
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesReasonBase">
            <summary>
             Lookup table of customer purchase reasons.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityBase">
            <summary>
            The base object for each database table entity.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityBaseCore">
            <summary>
            The base object for each database table entity.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IEntity">
            <summary>
            The interface that each business object of the model implements.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IEntity.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IEntity.MarkToDelete">
            <summary>
            Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IEntity.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEntity.TableName">
            <summary>
            The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEntity.IsDirty">
             <summary>
            	Indicates if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEntity.IsNew">
             <summary>
            	Indicates if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEntity.IsDeleted">
            <summary>
            True if object has been marked as deleted. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEntity.IsValid">
            <summary>
            Indicates if the object is in a valid state
            </summary>
            <value>True if object is valid; otherwise False.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEntity.EntityState">
            <summary>
            Returns one of EntityState enum values - intended to replace IsNew, IsDirty, IsDeleted.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEntity.ParentCollection">
            <summary>
            Gets or sets the parent collection.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEntity.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
            <value>A string array that holds the columns names.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEntity.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.IEntity.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEntity.IsEntityTracked">
            <summary>
            Determines whether this entity is being tracked.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEntity.EntityTrackingKey">
            <summary>
             The tracking key used to with the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EntityBaseCore"/> class.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EntityBaseCore.isEntityTracked">
            <summary>
            Determines whether the entity is being tracked by the Locator.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EntityBaseCore.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EntityBaseCore.bindingIsNew">
            <summary>
             Used by in place editing of databinding features for new inserted row.
            Indicates that we are in the middle of an IBinding insert transaction.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EntityBaseCore.entityHashCode">
            <summary>
              The actual hashcode of the entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method <see cref="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.IsDirty"/> and <see cref="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.IsNew"/> are false. <see cref="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.IsDeleted"/> flag remain unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.CancelChanges">
            <summary>
              Revert all changes and restore original values.  To be implemented in concrete class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.RemoveDeleteMark">
            <summary>
               Remove the "isDeleted" mark from the entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EntityBaseCore.tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.GetHashCode">
            <summary>
             Provides a unique HashCode throughout the lifetime of the entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.OnPropertyChanging(System.String)">
            <summary>
            Called when a property is changing
            </summary>
            <param name="propertyName">The name of the property that is changing.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.OnPropertyChanging(System.ComponentModel.PropertyChangingEventArgs)">
            <summary>
            Called when a property is changing
            </summary>
            <param name="e">PropertyChangingEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.AddValidationRules">
             <summary>
             Assigns validation rules to this object.
             </summary>
             <remarks>
             This method can be overridden in a derived class to add custom validation rules. 
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.AddValidationRuleHandler(Nettiers.AdventureWorks.Entities.Validation.ValidationRuleHandler,System.String)">
            <summary>
            Adds a rule to the list of validated rules.
            </summary>
            <param name="handler">The method that implements the rule.</param>
            <param name="propertyName">
            The name of the property on the target object where the rule implementation can retrieve
            the value to be validated.
            </param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.AddValidationRuleHandler(Nettiers.AdventureWorks.Entities.Validation.ValidationRuleHandler,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)">
            <summary>
            Adds a rule to the list of validated rules.
            </summary>
            <remarks>
            </remarks>
            <param name="handler">The method that implements the rule.</param>
            <param name="args">
            A <see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs"/> object specifying the property name and other arguments
            passed to the rule method
            </param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.Validate">
            <summary>
            Force this object to validate itself using the assigned business rules.
            </summary>
            <remarks>Validates all properties.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.Validate(System.String)">
            <summary>
            Force the object to validate itself using the assigned business rules.
            </summary>
            <param name="propertyName">Name of the property to validate.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.Validate(System.Enum)">
            <summary>
            Force the object to validate itself using the assigned business rules.
            </summary>
            <param name="column">Column enumeration representing the column to validate.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.OnDeserialization(System.Object)">
            <summary>
            Runs when the entire object graph has been deserialized.
            </summary>
            <param name="sender">The object that initiated the callback. The functionality for this parameter is not currently implemented.</param>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.TableName">
            <summary>
            The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
            <value>A string array that holds the columns names.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.IsDeleted">
            <summary>
            	True if object has been <see cref="M:Nettiers.AdventureWorks.Entities.EntityBaseCore.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.IsDirty">
            <summary>
            	Indicates if the object has been modified from its original state.
            </summary>
            <remarks>True if object has been modified from its original state; otherwise False;</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.IsNew">
            <summary>
            	Indicates if the object is new.
            </summary>
            <remarks>True if objectis new; otherwise False;</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.ParentCollection">
            <summary>
            Gets or sets the parent collection.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.IsEntityTracked">
            <summary>
            Determines whether this entity is being tracked.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EntityBaseCore.PropertyChanging">
            <summary>
            Event to indicate that a property is changing.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EntityBaseCore.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.Error">
            <summary>
            Gets an error message indicating what is wrong with this object.
            </summary>
            <value></value>
            <returns>An error message indicating what is wrong with this object. The default is an empty string ("").</returns>      
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.Item(System.String)">
            <summary>
            Gets the <see cref="T:String"/> with the specified column name.
            </summary>
            <value></value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.ValidationRules">
            <summary>
            Returns the list of <see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRules"/> associated with this object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.BrokenRulesList">
            <summary>
            Returns a list of all the validation rules that failed.
            </summary>
            <returns><see cref="T:Nettiers.AdventureWorks.Entities.Validation.BrokenRulesList"/></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityBaseCore.IsValid">
            <summary>
            Returns <see langword="true" /> if the object is valid, 
            <see langword="false" /> if the object validation rules that have indicated failure. 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ISalesReason">
            <summary>
            	The data structure representation of the 'SalesReason' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ISalesReason.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesReason.SalesReasonId">
            <summary>			
            SalesReasonID : Primary key for SalesReason records.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesReason"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesReason.Name">
            <summary>
            Name : Sales reason description.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesReason.ReasonType">
            <summary>
            ReasonType : Category the sales reason belongs to.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesReason.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesReason.SalesOrderHeaderSalesReasonCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderSalesReasonSalesReasonId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesReason.SalesOrderIdSalesOrderHeaderCollection_From_SalesOrderHeaderSalesReason">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table salesOrderIdSalesOrderHeaderCollectionFromSalesOrderHeaderSalesReason
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IEntityId`1">
            <summary>
            Defines a common property which represents the
            unique identifier for a business object.
            </summary>
            <typeparam name="EntityKey">The value type or
            class to be used for the EntityId property.</typeparam>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEntityId`1.EntityId">
            <summary>
            Gets or sets the value of the unique identifier
            for the current business object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ICloneableEx">
            <summary>
                Interface that TList and every entity implements to support
            	cloning of an object tree.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ICloneableEx.Clone(System.Collections.IDictionary)">
            <summary>
             The tracking key used to with the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
            <param name="existingCopies">A list containing references to all objects already copied.</param>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesReasonBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesReasonBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesReasonBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesReasonBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesReasonBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesReasonBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.#ctor(System.String,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesReasonBase"/> instance.
            </summary>
            <param name="_name">Sales reason description.</param>
            <param name="_reasonType">Category the sales reason belongs to.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.CreateSalesReason(System.String,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> instance.
            </summary>
            <param name="_name">Sales reason description.</param>
            <param name="_reasonType">Category the sales reason belongs to.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed SalesReason Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.Copy">
            <summary>
              Returns a Typed SalesReason Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.DeepCopy">
            <summary>
              Returns a Typed SalesReason Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.SalesReasonColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.GetOriginalEntity">
            <summary>
              Returns a SalesReason Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesReasonBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.SalesReasonBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.Equals(Nettiers.AdventureWorks.Entities.SalesReasonBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesReasonBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.ValueEquals(Nettiers.AdventureWorks.Entities.SalesReasonBase,Nettiers.AdventureWorks.Entities.SalesReasonBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesReasonBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesReasonBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.SalesReasonBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesReasonColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesReasonBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesReasonColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesReasonColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesReasonBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesReasonColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesReasonColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesReasonBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesReasonColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesReasonColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesReasonBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesReasonColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesReasonBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesReasonBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.SalesReasonId">
            <summary>
            	Gets or sets the SalesReasonId property. 
            	Primary key for SalesReason records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Sales reason description.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.ReasonType">
            <summary>
            	Gets or sets the ReasonType property. 
            	Category the sales reason belongs to.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.SalesOrderHeaderSalesReasonCollection">
            <summary>
            Holds a collection of SalesOrderHeaderSalesReason objects
            which are related to this object through the relation FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.SalesOrderIdSalesOrderHeaderCollection_From_SalesOrderHeaderSalesReason">
            <summary>
            Holds a collection of SalesOrderHeaderFromSalesOrderHeaderSalesReason objects
            which are related to this object through the junction table SalesOrderHeaderSalesReason
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesReasonBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesReasonBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesReasonBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesReasonBase.SalesReasonEntityData">
            <summary>
            	The data structure representation of the 'SalesReason' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesReasonBase.SalesReasonEntityData.SalesReasonId">
            <summary>			
            SalesReasonID : Primary key for SalesReason records.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesReason"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesReasonBase.SalesReasonEntityData.Name">
            <summary>
            Name : Sales reason description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesReasonBase.SalesReasonEntityData.ReasonType">
            <summary>
            ReasonType : Category the sales reason belongs to.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesReasonBase.SalesReasonEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.SalesReasonEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonBase.SalesReasonEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.SalesReasonEntityData.SalesOrderHeaderSalesReasonCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderSalesReasonSalesReasonId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.SalesReasonEntityData.SalesOrderIdSalesOrderHeaderCollection_From_SalesOrderHeaderSalesReason">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table salesOrderIdSalesOrderHeaderCollectionFromSalesOrderHeaderSalesReason
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonBase.SalesReasonEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesReasonEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesReasonColumn)">
            <summary>
             Initalizes a new Instance of the SalesReasonEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesReasonColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the SalesReasonEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonEventArgs.Column">
            <summary>
             The SalesReasonColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.SalesReasonColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesReasonEventHandler">
            <summary>
             Define a delegate for all SalesReason related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesReasonComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SalesReasonComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonComparer.#ctor(Nettiers.AdventureWorks.Entities.SalesReasonColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:SalesReasonComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonComparer.Equals(Nettiers.AdventureWorks.Entities.SalesReason,Nettiers.AdventureWorks.Entities.SalesReason)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> to compare.</param>
            <param name="b">The second <c>SalesReason</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonComparer.GetHashCode(Nettiers.AdventureWorks.Entities.SalesReason)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonComparer.Compare(Nettiers.AdventureWorks.Entities.SalesReason,Nettiers.AdventureWorks.Entities.SalesReason)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesReasonKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityKeyBase">
            <summary>
            The base object for each database table's unique identifier.
            </summary>
            <remarks>
            This file is generated once and will never be overwritten.
            </remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityKeyBaseCore">
            <summary>
            The base object for each database table's unique identifier.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IEntityKey">
            <summary>
            Defines a method that allows setting of property values
            based on the key/value pairs of an IDictionary object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IEntityKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied IDictionary object into
            properties of the current object.
            </summary>
            <param name="values">An IDictionary instance that contains the key/value
            pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IEntityKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityKeyBaseCore.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied IDictionary object into
            properties of the current object.
            </summary>
            <param name="values">An IDictionary instance that contains the key/value
            pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityKeyBaseCore.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityKeyBaseCore.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current object.
            </summary>
            <param name="obj">The System.Object to compare with the current object.</param>
            <returns>Returns true if the specified System.Object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityKeyBaseCore.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. GetHashCode() is suitable
            for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonKey.#ctor">
            <summary>
            Initializes a new instance of the SalesReasonKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonKey.#ctor(Nettiers.AdventureWorks.Entities.SalesReasonBase)">
            <summary>
            Initializes a new instance of the SalesReasonKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the SalesReasonKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReasonKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesReasonKey.SalesReasonId">
            <summary>
            Gets or sets the SalesReasonId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesReasonColumn">
            <summary>
            Enumerate the SalesReason columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesReasonColumn.SalesReasonId">
            <summary>
            SalesReasonId : Primary key for SalesReason records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesReasonColumn.Name">
            <summary>
            Name : Sales reason description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesReasonColumn.ReasonType">
            <summary>
            ReasonType : Category the sales reason belongs to.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesReasonColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IProductDocument">
            <summary>
            	The data structure representation of the 'ProductDocument' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IProductDocument.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductDocument.ProductId">
            <summary>			
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductDocument"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductDocument.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductDocument.DocumentId">
            <summary>			
            DocumentID : Document identification number. Foreign key to Document.DocumentID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductDocument"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductDocument.OriginalDocumentId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductDocument.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDocumentBase">
            <summary>
             Cross-reference table mapping products to related product documents.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDocumentBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDocumentBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDocumentBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDocumentBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDocumentBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocumentBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.#ctor(System.Int32,System.Int32,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocumentBase"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.CreateProductDocument(System.Int32,System.Int32,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ProductDocument Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.Copy">
            <summary>
              Returns a Typed ProductDocument Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.DeepCopy">
            <summary>
              Returns a Typed ProductDocument Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ProductDocumentColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.GetOriginalEntity">
            <summary>
              Returns a ProductDocument Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocumentBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocumentBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.Equals(Nettiers.AdventureWorks.Entities.ProductDocumentBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocumentBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ValueEquals(Nettiers.AdventureWorks.Entities.ProductDocumentBase,Nettiers.AdventureWorks.Entities.ProductDocumentBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocumentBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocumentBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocumentBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductDocumentColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocumentColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductDocumentColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocumentColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductDocumentColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocumentColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductDocumentColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocumentColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Product identification number. Foreign key to Product.ProductID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.OriginalProductId">
            <summary>
            	Get the original value of the ProductID property.
            	Product identification number. Foreign key to Product.ProductID.
            </summary>
            <remarks>This is the original value of the ProductID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.DocumentId">
            <summary>
            	Gets or sets the DocumentId property. 
            	Document identification number. Foreign key to Document.DocumentID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.OriginalDocumentId">
            <summary>
            	Get the original value of the DocumentID property.
            	Document identification number. Foreign key to Document.DocumentID.
            </summary>
            <remarks>This is the original value of the DocumentID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.DocumentIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Document"/>.
            </summary>
            <value>The source Document for DocumentId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductDocumentBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductDocumentBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDocumentBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ProductDocumentEntityData">
            <summary>
            	The data structure representation of the 'ProductDocument' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ProductDocumentEntityData.ProductId">
            <summary>			
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductDocument"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ProductDocumentEntityData.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ProductDocumentEntityData.DocumentId">
            <summary>			
            DocumentID : Document identification number. Foreign key to Document.DocumentID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductDocument"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ProductDocumentEntityData.OriginalDocumentId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ProductDocumentEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ProductDocumentEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ProductDocumentEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ProductDocumentEntityData.DocumentIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Document"/>.
            </summary>
            <value>The source Document for DocumentId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ProductDocumentEntityData.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentBase.ProductDocumentEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDocumentEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductDocumentColumn)">
            <summary>
             Initalizes a new Instance of the ProductDocumentEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductDocumentColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ProductDocumentEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentEventArgs.Column">
            <summary>
             The ProductDocumentColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ProductDocumentColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDocumentEventHandler">
            <summary>
             Define a delegate for all ProductDocument related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDocumentComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ProductDocumentComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentComparer.#ctor(Nettiers.AdventureWorks.Entities.ProductDocumentColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductDocumentComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentComparer.Equals(Nettiers.AdventureWorks.Entities.ProductDocument,Nettiers.AdventureWorks.Entities.ProductDocument)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> to compare.</param>
            <param name="b">The second <c>ProductDocument</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ProductDocument)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentComparer.Compare(Nettiers.AdventureWorks.Entities.ProductDocument,Nettiers.AdventureWorks.Entities.ProductDocument)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDocumentKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentKey.#ctor">
            <summary>
            Initializes a new instance of the ProductDocumentKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentKey.#ctor(Nettiers.AdventureWorks.Entities.ProductDocumentBase)">
            <summary>
            Initializes a new instance of the ProductDocumentKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ProductDocumentKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocumentKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentKey.ProductId">
            <summary>
            Gets or sets the ProductId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDocumentKey.DocumentId">
            <summary>
            Gets or sets the DocumentId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDocumentColumn">
            <summary>
            Enumerate the ProductDocument columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDocumentColumn.ProductId">
            <summary>
            ProductId : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDocumentColumn.DocumentId">
            <summary>
            DocumentId : Document identification number. Foreign key to Document.DocumentID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDocumentColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Product">
            <summary>
             Products sold or used in the manfacturing of sold products.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductBase">
            <summary>
             Products sold or used in the manfacturing of sold products.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IProduct">
            <summary>
            	The data structure representation of the 'Product' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IProduct.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ProductId">
            <summary>			
            ProductID : Primary key for Product records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Product"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.Name">
            <summary>
            Name : Name of the product.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ProductNumber">
            <summary>
            ProductNumber : Unique product identification number.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.MakeFlag">
            <summary>
            MakeFlag : 0 = Product is purchased, 1 = Product is manufactured in-house.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.FinishedGoodsFlag">
            <summary>
            FinishedGoodsFlag : 0 = Product is not a salable item. 1 = Product is salable.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.Color">
            <summary>
            Color : Product color.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.SafetyStockLevel">
            <summary>
            SafetyStockLevel : Minimum inventory quantity. 
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ReorderPoint">
            <summary>
            ReorderPoint : Inventory level that triggers a purchase order or work order. 
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.StandardCost">
            <summary>
            StandardCost : Standard cost of the product.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ListPrice">
            <summary>
            ListPrice : Selling price.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.Size">
            <summary>
            Size : Product size.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.SizeUnitMeasureCode">
            <summary>
            SizeUnitMeasureCode : Unit of measure for Size column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.WeightUnitMeasureCode">
            <summary>
            WeightUnitMeasureCode : Unit of measure for Weight column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.Weight">
            <summary>
            Weight : Product weight.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.DaysToManufacture">
            <summary>
            DaysToManufacture : Number of days required to manufacture the product.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ProductLine">
            <summary>
            ProductLine : R = Road, M = Mountain, T = Touring, S = Standard
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.SafeNameClass">
            <summary>
            Class : H = High, M = Medium, L = Low
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.Style">
            <summary>
            Style : W = Womens, M = Mens, U = Universal
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ProductSubcategoryId">
            <summary>
            ProductSubcategoryID : Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. 
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ProductModelId">
            <summary>
            ProductModelID : Product is a member of this product model. Foreign key to ProductModel.ProductModelID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.SellStartDate">
            <summary>
            SellStartDate : Date the product was available for sale.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.SellEndDate">
            <summary>
            SellEndDate : Date the product was no longer available for sale.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.DiscontinuedDate">
            <summary>
            DiscontinuedDate : Date the product was discontinued.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ProductProductPhotoCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productProductPhotoProductId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.TransactionHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _transactionHistoryProductId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ProductVendorCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productVendorProductId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.BillOfMaterialsCollectionGetByProductAssemblyId">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _billOfMaterialsProductAssemblyIdGetByProductAssemblyId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.DocumentIdDocumentCollection_From_ProductDocument">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table documentIdDocumentCollectionFromProductDocument
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.SpecialOfferProductCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _specialOfferProductProductId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ProductPhotoIdProductPhotoCollection_From_ProductProductPhoto">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productPhotoIdProductPhotoCollectionFromProductProductPhoto
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.BillOfMaterialsCollectionGetByComponentId">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _billOfMaterialsProductAssemblyIdGetByComponentId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ProductInventoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productInventoryProductId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ProductDocumentCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productDocumentProductId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ProductReviewCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productReviewProductId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.VendorIdVendorCollection_From_ProductVendor">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table vendorIdVendorCollectionFromProductVendor
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.WorkOrderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _workOrderProductId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.PurchaseOrderDetailCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _purchaseOrderDetailProductId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.LocationIdLocationCollection_From_ProductInventory">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table locationIdLocationCollectionFromProductInventory
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ProductListPriceHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productListPriceHistoryProductId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.SpecialOfferIdSpecialOfferCollection_From_SpecialOfferProduct">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table specialOfferIdSpecialOfferCollectionFromSpecialOfferProduct
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ShoppingCartItemCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _shoppingCartItemProductId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProduct.ProductCostHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productCostHistoryProductId
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.String,System.Int16,System.Int16,System.Decimal,System.Decimal,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Int32,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductBase"/> instance.
            </summary>
            <param name="_name">Name of the product.</param>
            <param name="_productNumber">Unique product identification number.</param>
            <param name="_makeFlag">0 = Product is purchased, 1 = Product is manufactured in-house.</param>
            <param name="_finishedGoodsFlag">0 = Product is not a salable item. 1 = Product is salable.</param>
            <param name="_color">Product color.</param>
            <param name="_safetyStockLevel">Minimum inventory quantity. </param>
            <param name="_reorderPoint">Inventory level that triggers a purchase order or work order. </param>
            <param name="_standardCost">Standard cost of the product.</param>
            <param name="_listPrice">Selling price.</param>
            <param name="_size">Product size.</param>
            <param name="_sizeUnitMeasureCode">Unit of measure for Size column.</param>
            <param name="_weightUnitMeasureCode">Unit of measure for Weight column.</param>
            <param name="_weight">Product weight.</param>
            <param name="_daysToManufacture">Number of days required to manufacture the product.</param>
            <param name="_productLine">R = Road, M = Mountain, T = Touring, S = Standard</param>
            <param name="_safeNameClass">H = High, M = Medium, L = Low</param>
            <param name="_style">W = Womens, M = Mens, U = Universal</param>
            <param name="_productSubcategoryId">Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. </param>
            <param name="_productModelId">Product is a member of this product model. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_sellStartDate">Date the product was available for sale.</param>
            <param name="_sellEndDate">Date the product was no longer available for sale.</param>
            <param name="_discontinuedDate">Date the product was discontinued.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.CreateProduct(System.String,System.String,System.Boolean,System.Boolean,System.String,System.Int16,System.Int16,System.Decimal,System.Decimal,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Int32,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> instance.
            </summary>
            <param name="_name">Name of the product.</param>
            <param name="_productNumber">Unique product identification number.</param>
            <param name="_makeFlag">0 = Product is purchased, 1 = Product is manufactured in-house.</param>
            <param name="_finishedGoodsFlag">0 = Product is not a salable item. 1 = Product is salable.</param>
            <param name="_color">Product color.</param>
            <param name="_safetyStockLevel">Minimum inventory quantity. </param>
            <param name="_reorderPoint">Inventory level that triggers a purchase order or work order. </param>
            <param name="_standardCost">Standard cost of the product.</param>
            <param name="_listPrice">Selling price.</param>
            <param name="_size">Product size.</param>
            <param name="_sizeUnitMeasureCode">Unit of measure for Size column.</param>
            <param name="_weightUnitMeasureCode">Unit of measure for Weight column.</param>
            <param name="_weight">Product weight.</param>
            <param name="_daysToManufacture">Number of days required to manufacture the product.</param>
            <param name="_productLine">R = Road, M = Mountain, T = Touring, S = Standard</param>
            <param name="_safeNameClass">H = High, M = Medium, L = Low</param>
            <param name="_style">W = Womens, M = Mens, U = Universal</param>
            <param name="_productSubcategoryId">Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. </param>
            <param name="_productModelId">Product is a member of this product model. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_sellStartDate">Date the product was available for sale.</param>
            <param name="_sellEndDate">Date the product was no longer available for sale.</param>
            <param name="_discontinuedDate">Date the product was discontinued.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Product Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.Copy">
            <summary>
              Returns a Typed Product Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.DeepCopy">
            <summary>
              Returns a Typed Product Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ProductColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.GetOriginalEntity">
            <summary>
              Returns a Product Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ProductBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.Equals(Nettiers.AdventureWorks.Entities.ProductBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.ValueEquals(Nettiers.AdventureWorks.Entities.ProductBase,Nettiers.AdventureWorks.Entities.ProductBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ProductBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Primary key for Product records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Name of the product.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductNumber">
            <summary>
            	Gets or sets the ProductNumber property. 
            	Unique product identification number.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.MakeFlag">
            <summary>
            	Gets or sets the MakeFlag property. 
            	0 = Product is purchased, 1 = Product is manufactured in-house.
            </summary>
            <value>This type is bit.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.FinishedGoodsFlag">
            <summary>
            	Gets or sets the FinishedGoodsFlag property. 
            	0 = Product is not a salable item. 1 = Product is salable.
            </summary>
            <value>This type is bit.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.Color">
            <summary>
            	Gets or sets the Color property. 
            	Product color.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.SafetyStockLevel">
            <summary>
            	Gets or sets the SafetyStockLevel property. 
            	Minimum inventory quantity. 
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ReorderPoint">
            <summary>
            	Gets or sets the ReorderPoint property. 
            	Inventory level that triggers a purchase order or work order. 
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.StandardCost">
            <summary>
            	Gets or sets the StandardCost property. 
            	Standard cost of the product.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ListPrice">
            <summary>
            	Gets or sets the ListPrice property. 
            	Selling price.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.Size">
            <summary>
            	Gets or sets the Size property. 
            	Product size.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.SizeUnitMeasureCode">
            <summary>
            	Gets or sets the SizeUnitMeasureCode property. 
            	Unit of measure for Size column.
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.WeightUnitMeasureCode">
            <summary>
            	Gets or sets the WeightUnitMeasureCode property. 
            	Unit of measure for Weight column.
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.Weight">
            <summary>
            	Gets or sets the Weight property. 
            	Product weight.
            </summary>
            <value>This type is decimal.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0.0m. It is up to the developer
            to check the value of IsWeightNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.DaysToManufacture">
            <summary>
            	Gets or sets the DaysToManufacture property. 
            	Number of days required to manufacture the product.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductLine">
            <summary>
            	Gets or sets the ProductLine property. 
            	R = Road, M = Mountain, T = Touring, S = Standard
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.SafeNameClass">
            <summary>
            	Gets or sets the SafeNameClass property. 
            	H = High, M = Medium, L = Low
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.Style">
            <summary>
            	Gets or sets the Style property. 
            	W = Womens, M = Mens, U = Universal
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductSubcategoryId">
            <summary>
            	Gets or sets the ProductSubcategoryId property. 
            	Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. 
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsProductSubcategoryIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductModelId">
            <summary>
            	Gets or sets the ProductModelId property. 
            	Product is a member of this product model. Foreign key to ProductModel.ProductModelID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsProductModelIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.SellStartDate">
            <summary>
            	Gets or sets the SellStartDate property. 
            	Date the product was available for sale.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.SellEndDate">
            <summary>
            	Gets or sets the SellEndDate property. 
            	Date the product was no longer available for sale.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsSellEndDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.DiscontinuedDate">
            <summary>
            	Gets or sets the DiscontinuedDate property. 
            	Date the product was discontinued.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsDiscontinuedDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductModelIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/>.
            </summary>
            <value>The source ProductModel for ProductModelId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductSubcategoryIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/>.
            </summary>
            <value>The source ProductSubcategory for ProductSubcategoryId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.SizeUnitMeasureCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/>.
            </summary>
            <value>The source UnitMeasure for SizeUnitMeasureCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.WeightUnitMeasureCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/>.
            </summary>
            <value>The source UnitMeasure for WeightUnitMeasureCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductProductPhotoCollection">
            <summary>
            Holds a collection of ProductProductPhoto objects
            which are related to this object through the relation FK_ProductProductPhoto_Product_ProductID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.TransactionHistoryCollection">
            <summary>
            Holds a collection of TransactionHistory objects
            which are related to this object through the relation FK_TransactionHistory_Product_ProductID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductVendorCollection">
            <summary>
            Holds a collection of ProductVendor objects
            which are related to this object through the relation FK_ProductVendor_Product_ProductID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.BillOfMaterialsCollectionGetByProductAssemblyId">
            <summary>
            Holds a collection of BillOfMaterials objects
            which are related to this object through the relation FK_BillOfMaterials_Product_ProductAssemblyID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.DocumentIdDocumentCollection_From_ProductDocument">
            <summary>
            Holds a collection of DocumentFromProductDocument objects
            which are related to this object through the junction table ProductDocument
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.SpecialOfferProductCollection">
            <summary>
            Holds a collection of SpecialOfferProduct objects
            which are related to this object through the relation FK_SpecialOfferProduct_Product_ProductID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductPhotoIdProductPhotoCollection_From_ProductProductPhoto">
            <summary>
            Holds a collection of ProductPhotoFromProductProductPhoto objects
            which are related to this object through the junction table ProductProductPhoto
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.BillOfMaterialsCollectionGetByComponentId">
            <summary>
            Holds a collection of BillOfMaterials objects
            which are related to this object through the relation FK_BillOfMaterials_Product_ComponentID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductInventoryCollection">
            <summary>
            Holds a collection of ProductInventory objects
            which are related to this object through the relation FK_ProductInventory_Product_ProductID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductDocumentCollection">
            <summary>
            Holds a collection of ProductDocument objects
            which are related to this object through the relation FK_ProductDocument_Product_ProductID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductReviewCollection">
            <summary>
            Holds a collection of ProductReview objects
            which are related to this object through the relation FK_ProductReview_Product_ProductID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.VendorIdVendorCollection_From_ProductVendor">
            <summary>
            Holds a collection of VendorFromProductVendor objects
            which are related to this object through the junction table ProductVendor
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.WorkOrderCollection">
            <summary>
            Holds a collection of WorkOrder objects
            which are related to this object through the relation FK_WorkOrder_Product_ProductID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.PurchaseOrderDetailCollection">
            <summary>
            Holds a collection of PurchaseOrderDetail objects
            which are related to this object through the relation FK_PurchaseOrderDetail_Product_ProductID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.LocationIdLocationCollection_From_ProductInventory">
            <summary>
            Holds a collection of LocationFromProductInventory objects
            which are related to this object through the junction table ProductInventory
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductListPriceHistoryCollection">
            <summary>
            Holds a collection of ProductListPriceHistory objects
            which are related to this object through the relation FK_ProductListPriceHistory_Product_ProductID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.SpecialOfferIdSpecialOfferCollection_From_SpecialOfferProduct">
            <summary>
            Holds a collection of SpecialOfferFromSpecialOfferProduct objects
            which are related to this object through the junction table SpecialOfferProduct
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ShoppingCartItemCollection">
            <summary>
            Holds a collection of ShoppingCartItem objects
            which are related to this object through the relation FK_ShoppingCartItem_Product_ProductID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductCostHistoryCollection">
            <summary>
            Holds a collection of ProductCostHistory objects
            which are related to this object through the relation FK_ProductCostHistory_Product_ProductID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData">
            <summary>
            	The data structure representation of the 'Product' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ProductId">
            <summary>			
            ProductID : Primary key for Product records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Product"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.Name">
            <summary>
            Name : Name of the product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ProductNumber">
            <summary>
            ProductNumber : Unique product identification number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.MakeFlag">
            <summary>
            MakeFlag : 0 = Product is purchased, 1 = Product is manufactured in-house.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.FinishedGoodsFlag">
            <summary>
            FinishedGoodsFlag : 0 = Product is not a salable item. 1 = Product is salable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.Color">
            <summary>
            Color : Product color.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.SafetyStockLevel">
            <summary>
            SafetyStockLevel : Minimum inventory quantity. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ReorderPoint">
            <summary>
            ReorderPoint : Inventory level that triggers a purchase order or work order. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.StandardCost">
            <summary>
            StandardCost : Standard cost of the product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ListPrice">
            <summary>
            ListPrice : Selling price.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.Size">
            <summary>
            Size : Product size.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.SizeUnitMeasureCode">
            <summary>
            SizeUnitMeasureCode : Unit of measure for Size column.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.WeightUnitMeasureCode">
            <summary>
            WeightUnitMeasureCode : Unit of measure for Weight column.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.Weight">
            <summary>
            Weight : Product weight.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.DaysToManufacture">
            <summary>
            DaysToManufacture : Number of days required to manufacture the product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ProductLine">
            <summary>
            ProductLine : R = Road, M = Mountain, T = Touring, S = Standard
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.SafeNameClass">
            <summary>
            Class : H = High, M = Medium, L = Low
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.Style">
            <summary>
            Style : W = Womens, M = Mens, U = Universal
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ProductSubcategoryId">
            <summary>
            ProductSubcategoryID : Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ProductModelId">
            <summary>
            ProductModelID : Product is a member of this product model. Foreign key to ProductModel.ProductModelID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.SellStartDate">
            <summary>
            SellStartDate : Date the product was available for sale.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.SellEndDate">
            <summary>
            SellEndDate : Date the product was no longer available for sale.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.DiscontinuedDate">
            <summary>
            DiscontinuedDate : Date the product was discontinued.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ProductModelIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/>.
            </summary>
            <value>The source ProductModel for ProductModelId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ProductSubcategoryIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/>.
            </summary>
            <value>The source ProductSubcategory for ProductSubcategoryId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.SizeUnitMeasureCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/>.
            </summary>
            <value>The source UnitMeasure for SizeUnitMeasureCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.WeightUnitMeasureCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/>.
            </summary>
            <value>The source UnitMeasure for WeightUnitMeasureCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ProductProductPhotoCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productProductPhotoProductId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.TransactionHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _transactionHistoryProductId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ProductVendorCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productVendorProductId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.BillOfMaterialsCollectionGetByProductAssemblyId">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _billOfMaterialsProductAssemblyIdGetByProductAssemblyId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.DocumentIdDocumentCollection_From_ProductDocument">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table documentIdDocumentCollectionFromProductDocument
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.SpecialOfferProductCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _specialOfferProductProductId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ProductPhotoIdProductPhotoCollection_From_ProductProductPhoto">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productPhotoIdProductPhotoCollectionFromProductProductPhoto
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.BillOfMaterialsCollectionGetByComponentId">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _billOfMaterialsProductAssemblyIdGetByComponentId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ProductInventoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productInventoryProductId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ProductDocumentCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productDocumentProductId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ProductReviewCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productReviewProductId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.VendorIdVendorCollection_From_ProductVendor">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table vendorIdVendorCollectionFromProductVendor
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.WorkOrderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _workOrderProductId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.PurchaseOrderDetailCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _purchaseOrderDetailProductId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.LocationIdLocationCollection_From_ProductInventory">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table locationIdLocationCollectionFromProductInventory
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ProductListPriceHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productListPriceHistoryProductId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.SpecialOfferIdSpecialOfferCollection_From_SpecialOfferProduct">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table specialOfferIdSpecialOfferCollectionFromSpecialOfferProduct
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ShoppingCartItemCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _shoppingCartItemProductId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.ProductCostHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productCostHistoryProductId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductBase.ProductEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Product.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyParent">
            <summary>
             An object representation of the 'NullFKeyParent' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyParentBase">
            <summary>
             An object representation of the 'NullFKeyParent' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.INullFkeyParent">
            <summary>
            	The data structure representation of the 'NullFKeyParent' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.INullFkeyParent.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.INullFkeyParent.NullFkeyParentId">
            <summary>			
            NullFKeyParentID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "NullFKeyParent"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.INullFkeyParent.OriginalNullFkeyParentId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.INullFkeyParent.SomeText">
            <summary>
            SomeText : 
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.INullFkeyParent.NullFkeyChildCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _nullFkeyChildNullFkeyParentId
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyParentBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParentBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.#ctor(System.Int32,System.String)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParentBase"/> instance.
            </summary>
            <param name="_nullFkeyParentId"></param>
            <param name="_someText"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.CreateNullFkeyParent(System.Int32,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> instance.
            </summary>
            <param name="_nullFkeyParentId"></param>
            <param name="_someText"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed NullFkeyParent Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.Copy">
            <summary>
              Returns a Typed NullFkeyParent Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.DeepCopy">
            <summary>
              Returns a Typed NullFkeyParent Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.NullFkeyParentColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.GetOriginalEntity">
            <summary>
              Returns a NullFkeyParent Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParentBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParentBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.Equals(Nettiers.AdventureWorks.Entities.NullFkeyParentBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParentBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.ValueEquals(Nettiers.AdventureWorks.Entities.NullFkeyParentBase,Nettiers.AdventureWorks.Entities.NullFkeyParentBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParentBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParentBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParentBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.NullFkeyParentColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParentColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.NullFkeyParentColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParentColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.NullFkeyParentColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParentColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.NullFkeyParentColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParentColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.NullFkeyParentId">
            <summary>
            	Gets or sets the NullFkeyParentId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.OriginalNullFkeyParentId">
            <summary>
            	Get the original value of the NullFKeyParentID property.
            	
            </summary>
            <remarks>This is the original value of the NullFKeyParentID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.SomeText">
            <summary>
            	Gets or sets the SomeText property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.NullFkeyChildCollection">
            <summary>
            Holds a collection of NullFkeyChild objects
            which are related to this object through the relation FK_NullFKeyChild_NullFKeyParent
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.NullFkeyParentEntityData">
            <summary>
            	The data structure representation of the 'NullFKeyParent' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.NullFkeyParentEntityData.NullFkeyParentId">
            <summary>			
            NullFKeyParentID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "NullFKeyParent"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.NullFkeyParentEntityData.OriginalNullFkeyParentId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.NullFkeyParentEntityData.SomeText">
            <summary>
            SomeText : 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.NullFkeyParentEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.NullFkeyParentEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.NullFkeyParentEntityData.NullFkeyChildCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _nullFkeyChildNullFkeyParentId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentBase.NullFkeyParentEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParent.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyChildBase">
            <summary>
             An object representation of the 'NullFKeyChild' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.INullFkeyChild">
            <summary>
            	The data structure representation of the 'NullFKeyChild' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.INullFkeyChild.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.INullFkeyChild.NullFkeyChildId">
            <summary>			
            NullFKeyChildID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "NullFKeyChild"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.INullFkeyChild.OriginalNullFkeyChildId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.INullFkeyChild.NullFkeyParentId">
            <summary>
            NullFKeyParentID : 
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.INullFkeyChild.SomeText">
            <summary>
            SomeText : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyChildBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChildBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.#ctor(System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChildBase"/> instance.
            </summary>
            <param name="_nullFkeyChildId"></param>
            <param name="_nullFkeyParentId"></param>
            <param name="_someText"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.CreateNullFkeyChild(System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> instance.
            </summary>
            <param name="_nullFkeyChildId"></param>
            <param name="_nullFkeyParentId"></param>
            <param name="_someText"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed NullFkeyChild Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.Copy">
            <summary>
              Returns a Typed NullFkeyChild Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.DeepCopy">
            <summary>
              Returns a Typed NullFkeyChild Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.NullFkeyChildColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.GetOriginalEntity">
            <summary>
              Returns a NullFkeyChild Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChildBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChildBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.Equals(Nettiers.AdventureWorks.Entities.NullFkeyChildBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChildBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.ValueEquals(Nettiers.AdventureWorks.Entities.NullFkeyChildBase,Nettiers.AdventureWorks.Entities.NullFkeyChildBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChildBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChildBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChildBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.NullFkeyChildColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChildColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.NullFkeyChildColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChildColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.NullFkeyChildColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChildColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.NullFkeyChildColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChildColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.NullFkeyChildId">
            <summary>
            	Gets or sets the NullFkeyChildId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.OriginalNullFkeyChildId">
            <summary>
            	Get the original value of the NullFKeyChildID property.
            	
            </summary>
            <remarks>This is the original value of the NullFKeyChildID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.NullFkeyParentId">
            <summary>
            	Gets or sets the NullFkeyParentId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsNullFkeyParentIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.SomeText">
            <summary>
            	Gets or sets the SomeText property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.NullFkeyParentIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/>.
            </summary>
            <value>The source NullFkeyParent for NullFkeyParentId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.NullFkeyChildEntityData">
            <summary>
            	The data structure representation of the 'NullFKeyChild' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.NullFkeyChildEntityData.NullFkeyChildId">
            <summary>			
            NullFKeyChildID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "NullFKeyChild"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.NullFkeyChildEntityData.OriginalNullFkeyChildId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.NullFkeyChildEntityData.NullFkeyParentId">
            <summary>
            NullFKeyParentID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.NullFkeyChildEntityData.SomeText">
            <summary>
            SomeText : 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.NullFkeyChildEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.NullFkeyChildEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.NullFkeyChildEntityData.NullFkeyParentIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/>.
            </summary>
            <value>The source NullFkeyParent for NullFkeyParentId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildBase.NullFkeyChildEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyChildEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildEventArgs.#ctor(Nettiers.AdventureWorks.Entities.NullFkeyChildColumn)">
            <summary>
             Initalizes a new Instance of the NullFkeyChildEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildEventArgs.#ctor(Nettiers.AdventureWorks.Entities.NullFkeyChildColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the NullFkeyChildEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildEventArgs.Column">
            <summary>
             The NullFkeyChildColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChildColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyChildEventHandler">
            <summary>
             Define a delegate for all NullFkeyChild related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyChildComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NullFkeyChildComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildComparer.#ctor(Nettiers.AdventureWorks.Entities.NullFkeyChildColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:NullFkeyChildComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildComparer.Equals(Nettiers.AdventureWorks.Entities.NullFkeyChild,Nettiers.AdventureWorks.Entities.NullFkeyChild)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> to compare.</param>
            <param name="b">The second <c>NullFkeyChild</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildComparer.GetHashCode(Nettiers.AdventureWorks.Entities.NullFkeyChild)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildComparer.Compare(Nettiers.AdventureWorks.Entities.NullFkeyChild,Nettiers.AdventureWorks.Entities.NullFkeyChild)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyChildKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildKey.#ctor">
            <summary>
            Initializes a new instance of the NullFkeyChildKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildKey.#ctor(Nettiers.AdventureWorks.Entities.NullFkeyChildBase)">
            <summary>
            Initializes a new instance of the NullFkeyChildKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the NullFkeyChildKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChildKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyChildKey.NullFkeyChildId">
            <summary>
            Gets or sets the NullFkeyChildId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyChildColumn">
            <summary>
            Enumerate the NullFkeyChild columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyChildColumn.NullFkeyChildId">
            <summary>
            NullFkeyChildId : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyChildColumn.NullFkeyParentId">
            <summary>
            NullFkeyParentId : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyChildColumn.SomeText">
            <summary>
            SomeText : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.LocationBase">
            <summary>
             Product inventory and manufacturing locations.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ILocation">
            <summary>
            	The data structure representation of the 'Location' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ILocation.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ILocation.LocationId">
            <summary>			
            LocationID : Primary key for Location records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Location"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ILocation.Name">
            <summary>
            Name : Location description.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ILocation.CostRate">
            <summary>
            CostRate : Standard hourly cost of the manufacturing location.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ILocation.Availability">
            <summary>
            Availability : Work capacity (in hours) of the manufacturing location.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ILocation.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ILocation.WorkOrderRoutingCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _workOrderRoutingLocationId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ILocation.ProductIdProductCollection_From_ProductInventory">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productIdProductCollectionFromProductInventory
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ILocation.ProductInventoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productInventoryLocationId
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.LocationBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.LocationBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.LocationBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.LocationBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.LocationBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.LocationBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.#ctor(System.String,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.LocationBase"/> instance.
            </summary>
            <param name="_name">Location description.</param>
            <param name="_costRate">Standard hourly cost of the manufacturing location.</param>
            <param name="_availability">Work capacity (in hours) of the manufacturing location.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.CreateLocation(System.String,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> instance.
            </summary>
            <param name="_name">Location description.</param>
            <param name="_costRate">Standard hourly cost of the manufacturing location.</param>
            <param name="_availability">Work capacity (in hours) of the manufacturing location.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Location Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.Copy">
            <summary>
              Returns a Typed Location Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.DeepCopy">
            <summary>
              Returns a Typed Location Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.LocationColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.GetOriginalEntity">
            <summary>
              Returns a Location Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.LocationBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.LocationBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.Equals(Nettiers.AdventureWorks.Entities.LocationBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.LocationBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.ValueEquals(Nettiers.AdventureWorks.Entities.LocationBase,Nettiers.AdventureWorks.Entities.LocationBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.LocationBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.LocationBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.LocationBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.LocationColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.LocationBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.LocationColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.LocationColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.LocationBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.LocationColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.LocationColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.LocationBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.LocationColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.LocationColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.LocationBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.LocationColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.LocationBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.LocationBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.LocationId">
            <summary>
            	Gets or sets the LocationId property. 
            	Primary key for Location records.
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Location description.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.CostRate">
            <summary>
            	Gets or sets the CostRate property. 
            	Standard hourly cost of the manufacturing location.
            </summary>
            <value>This type is smallmoney.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.Availability">
            <summary>
            	Gets or sets the Availability property. 
            	Work capacity (in hours) of the manufacturing location.
            </summary>
            <value>This type is decimal.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.WorkOrderRoutingCollection">
            <summary>
            Holds a collection of WorkOrderRouting objects
            which are related to this object through the relation FK_WorkOrderRouting_Location_LocationID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.ProductIdProductCollection_From_ProductInventory">
            <summary>
            Holds a collection of ProductFromProductInventory objects
            which are related to this object through the junction table ProductInventory
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.ProductInventoryCollection">
            <summary>
            Holds a collection of ProductInventory objects
            which are related to this object through the relation FK_ProductInventory_Location_LocationID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.LocationBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.LocationBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.LocationBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.LocationBase.LocationEntityData">
            <summary>
            	The data structure representation of the 'Location' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.LocationBase.LocationEntityData.LocationId">
            <summary>			
            LocationID : Primary key for Location records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Location"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.LocationBase.LocationEntityData.Name">
            <summary>
            Name : Location description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.LocationBase.LocationEntityData.CostRate">
            <summary>
            CostRate : Standard hourly cost of the manufacturing location.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.LocationBase.LocationEntityData.Availability">
            <summary>
            Availability : Work capacity (in hours) of the manufacturing location.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.LocationBase.LocationEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.LocationEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationBase.LocationEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.LocationEntityData.WorkOrderRoutingCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _workOrderRoutingLocationId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.LocationEntityData.ProductIdProductCollection_From_ProductInventory">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productIdProductCollectionFromProductInventory
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.LocationEntityData.ProductInventoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productInventoryLocationId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationBase.LocationEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.LocationEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationEventArgs.#ctor(Nettiers.AdventureWorks.Entities.LocationColumn)">
            <summary>
             Initalizes a new Instance of the LocationEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationEventArgs.#ctor(Nettiers.AdventureWorks.Entities.LocationColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the LocationEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationEventArgs.Column">
            <summary>
             The LocationColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.LocationColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.LocationEventHandler">
            <summary>
             Define a delegate for all Location related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.LocationComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LocationComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationComparer.#ctor(Nettiers.AdventureWorks.Entities.LocationColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:LocationComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationComparer.Equals(Nettiers.AdventureWorks.Entities.Location,Nettiers.AdventureWorks.Entities.Location)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> to compare.</param>
            <param name="b">The second <c>Location</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationComparer.GetHashCode(Nettiers.AdventureWorks.Entities.Location)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationComparer.Compare(Nettiers.AdventureWorks.Entities.Location,Nettiers.AdventureWorks.Entities.Location)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.LocationKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationKey.#ctor">
            <summary>
            Initializes a new instance of the LocationKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationKey.#ctor(Nettiers.AdventureWorks.Entities.LocationBase)">
            <summary>
            Initializes a new instance of the LocationKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationKey.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of the LocationKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.LocationKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.LocationKey.LocationId">
            <summary>
            Gets or sets the LocationId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.LocationColumn">
            <summary>
            Enumerate the Location columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.LocationColumn.LocationId">
            <summary>
            LocationId : Primary key for Location records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.LocationColumn.Name">
            <summary>
            Name : Location description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.LocationColumn.CostRate">
            <summary>
            CostRate : Standard hourly cost of the manufacturing location.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.LocationColumn.Availability">
            <summary>
            Availability : Work capacity (in hours) of the manufacturing location.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.LocationColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ErrorLogBase">
            <summary>
             Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IErrorLog">
            <summary>
            	The data structure representation of the 'ErrorLog' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IErrorLog.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IErrorLog.ErrorLogId">
            <summary>			
            ErrorLogID : Primary key for ErrorLog records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ErrorLog"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IErrorLog.ErrorTime">
            <summary>
            ErrorTime : The date and time at which the error occurred.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IErrorLog.UserName">
            <summary>
            UserName : The user who executed the batch in which the error occurred.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IErrorLog.ErrorNumber">
            <summary>
            ErrorNumber : The error number of the error that occurred.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IErrorLog.ErrorSeverity">
            <summary>
            ErrorSeverity : The severity of the error that occurred.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IErrorLog.ErrorState">
            <summary>
            ErrorState : The state number of the error that occurred.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IErrorLog.ErrorProcedure">
            <summary>
            ErrorProcedure : The name of the stored procedure or trigger where the error occurred.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IErrorLog.ErrorLine">
            <summary>
            ErrorLine : The line number at which the error occurred.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IErrorLog.ErrorMessage">
            <summary>
            ErrorMessage : The message text of the error that occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLogBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.#ctor(System.DateTime,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLogBase"/> instance.
            </summary>
            <param name="_errorTime">The date and time at which the error occurred.</param>
            <param name="_userName">The user who executed the batch in which the error occurred.</param>
            <param name="_errorNumber">The error number of the error that occurred.</param>
            <param name="_errorSeverity">The severity of the error that occurred.</param>
            <param name="_errorState">The state number of the error that occurred.</param>
            <param name="_errorProcedure">The name of the stored procedure or trigger where the error occurred.</param>
            <param name="_errorLine">The line number at which the error occurred.</param>
            <param name="_errorMessage">The message text of the error that occurred.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.CreateErrorLog(System.DateTime,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> instance.
            </summary>
            <param name="_errorTime">The date and time at which the error occurred.</param>
            <param name="_userName">The user who executed the batch in which the error occurred.</param>
            <param name="_errorNumber">The error number of the error that occurred.</param>
            <param name="_errorSeverity">The severity of the error that occurred.</param>
            <param name="_errorState">The state number of the error that occurred.</param>
            <param name="_errorProcedure">The name of the stored procedure or trigger where the error occurred.</param>
            <param name="_errorLine">The line number at which the error occurred.</param>
            <param name="_errorMessage">The message text of the error that occurred.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ErrorLog Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.Copy">
            <summary>
              Returns a Typed ErrorLog Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.DeepCopy">
            <summary>
              Returns a Typed ErrorLog Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ErrorLogColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.GetOriginalEntity">
            <summary>
              Returns a ErrorLog Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLogBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLogBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.Equals(Nettiers.AdventureWorks.Entities.ErrorLogBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLogBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.ValueEquals(Nettiers.AdventureWorks.Entities.ErrorLogBase,Nettiers.AdventureWorks.Entities.ErrorLogBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLogBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLogBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLogBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ErrorLogColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ErrorLogBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLogColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ErrorLogColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ErrorLogBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLogColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ErrorLogColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ErrorLogBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLogColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ErrorLogColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ErrorLogBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLogColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ErrorLogBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ErrorLogBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorLogId">
            <summary>
            	Gets or sets the ErrorLogId property. 
            	Primary key for ErrorLog records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorTime">
            <summary>
            	Gets or sets the ErrorTime property. 
            	The date and time at which the error occurred.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.UserName">
            <summary>
            	Gets or sets the UserName property. 
            	The user who executed the batch in which the error occurred.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorNumber">
            <summary>
            	Gets or sets the ErrorNumber property. 
            	The error number of the error that occurred.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorSeverity">
            <summary>
            	Gets or sets the ErrorSeverity property. 
            	The severity of the error that occurred.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsErrorSeverityNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorState">
            <summary>
            	Gets or sets the ErrorState property. 
            	The state number of the error that occurred.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsErrorStateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorProcedure">
            <summary>
            	Gets or sets the ErrorProcedure property. 
            	The name of the stored procedure or trigger where the error occurred.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorLine">
            <summary>
            	Gets or sets the ErrorLine property. 
            	The line number at which the error occurred.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsErrorLineNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorMessage">
            <summary>
            	Gets or sets the ErrorMessage property. 
            	The message text of the error that occurred.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ErrorLogBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ErrorLogBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ErrorLogBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorLogEntityData">
            <summary>
            	The data structure representation of the 'ErrorLog' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorLogEntityData.ErrorLogId">
            <summary>			
            ErrorLogID : Primary key for ErrorLog records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ErrorLog"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorLogEntityData.ErrorTime">
            <summary>
            ErrorTime : The date and time at which the error occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorLogEntityData.UserName">
            <summary>
            UserName : The user who executed the batch in which the error occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorLogEntityData.ErrorNumber">
            <summary>
            ErrorNumber : The error number of the error that occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorLogEntityData.ErrorSeverity">
            <summary>
            ErrorSeverity : The severity of the error that occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorLogEntityData.ErrorState">
            <summary>
            ErrorState : The state number of the error that occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorLogEntityData.ErrorProcedure">
            <summary>
            ErrorProcedure : The name of the stored procedure or trigger where the error occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorLogEntityData.ErrorLine">
            <summary>
            ErrorLine : The line number at which the error occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorLogEntityData.ErrorMessage">
            <summary>
            ErrorMessage : The message text of the error that occurred.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorLogEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorLogEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogBase.ErrorLogEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ErrorLogEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ErrorLogColumn)">
            <summary>
             Initalizes a new Instance of the ErrorLogEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ErrorLogColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ErrorLogEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogEventArgs.Column">
            <summary>
             The ErrorLogColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ErrorLogColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ErrorLogEventHandler">
            <summary>
             Define a delegate for all ErrorLog related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ErrorLogComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ErrorLogComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogComparer.#ctor(Nettiers.AdventureWorks.Entities.ErrorLogColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ErrorLogComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogComparer.Equals(Nettiers.AdventureWorks.Entities.ErrorLog,Nettiers.AdventureWorks.Entities.ErrorLog)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> to compare.</param>
            <param name="b">The second <c>ErrorLog</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ErrorLog)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogComparer.Compare(Nettiers.AdventureWorks.Entities.ErrorLog,Nettiers.AdventureWorks.Entities.ErrorLog)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ErrorLogKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogKey.#ctor">
            <summary>
            Initializes a new instance of the ErrorLogKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogKey.#ctor(Nettiers.AdventureWorks.Entities.ErrorLogBase)">
            <summary>
            Initializes a new instance of the ErrorLogKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ErrorLogKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLogKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ErrorLogKey.ErrorLogId">
            <summary>
            Gets or sets the ErrorLogId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ErrorLogColumn">
            <summary>
            Enumerate the ErrorLog columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogColumn.ErrorLogId">
            <summary>
            ErrorLogId : Primary key for ErrorLog records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogColumn.ErrorTime">
            <summary>
            ErrorTime : The date and time at which the error occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogColumn.UserName">
            <summary>
            UserName : The user who executed the batch in which the error occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogColumn.ErrorNumber">
            <summary>
            ErrorNumber : The error number of the error that occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogColumn.ErrorSeverity">
            <summary>
            ErrorSeverity : The severity of the error that occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogColumn.ErrorState">
            <summary>
            ErrorState : The state number of the error that occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogColumn.ErrorProcedure">
            <summary>
            ErrorProcedure : The name of the stored procedure or trigger where the error occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogColumn.ErrorLine">
            <summary>
            ErrorLine : The line number at which the error occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ErrorLogColumn.ErrorMessage">
            <summary>
            ErrorMessage : The message text of the error that occurred.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Department">
            <summary>
             Lookup table containing the departments within the Adventure Works Cycles company.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DepartmentBase">
            <summary>
             Lookup table containing the departments within the Adventure Works Cycles company.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IDepartment">
            <summary>
            	The data structure representation of the 'Department' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IDepartment.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDepartment.DepartmentId">
            <summary>			
            DepartmentID : Primary key for Department records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Department"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDepartment.Name">
            <summary>
            Name : Name of the department.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDepartment.GroupName">
            <summary>
            GroupName : Name of the group to which the department belongs.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDepartment.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDepartment.EmployeeDepartmentHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeeDepartmentHistoryDepartmentId
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DepartmentBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DepartmentBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DepartmentBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DepartmentBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DepartmentBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.DepartmentBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.#ctor(System.String,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.DepartmentBase"/> instance.
            </summary>
            <param name="_name">Name of the department.</param>
            <param name="_groupName">Name of the group to which the department belongs.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.CreateDepartment(System.String,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> instance.
            </summary>
            <param name="_name">Name of the department.</param>
            <param name="_groupName">Name of the group to which the department belongs.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Department Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.Copy">
            <summary>
              Returns a Typed Department Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.DeepCopy">
            <summary>
              Returns a Typed Department Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.DepartmentColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.GetOriginalEntity">
            <summary>
              Returns a Department Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.DepartmentBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.DepartmentBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.Equals(Nettiers.AdventureWorks.Entities.DepartmentBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.DepartmentBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.ValueEquals(Nettiers.AdventureWorks.Entities.DepartmentBase,Nettiers.AdventureWorks.Entities.DepartmentBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.DepartmentBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.DepartmentBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.DepartmentBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.DepartmentColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.DepartmentBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.DepartmentColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.DepartmentColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.DepartmentBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.DepartmentColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.DepartmentColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.DepartmentBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.DepartmentColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.DepartmentColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.DepartmentBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.DepartmentColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.DepartmentBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.DepartmentBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentBase.DepartmentId">
            <summary>
            	Gets or sets the DepartmentId property. 
            	Primary key for Department records.
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Name of the department.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentBase.GroupName">
            <summary>
            	Gets or sets the GroupName property. 
            	Name of the group to which the department belongs.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentBase.EmployeeDepartmentHistoryCollection">
            <summary>
            Holds a collection of EmployeeDepartmentHistory objects
            which are related to this object through the relation FK_EmployeeDepartmentHistory_Department_DepartmentID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.DepartmentBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.DepartmentBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DepartmentBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DepartmentBase.DepartmentEntityData">
            <summary>
            	The data structure representation of the 'Department' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DepartmentBase.DepartmentEntityData.DepartmentId">
            <summary>			
            DepartmentID : Primary key for Department records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Department"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DepartmentBase.DepartmentEntityData.Name">
            <summary>
            Name : Name of the department.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DepartmentBase.DepartmentEntityData.GroupName">
            <summary>
            GroupName : Name of the group to which the department belongs.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DepartmentBase.DepartmentEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.DepartmentEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentBase.DepartmentEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentBase.DepartmentEntityData.EmployeeDepartmentHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeeDepartmentHistoryDepartmentId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentBase.DepartmentEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Department.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AwBuildVersionBase">
            <summary>
             Current version number of the AdventureWorks sample database. 	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IAwBuildVersion">
            <summary>
            	The data structure representation of the 'AWBuildVersion' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IAwBuildVersion.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAwBuildVersion.SystemInformationId">
            <summary>			
            SystemInformationID : Primary key for AWBuildVersion records.
            </summary>
            <remarks>Member of the primary key of the underlying table "AWBuildVersion"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAwBuildVersion.DatabaseVersion">
            <summary>
            Database Version : Version number of the database in 9.yy.mm.dd.00 format.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAwBuildVersion.VersionDate">
            <summary>
            VersionDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAwBuildVersion.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AwBuildVersionBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersionBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.#ctor(System.String,System.DateTime,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersionBase"/> instance.
            </summary>
            <param name="_databaseVersion">Version number of the database in 9.yy.mm.dd.00 format.</param>
            <param name="_versionDate">Date and time the record was last updated.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.CreateAwBuildVersion(System.String,System.DateTime,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> instance.
            </summary>
            <param name="_databaseVersion">Version number of the database in 9.yy.mm.dd.00 format.</param>
            <param name="_versionDate">Date and time the record was last updated.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed AwBuildVersion Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.Copy">
            <summary>
              Returns a Typed AwBuildVersion Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.DeepCopy">
            <summary>
              Returns a Typed AwBuildVersion Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.AwBuildVersionColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.GetOriginalEntity">
            <summary>
              Returns a AwBuildVersion Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersionBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.Equals(Nettiers.AdventureWorks.Entities.AwBuildVersionBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.ValueEquals(Nettiers.AdventureWorks.Entities.AwBuildVersionBase,Nettiers.AdventureWorks.Entities.AwBuildVersionBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersionBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersionBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersionBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.AwBuildVersionColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersionColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.AwBuildVersionColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersionColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.AwBuildVersionColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersionColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.AwBuildVersionColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersionColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.SystemInformationId">
            <summary>
            	Gets or sets the SystemInformationId property. 
            	Primary key for AWBuildVersion records.
            </summary>
            <value>This type is tinyint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.DatabaseVersion">
            <summary>
            	Gets or sets the DatabaseVersion property. 
            	Version number of the database in 9.yy.mm.dd.00 format.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.VersionDate">
            <summary>
            	Gets or sets the VersionDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.AwBuildVersionEntityData">
            <summary>
            	The data structure representation of the 'AWBuildVersion' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.AwBuildVersionEntityData.SystemInformationId">
            <summary>			
            SystemInformationID : Primary key for AWBuildVersion records.
            </summary>
            <remarks>Member of the primary key of the underlying table "AWBuildVersion"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.AwBuildVersionEntityData.DatabaseVersion">
            <summary>
            Database Version : Version number of the database in 9.yy.mm.dd.00 format.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.AwBuildVersionEntityData.VersionDate">
            <summary>
            VersionDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.AwBuildVersionEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.AwBuildVersionEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.AwBuildVersionEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionBase.AwBuildVersionEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AwBuildVersionEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionEventArgs.#ctor(Nettiers.AdventureWorks.Entities.AwBuildVersionColumn)">
            <summary>
             Initalizes a new Instance of the AwBuildVersionEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionEventArgs.#ctor(Nettiers.AdventureWorks.Entities.AwBuildVersionColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the AwBuildVersionEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionEventArgs.Column">
            <summary>
             The AwBuildVersionColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersionColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AwBuildVersionEventHandler">
            <summary>
             Define a delegate for all AwBuildVersion related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AwBuildVersionComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AwBuildVersionComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionComparer.#ctor(Nettiers.AdventureWorks.Entities.AwBuildVersionColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:AwBuildVersionComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionComparer.Equals(Nettiers.AdventureWorks.Entities.AwBuildVersion,Nettiers.AdventureWorks.Entities.AwBuildVersion)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> to compare.</param>
            <param name="b">The second <c>AwBuildVersion</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionComparer.GetHashCode(Nettiers.AdventureWorks.Entities.AwBuildVersion)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionComparer.Compare(Nettiers.AdventureWorks.Entities.AwBuildVersion,Nettiers.AdventureWorks.Entities.AwBuildVersion)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AwBuildVersionKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionKey.#ctor">
            <summary>
            Initializes a new instance of the AwBuildVersionKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionKey.#ctor(Nettiers.AdventureWorks.Entities.AwBuildVersionBase)">
            <summary>
            Initializes a new instance of the AwBuildVersionKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionKey.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the AwBuildVersionKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersionKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AwBuildVersionKey.SystemInformationId">
            <summary>
            Gets or sets the SystemInformationId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AwBuildVersionColumn">
            <summary>
            Enumerate the AwBuildVersion columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AwBuildVersionColumn.SystemInformationId">
            <summary>
            SystemInformationId : Primary key for AWBuildVersion records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AwBuildVersionColumn.DatabaseVersion">
            <summary>
            DatabaseVersion : Version number of the database in 9.yy.mm.dd.00 format.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AwBuildVersionColumn.VersionDate">
            <summary>
            VersionDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AwBuildVersionColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VEmployee">
            <summary>
             Employee names and addresses.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VEmployeeBase">
            <summary>
             Employee names and addresses.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._employeeId">
            <summary>
            EmployeeID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._firstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._middleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._lastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._suffix">
            <summary>
            Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._jobTitle">
            <summary>
            JobTitle : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._phone">
            <summary>
            Phone : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._emailAddress">
            <summary>
            EmailAddress : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._emailPromotion">
            <summary>
            EmailPromotion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._addressLine1">
            <summary>
            AddressLine1 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._addressLine2">
            <summary>
            AddressLine2 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._city">
            <summary>
            City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._stateProvinceName">
            <summary>
            StateProvinceName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._postalCode">
            <summary>
            PostalCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._countryRegionName">
            <summary>
            CountryRegionName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._additionalContactInfo">
            <summary>
            AdditionalContactInfo : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeBase"/> instance.
            </summary>
            <param name="_employeeId"></param>
            <param name="_title"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_suffix"></param>
            <param name="_jobTitle"></param>
            <param name="_phone"></param>
            <param name="_emailAddress"></param>
            <param name="_emailPromotion"></param>
            <param name="_addressLine1"></param>
            <param name="_addressLine2"></param>
            <param name="_city"></param>
            <param name="_stateProvinceName"></param>
            <param name="_postalCode"></param>
            <param name="_countryRegionName"></param>
            <param name="_additionalContactInfo"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.CreateVEmployee(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VEmployee"/> instance.
            </summary>
            <param name="_employeeId"></param>
            <param name="_title"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_suffix"></param>
            <param name="_jobTitle"></param>
            <param name="_phone"></param>
            <param name="_emailAddress"></param>
            <param name="_emailPromotion"></param>
            <param name="_addressLine1"></param>
            <param name="_addressLine2"></param>
            <param name="_city"></param>
            <param name="_stateProvinceName"></param>
            <param name="_postalCode"></param>
            <param name="_countryRegionName"></param>
            <param name="_additionalContactInfo"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.Copy">
            <summary>
              Returns a Typed VEmployeeBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.Equals(Nettiers.AdventureWorks.Entities.VEmployeeBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.Equals(Nettiers.AdventureWorks.Entities.VEmployeeBase,Nettiers.AdventureWorks.Entities.VEmployeeBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VEmployee,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.EmployeeId">
            <summary>
            	Gets or Sets the EmployeeID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.Title">
            <summary>
            	Gets or Sets the Title property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.FirstName">
            <summary>
            	Gets or Sets the FirstName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.MiddleName">
            <summary>
            	Gets or Sets the MiddleName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.LastName">
            <summary>
            	Gets or Sets the LastName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.Suffix">
            <summary>
            	Gets or Sets the Suffix property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.JobTitle">
            <summary>
            	Gets or Sets the JobTitle property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.Phone">
            <summary>
            	Gets or Sets the Phone property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.EmailAddress">
            <summary>
            	Gets or Sets the EmailAddress property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.EmailPromotion">
            <summary>
            	Gets or Sets the EmailPromotion property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.AddressLine1">
            <summary>
            	Gets or Sets the AddressLine1 property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.AddressLine2">
            <summary>
            	Gets or Sets the AddressLine2 property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.City">
            <summary>
            	Gets or Sets the City property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.StateProvinceName">
            <summary>
            	Gets or Sets the StateProvinceName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.PostalCode">
            <summary>
            	Gets or Sets the PostalCode property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.CountryRegionName">
            <summary>
            	Gets or Sets the CountryRegionName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.AdditionalContactInfo">
            <summary>
            	Gets or Sets the AdditionalContactInfo property. 
            	
            </summary>
            <value>This type is xml</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VEmployeeBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VEmployeeBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployee.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VEmployee"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Validation.CommonRules">
            <summary>
            Static class that contains common validation rules.  Each rule conforms to the <see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs"/> delegate.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.NotNull(System.Object,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)">
            <summary>
            Rule that does not allow a property value to be null
            </summary>
            <param name="target">Object containing the data to validate.</param>
            <param name="e"><see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs"/> containing the information about the object to be validated.</param>
            <returns>False if the rule is broken; true otherwise.</returns>
            <returns>Returns true if the property value is not null; false otherwise.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.StringRequired(System.Object,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)">
            <summary>
            Rule ensuring a String value contains one or more
            characters.
            </summary>
            <param name="target">Object containing the data to validate.</param>
            <param name="e"><see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs"/> containing the information about the object to be validated.</param>
            <returns>False if the rule is broken; true otherwise.</returns>
            <remarks>
            This implementation uses late binding, and will only work
            against String property values.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.StringMaxLength(System.Object,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)">
            <summary>
            Rule ensuring a String value doesn't exceed
            a specified length.
            </summary>
            <param name="target">Object containing the data to validate.</param>
            <param name="e"><see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs"/> containing the information about the object to be validated.</param>
            <returns>False if the rule is broken; true otherwise.</returns>
            <remarks>
            This implementation uses late binding, and will only work
            against String property values.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.MaxWords(System.Object,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)">
            <summary>
            Summary description for MaxWords.
            </summary>
            <param name="target"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.RegexIsMatch(System.Object,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)">
            <summary>
            Rule ensuring a String value is matching
            a specified regular expression.
            </summary>
            <param name="target">Object containing the data to validate.</param>
            <param name="e"><see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs"/> containing the information about the object to be validated, must be of type RegexRuleArgs</param>
            <returns>False if the rule is broken; true otherwise.</returns>
            <remarks>
            This implementation uses late binding, and will only work
            against String property values.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.LessThanValue``1(System.Object,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)">
            <summary>
            Generic rule that determines if an object's property is less than a particular value.
            </summary>
            <typeparam name="T">Datatype of the property to validate</typeparam>
            <param name="target">Object containing the data to validate.</param>
            <param name="e"><see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs"/> containing the information about the object to be validated.</param>
            <returns>False if the rule is broken; true otherwise.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.LessThanOrEqualToValue``1(System.Object,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)">
            <summary>
            Generic rule that determines if an object's property is less than or equal to a particular value.
            </summary>
            <typeparam name="T">Datatype of the property to validate</typeparam>
            <param name="target">Object containing the data to validate.</param>
            <param name="e"><see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs"/> containing the information about the object to be validated.</param>
            <returns>False if the rule is broken; true otherwise.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.EqualsValue``1(System.Object,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)">
            <summary>
            Generic rule that determines if an object's property is equal to a particular value.
            </summary>
            <typeparam name="T">Datatype of the property to validate</typeparam>
            <param name="target">Object containing the data to validate.</param>
            <param name="e"><see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs"/> containing the information about the object to be validated.</param>
            <returns>False if the rule is broken; true otherwise.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.GreaterThanValue``1(System.Object,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)">
            <summary>
            Generic rule that determines if an object's property is greater than a particular value.
            </summary>
            <typeparam name="T">Datatype of the property to validate</typeparam>
            <param name="target">Object containing the data to validate.</param>
            <param name="e"><see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs"/> containing the information about the object to be validated.</param>
            <returns>False if the rule is broken; true otherwise.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.GreaterThanOrEqualToValue``1(System.Object,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)">
            <summary>
            Generic rule that determines if an object's property is greater than or equal to a particular value.
            </summary>
            <typeparam name="T">Datatype of the property to validate</typeparam>
            <param name="target">Object containing the data to validate.</param>
            <param name="e"><see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs"/> containing the information about the object to be validated.</param>
            <returns>False if the rule is broken; true otherwise.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.CompareValues``1(System.Object,Nettiers.AdventureWorks.Entities.Validation.CommonRules.CompareValueRuleArgs{``0},Nettiers.AdventureWorks.Entities.Validation.CommonRules.CompareType)">
            <summary>
            Private method that compares a property value with a specified value.
            </summary>
            <typeparam name="T">Datatype of the property to validate.</typeparam>
            <param name="target">Object containing the data to validate.</param>
            <param name="e"><see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs"/> containing the information about the object to be validated.</param>
            <param name="compareType"><see cref="T:Nettiers.AdventureWorks.Entities.Validation.CommonRules.CompareType"/> defining the type of comparison that will be made.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.InRange``1(System.Object,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)">
            <summary>
            Generic rule that determines if an object's property is within a specified range.
            </summary>
            <typeparam name="T">Datatype of the property to validate.  Must implement <see cref="T:System.IComparable`1"/>.</typeparam>
            <param name="target">Object containing the data to validate.</param>
            <param name="e"><see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs"/> containing the information about the object to be validated.</param>
            <returns>False if the rule is broken; true otherwise.</returns>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Validation.CommonRules.MaxLengthRuleArgs">
            <summary>
            Class used with the <see cref="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.StringMaxLength(System.Object,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)"/>.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs">
            <summary>
            Object that provides additional information about an validation rule.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs.#ctor(System.String)">
            <summary>
            Creates an instance of the object
            </summary>
            <param name="propertyName">The name of the property to be validated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of the object
            </summary>
            <param name="propertyName">The name of the property to be validated.</param>
            <param name="friendlyName">Friendly name to use in the validation error text.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs.ToString">
            <summary>
            Return a string representation of the object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs.PropertyName">
            <summary>
            The name of the property to be validated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs.Description">
            <summary>
            Detailed description of why the rule was invalidated.  This should be set from the method handling the rule.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs.FriendlyName">
            <summary>
            Friendly name to use in the validation error text.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.MaxLengthRuleArgs.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="propertyName">Property to validate</param>
            <param name="friendlyName">Friendly name to use in the validation error text.</param>
            <param name="maxLength">Max length of the property</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.MaxLengthRuleArgs.#ctor(System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="propertyName">Property to validate</param>
            <param name="maxLength">Max length of the property</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.MaxLengthRuleArgs.ToString">
            <summary>
            Return a string representation of the object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.CommonRules.MaxLengthRuleArgs.MaxLength">
            <summary>
            Maximum length of the string property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Validation.CommonRules.MaxWordsRuleArgs">
            <summary>
            Summary description for MaxWordsRuleArgs.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.MaxWordsRuleArgs.#ctor(System.String,System.Int32)">
            <summary>
            Creates a new instance of the MaxWordsRuleArgs class.
            </summary>
            <param name="propertyName">The name of the property to be validated.</param>
            <param name="maxLength">Maximum number of words allowed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.MaxWordsRuleArgs.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Creates a new instance of the MaxWordsRuleArgs class.
            </summary>
            <param name="propertyName">The name of the property to be validated.</param>
            <param name="friendlyName">Friendly name to use in the validation error text.</param>
            <param name="maxLength">Maximum number of words allowed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.MaxWordsRuleArgs.ToString">
            <summary>
            Return a string representation of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.CommonRules.MaxWordsRuleArgs.MaxLength">
            <summary>
            Gets the value of the MaxLength property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Validation.CommonRules.RegexRuleArgs">
            <summary>
            Class used with the <see cref="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.RegexIsMatch(System.Object,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)"/>.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.RegexRuleArgs.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the RegexRuleArgs class.
            </summary>
            <param name="propertyName">Property to validate</param>
            <param name="friendlyName">Friendly name to use in the validation error text.</param>
            <param name="expression">The Regular expression that the property have to match</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.RegexRuleArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the RegexRuleArgs class.
            </summary>
            <param name="propertyName">Property to validate</param>
            <param name="expression">The Regular expression that the property have to match</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.RegexRuleArgs.ToString">
            <summary>
            Return a string representation of the object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.CommonRules.RegexRuleArgs.Expression">
            <summary>
            The Regular expression that the string have to match.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Validation.CommonRules.CompareType">
            <summary>
            Enum indicating the type of comparison that will be made.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Validation.CommonRules.CompareValueRuleArgs`1">
            <summary>
            Class used with the <see cref="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.CompareValues``1(System.Object,Nettiers.AdventureWorks.Entities.Validation.CommonRules.CompareValueRuleArgs{``0},Nettiers.AdventureWorks.Entities.Validation.CommonRules.CompareType)"/> rules.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.CompareValueRuleArgs`1.#ctor(System.String,`0)">
            <summary>
            Constructor
            </summary>
            <param name="propertyName">Name of the property to be validated.</param>
            <param name="compareValue">The value to be compared against the property.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.CompareValueRuleArgs`1.#ctor(System.String,System.String,`0)">
            <summary>
            Constructor
            </summary>
            <param name="propertyName">Name of the property to be validated.</param>
            <param name="friendlyName">Friendly name to use in the validation error text.</param>
            <param name="compareValue">The value to be compared against the property.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.CompareValueRuleArgs`1.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.CommonRules.CompareValueRuleArgs`1.CompareValue">
            <summary>
            Value to be compared against an object's property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Validation.CommonRules.Range`1">
            <summary>
            Class used to do a range comparison on a property.
            </summary>
            <typeparam name="T">Datatype of the property being validated.</typeparam>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.Range`1.#ctor(`0,`0)">
            <summary>
            Creates a new instance of the <see cref="T:Range"/> class.
            </summary>
            <param name="minValue">The minimum value of the property.</param>
            <param name="maxValue">The maximum value of the property.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.Range`1.Contains(`0)">
            <summary>
            Compares the specified value with the <see cref="P:Nettiers.AdventureWorks.Entities.Validation.CommonRules.Range`1.MinValue"/> and <see cref="P:Nettiers.AdventureWorks.Entities.Validation.CommonRules.Range`1.MaxValue"/>
            to determine if the value is within the range.
            </summary>
            <param name="value">The value to find within the current range</param>
            <returns>True if the value is within the range (inclusive); False otherwise.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.Range`1.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.CommonRules.Range`1.MinValue">
            <summary>
            The minimum value in the range.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.CommonRules.Range`1.MaxValue">
            <summary>
            The maximum value in the range.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Validation.CommonRules.RangeRuleArgs`1">
            <summary>
            Validation Rule Argument class
            </summary>
            <typeparam name="T">Datatype of the property being validated.</typeparam>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.RangeRuleArgs`1.#ctor(System.String,`0,`0)">
            <summary>
            Creates a new instance of the <see cref="T:RangeRuleArgs"/> class.
            </summary>
            <param name="propertyName">Name of the property to be validated.</param>
            <param name="minValue">The minimum value of the property.</param>
            <param name="maxValue">The maximum value of the property.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.RangeRuleArgs`1.#ctor(System.String,System.String,`0,`0)">
            <summary>
            Creates a new instance of the <see cref="T:RangeRuleArgs"/> class.
            </summary>
            <param name="propertyName">Name of the property to be validated.</param>
            <param name="friendlyName">Friendly name to use in the validation error text.</param>
            <param name="minValue">The minimum value of the property.</param>
            <param name="maxValue">The maximum value of the property.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.RangeRuleArgs`1.#ctor(System.String,Nettiers.AdventureWorks.Entities.Validation.CommonRules.Range{`0})">
            <summary>
            Creates a new instance of the <see cref="T:RangeRuleArgs"/> class.
            </summary>
            <param name="propertyName">Name of the property to be validated.</param>
            <param name="range"><see cref="T:Range"/> object containing the range of valid values for the property.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.RangeRuleArgs`1.#ctor(System.String,System.String,Nettiers.AdventureWorks.Entities.Validation.CommonRules.Range{`0})">
            <summary>
            Creates a new instance of the <see cref="T:RangeRuleArgs"/> class.
            </summary>
            <param name="propertyName">Name of the property to be validated.</param>
            <param name="friendlyName">Friendly name to use in the validation error text.</param>
            <param name="range"><see cref="T:Range"/> object containing the range of valid values for the property.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.CommonRules.RangeRuleArgs`1.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.CommonRules.RangeRuleArgs`1.Range">
            <summary>
            Returns the <see cref="T:Range{T}"/> object associated with this instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TestVariantBase">
            <summary>
             An object representation of the 'TestVariant' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TestVariantBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TestVariantBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TestVariantBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TestVariantBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TestVariantBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.TestVariantBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.#ctor(System.Object)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.TestVariantBase"/> instance.
            </summary>
            <param name="_variantField"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.CreateTestVariant(System.Object)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> instance.
            </summary>
            <param name="_variantField"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed TestVariant Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.Copy">
            <summary>
              Returns a Typed TestVariant Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.DeepCopy">
            <summary>
              Returns a Typed TestVariant Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.TestVariantColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.GetOriginalEntity">
            <summary>
              Returns a TestVariant Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.TestVariantBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.TestVariantBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.Equals(Nettiers.AdventureWorks.Entities.TestVariantBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.TestVariantBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.ValueEquals(Nettiers.AdventureWorks.Entities.TestVariantBase,Nettiers.AdventureWorks.Entities.TestVariantBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.TestVariantBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.TestVariantBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.TestVariantBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.TestVariantColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TestVariantBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TestVariantColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.TestVariantColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TestVariantBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TestVariantColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.TestVariantColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TestVariantBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TestVariantColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.TestVariantColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TestVariantBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TestVariantColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TestVariantBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TestVariantBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TestVariantBase.TestVariantId">
            <summary>
            	Gets or sets the TestVariantId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TestVariantBase.VariantField">
            <summary>
            	Gets or sets the VariantField property. 
            	
            </summary>
            <value>This type is sql_variant.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TestVariantBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TestVariantBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TestVariantBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TestVariantBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TestVariantBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TestVariantBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TestVariantBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TestVariantBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TestVariantBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TestVariantBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TestVariantBase.TestVariantEntityData">
            <summary>
            	The data structure representation of the 'TestVariant' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TestVariantBase.TestVariantEntityData.TestVariantId">
            <summary>			
            TestVariantId : 
            </summary>
            <remarks>Member of the primary key of the underlying table "TestVariant"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TestVariantBase.TestVariantEntityData.VariantField">
            <summary>
            VariantField : 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.TestVariantEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantBase.TestVariantEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TestVariantBase.TestVariantEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TestVariantEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantEventArgs.#ctor(Nettiers.AdventureWorks.Entities.TestVariantColumn)">
            <summary>
             Initalizes a new Instance of the TestVariantEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantEventArgs.#ctor(Nettiers.AdventureWorks.Entities.TestVariantColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the TestVariantEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TestVariantEventArgs.Column">
            <summary>
             The TestVariantColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.TestVariantColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TestVariantEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TestVariantEventHandler">
            <summary>
             Define a delegate for all TestVariant related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TestVariantComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TestVariantComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantComparer.#ctor(Nettiers.AdventureWorks.Entities.TestVariantColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:TestVariantComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantComparer.Equals(Nettiers.AdventureWorks.Entities.TestVariant,Nettiers.AdventureWorks.Entities.TestVariant)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> to compare.</param>
            <param name="b">The second <c>TestVariant</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantComparer.GetHashCode(Nettiers.AdventureWorks.Entities.TestVariant)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantComparer.Compare(Nettiers.AdventureWorks.Entities.TestVariant,Nettiers.AdventureWorks.Entities.TestVariant)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TestVariantComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TestVariantKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantKey.#ctor">
            <summary>
            Initializes a new instance of the TestVariantKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantKey.#ctor(Nettiers.AdventureWorks.Entities.TestVariantBase)">
            <summary>
            Initializes a new instance of the TestVariantKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the TestVariantKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariantKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TestVariantKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TestVariantKey.TestVariantId">
            <summary>
            Gets or sets the TestVariantId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TestVariantColumn">
            <summary>
            Enumerate the TestVariant columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TestVariantColumn.TestVariantId">
            <summary>
            TestVariantId : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TestVariantColumn.VariantField">
            <summary>
            VariantField : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IShipMethod">
            <summary>
            	The data structure representation of the 'ShipMethod' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IShipMethod.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShipMethod.ShipMethodId">
            <summary>			
            ShipMethodID : Primary key for ShipMethod records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ShipMethod"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShipMethod.Name">
            <summary>
            Name : Shipping company name.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShipMethod.ShipBase">
            <summary>
            ShipBase : Minimum shipping charge.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShipMethod.ShipRate">
            <summary>
            ShipRate : Shipping charge per pound.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShipMethod.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShipMethod.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShipMethod.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderShipMethodId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShipMethod.PurchaseOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _purchaseOrderHeaderShipMethodId
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IProductProductPhoto">
            <summary>
            	The data structure representation of the 'ProductProductPhoto' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IProductProductPhoto.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductProductPhoto.ProductId">
            <summary>			
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductProductPhoto"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductProductPhoto.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductProductPhoto.ProductPhotoId">
            <summary>			
            ProductPhotoID : Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductProductPhoto"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductProductPhoto.OriginalProductPhotoId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductProductPhoto.Primary">
            <summary>
            Primary : 0 = Photo is not the principal image. 1 = Photo is the principal image.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductProductPhoto.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IProductModelProductDescriptionCulture">
            <summary>
            	The data structure representation of the 'ProductModelProductDescriptionCulture' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IProductModelProductDescriptionCulture.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModelProductDescriptionCulture.ProductModelId">
            <summary>			
            ProductModelID : Primary key. Foreign key to ProductModel.ProductModelID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductModelProductDescriptionCulture"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModelProductDescriptionCulture.OriginalProductModelId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModelProductDescriptionCulture.ProductDescriptionId">
            <summary>			
            ProductDescriptionID : Primary key. Foreign key to ProductDescription.ProductDescriptionID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductModelProductDescriptionCulture"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModelProductDescriptionCulture.OriginalProductDescriptionId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModelProductDescriptionCulture.CultureId">
            <summary>			
            CultureID : Culture identification number. Foreign key to Culture.CultureID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductModelProductDescriptionCulture"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModelProductDescriptionCulture.OriginalCultureId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModelProductDescriptionCulture.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase">
            <summary>
             Cross-reference table mapping product descriptions and the language the description is written in.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.#ctor(System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase"/> instance.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.CreateProductModelProductDescriptionCulture(System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> instance.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ProductModelProductDescriptionCulture Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.Copy">
            <summary>
              Returns a Typed ProductModelProductDescriptionCulture Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.DeepCopy">
            <summary>
              Returns a Typed ProductModelProductDescriptionCulture Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.GetOriginalEntity">
            <summary>
              Returns a ProductModelProductDescriptionCulture Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.Equals(Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ValueEquals(Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase,Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelId">
            <summary>
            	Gets or sets the ProductModelId property. 
            	Primary key. Foreign key to ProductModel.ProductModelID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.OriginalProductModelId">
            <summary>
            	Get the original value of the ProductModelID property.
            	Primary key. Foreign key to ProductModel.ProductModelID.
            </summary>
            <remarks>This is the original value of the ProductModelID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductDescriptionId">
            <summary>
            	Gets or sets the ProductDescriptionId property. 
            	Primary key. Foreign key to ProductDescription.ProductDescriptionID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.OriginalProductDescriptionId">
            <summary>
            	Get the original value of the ProductDescriptionID property.
            	Primary key. Foreign key to ProductDescription.ProductDescriptionID.
            </summary>
            <remarks>This is the original value of the ProductDescriptionID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.CultureId">
            <summary>
            	Gets or sets the CultureId property. 
            	Culture identification number. Foreign key to Culture.CultureID.
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.OriginalCultureId">
            <summary>
            	Get the original value of the CultureID property.
            	Culture identification number. Foreign key to Culture.CultureID.
            </summary>
            <remarks>This is the original value of the CultureID property.</remarks>
            <value>This type is nchar</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.CultureIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/>.
            </summary>
            <value>The source Culture for CultureId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductDescriptionIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/>.
            </summary>
            <value>The source ProductDescription for ProductDescriptionId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/>.
            </summary>
            <value>The source ProductModel for ProductModelId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelProductDescriptionCultureEntityData">
            <summary>
            	The data structure representation of the 'ProductModelProductDescriptionCulture' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelProductDescriptionCultureEntityData.ProductModelId">
            <summary>			
            ProductModelID : Primary key. Foreign key to ProductModel.ProductModelID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductModelProductDescriptionCulture"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelProductDescriptionCultureEntityData.OriginalProductModelId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelProductDescriptionCultureEntityData.ProductDescriptionId">
            <summary>			
            ProductDescriptionID : Primary key. Foreign key to ProductDescription.ProductDescriptionID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductModelProductDescriptionCulture"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelProductDescriptionCultureEntityData.OriginalProductDescriptionId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelProductDescriptionCultureEntityData.CultureId">
            <summary>			
            CultureID : Culture identification number. Foreign key to Culture.CultureID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductModelProductDescriptionCulture"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelProductDescriptionCultureEntityData.OriginalCultureId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelProductDescriptionCultureEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelProductDescriptionCultureEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelProductDescriptionCultureEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelProductDescriptionCultureEntityData.CultureIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/>.
            </summary>
            <value>The source Culture for CultureId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelProductDescriptionCultureEntityData.ProductDescriptionIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/>.
            </summary>
            <value>The source ProductDescription for ProductDescriptionId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelProductDescriptionCultureEntityData.ProductModelIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/>.
            </summary>
            <value>The source ProductModel for ProductModelId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase.ProductModelProductDescriptionCultureEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn)">
            <summary>
             Initalizes a new Instance of the ProductModelProductDescriptionCultureEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ProductModelProductDescriptionCultureEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureEventArgs.Column">
            <summary>
             The ProductModelProductDescriptionCultureColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureEventHandler">
            <summary>
             Define a delegate for all ProductModelProductDescriptionCulture related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ProductModelProductDescriptionCultureComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureComparer.#ctor(Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductModelProductDescriptionCultureComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureComparer.Equals(Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture,Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> to compare.</param>
            <param name="b">The second <c>ProductModelProductDescriptionCulture</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureComparer.Compare(Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture,Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureKey.#ctor">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureKey.#ctor(Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureBase)">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureKey.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureKey.ProductModelId">
            <summary>
            Gets or sets the ProductModelId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureKey.ProductDescriptionId">
            <summary>
            Gets or sets the ProductDescriptionId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureKey.CultureId">
            <summary>
            Gets or sets the CultureId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn">
            <summary>
            Enumerate the ProductModelProductDescriptionCulture columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn.ProductModelId">
            <summary>
            ProductModelId : Primary key. Foreign key to ProductModel.ProductModelID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn.ProductDescriptionId">
            <summary>
            ProductDescriptionId : Primary key. Foreign key to ProductDescription.ProductDescriptionID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn.CultureId">
            <summary>
            CultureId : Culture identification number. Foreign key to Culture.CultureID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase">
            <summary>
             Employee department transfers.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IEmployeeDepartmentHistory">
            <summary>
            	The data structure representation of the 'EmployeeDepartmentHistory' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IEmployeeDepartmentHistory.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeDepartmentHistory.EmployeeId">
            <summary>			
            EmployeeID : Employee identification number. Foreign key to Employee.EmployeeID.
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeeDepartmentHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeDepartmentHistory.OriginalEmployeeId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeDepartmentHistory.StartDate">
            <summary>			
            StartDate : Date the employee started work in the department.
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeeDepartmentHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeDepartmentHistory.OriginalStartDate">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeDepartmentHistory.DepartmentId">
            <summary>			
            DepartmentID : Department in which the employee worked including currently. Foreign key to Department.DepartmentID.
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeeDepartmentHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeDepartmentHistory.OriginalDepartmentId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeDepartmentHistory.ShiftId">
            <summary>			
            ShiftID : Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeeDepartmentHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeDepartmentHistory.OriginalShiftId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeDepartmentHistory.EndDate">
            <summary>
            EndDate : Date the employee left the department. NULL = Current department.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeDepartmentHistory.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.#ctor(System.Int32,System.Int16,System.Byte,System.DateTime,System.Nullable{System.DateTime},System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase"/> instance.
            </summary>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.</param>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.</param>
            <param name="_startDate">Date the employee started work in the department.</param>
            <param name="_endDate">Date the employee left the department. NULL = Current department.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.CreateEmployeeDepartmentHistory(System.Int32,System.Int16,System.Byte,System.DateTime,System.Nullable{System.DateTime},System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> instance.
            </summary>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.</param>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.</param>
            <param name="_startDate">Date the employee started work in the department.</param>
            <param name="_endDate">Date the employee left the department. NULL = Current department.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed EmployeeDepartmentHistory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.Copy">
            <summary>
              Returns a Typed EmployeeDepartmentHistory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.DeepCopy">
            <summary>
              Returns a Typed EmployeeDepartmentHistory Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.GetOriginalEntity">
            <summary>
              Returns a EmployeeDepartmentHistory Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.Equals(Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.ValueEquals(Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase,Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeId">
            <summary>
            	Gets or sets the EmployeeId property. 
            	Employee identification number. Foreign key to Employee.EmployeeID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.OriginalEmployeeId">
            <summary>
            	Get the original value of the EmployeeID property.
            	Employee identification number. Foreign key to Employee.EmployeeID.
            </summary>
            <remarks>This is the original value of the EmployeeID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.DepartmentId">
            <summary>
            	Gets or sets the DepartmentId property. 
            	Department in which the employee worked including currently. Foreign key to Department.DepartmentID.
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.OriginalDepartmentId">
            <summary>
            	Get the original value of the DepartmentID property.
            	Department in which the employee worked including currently. Foreign key to Department.DepartmentID.
            </summary>
            <remarks>This is the original value of the DepartmentID property.</remarks>
            <value>This type is smallint</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.ShiftId">
            <summary>
            	Gets or sets the ShiftId property. 
            	Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.
            </summary>
            <value>This type is tinyint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.OriginalShiftId">
            <summary>
            	Get the original value of the ShiftID property.
            	Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.
            </summary>
            <remarks>This is the original value of the ShiftID property.</remarks>
            <value>This type is tinyint</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.StartDate">
            <summary>
            	Gets or sets the StartDate property. 
            	Date the employee started work in the department.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.OriginalStartDate">
            <summary>
            	Get the original value of the StartDate property.
            	Date the employee started work in the department.
            </summary>
            <remarks>This is the original value of the StartDate property.</remarks>
            <value>This type is datetime</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EndDate">
            <summary>
            	Gets or sets the EndDate property. 
            	Date the employee left the department. NULL = Current department.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsEndDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.DepartmentIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Department"/>.
            </summary>
            <value>The source Department for DepartmentId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/>.
            </summary>
            <value>The source Employee for EmployeeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.ShiftIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/>.
            </summary>
            <value>The source Shift for ShiftId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData">
            <summary>
            	The data structure representation of the 'EmployeeDepartmentHistory' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.EmployeeId">
            <summary>			
            EmployeeID : Employee identification number. Foreign key to Employee.EmployeeID.
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeeDepartmentHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.OriginalEmployeeId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.StartDate">
            <summary>			
            StartDate : Date the employee started work in the department.
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeeDepartmentHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.OriginalStartDate">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.DepartmentId">
            <summary>			
            DepartmentID : Department in which the employee worked including currently. Foreign key to Department.DepartmentID.
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeeDepartmentHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.OriginalDepartmentId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.ShiftId">
            <summary>			
            ShiftID : Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeeDepartmentHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.OriginalShiftId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.EndDate">
            <summary>
            EndDate : Date the employee left the department. NULL = Current department.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.DepartmentIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Department"/>.
            </summary>
            <value>The source Department for DepartmentId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.EmployeeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/>.
            </summary>
            <value>The source Employee for EmployeeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.ShiftIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/>.
            </summary>
            <value>The source Shift for ShiftId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase.EmployeeDepartmentHistoryEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn)">
            <summary>
             Initalizes a new Instance of the EmployeeDepartmentHistoryEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the EmployeeDepartmentHistoryEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryEventArgs.Column">
            <summary>
             The EmployeeDepartmentHistoryColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryEventHandler">
            <summary>
             Define a delegate for all EmployeeDepartmentHistory related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmployeeDepartmentHistoryComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryComparer.#ctor(Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EmployeeDepartmentHistoryComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryComparer.Equals(Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory,Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> to compare.</param>
            <param name="b">The second <c>EmployeeDepartmentHistory</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryComparer.GetHashCode(Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryComparer.Compare(Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory,Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryKey.#ctor">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryKey.#ctor(Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryBase)">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryKey.#ctor(System.Int32,System.DateTime,System.Int16,System.Byte)">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryKey.EmployeeId">
            <summary>
            Gets or sets the EmployeeId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryKey.StartDate">
            <summary>
            Gets or sets the StartDate property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryKey.DepartmentId">
            <summary>
            Gets or sets the DepartmentId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryKey.ShiftId">
            <summary>
            Gets or sets the ShiftId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn">
            <summary>
            Enumerate the EmployeeDepartmentHistory columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn.EmployeeId">
            <summary>
            EmployeeId : Employee identification number. Foreign key to Employee.EmployeeID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn.DepartmentId">
            <summary>
            DepartmentId : Department in which the employee worked including currently. Foreign key to Department.DepartmentID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn.ShiftId">
            <summary>
            ShiftId : Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn.StartDate">
            <summary>
            StartDate : Date the employee started work in the department.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn.EndDate">
            <summary>
            EndDate : Date the employee left the department. NULL = Current department.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ICountryRegionCurrency">
            <summary>
            	The data structure representation of the 'CountryRegionCurrency' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ICountryRegionCurrency.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICountryRegionCurrency.CountryRegionCode">
            <summary>			
            CountryRegionCode : ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.
            </summary>
            <remarks>Member of the primary key of the underlying table "CountryRegionCurrency"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICountryRegionCurrency.OriginalCountryRegionCode">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICountryRegionCurrency.CurrencyCode">
            <summary>			
            CurrencyCode : ISO standard currency code. Foreign key to Currency.CurrencyCode.
            </summary>
            <remarks>Member of the primary key of the underlying table "CountryRegionCurrency"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICountryRegionCurrency.OriginalCurrencyCode">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICountryRegionCurrency.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency">
            <summary>
             Cross-reference table mapping ISO currency codes to a country or region.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase">
            <summary>
             Cross-reference table mapping ISO currency codes to a country or region.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.#ctor(System.String,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase"/> instance.
            </summary>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CreateCountryRegionCurrency(System.String,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> instance.
            </summary>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed CountryRegionCurrency Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.Copy">
            <summary>
              Returns a Typed CountryRegionCurrency Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.DeepCopy">
            <summary>
              Returns a Typed CountryRegionCurrency Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.GetOriginalEntity">
            <summary>
              Returns a CountryRegionCurrency Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.Equals(Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.ValueEquals(Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase,Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CountryRegionCode">
            <summary>
            	Gets or sets the CountryRegionCode property. 
            	ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.OriginalCountryRegionCode">
            <summary>
            	Get the original value of the CountryRegionCode property.
            	ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.
            </summary>
            <remarks>This is the original value of the CountryRegionCode property.</remarks>
            <value>This type is nvarchar</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CurrencyCode">
            <summary>
            	Gets or sets the CurrencyCode property. 
            	ISO standard currency code. Foreign key to Currency.CurrencyCode.
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.OriginalCurrencyCode">
            <summary>
            	Get the original value of the CurrencyCode property.
            	ISO standard currency code. Foreign key to Currency.CurrencyCode.
            </summary>
            <remarks>This is the original value of the CurrencyCode property.</remarks>
            <value>This type is nchar</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CountryRegionCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/>.
            </summary>
            <value>The source CountryRegion for CountryRegionCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CurrencyCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/>.
            </summary>
            <value>The source Currency for CurrencyCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CountryRegionCurrencyEntityData">
            <summary>
            	The data structure representation of the 'CountryRegionCurrency' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CountryRegionCurrencyEntityData.CountryRegionCode">
            <summary>			
            CountryRegionCode : ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.
            </summary>
            <remarks>Member of the primary key of the underlying table "CountryRegionCurrency"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CountryRegionCurrencyEntityData.OriginalCountryRegionCode">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CountryRegionCurrencyEntityData.CurrencyCode">
            <summary>			
            CurrencyCode : ISO standard currency code. Foreign key to Currency.CurrencyCode.
            </summary>
            <remarks>Member of the primary key of the underlying table "CountryRegionCurrency"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CountryRegionCurrencyEntityData.OriginalCurrencyCode">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CountryRegionCurrencyEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CountryRegionCurrencyEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CountryRegionCurrencyEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CountryRegionCurrencyEntityData.CountryRegionCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/>.
            </summary>
            <value>The source CountryRegion for CountryRegionCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CountryRegionCurrencyEntityData.CurrencyCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/>.
            </summary>
            <value>The source Currency for CurrencyCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase.CountryRegionCurrencyEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrency.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ICountryRegion">
            <summary>
            	The data structure representation of the 'CountryRegion' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ICountryRegion.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICountryRegion.CountryRegionCode">
            <summary>			
            CountryRegionCode : ISO standard code for countries and regions.
            </summary>
            <remarks>Member of the primary key of the underlying table "CountryRegion"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICountryRegion.OriginalCountryRegionCode">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICountryRegion.Name">
            <summary>
            Name : Country or region name.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICountryRegion.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICountryRegion.StateProvinceCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _stateProvinceCountryRegionCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICountryRegion.CountryRegionCurrencyCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _countryRegionCurrencyCountryRegionCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICountryRegion.CurrencyCodeCurrencyCollection_From_CountryRegionCurrency">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table currencyCodeCurrencyCollectionFromCountryRegionCurrency
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Address">
            <summary>
             Street address information for customers, employees, and vendors.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressBase">
            <summary>
             Street address information for customers, employees, and vendors.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IAddress">
            <summary>
            	The data structure representation of the 'Address' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IAddress.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.AddressId">
            <summary>			
            AddressID : Primary key for Address records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Address"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.AddressLine1">
            <summary>
            AddressLine1 : First street address line.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.AddressLine2">
            <summary>
            AddressLine2 : Second street address line.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.City">
            <summary>
            City : Name of the city.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.StateProvinceId">
            <summary>
            StateProvinceID : Unique identification number for the state or province. Foreign key to StateProvince table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.PostalCode">
            <summary>
            PostalCode : Postal code for the street address.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.CustomerAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _customerAddressAddressId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.CustomerIdCustomerCollection_From_CustomerAddress">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table customerIdCustomerCollectionFromCustomerAddress
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.SalesOrderHeaderCollectionGetByBillToAddressId">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderShipToAddressIdGetByBillToAddressId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.EmployeeAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeeAddressAddressId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.SalesOrderHeaderCollectionGetByShipToAddressId">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderShipToAddressIdGetByShipToAddressId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.VendorIdVendorCollection_From_VendorAddress">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table vendorIdVendorCollectionFromVendorAddress
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.VendorAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _vendorAddressAddressId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddress.EmployeeIdEmployeeCollection_From_EmployeeAddress">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table employeeIdEmployeeCollectionFromEmployeeAddress
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.AddressBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.#ctor(System.String,System.String,System.String,System.Int32,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.AddressBase"/> instance.
            </summary>
            <param name="_addressLine1">First street address line.</param>
            <param name="_addressLine2">Second street address line.</param>
            <param name="_city">Name of the city.</param>
            <param name="_stateProvinceId">Unique identification number for the state or province. Foreign key to StateProvince table.</param>
            <param name="_postalCode">Postal code for the street address.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.CreateAddress(System.String,System.String,System.String,System.Int32,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> instance.
            </summary>
            <param name="_addressLine1">First street address line.</param>
            <param name="_addressLine2">Second street address line.</param>
            <param name="_city">Name of the city.</param>
            <param name="_stateProvinceId">Unique identification number for the state or province. Foreign key to StateProvince table.</param>
            <param name="_postalCode">Postal code for the street address.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Address Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.Copy">
            <summary>
              Returns a Typed Address Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.DeepCopy">
            <summary>
              Returns a Typed Address Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.AddressColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.GetOriginalEntity">
            <summary>
              Returns a Address Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.AddressBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.AddressBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.Equals(Nettiers.AdventureWorks.Entities.AddressBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.AddressBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.ValueEquals(Nettiers.AdventureWorks.Entities.AddressBase,Nettiers.AdventureWorks.Entities.AddressBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.AddressBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.AddressBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.AddressBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.AddressColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.AddressBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.AddressColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.AddressColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.AddressBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.AddressColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.AddressColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.AddressBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.AddressColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.AddressColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.AddressBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.AddressColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.AddressBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.AddressBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.AddressId">
            <summary>
            	Gets or sets the AddressId property. 
            	Primary key for Address records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.AddressLine1">
            <summary>
            	Gets or sets the AddressLine1 property. 
            	First street address line.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.AddressLine2">
            <summary>
            	Gets or sets the AddressLine2 property. 
            	Second street address line.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.City">
            <summary>
            	Gets or sets the City property. 
            	Name of the city.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.StateProvinceId">
            <summary>
            	Gets or sets the StateProvinceId property. 
            	Unique identification number for the state or province. Foreign key to StateProvince table.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.PostalCode">
            <summary>
            	Gets or sets the PostalCode property. 
            	Postal code for the street address.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.StateProvinceIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/>.
            </summary>
            <value>The source StateProvince for StateProvinceId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.CustomerAddressCollection">
            <summary>
            Holds a collection of CustomerAddress objects
            which are related to this object through the relation FK_CustomerAddress_Address_AddressID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.CustomerIdCustomerCollection_From_CustomerAddress">
            <summary>
            Holds a collection of CustomerFromCustomerAddress objects
            which are related to this object through the junction table CustomerAddress
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.SalesOrderHeaderCollectionGetByBillToAddressId">
            <summary>
            Holds a collection of SalesOrderHeader objects
            which are related to this object through the relation FK_SalesOrderHeader_Address_BillToAddressID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.EmployeeAddressCollection">
            <summary>
            Holds a collection of EmployeeAddress objects
            which are related to this object through the relation FK_EmployeeAddress_Address_AddressID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.SalesOrderHeaderCollectionGetByShipToAddressId">
            <summary>
            Holds a collection of SalesOrderHeader objects
            which are related to this object through the relation FK_SalesOrderHeader_Address_ShipToAddressID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.VendorIdVendorCollection_From_VendorAddress">
            <summary>
            Holds a collection of VendorFromVendorAddress objects
            which are related to this object through the junction table VendorAddress
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.VendorAddressCollection">
            <summary>
            Holds a collection of VendorAddress objects
            which are related to this object through the relation FK_VendorAddress_Address_AddressID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.EmployeeIdEmployeeCollection_From_EmployeeAddress">
            <summary>
            Holds a collection of EmployeeFromEmployeeAddress objects
            which are related to this object through the junction table EmployeeAddress
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.AddressBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.AddressBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData">
            <summary>
            	The data structure representation of the 'Address' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.AddressId">
            <summary>			
            AddressID : Primary key for Address records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Address"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.AddressLine1">
            <summary>
            AddressLine1 : First street address line.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.AddressLine2">
            <summary>
            AddressLine2 : Second street address line.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.City">
            <summary>
            City : Name of the city.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.StateProvinceId">
            <summary>
            StateProvinceID : Unique identification number for the state or province. Foreign key to StateProvince table.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.PostalCode">
            <summary>
            PostalCode : Postal code for the street address.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.StateProvinceIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/>.
            </summary>
            <value>The source StateProvince for StateProvinceId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.CustomerAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _customerAddressAddressId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.CustomerIdCustomerCollection_From_CustomerAddress">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table customerIdCustomerCollectionFromCustomerAddress
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.SalesOrderHeaderCollectionGetByBillToAddressId">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderShipToAddressIdGetByBillToAddressId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.EmployeeAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeeAddressAddressId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.SalesOrderHeaderCollectionGetByShipToAddressId">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderShipToAddressIdGetByShipToAddressId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.VendorIdVendorCollection_From_VendorAddress">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table vendorIdVendorCollectionFromVendorAddress
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.VendorAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _vendorAddressAddressId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.EmployeeIdEmployeeCollection_From_EmployeeAddress">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table employeeIdEmployeeCollectionFromEmployeeAddress
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressBase.AddressEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Address.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase">
            <summary>
             Individual customers (names and addresses) that purchase Adventure Works Cycles products online.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._customerId">
            <summary>
            CustomerID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._firstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._middleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._lastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._suffix">
            <summary>
            Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._phone">
            <summary>
            Phone : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._emailAddress">
            <summary>
            EmailAddress : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._emailPromotion">
            <summary>
            EmailPromotion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._addressType">
            <summary>
            AddressType : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._addressLine1">
            <summary>
            AddressLine1 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._addressLine2">
            <summary>
            AddressLine2 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._city">
            <summary>
            City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._stateProvinceName">
            <summary>
            StateProvinceName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._postalCode">
            <summary>
            PostalCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._countryRegionName">
            <summary>
            CountryRegionName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._demographics">
            <summary>
            Demographics : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase"/> instance.
            </summary>
            <param name="_customerId"></param>
            <param name="_title"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_suffix"></param>
            <param name="_phone"></param>
            <param name="_emailAddress"></param>
            <param name="_emailPromotion"></param>
            <param name="_addressType"></param>
            <param name="_addressLine1"></param>
            <param name="_addressLine2"></param>
            <param name="_city"></param>
            <param name="_stateProvinceName"></param>
            <param name="_postalCode"></param>
            <param name="_countryRegionName"></param>
            <param name="_demographics"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.CreateVIndividualCustomer(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomer"/> instance.
            </summary>
            <param name="_customerId"></param>
            <param name="_title"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_suffix"></param>
            <param name="_phone"></param>
            <param name="_emailAddress"></param>
            <param name="_emailPromotion"></param>
            <param name="_addressType"></param>
            <param name="_addressLine1"></param>
            <param name="_addressLine2"></param>
            <param name="_city"></param>
            <param name="_stateProvinceName"></param>
            <param name="_postalCode"></param>
            <param name="_countryRegionName"></param>
            <param name="_demographics"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.Copy">
            <summary>
              Returns a Typed VIndividualCustomerBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.Equals(Nettiers.AdventureWorks.Entities.VIndividualCustomerBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.Equals(Nettiers.AdventureWorks.Entities.VIndividualCustomerBase,Nettiers.AdventureWorks.Entities.VIndividualCustomerBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VIndividualCustomer,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.CustomerId">
            <summary>
            	Gets or Sets the CustomerID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.Title">
            <summary>
            	Gets or Sets the Title property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.FirstName">
            <summary>
            	Gets or Sets the FirstName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.MiddleName">
            <summary>
            	Gets or Sets the MiddleName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.LastName">
            <summary>
            	Gets or Sets the LastName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.Suffix">
            <summary>
            	Gets or Sets the Suffix property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.Phone">
            <summary>
            	Gets or Sets the Phone property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.EmailAddress">
            <summary>
            	Gets or Sets the EmailAddress property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.EmailPromotion">
            <summary>
            	Gets or Sets the EmailPromotion property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.AddressType">
            <summary>
            	Gets or Sets the AddressType property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.AddressLine1">
            <summary>
            	Gets or Sets the AddressLine1 property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.AddressLine2">
            <summary>
            	Gets or Sets the AddressLine2 property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.City">
            <summary>
            	Gets or Sets the City property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.StateProvinceName">
            <summary>
            	Gets or Sets the StateProvinceName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.PostalCode">
            <summary>
            	Gets or Sets the PostalCode property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.CountryRegionName">
            <summary>
            	Gets or Sets the CountryRegionName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.Demographics">
            <summary>
            	Gets or Sets the Demographics property. 
            	
            </summary>
            <value>This type is xml</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VIndividualCustomerBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn">
            <summary>
            Enumerate the VIndividualCustomer columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.CustomerId">
            <summary>
            CustomerID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.Title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.FirstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.MiddleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.LastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.Suffix">
            <summary>
            Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.Phone">
            <summary>
            Phone : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.EmailAddress">
            <summary>
            EmailAddress : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.EmailPromotion">
            <summary>
            EmailPromotion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.AddressType">
            <summary>
            AddressType : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.AddressLine1">
            <summary>
            AddressLine1 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.AddressLine2">
            <summary>
            AddressLine2 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.City">
            <summary>
            City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.StateProvinceName">
            <summary>
            StateProvinceName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.PostalCode">
            <summary>
            PostalCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.CountryRegionName">
            <summary>
            CountryRegionName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualCustomerColumn.Demographics">
            <summary>
            Demographics : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Validation.BrokenRulesList">
            <summary>
            A List of broken rules.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.BrokenRulesList.GetFirstBrokenRule(System.String)">
            <summary>
            Returns the firstRule <see cref="T:Nettiers.AdventureWorks.Entities.Validation.BrokenRule"/> object
            corresponding to the specified property.
            </summary>
            <param name="property">The name of the property affected by the rule.</param>
            <returns>
            The firstRule BrokenRule object corresponding to the specified property, or null if 
            there are no rules defined for the property.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.BrokenRulesList.#ctor">
            <summary>
            Internal contructor
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.BrokenRulesList.Add(Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo)">
            <summary>
            Add a broken rule to the list
            </summary>
            <param name="rule"><see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo"/> object containing the details about the rule.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.BrokenRulesList.Remove(Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo)">
            <summary>
            Removes a broken rule from the list
            </summary>
            <param name="rule"><see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo"/> object containing the details about the rule.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.BrokenRulesList.GetPropertyErrorDescriptions(System.String)">
            <summary>
            Returns a string containing all of the broken rule descriptions for the specified property.
            </summary>
            <param name="propertyName">The name of the property to get the errors for.</param>
            <returns>String of the error descriptions</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.BrokenRulesList.ToString">
            <summary>
            Returns the description of each broken rule separated by a new line.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorAddress">
            <summary>
             Cross-reference mapping vendors and addresses.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorAddressBase">
            <summary>
             Cross-reference mapping vendors and addresses.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IVendorAddress">
            <summary>
            	The data structure representation of the 'VendorAddress' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IVendorAddress.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendorAddress.VendorId">
            <summary>			
            VendorID : Primary key. Foreign key to Vendor.VendorID.
            </summary>
            <remarks>Member of the primary key of the underlying table "VendorAddress"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendorAddress.OriginalVendorId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendorAddress.AddressId">
            <summary>			
            AddressID : Primary key. Foreign key to Address.AddressID.
            </summary>
            <remarks>Member of the primary key of the underlying table "VendorAddress"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendorAddress.OriginalAddressId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendorAddress.AddressTypeId">
            <summary>
            AddressTypeID : Address type. Foreign key to AddressType.AddressTypeID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendorAddress.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorAddressBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorAddressBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorAddressBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorAddressBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorAddressBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddressBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.#ctor(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddressBase"/> instance.
            </summary>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.CreateVendorAddress(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> instance.
            </summary>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed VendorAddress Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.Copy">
            <summary>
              Returns a Typed VendorAddress Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.DeepCopy">
            <summary>
              Returns a Typed VendorAddress Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.VendorAddressColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.GetOriginalEntity">
            <summary>
              Returns a VendorAddress Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddressBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddressBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.Equals(Nettiers.AdventureWorks.Entities.VendorAddressBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddressBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.ValueEquals(Nettiers.AdventureWorks.Entities.VendorAddressBase,Nettiers.AdventureWorks.Entities.VendorAddressBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddressBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddressBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddressBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.VendorAddressColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.VendorAddressBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddressColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.VendorAddressColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.VendorAddressBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddressColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.VendorAddressColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.VendorAddressBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddressColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.VendorAddressColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.VendorAddressBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddressColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VendorAddressBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VendorAddressBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.VendorId">
            <summary>
            	Gets or sets the VendorId property. 
            	Primary key. Foreign key to Vendor.VendorID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.OriginalVendorId">
            <summary>
            	Get the original value of the VendorID property.
            	Primary key. Foreign key to Vendor.VendorID.
            </summary>
            <remarks>This is the original value of the VendorID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.AddressId">
            <summary>
            	Gets or sets the AddressId property. 
            	Primary key. Foreign key to Address.AddressID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.OriginalAddressId">
            <summary>
            	Get the original value of the AddressID property.
            	Primary key. Foreign key to Address.AddressID.
            </summary>
            <remarks>This is the original value of the AddressID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.AddressTypeId">
            <summary>
            	Gets or sets the AddressTypeId property. 
            	Address type. Foreign key to AddressType.AddressTypeID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.AddressIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Address"/>.
            </summary>
            <value>The source Address for AddressId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.AddressTypeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/>.
            </summary>
            <value>The source AddressType for AddressTypeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.VendorIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/>.
            </summary>
            <value>The source Vendor for VendorId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VendorAddressBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VendorAddressBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorAddressBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorAddressBase.VendorAddressEntityData">
            <summary>
            	The data structure representation of the 'VendorAddress' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorAddressBase.VendorAddressEntityData.VendorId">
            <summary>			
            VendorID : Primary key. Foreign key to Vendor.VendorID.
            </summary>
            <remarks>Member of the primary key of the underlying table "VendorAddress"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorAddressBase.VendorAddressEntityData.OriginalVendorId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorAddressBase.VendorAddressEntityData.AddressId">
            <summary>			
            AddressID : Primary key. Foreign key to Address.AddressID.
            </summary>
            <remarks>Member of the primary key of the underlying table "VendorAddress"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorAddressBase.VendorAddressEntityData.OriginalAddressId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorAddressBase.VendorAddressEntityData.AddressTypeId">
            <summary>
            AddressTypeID : Address type. Foreign key to AddressType.AddressTypeID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorAddressBase.VendorAddressEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.VendorAddressEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressBase.VendorAddressEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.VendorAddressEntityData.AddressIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Address"/>.
            </summary>
            <value>The source Address for AddressId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.VendorAddressEntityData.AddressTypeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/>.
            </summary>
            <value>The source AddressType for AddressTypeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.VendorAddressEntityData.VendorIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/>.
            </summary>
            <value>The source Vendor for VendorId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressBase.VendorAddressEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddress.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreContactBase">
            <summary>
             Cross-reference table mapping stores and their employees.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IStoreContact">
            <summary>
            	The data structure representation of the 'StoreContact' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IStoreContact.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStoreContact.CustomerId">
            <summary>			
            CustomerID : Store identification number. Foreign key to Customer.CustomerID.
            </summary>
            <remarks>Member of the primary key of the underlying table "StoreContact"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStoreContact.OriginalCustomerId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStoreContact.ContactId">
            <summary>			
            ContactID : Contact (store employee) identification number. Foreign key to Contact.ContactID.
            </summary>
            <remarks>Member of the primary key of the underlying table "StoreContact"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStoreContact.OriginalContactId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStoreContact.ContactTypeId">
            <summary>
            ContactTypeID : Contact type such as owner or purchasing agent. Foreign key to ContactType.ContactTypeID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStoreContact.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStoreContact.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.StoreContactBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.#ctor(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.StoreContactBase"/> instance.
            </summary>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="_contactTypeId">Contact type such as owner or purchasing agent. Foreign key to ContactType.ContactTypeID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.CreateStoreContact(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> instance.
            </summary>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="_contactTypeId">Contact type such as owner or purchasing agent. Foreign key to ContactType.ContactTypeID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed StoreContact Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.Copy">
            <summary>
              Returns a Typed StoreContact Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.DeepCopy">
            <summary>
              Returns a Typed StoreContact Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.StoreContactColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.GetOriginalEntity">
            <summary>
              Returns a StoreContact Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.StoreContactBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.StoreContactBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.Equals(Nettiers.AdventureWorks.Entities.StoreContactBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.StoreContactBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.ValueEquals(Nettiers.AdventureWorks.Entities.StoreContactBase,Nettiers.AdventureWorks.Entities.StoreContactBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.StoreContactBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.StoreContactBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.StoreContactBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.StoreContactColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.StoreContactBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.StoreContactColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.StoreContactColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.StoreContactBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.StoreContactColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.StoreContactColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.StoreContactBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.StoreContactColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.StoreContactColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.StoreContactBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.StoreContactColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.StoreContactBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.StoreContactBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.CustomerId">
            <summary>
            	Gets or sets the CustomerId property. 
            	Store identification number. Foreign key to Customer.CustomerID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.OriginalCustomerId">
            <summary>
            	Get the original value of the CustomerID property.
            	Store identification number. Foreign key to Customer.CustomerID.
            </summary>
            <remarks>This is the original value of the CustomerID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.ContactId">
            <summary>
            	Gets or sets the ContactId property. 
            	Contact (store employee) identification number. Foreign key to Contact.ContactID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.OriginalContactId">
            <summary>
            	Get the original value of the ContactID property.
            	Contact (store employee) identification number. Foreign key to Contact.ContactID.
            </summary>
            <remarks>This is the original value of the ContactID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.ContactTypeId">
            <summary>
            	Gets or sets the ContactTypeId property. 
            	Contact type such as owner or purchasing agent. Foreign key to ContactType.ContactTypeID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.ContactIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/>.
            </summary>
            <value>The source Contact for ContactId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.ContactTypeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/>.
            </summary>
            <value>The source ContactType for ContactTypeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.CustomerIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Store"/>.
            </summary>
            <value>The source Store for CustomerId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.StoreContactBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.StoreContactBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreContactBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreContactBase.StoreContactEntityData">
            <summary>
            	The data structure representation of the 'StoreContact' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactBase.StoreContactEntityData.CustomerId">
            <summary>			
            CustomerID : Store identification number. Foreign key to Customer.CustomerID.
            </summary>
            <remarks>Member of the primary key of the underlying table "StoreContact"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactBase.StoreContactEntityData.OriginalCustomerId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactBase.StoreContactEntityData.ContactId">
            <summary>			
            ContactID : Contact (store employee) identification number. Foreign key to Contact.ContactID.
            </summary>
            <remarks>Member of the primary key of the underlying table "StoreContact"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactBase.StoreContactEntityData.OriginalContactId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactBase.StoreContactEntityData.ContactTypeId">
            <summary>
            ContactTypeID : Contact type such as owner or purchasing agent. Foreign key to ContactType.ContactTypeID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactBase.StoreContactEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactBase.StoreContactEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.StoreContactEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactBase.StoreContactEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.StoreContactEntityData.ContactIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/>.
            </summary>
            <value>The source Contact for ContactId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.StoreContactEntityData.ContactTypeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/>.
            </summary>
            <value>The source ContactType for ContactTypeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.StoreContactEntityData.CustomerIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Store"/>.
            </summary>
            <value>The source Store for CustomerId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactBase.StoreContactEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreContactEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactEventArgs.#ctor(Nettiers.AdventureWorks.Entities.StoreContactColumn)">
            <summary>
             Initalizes a new Instance of the StoreContactEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactEventArgs.#ctor(Nettiers.AdventureWorks.Entities.StoreContactColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the StoreContactEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactEventArgs.Column">
            <summary>
             The StoreContactColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.StoreContactColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreContactEventHandler">
            <summary>
             Define a delegate for all StoreContact related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreContactComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StoreContactComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactComparer.#ctor(Nettiers.AdventureWorks.Entities.StoreContactColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:StoreContactComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactComparer.Equals(Nettiers.AdventureWorks.Entities.StoreContact,Nettiers.AdventureWorks.Entities.StoreContact)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> to compare.</param>
            <param name="b">The second <c>StoreContact</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactComparer.GetHashCode(Nettiers.AdventureWorks.Entities.StoreContact)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactComparer.Compare(Nettiers.AdventureWorks.Entities.StoreContact,Nettiers.AdventureWorks.Entities.StoreContact)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreContactKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactKey.#ctor">
            <summary>
            Initializes a new instance of the StoreContactKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactKey.#ctor(Nettiers.AdventureWorks.Entities.StoreContactBase)">
            <summary>
            Initializes a new instance of the StoreContactKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the StoreContactKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContactKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactKey.CustomerId">
            <summary>
            Gets or sets the CustomerId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreContactKey.ContactId">
            <summary>
            Gets or sets the ContactId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreContactColumn">
            <summary>
            Enumerate the StoreContact columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactColumn.CustomerId">
            <summary>
            CustomerId : Store identification number. Foreign key to Customer.CustomerID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactColumn.ContactId">
            <summary>
            ContactId : Contact (store employee) identification number. Foreign key to Contact.ContactID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactColumn.ContactTypeId">
            <summary>
            ContactTypeId : Contact type such as owner or purchasing agent. Foreign key to ContactType.ContactTypeID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreContactColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Shift">
            <summary>
             Work shift lookup table.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShiftBase">
            <summary>
             Work shift lookup table.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IShift">
            <summary>
            	The data structure representation of the 'Shift' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IShift.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShift.ShiftId">
            <summary>			
            ShiftID : Primary key for Shift records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Shift"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShift.Name">
            <summary>
            Name : Shift description.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShift.StartTime">
            <summary>
            StartTime : Shift start time.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShift.EndTime">
            <summary>
            EndTime : Shift end time.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShift.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShift.EmployeeDepartmentHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeeDepartmentHistoryShiftId
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShiftBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShiftBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShiftBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShiftBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShiftBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ShiftBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.#ctor(System.String,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ShiftBase"/> instance.
            </summary>
            <param name="_name">Shift description.</param>
            <param name="_startTime">Shift start time.</param>
            <param name="_endTime">Shift end time.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.CreateShift(System.String,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> instance.
            </summary>
            <param name="_name">Shift description.</param>
            <param name="_startTime">Shift start time.</param>
            <param name="_endTime">Shift end time.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Shift Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.Copy">
            <summary>
              Returns a Typed Shift Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.DeepCopy">
            <summary>
              Returns a Typed Shift Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ShiftColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.GetOriginalEntity">
            <summary>
              Returns a Shift Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ShiftBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ShiftBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.Equals(Nettiers.AdventureWorks.Entities.ShiftBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ShiftBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.ValueEquals(Nettiers.AdventureWorks.Entities.ShiftBase,Nettiers.AdventureWorks.Entities.ShiftBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ShiftBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ShiftBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ShiftBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ShiftColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ShiftBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ShiftColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ShiftColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ShiftBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ShiftColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ShiftColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ShiftBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ShiftColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ShiftColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ShiftBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ShiftColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ShiftBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ShiftBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftBase.ShiftId">
            <summary>
            	Gets or sets the ShiftId property. 
            	Primary key for Shift records.
            </summary>
            <value>This type is tinyint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Shift description.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftBase.StartTime">
            <summary>
            	Gets or sets the StartTime property. 
            	Shift start time.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftBase.EndTime">
            <summary>
            	Gets or sets the EndTime property. 
            	Shift end time.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftBase.EmployeeDepartmentHistoryCollection">
            <summary>
            Holds a collection of EmployeeDepartmentHistory objects
            which are related to this object through the relation FK_EmployeeDepartmentHistory_Shift_ShiftID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ShiftBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ShiftBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShiftBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShiftBase.ShiftEntityData">
            <summary>
            	The data structure representation of the 'Shift' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShiftBase.ShiftEntityData.ShiftId">
            <summary>			
            ShiftID : Primary key for Shift records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Shift"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShiftBase.ShiftEntityData.Name">
            <summary>
            Name : Shift description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShiftBase.ShiftEntityData.StartTime">
            <summary>
            StartTime : Shift start time.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShiftBase.ShiftEntityData.EndTime">
            <summary>
            EndTime : Shift end time.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShiftBase.ShiftEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.ShiftEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftBase.ShiftEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftBase.ShiftEntityData.EmployeeDepartmentHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeeDepartmentHistoryShiftId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftBase.ShiftEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Shift.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritory">
            <summary>
             Sales territory lookup table.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryBase">
            <summary>
             Sales territory lookup table.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ISalesTerritory">
            <summary>
            	The data structure representation of the 'SalesTerritory' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ISalesTerritory.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritory.TerritoryId">
            <summary>			
            TerritoryID : Primary key for SalesTerritory records.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesTerritory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritory.Name">
            <summary>
            Name : Sales territory description
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritory.CountryRegionCode">
            <summary>
            CountryRegionCode : ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. 
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritory.Group">
            <summary>
            Group : Geographic area to which the sales territory belong.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritory.SalesYtd">
            <summary>
            SalesYTD : Sales in the territory year to date.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritory.SalesLastYear">
            <summary>
            SalesLastYear : Sales in the territory the previous year.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritory.CostYtd">
            <summary>
            CostYTD : Business costs in the territory year to date.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritory.CostLastYear">
            <summary>
            CostLastYear : Business costs in the territory the previous year.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritory.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritory.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritory.StateProvinceCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _stateProvinceTerritoryId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritory.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderTerritoryId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritory.SalesPersonCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesPersonTerritoryId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritory.SalesTerritoryHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesTerritoryHistoryTerritoryId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritory.CustomerCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _customerTerritoryId
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.#ctor(System.String,System.String,System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryBase"/> instance.
            </summary>
            <param name="_name">Sales territory description</param>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <param name="_group">Geographic area to which the sales territory belong.</param>
            <param name="_salesYtd">Sales in the territory year to date.</param>
            <param name="_salesLastYear">Sales in the territory the previous year.</param>
            <param name="_costYtd">Business costs in the territory year to date.</param>
            <param name="_costLastYear">Business costs in the territory the previous year.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.CreateSalesTerritory(System.String,System.String,System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> instance.
            </summary>
            <param name="_name">Sales territory description</param>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <param name="_group">Geographic area to which the sales territory belong.</param>
            <param name="_salesYtd">Sales in the territory year to date.</param>
            <param name="_salesLastYear">Sales in the territory the previous year.</param>
            <param name="_costYtd">Business costs in the territory year to date.</param>
            <param name="_costLastYear">Business costs in the territory the previous year.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed SalesTerritory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.Copy">
            <summary>
              Returns a Typed SalesTerritory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.DeepCopy">
            <summary>
              Returns a Typed SalesTerritory Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.SalesTerritoryColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.GetOriginalEntity">
            <summary>
              Returns a SalesTerritory Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.Equals(Nettiers.AdventureWorks.Entities.SalesTerritoryBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.ValueEquals(Nettiers.AdventureWorks.Entities.SalesTerritoryBase,Nettiers.AdventureWorks.Entities.SalesTerritoryBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesTerritoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesTerritoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesTerritoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesTerritoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.TerritoryId">
            <summary>
            	Gets or sets the TerritoryId property. 
            	Primary key for SalesTerritory records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Sales territory description
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.CountryRegionCode">
            <summary>
            	Gets or sets the CountryRegionCode property. 
            	ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. 
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.Group">
            <summary>
            	Gets or sets the Group property. 
            	Geographic area to which the sales territory belong.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesYtd">
            <summary>
            	Gets or sets the SalesYtd property. 
            	Sales in the territory year to date.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesLastYear">
            <summary>
            	Gets or sets the SalesLastYear property. 
            	Sales in the territory the previous year.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.CostYtd">
            <summary>
            	Gets or sets the CostYtd property. 
            	Business costs in the territory year to date.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.CostLastYear">
            <summary>
            	Gets or sets the CostLastYear property. 
            	Business costs in the territory the previous year.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.StateProvinceCollection">
            <summary>
            Holds a collection of StateProvince objects
            which are related to this object through the relation FK_StateProvince_SalesTerritory_TerritoryID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of SalesOrderHeader objects
            which are related to this object through the relation FK_SalesOrderHeader_SalesTerritory_TerritoryID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesPersonCollection">
            <summary>
            Holds a collection of SalesPerson objects
            which are related to this object through the relation FK_SalesPerson_SalesTerritory_TerritoryID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryHistoryCollection">
            <summary>
            Holds a collection of SalesTerritoryHistory objects
            which are related to this object through the relation FK_SalesTerritoryHistory_SalesTerritory_TerritoryID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.CustomerCollection">
            <summary>
            Holds a collection of Customer objects
            which are related to this object through the relation FK_Customer_SalesTerritory_TerritoryID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData">
            <summary>
            	The data structure representation of the 'SalesTerritory' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.TerritoryId">
            <summary>			
            TerritoryID : Primary key for SalesTerritory records.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesTerritory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.Name">
            <summary>
            Name : Sales territory description
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.CountryRegionCode">
            <summary>
            CountryRegionCode : ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.Group">
            <summary>
            Group : Geographic area to which the sales territory belong.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.SalesYtd">
            <summary>
            SalesYTD : Sales in the territory year to date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.SalesLastYear">
            <summary>
            SalesLastYear : Sales in the territory the previous year.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.CostYtd">
            <summary>
            CostYTD : Business costs in the territory year to date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.CostLastYear">
            <summary>
            CostLastYear : Business costs in the territory the previous year.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.StateProvinceCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _stateProvinceTerritoryId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderTerritoryId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.SalesPersonCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesPersonTerritoryId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.SalesTerritoryHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesTerritoryHistoryTerritoryId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.CustomerCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _customerTerritoryId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryBase.SalesTerritoryEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritory.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason">
            <summary>
             Cross-reference table mapping sales orders to sales reason codes.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase">
            <summary>
             Cross-reference table mapping sales orders to sales reason codes.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ISalesOrderHeaderSalesReason">
            <summary>
            	The data structure representation of the 'SalesOrderHeaderSalesReason' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ISalesOrderHeaderSalesReason.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeaderSalesReason.SalesOrderId">
            <summary>			
            SalesOrderID : Primary key. Foreign key to SalesOrderHeader.SalesOrderID.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesOrderHeaderSalesReason"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeaderSalesReason.OriginalSalesOrderId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeaderSalesReason.SalesReasonId">
            <summary>			
            SalesReasonID : Primary key. Foreign key to SalesReason.SalesReasonID.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesOrderHeaderSalesReason"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeaderSalesReason.OriginalSalesReasonId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeaderSalesReason.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.#ctor(System.Int32,System.Int32,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase"/> instance.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.CreateSalesOrderHeaderSalesReason(System.Int32,System.Int32,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> instance.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed SalesOrderHeaderSalesReason Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.Copy">
            <summary>
              Returns a Typed SalesOrderHeaderSalesReason Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.DeepCopy">
            <summary>
              Returns a Typed SalesOrderHeaderSalesReason Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.GetOriginalEntity">
            <summary>
              Returns a SalesOrderHeaderSalesReason Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.Equals(Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.ValueEquals(Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase,Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.SalesOrderId">
            <summary>
            	Gets or sets the SalesOrderId property. 
            	Primary key. Foreign key to SalesOrderHeader.SalesOrderID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.OriginalSalesOrderId">
            <summary>
            	Get the original value of the SalesOrderID property.
            	Primary key. Foreign key to SalesOrderHeader.SalesOrderID.
            </summary>
            <remarks>This is the original value of the SalesOrderID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.SalesReasonId">
            <summary>
            	Gets or sets the SalesReasonId property. 
            	Primary key. Foreign key to SalesReason.SalesReasonID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.OriginalSalesReasonId">
            <summary>
            	Get the original value of the SalesReasonID property.
            	Primary key. Foreign key to SalesReason.SalesReasonID.
            </summary>
            <remarks>This is the original value of the SalesReasonID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.SalesOrderIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/>.
            </summary>
            <value>The source SalesOrderHeader for SalesOrderId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.SalesReasonIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/>.
            </summary>
            <value>The source SalesReason for SalesReasonId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.SalesOrderHeaderSalesReasonEntityData">
            <summary>
            	The data structure representation of the 'SalesOrderHeaderSalesReason' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.SalesOrderHeaderSalesReasonEntityData.SalesOrderId">
            <summary>			
            SalesOrderID : Primary key. Foreign key to SalesOrderHeader.SalesOrderID.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesOrderHeaderSalesReason"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.SalesOrderHeaderSalesReasonEntityData.OriginalSalesOrderId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.SalesOrderHeaderSalesReasonEntityData.SalesReasonId">
            <summary>			
            SalesReasonID : Primary key. Foreign key to SalesReason.SalesReasonID.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesOrderHeaderSalesReason"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.SalesOrderHeaderSalesReasonEntityData.OriginalSalesReasonId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.SalesOrderHeaderSalesReasonEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.SalesOrderHeaderSalesReasonEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.SalesOrderHeaderSalesReasonEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.SalesOrderHeaderSalesReasonEntityData.SalesOrderIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/>.
            </summary>
            <value>The source SalesOrderHeader for SalesOrderId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.SalesOrderHeaderSalesReasonEntityData.SalesReasonIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/>.
            </summary>
            <value>The source SalesReason for SalesReasonId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase.SalesOrderHeaderSalesReasonEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader">
            <summary>
             General sales order information.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase">
            <summary>
             General sales order information.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ISalesOrderHeader">
            <summary>
            	The data structure representation of the 'SalesOrderHeader' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.SalesOrderId">
            <summary>			
            SalesOrderID : Primary key.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesOrderHeader"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.RevisionNumber">
            <summary>
            RevisionNumber : Incremental number to track changes to the sales order over time.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.OrderDate">
            <summary>
            OrderDate : Dates the sales order was created.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.DueDate">
            <summary>
            DueDate : Date the order is due to the customer.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.ShipDate">
            <summary>
            ShipDate : Date the order was shipped to the customer.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.Status">
            <summary>
            Status : Order current status. 1 = In process; 2 = Approved; 3 = Backordered; 4 = Rejected; 5 = Shipped; 6 = Cancelled
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.OnlineOrderFlag">
            <summary>
            OnlineOrderFlag : 0 = Order placed by sales person. 1 = Order placed online by customer.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.SalesOrderNumber">
            <summary>
            SalesOrderNumber : Unique sales order identification number.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.PurchaseOrderNumber">
            <summary>
            PurchaseOrderNumber : Customer purchase order number reference. 
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.AccountNumber">
            <summary>
            AccountNumber : Financial accounting number reference.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.CustomerId">
            <summary>
            CustomerID : Customer identification number. Foreign key to Customer.CustomerID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.ContactId">
            <summary>
            ContactID : Customer contact identification number. Foreign key to Contact.ContactID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.SalesPersonId">
            <summary>
            SalesPersonID : Sales person who created the sales order. Foreign key to SalesPerson.SalePersonID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.TerritoryId">
            <summary>
            TerritoryID : Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.BillToAddressId">
            <summary>
            BillToAddressID : Customer billing address. Foreign key to Address.AddressID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.ShipToAddressId">
            <summary>
            ShipToAddressID : Customer shipping address. Foreign key to Address.AddressID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.ShipMethodId">
            <summary>
            ShipMethodID : Shipping method. Foreign key to ShipMethod.ShipMethodID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.CreditCardId">
            <summary>
            CreditCardID : Credit card identification number. Foreign key to CreditCard.CreditCardID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.CreditCardApprovalCode">
            <summary>
            CreditCardApprovalCode : Approval code provided by the credit card company.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.CurrencyRateId">
            <summary>
            CurrencyRateID : Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.SubTotal">
            <summary>
            SubTotal : Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal)for the appropriate SalesOrderID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.TaxAmt">
            <summary>
            TaxAmt : Tax amount.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.Freight">
            <summary>
            Freight : Shipping cost.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.TotalDue">
            <summary>
            TotalDue : Total due from customer. Computed as Subtotal + TaxAmt + Freight.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.Comment">
            <summary>
            Comment : Sales representative comments.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.SalesOrderHeaderSalesReasonCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderSalesReasonSalesOrderId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.SalesOrderDetailCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderDetailSalesOrderId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderHeader.SalesReasonIdSalesReasonCollection_From_SalesOrderHeaderSalesReason">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table salesReasonIdSalesReasonCollectionFromSalesOrderHeaderSalesReason
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.#ctor(System.Byte,System.DateTime,System.DateTime,System.Nullable{System.DateTime},System.Byte,System.Boolean,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Decimal,System.Decimal,System.Decimal,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase"/> instance.
            </summary>
            <param name="_revisionNumber">Incremental number to track changes to the sales order over time.</param>
            <param name="_orderDate">Dates the sales order was created.</param>
            <param name="_dueDate">Date the order is due to the customer.</param>
            <param name="_shipDate">Date the order was shipped to the customer.</param>
            <param name="_status">Order current status. 1 = In process; 2 = Approved; 3 = Backordered; 4 = Rejected; 5 = Shipped; 6 = Cancelled</param>
            <param name="_onlineOrderFlag">0 = Order placed by sales person. 1 = Order placed online by customer.</param>
            <param name="_purchaseOrderNumber">Customer purchase order number reference. </param>
            <param name="_accountNumber">Financial accounting number reference.</param>
            <param name="_customerId">Customer identification number. Foreign key to Customer.CustomerID.</param>
            <param name="_contactId">Customer contact identification number. Foreign key to Contact.ContactID.</param>
            <param name="_salesPersonId">Sales person who created the sales order. Foreign key to SalesPerson.SalePersonID.</param>
            <param name="_territoryId">Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="_billToAddressId">Customer billing address. Foreign key to Address.AddressID.</param>
            <param name="_shipToAddressId">Customer shipping address. Foreign key to Address.AddressID.</param>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="_creditCardApprovalCode">Approval code provided by the credit card company.</param>
            <param name="_currencyRateId">Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.</param>
            <param name="_subTotal">Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal)for the appropriate SalesOrderID.</param>
            <param name="_taxAmt">Tax amount.</param>
            <param name="_freight">Shipping cost.</param>
            <param name="_comment">Sales representative comments.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.CreateSalesOrderHeader(System.Byte,System.DateTime,System.DateTime,System.Nullable{System.DateTime},System.Byte,System.Boolean,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Decimal,System.Decimal,System.Decimal,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> instance.
            </summary>
            <param name="_revisionNumber">Incremental number to track changes to the sales order over time.</param>
            <param name="_orderDate">Dates the sales order was created.</param>
            <param name="_dueDate">Date the order is due to the customer.</param>
            <param name="_shipDate">Date the order was shipped to the customer.</param>
            <param name="_status">Order current status. 1 = In process; 2 = Approved; 3 = Backordered; 4 = Rejected; 5 = Shipped; 6 = Cancelled</param>
            <param name="_onlineOrderFlag">0 = Order placed by sales person. 1 = Order placed online by customer.</param>
            <param name="_purchaseOrderNumber">Customer purchase order number reference. </param>
            <param name="_accountNumber">Financial accounting number reference.</param>
            <param name="_customerId">Customer identification number. Foreign key to Customer.CustomerID.</param>
            <param name="_contactId">Customer contact identification number. Foreign key to Contact.ContactID.</param>
            <param name="_salesPersonId">Sales person who created the sales order. Foreign key to SalesPerson.SalePersonID.</param>
            <param name="_territoryId">Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="_billToAddressId">Customer billing address. Foreign key to Address.AddressID.</param>
            <param name="_shipToAddressId">Customer shipping address. Foreign key to Address.AddressID.</param>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="_creditCardApprovalCode">Approval code provided by the credit card company.</param>
            <param name="_currencyRateId">Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.</param>
            <param name="_subTotal">Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal)for the appropriate SalesOrderID.</param>
            <param name="_taxAmt">Tax amount.</param>
            <param name="_freight">Shipping cost.</param>
            <param name="_comment">Sales representative comments.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed SalesOrderHeader Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.Copy">
            <summary>
              Returns a Typed SalesOrderHeader Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.DeepCopy">
            <summary>
              Returns a Typed SalesOrderHeader Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.GetOriginalEntity">
            <summary>
              Returns a SalesOrderHeader Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.Equals(Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ValueEquals(Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase,Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderId">
            <summary>
            	Gets or sets the SalesOrderId property. 
            	Primary key.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.RevisionNumber">
            <summary>
            	Gets or sets the RevisionNumber property. 
            	Incremental number to track changes to the sales order over time.
            </summary>
            <value>This type is tinyint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.OrderDate">
            <summary>
            	Gets or sets the OrderDate property. 
            	Dates the sales order was created.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.DueDate">
            <summary>
            	Gets or sets the DueDate property. 
            	Date the order is due to the customer.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ShipDate">
            <summary>
            	Gets or sets the ShipDate property. 
            	Date the order was shipped to the customer.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsShipDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	Order current status. 1 = In process; 2 = Approved; 3 = Backordered; 4 = Rejected; 5 = Shipped; 6 = Cancelled
            </summary>
            <value>This type is tinyint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.OnlineOrderFlag">
            <summary>
            	Gets or sets the OnlineOrderFlag property. 
            	0 = Order placed by sales person. 1 = Order placed online by customer.
            </summary>
            <value>This type is bit.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderNumber">
            <summary>
            	Gets or sets the SalesOrderNumber property. 
            	Unique sales order identification number.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.PurchaseOrderNumber">
            <summary>
            	Gets or sets the PurchaseOrderNumber property. 
            	Customer purchase order number reference. 
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.AccountNumber">
            <summary>
            	Gets or sets the AccountNumber property. 
            	Financial accounting number reference.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.CustomerId">
            <summary>
            	Gets or sets the CustomerId property. 
            	Customer identification number. Foreign key to Customer.CustomerID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ContactId">
            <summary>
            	Gets or sets the ContactId property. 
            	Customer contact identification number. Foreign key to Contact.ContactID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesPersonId">
            <summary>
            	Gets or sets the SalesPersonId property. 
            	Sales person who created the sales order. Foreign key to SalesPerson.SalePersonID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsSalesPersonIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.TerritoryId">
            <summary>
            	Gets or sets the TerritoryId property. 
            	Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsTerritoryIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.BillToAddressId">
            <summary>
            	Gets or sets the BillToAddressId property. 
            	Customer billing address. Foreign key to Address.AddressID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ShipToAddressId">
            <summary>
            	Gets or sets the ShipToAddressId property. 
            	Customer shipping address. Foreign key to Address.AddressID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ShipMethodId">
            <summary>
            	Gets or sets the ShipMethodId property. 
            	Shipping method. Foreign key to ShipMethod.ShipMethodID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.CreditCardId">
            <summary>
            	Gets or sets the CreditCardId property. 
            	Credit card identification number. Foreign key to CreditCard.CreditCardID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCreditCardIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.CreditCardApprovalCode">
            <summary>
            	Gets or sets the CreditCardApprovalCode property. 
            	Approval code provided by the credit card company.
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.CurrencyRateId">
            <summary>
            	Gets or sets the CurrencyRateId property. 
            	Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCurrencyRateIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SubTotal">
            <summary>
            	Gets or sets the SubTotal property. 
            	Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal)for the appropriate SalesOrderID.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.TaxAmt">
            <summary>
            	Gets or sets the TaxAmt property. 
            	Tax amount.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.Freight">
            <summary>
            	Gets or sets the Freight property. 
            	Shipping cost.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.TotalDue">
            <summary>
            	Gets or sets the TotalDue property. 
            	Total due from customer. Computed as Subtotal + TaxAmt + Freight.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.Comment">
            <summary>
            	Gets or sets the Comment property. 
            	Sales representative comments.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.BillToAddressIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Address"/>.
            </summary>
            <value>The source Address for BillToAddressId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ShipToAddressIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Address"/>.
            </summary>
            <value>The source Address for ShipToAddressId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ContactIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/>.
            </summary>
            <value>The source Contact for ContactId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.CreditCardIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/>.
            </summary>
            <value>The source CreditCard for CreditCardId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.CurrencyRateIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/>.
            </summary>
            <value>The source CurrencyRate for CurrencyRateId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.CustomerIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/>.
            </summary>
            <value>The source Customer for CustomerId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesPersonIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/>.
            </summary>
            <value>The source SalesPerson for SalesPersonId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.TerritoryIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/>.
            </summary>
            <value>The source SalesTerritory for TerritoryId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ShipMethodIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/>.
            </summary>
            <value>The source ShipMethod for ShipMethodId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderSalesReasonCollection">
            <summary>
            Holds a collection of SalesOrderHeaderSalesReason objects
            which are related to this object through the relation FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderDetailCollection">
            <summary>
            Holds a collection of SalesOrderDetail objects
            which are related to this object through the relation FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesReasonIdSalesReasonCollection_From_SalesOrderHeaderSalesReason">
            <summary>
            Holds a collection of SalesReasonFromSalesOrderHeaderSalesReason objects
            which are related to this object through the junction table SalesOrderHeaderSalesReason
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData">
            <summary>
            	The data structure representation of the 'SalesOrderHeader' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.SalesOrderId">
            <summary>			
            SalesOrderID : Primary key.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesOrderHeader"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.RevisionNumber">
            <summary>
            RevisionNumber : Incremental number to track changes to the sales order over time.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.OrderDate">
            <summary>
            OrderDate : Dates the sales order was created.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.DueDate">
            <summary>
            DueDate : Date the order is due to the customer.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.ShipDate">
            <summary>
            ShipDate : Date the order was shipped to the customer.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.Status">
            <summary>
            Status : Order current status. 1 = In process; 2 = Approved; 3 = Backordered; 4 = Rejected; 5 = Shipped; 6 = Cancelled
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.OnlineOrderFlag">
            <summary>
            OnlineOrderFlag : 0 = Order placed by sales person. 1 = Order placed online by customer.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.SalesOrderNumber">
            <summary>
            SalesOrderNumber : Unique sales order identification number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.PurchaseOrderNumber">
            <summary>
            PurchaseOrderNumber : Customer purchase order number reference. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.AccountNumber">
            <summary>
            AccountNumber : Financial accounting number reference.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.CustomerId">
            <summary>
            CustomerID : Customer identification number. Foreign key to Customer.CustomerID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.ContactId">
            <summary>
            ContactID : Customer contact identification number. Foreign key to Contact.ContactID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.SalesPersonId">
            <summary>
            SalesPersonID : Sales person who created the sales order. Foreign key to SalesPerson.SalePersonID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.TerritoryId">
            <summary>
            TerritoryID : Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.BillToAddressId">
            <summary>
            BillToAddressID : Customer billing address. Foreign key to Address.AddressID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.ShipToAddressId">
            <summary>
            ShipToAddressID : Customer shipping address. Foreign key to Address.AddressID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.ShipMethodId">
            <summary>
            ShipMethodID : Shipping method. Foreign key to ShipMethod.ShipMethodID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.CreditCardId">
            <summary>
            CreditCardID : Credit card identification number. Foreign key to CreditCard.CreditCardID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.CreditCardApprovalCode">
            <summary>
            CreditCardApprovalCode : Approval code provided by the credit card company.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.CurrencyRateId">
            <summary>
            CurrencyRateID : Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.SubTotal">
            <summary>
            SubTotal : Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal)for the appropriate SalesOrderID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.TaxAmt">
            <summary>
            TaxAmt : Tax amount.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.Freight">
            <summary>
            Freight : Shipping cost.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.TotalDue">
            <summary>
            TotalDue : Total due from customer. Computed as Subtotal + TaxAmt + Freight.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.Comment">
            <summary>
            Comment : Sales representative comments.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.BillToAddressIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Address"/>.
            </summary>
            <value>The source Address for BillToAddressId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.ShipToAddressIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Address"/>.
            </summary>
            <value>The source Address for ShipToAddressId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.ContactIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/>.
            </summary>
            <value>The source Contact for ContactId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.CreditCardIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/>.
            </summary>
            <value>The source CreditCard for CreditCardId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.CurrencyRateIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/>.
            </summary>
            <value>The source CurrencyRate for CurrencyRateId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.CustomerIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/>.
            </summary>
            <value>The source Customer for CustomerId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.SalesPersonIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/>.
            </summary>
            <value>The source SalesPerson for SalesPersonId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.TerritoryIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/>.
            </summary>
            <value>The source SalesTerritory for TerritoryId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.ShipMethodIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/>.
            </summary>
            <value>The source ShipMethod for ShipMethodId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.SalesOrderHeaderSalesReasonCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderSalesReasonSalesOrderId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.SalesOrderDetailCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderDetailSalesOrderId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.SalesReasonIdSalesReasonCollection_From_SalesOrderHeaderSalesReason">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table salesReasonIdSalesReasonCollectionFromSalesOrderHeaderSalesReason
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase.SalesOrderHeaderEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeader.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IProductReview">
            <summary>
            	The data structure representation of the 'ProductReview' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IProductReview.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductReview.ProductReviewId">
            <summary>			
            ProductReviewID : Primary key for ProductReview records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductReview"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductReview.ProductId">
            <summary>
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductReview.ReviewerName">
            <summary>
            ReviewerName : Name of the reviewer.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductReview.ReviewDate">
            <summary>
            ReviewDate : Date review was submitted.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductReview.EmailAddress">
            <summary>
            EmailAddress : Reviewer's e-mail address.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductReview.Rating">
            <summary>
            Rating : Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductReview.Comments">
            <summary>
            Comments : Reviewer's comments
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductReview.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDescriptionBase">
            <summary>
             Product descriptions in several languages.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IProductDescription">
            <summary>
            	The data structure representation of the 'ProductDescription' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IProductDescription.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductDescription.ProductDescriptionId">
            <summary>			
            ProductDescriptionID : Primary key for ProductDescription records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductDescription"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductDescription.Description">
            <summary>
            Description : Description of the product.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductDescription.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductDescription.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductDescription.ProductModelProductDescriptionCultureCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productModelProductDescriptionCultureProductDescriptionId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductDescription.ProductModelIdProductModelCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productModelIdProductModelCollectionFromProductModelProductDescriptionCulture
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductDescription.CultureIdCultureCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table cultureIdCultureCollectionFromProductModelProductDescriptionCulture
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDescriptionBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescriptionBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.#ctor(System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescriptionBase"/> instance.
            </summary>
            <param name="_description">Description of the product.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.CreateProductDescription(System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> instance.
            </summary>
            <param name="_description">Description of the product.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ProductDescription Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.Copy">
            <summary>
              Returns a Typed ProductDescription Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.DeepCopy">
            <summary>
              Returns a Typed ProductDescription Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ProductDescriptionColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.GetOriginalEntity">
            <summary>
              Returns a ProductDescription Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescriptionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescriptionBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.Equals(Nettiers.AdventureWorks.Entities.ProductDescriptionBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescriptionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ValueEquals(Nettiers.AdventureWorks.Entities.ProductDescriptionBase,Nettiers.AdventureWorks.Entities.ProductDescriptionBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescriptionBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescriptionBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescriptionBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductDescriptionColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescriptionColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductDescriptionColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescriptionColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductDescriptionColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescriptionColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductDescriptionColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescriptionColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ProductDescriptionId">
            <summary>
            	Gets or sets the ProductDescriptionId property. 
            	Primary key for ProductDescription records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.Description">
            <summary>
            	Gets or sets the Description property. 
            	Description of the product.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ProductModelProductDescriptionCultureCollection">
            <summary>
            Holds a collection of ProductModelProductDescriptionCulture objects
            which are related to this object through the relation FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ProductModelIdProductModelCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of ProductModelFromProductModelProductDescriptionCulture objects
            which are related to this object through the junction table ProductModelProductDescriptionCulture
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.CultureIdCultureCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of CultureFromProductModelProductDescriptionCulture objects
            which are related to this object through the junction table ProductModelProductDescriptionCulture
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ProductDescriptionEntityData">
            <summary>
            	The data structure representation of the 'ProductDescription' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ProductDescriptionEntityData.ProductDescriptionId">
            <summary>			
            ProductDescriptionID : Primary key for ProductDescription records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductDescription"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ProductDescriptionEntityData.Description">
            <summary>
            Description : Description of the product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ProductDescriptionEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ProductDescriptionEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ProductDescriptionEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ProductDescriptionEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ProductDescriptionEntityData.ProductModelProductDescriptionCultureCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productModelProductDescriptionCultureProductDescriptionId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ProductDescriptionEntityData.ProductModelIdProductModelCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productModelIdProductModelCollectionFromProductModelProductDescriptionCulture
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ProductDescriptionEntityData.CultureIdCultureCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table cultureIdCultureCollectionFromProductModelProductDescriptionCulture
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionBase.ProductDescriptionEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDescriptionEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductDescriptionColumn)">
            <summary>
             Initalizes a new Instance of the ProductDescriptionEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductDescriptionColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ProductDescriptionEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionEventArgs.Column">
            <summary>
             The ProductDescriptionColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ProductDescriptionColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDescriptionEventHandler">
            <summary>
             Define a delegate for all ProductDescription related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDescriptionComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ProductDescriptionComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionComparer.#ctor(Nettiers.AdventureWorks.Entities.ProductDescriptionColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductDescriptionComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionComparer.Equals(Nettiers.AdventureWorks.Entities.ProductDescription,Nettiers.AdventureWorks.Entities.ProductDescription)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> to compare.</param>
            <param name="b">The second <c>ProductDescription</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ProductDescription)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionComparer.Compare(Nettiers.AdventureWorks.Entities.ProductDescription,Nettiers.AdventureWorks.Entities.ProductDescription)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDescriptionKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionKey.#ctor">
            <summary>
            Initializes a new instance of the ProductDescriptionKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionKey.#ctor(Nettiers.AdventureWorks.Entities.ProductDescriptionBase)">
            <summary>
            Initializes a new instance of the ProductDescriptionKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ProductDescriptionKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescriptionKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductDescriptionKey.ProductDescriptionId">
            <summary>
            Gets or sets the ProductDescriptionId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDescriptionColumn">
            <summary>
            Enumerate the ProductDescription columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDescriptionColumn.ProductDescriptionId">
            <summary>
            ProductDescriptionId : Primary key for ProductDescription records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDescriptionColumn.Description">
            <summary>
            Description : Description of the product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDescriptionColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductDescriptionColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductColumn)">
            <summary>
             Initalizes a new Instance of the ProductEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ProductEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductEventArgs.Column">
            <summary>
             The ProductColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ProductColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductEventHandler">
            <summary>
             Define a delegate for all Product related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ProductComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductComparer.#ctor(Nettiers.AdventureWorks.Entities.ProductColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductComparer.Equals(Nettiers.AdventureWorks.Entities.Product,Nettiers.AdventureWorks.Entities.Product)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> to compare.</param>
            <param name="b">The second <c>Product</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductComparer.GetHashCode(Nettiers.AdventureWorks.Entities.Product)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductComparer.Compare(Nettiers.AdventureWorks.Entities.Product,Nettiers.AdventureWorks.Entities.Product)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductKey.#ctor">
            <summary>
            Initializes a new instance of the ProductKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductKey.#ctor(Nettiers.AdventureWorks.Entities.ProductBase)">
            <summary>
            Initializes a new instance of the ProductKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ProductKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductKey.ProductId">
            <summary>
            Gets or sets the ProductId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductColumn">
            <summary>
            Enumerate the Product columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.ProductId">
            <summary>
            ProductId : Primary key for Product records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.Name">
            <summary>
            Name : Name of the product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.ProductNumber">
            <summary>
            ProductNumber : Unique product identification number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.MakeFlag">
            <summary>
            MakeFlag : 0 = Product is purchased, 1 = Product is manufactured in-house.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.FinishedGoodsFlag">
            <summary>
            FinishedGoodsFlag : 0 = Product is not a salable item. 1 = Product is salable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.Color">
            <summary>
            Color : Product color.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.SafetyStockLevel">
            <summary>
            SafetyStockLevel : Minimum inventory quantity. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.ReorderPoint">
            <summary>
            ReorderPoint : Inventory level that triggers a purchase order or work order. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.StandardCost">
            <summary>
            StandardCost : Standard cost of the product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.ListPrice">
            <summary>
            ListPrice : Selling price.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.Size">
            <summary>
            Size : Product size.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.SizeUnitMeasureCode">
            <summary>
            SizeUnitMeasureCode : Unit of measure for Size column.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.WeightUnitMeasureCode">
            <summary>
            WeightUnitMeasureCode : Unit of measure for Weight column.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.Weight">
            <summary>
            Weight : Product weight.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.DaysToManufacture">
            <summary>
            DaysToManufacture : Number of days required to manufacture the product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.ProductLine">
            <summary>
            ProductLine : R = Road, M = Mountain, T = Touring, S = Standard
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.SafeNameClass">
            <summary>
            SafeNameClass : H = High, M = Medium, L = Low
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.Style">
            <summary>
            Style : W = Womens, M = Mens, U = Universal
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.ProductSubcategoryId">
            <summary>
            ProductSubcategoryId : Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.ProductModelId">
            <summary>
            ProductModelId : Product is a member of this product model. Foreign key to ProductModel.ProductModelID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.SellStartDate">
            <summary>
            SellStartDate : Date the product was available for sale.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.SellEndDate">
            <summary>
            SellEndDate : Date the product was no longer available for sale.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.DiscontinuedDate">
            <summary>
            DiscontinuedDate : Date the product was discontinued.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Individual">
            <summary>
             Demographic data about customers that purchase Adventure Works products online.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IndividualBase">
            <summary>
             Demographic data about customers that purchase Adventure Works products online.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IIndividual">
            <summary>
            	The data structure representation of the 'Individual' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IIndividual.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IIndividual.CustomerId">
            <summary>			
            CustomerID : Unique customer identification number. Foreign key to Customer.CustomerID.
            </summary>
            <remarks>Member of the primary key of the underlying table "Individual"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IIndividual.OriginalCustomerId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IIndividual.ContactId">
            <summary>
            ContactID : Identifies the customer in the Contact table. Foreign key to Contact.ContactID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IIndividual.Demographics">
            <summary>
            Demographics : Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IIndividual.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IndividualBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IndividualBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IndividualBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IndividualBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IndividualBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.IndividualBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.#ctor(System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.IndividualBase"/> instance.
            </summary>
            <param name="_customerId">Unique customer identification number. Foreign key to Customer.CustomerID.</param>
            <param name="_contactId">Identifies the customer in the Contact table. Foreign key to Contact.ContactID.</param>
            <param name="_demographics">Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.CreateIndividual(System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> instance.
            </summary>
            <param name="_customerId">Unique customer identification number. Foreign key to Customer.CustomerID.</param>
            <param name="_contactId">Identifies the customer in the Contact table. Foreign key to Contact.ContactID.</param>
            <param name="_demographics">Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Individual Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.Copy">
            <summary>
              Returns a Typed Individual Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.DeepCopy">
            <summary>
              Returns a Typed Individual Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.IndividualColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.GetOriginalEntity">
            <summary>
              Returns a Individual Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.IndividualBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.IndividualBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.Equals(Nettiers.AdventureWorks.Entities.IndividualBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.IndividualBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.ValueEquals(Nettiers.AdventureWorks.Entities.IndividualBase,Nettiers.AdventureWorks.Entities.IndividualBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.IndividualBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.IndividualBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.IndividualBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.IndividualColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.IndividualBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.IndividualColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.IndividualColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.IndividualBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.IndividualColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.IndividualColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.IndividualBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.IndividualColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.IndividualColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.IndividualBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.IndividualColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.IndividualBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.IndividualBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.CustomerId">
            <summary>
            	Gets or sets the CustomerId property. 
            	Unique customer identification number. Foreign key to Customer.CustomerID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.OriginalCustomerId">
            <summary>
            	Get the original value of the CustomerID property.
            	Unique customer identification number. Foreign key to Customer.CustomerID.
            </summary>
            <remarks>This is the original value of the CustomerID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.ContactId">
            <summary>
            	Gets or sets the ContactId property. 
            	Identifies the customer in the Contact table. Foreign key to Contact.ContactID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.Demographics">
            <summary>
            	Gets or sets the Demographics property. 
            	Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.
            </summary>
            <value>This type is xml.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.ContactIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/>.
            </summary>
            <value>The source Contact for ContactId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.CustomerIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/>.
            </summary>
            <value>The source Customer for CustomerId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.IndividualBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.IndividualBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IndividualBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IndividualBase.IndividualEntityData">
            <summary>
            	The data structure representation of the 'Individual' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IndividualBase.IndividualEntityData.CustomerId">
            <summary>			
            CustomerID : Unique customer identification number. Foreign key to Customer.CustomerID.
            </summary>
            <remarks>Member of the primary key of the underlying table "Individual"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IndividualBase.IndividualEntityData.OriginalCustomerId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IndividualBase.IndividualEntityData.ContactId">
            <summary>
            ContactID : Identifies the customer in the Contact table. Foreign key to Contact.ContactID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IndividualBase.IndividualEntityData.Demographics">
            <summary>
            Demographics : Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IndividualBase.IndividualEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.IndividualEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualBase.IndividualEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.IndividualEntityData.ContactIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/>.
            </summary>
            <value>The source Contact for ContactId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.IndividualEntityData.CustomerIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/>.
            </summary>
            <value>The source Customer for CustomerId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualBase.IndividualEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Individual.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Illustration">
            <summary>
             Bicycle assembly diagrams.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IllustrationBase">
            <summary>
             Bicycle assembly diagrams.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IIllustration">
            <summary>
            	The data structure representation of the 'Illustration' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IIllustration.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IIllustration.IllustrationId">
            <summary>			
            IllustrationID : Primary key for Illustration records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Illustration"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IIllustration.Diagram">
            <summary>
            Diagram : Illustrations used in manufacturing instructions. Stored as XML.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IIllustration.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IIllustration.ProductModelIdProductModelCollection_From_ProductModelIllustration">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productModelIdProductModelCollectionFromProductModelIllustration
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IIllustration.ProductModelIllustrationCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productModelIllustrationIllustrationId
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IllustrationBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IllustrationBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IllustrationBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IllustrationBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IllustrationBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.IllustrationBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.#ctor(System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.IllustrationBase"/> instance.
            </summary>
            <param name="_diagram">Illustrations used in manufacturing instructions. Stored as XML.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.CreateIllustration(System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> instance.
            </summary>
            <param name="_diagram">Illustrations used in manufacturing instructions. Stored as XML.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Illustration Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.Copy">
            <summary>
              Returns a Typed Illustration Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.DeepCopy">
            <summary>
              Returns a Typed Illustration Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.IllustrationColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.GetOriginalEntity">
            <summary>
              Returns a Illustration Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.IllustrationBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.IllustrationBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.Equals(Nettiers.AdventureWorks.Entities.IllustrationBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.IllustrationBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.ValueEquals(Nettiers.AdventureWorks.Entities.IllustrationBase,Nettiers.AdventureWorks.Entities.IllustrationBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.IllustrationBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.IllustrationBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.IllustrationBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.IllustrationColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.IllustrationBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.IllustrationColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.IllustrationColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.IllustrationBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.IllustrationColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.IllustrationColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.IllustrationBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.IllustrationColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.IllustrationColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.IllustrationBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.IllustrationColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.IllustrationBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.IllustrationBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationBase.IllustrationId">
            <summary>
            	Gets or sets the IllustrationId property. 
            	Primary key for Illustration records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationBase.Diagram">
            <summary>
            	Gets or sets the Diagram property. 
            	Illustrations used in manufacturing instructions. Stored as XML.
            </summary>
            <value>This type is xml.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationBase.ProductModelIdProductModelCollection_From_ProductModelIllustration">
            <summary>
            Holds a collection of ProductModelFromProductModelIllustration objects
            which are related to this object through the junction table ProductModelIllustration
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationBase.ProductModelIllustrationCollection">
            <summary>
            Holds a collection of ProductModelIllustration objects
            which are related to this object through the relation FK_ProductModelIllustration_Illustration_IllustrationID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.IllustrationBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.IllustrationBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IllustrationBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IllustrationBase.IllustrationEntityData">
            <summary>
            	The data structure representation of the 'Illustration' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IllustrationBase.IllustrationEntityData.IllustrationId">
            <summary>			
            IllustrationID : Primary key for Illustration records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Illustration"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IllustrationBase.IllustrationEntityData.Diagram">
            <summary>
            Diagram : Illustrations used in manufacturing instructions. Stored as XML.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IllustrationBase.IllustrationEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.IllustrationEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationBase.IllustrationEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationBase.IllustrationEntityData.ProductModelIdProductModelCollection_From_ProductModelIllustration">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productModelIdProductModelCollectionFromProductModelIllustration
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationBase.IllustrationEntityData.ProductModelIllustrationCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productModelIllustrationIllustrationId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationBase.IllustrationEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Illustration.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory">
            <summary>
             Employee department transfers.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeAddressBase">
            <summary>
             Cross-reference table mapping employees to their address(es).	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IEmployeeAddress">
            <summary>
            	The data structure representation of the 'EmployeeAddress' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IEmployeeAddress.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeAddress.EmployeeId">
            <summary>			
            EmployeeID : Primary key. Foreign key to Employee.EmployeeID.
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeeAddress"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeAddress.OriginalEmployeeId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeAddress.AddressId">
            <summary>			
            AddressID : Primary key. Foreign key to Address.AddressID.
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeeAddress"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeAddress.OriginalAddressId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeAddress.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeeAddress.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeAddressBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddressBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.#ctor(System.Int32,System.Int32,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddressBase"/> instance.
            </summary>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.CreateEmployeeAddress(System.Int32,System.Int32,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> instance.
            </summary>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed EmployeeAddress Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.Copy">
            <summary>
              Returns a Typed EmployeeAddress Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.DeepCopy">
            <summary>
              Returns a Typed EmployeeAddress Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.EmployeeAddressColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.GetOriginalEntity">
            <summary>
              Returns a EmployeeAddress Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddressBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddressBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.Equals(Nettiers.AdventureWorks.Entities.EmployeeAddressBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddressBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.ValueEquals(Nettiers.AdventureWorks.Entities.EmployeeAddressBase,Nettiers.AdventureWorks.Entities.EmployeeAddressBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddressBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddressBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddressBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.EmployeeAddressColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddressColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.EmployeeAddressColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddressColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.EmployeeAddressColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddressColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.EmployeeAddressColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddressColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EmployeeId">
            <summary>
            	Gets or sets the EmployeeId property. 
            	Primary key. Foreign key to Employee.EmployeeID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.OriginalEmployeeId">
            <summary>
            	Get the original value of the EmployeeID property.
            	Primary key. Foreign key to Employee.EmployeeID.
            </summary>
            <remarks>This is the original value of the EmployeeID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.AddressId">
            <summary>
            	Gets or sets the AddressId property. 
            	Primary key. Foreign key to Address.AddressID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.OriginalAddressId">
            <summary>
            	Get the original value of the AddressID property.
            	Primary key. Foreign key to Address.AddressID.
            </summary>
            <remarks>This is the original value of the AddressID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.AddressIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Address"/>.
            </summary>
            <value>The source Address for AddressId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EmployeeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/>.
            </summary>
            <value>The source Employee for EmployeeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EmployeeAddressEntityData">
            <summary>
            	The data structure representation of the 'EmployeeAddress' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EmployeeAddressEntityData.EmployeeId">
            <summary>			
            EmployeeID : Primary key. Foreign key to Employee.EmployeeID.
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeeAddress"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EmployeeAddressEntityData.OriginalEmployeeId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EmployeeAddressEntityData.AddressId">
            <summary>			
            AddressID : Primary key. Foreign key to Address.AddressID.
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeeAddress"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EmployeeAddressEntityData.OriginalAddressId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EmployeeAddressEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EmployeeAddressEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EmployeeAddressEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EmployeeAddressEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EmployeeAddressEntityData.AddressIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Address"/>.
            </summary>
            <value>The source Address for AddressId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EmployeeAddressEntityData.EmployeeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/>.
            </summary>
            <value>The source Employee for EmployeeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressBase.EmployeeAddressEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeAddressEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressEventArgs.#ctor(Nettiers.AdventureWorks.Entities.EmployeeAddressColumn)">
            <summary>
             Initalizes a new Instance of the EmployeeAddressEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressEventArgs.#ctor(Nettiers.AdventureWorks.Entities.EmployeeAddressColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the EmployeeAddressEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressEventArgs.Column">
            <summary>
             The EmployeeAddressColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddressColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeAddressEventHandler">
            <summary>
             Define a delegate for all EmployeeAddress related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeAddressComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmployeeAddressComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressComparer.#ctor(Nettiers.AdventureWorks.Entities.EmployeeAddressColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EmployeeAddressComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressComparer.Equals(Nettiers.AdventureWorks.Entities.EmployeeAddress,Nettiers.AdventureWorks.Entities.EmployeeAddress)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> to compare.</param>
            <param name="b">The second <c>EmployeeAddress</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressComparer.GetHashCode(Nettiers.AdventureWorks.Entities.EmployeeAddress)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressComparer.Compare(Nettiers.AdventureWorks.Entities.EmployeeAddress,Nettiers.AdventureWorks.Entities.EmployeeAddress)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeAddressKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressKey.#ctor">
            <summary>
            Initializes a new instance of the EmployeeAddressKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressKey.#ctor(Nettiers.AdventureWorks.Entities.EmployeeAddressBase)">
            <summary>
            Initializes a new instance of the EmployeeAddressKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the EmployeeAddressKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddressKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressKey.EmployeeId">
            <summary>
            Gets or sets the EmployeeId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeAddressKey.AddressId">
            <summary>
            Gets or sets the AddressId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeAddressColumn">
            <summary>
            Enumerate the EmployeeAddress columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeAddressColumn.EmployeeId">
            <summary>
            EmployeeId : Primary key. Foreign key to Employee.EmployeeID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeAddressColumn.AddressId">
            <summary>
            AddressId : Primary key. Foreign key to Address.AddressID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeAddressColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeAddressColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DatabaseLog">
            <summary>
             Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DatabaseLogBase">
            <summary>
             Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IDatabaseLog">
            <summary>
            	The data structure representation of the 'DatabaseLog' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IDatabaseLog.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDatabaseLog.DatabaseLogId">
            <summary>			
            DatabaseLogID : Primary key for DatabaseLog records.
            </summary>
            <remarks>Member of the primary key of the underlying table "DatabaseLog"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDatabaseLog.PostTime">
            <summary>
            PostTime : The date and time the DDL change occurred.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDatabaseLog.DatabaseUser">
            <summary>
            DatabaseUser : The user who implemented the DDL change.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDatabaseLog.SafeNameEvent">
            <summary>
            Event : The type of DDL statement that was executed.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDatabaseLog.Schema">
            <summary>
            Schema : The schema to which the changed object belongs.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDatabaseLog.SafeNameObject">
            <summary>
            Object : The object that was changed by the DDL statment.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDatabaseLog.Tsql">
            <summary>
            TSQL : The exact Transact-SQL statement that was executed.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDatabaseLog.XmlEvent">
            <summary>
            XmlEvent : The raw XML data generated by database trigger.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLogBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.#ctor(System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLogBase"/> instance.
            </summary>
            <param name="_postTime">The date and time the DDL change occurred.</param>
            <param name="_databaseUser">The user who implemented the DDL change.</param>
            <param name="_safeNameEvent">The type of DDL statement that was executed.</param>
            <param name="_schema">The schema to which the changed object belongs.</param>
            <param name="_safeNameObject">The object that was changed by the DDL statment.</param>
            <param name="_tsql">The exact Transact-SQL statement that was executed.</param>
            <param name="_xmlEvent">The raw XML data generated by database trigger.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.CreateDatabaseLog(System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> instance.
            </summary>
            <param name="_postTime">The date and time the DDL change occurred.</param>
            <param name="_databaseUser">The user who implemented the DDL change.</param>
            <param name="_safeNameEvent">The type of DDL statement that was executed.</param>
            <param name="_schema">The schema to which the changed object belongs.</param>
            <param name="_safeNameObject">The object that was changed by the DDL statment.</param>
            <param name="_tsql">The exact Transact-SQL statement that was executed.</param>
            <param name="_xmlEvent">The raw XML data generated by database trigger.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed DatabaseLog Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.Copy">
            <summary>
              Returns a Typed DatabaseLog Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.DeepCopy">
            <summary>
              Returns a Typed DatabaseLog Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.DatabaseLogColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.GetOriginalEntity">
            <summary>
              Returns a DatabaseLog Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLogBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLogBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.Equals(Nettiers.AdventureWorks.Entities.DatabaseLogBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLogBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.ValueEquals(Nettiers.AdventureWorks.Entities.DatabaseLogBase,Nettiers.AdventureWorks.Entities.DatabaseLogBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLogBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLogBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLogBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.DatabaseLogColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.DatabaseLogBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLogColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.DatabaseLogColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.DatabaseLogBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLogColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.DatabaseLogColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.DatabaseLogBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLogColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.DatabaseLogColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.DatabaseLogBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLogColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.DatabaseLogBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.DatabaseLogBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.DatabaseLogId">
            <summary>
            	Gets or sets the DatabaseLogId property. 
            	Primary key for DatabaseLog records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.PostTime">
            <summary>
            	Gets or sets the PostTime property. 
            	The date and time the DDL change occurred.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.DatabaseUser">
            <summary>
            	Gets or sets the DatabaseUser property. 
            	The user who implemented the DDL change.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.SafeNameEvent">
            <summary>
            	Gets or sets the SafeNameEvent property. 
            	The type of DDL statement that was executed.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.Schema">
            <summary>
            	Gets or sets the Schema property. 
            	The schema to which the changed object belongs.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.SafeNameObject">
            <summary>
            	Gets or sets the SafeNameObject property. 
            	The object that was changed by the DDL statment.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.Tsql">
            <summary>
            	Gets or sets the Tsql property. 
            	The exact Transact-SQL statement that was executed.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.XmlEvent">
            <summary>
            	Gets or sets the XmlEvent property. 
            	The raw XML data generated by database trigger.
            </summary>
            <value>This type is xml.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.DatabaseLogBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.DatabaseLogBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DatabaseLogBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DatabaseLogBase.DatabaseLogEntityData">
            <summary>
            	The data structure representation of the 'DatabaseLog' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogBase.DatabaseLogEntityData.DatabaseLogId">
            <summary>			
            DatabaseLogID : Primary key for DatabaseLog records.
            </summary>
            <remarks>Member of the primary key of the underlying table "DatabaseLog"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogBase.DatabaseLogEntityData.PostTime">
            <summary>
            PostTime : The date and time the DDL change occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogBase.DatabaseLogEntityData.DatabaseUser">
            <summary>
            DatabaseUser : The user who implemented the DDL change.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogBase.DatabaseLogEntityData.SafeNameEvent">
            <summary>
            Event : The type of DDL statement that was executed.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogBase.DatabaseLogEntityData.Schema">
            <summary>
            Schema : The schema to which the changed object belongs.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogBase.DatabaseLogEntityData.SafeNameObject">
            <summary>
            Object : The object that was changed by the DDL statment.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogBase.DatabaseLogEntityData.Tsql">
            <summary>
            TSQL : The exact Transact-SQL statement that was executed.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogBase.DatabaseLogEntityData.XmlEvent">
            <summary>
            XmlEvent : The raw XML data generated by database trigger.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.DatabaseLogEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogBase.DatabaseLogEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogBase.DatabaseLogEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLog.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ICurrency">
            <summary>
            	The data structure representation of the 'Currency' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ICurrency.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrency.CurrencyCode">
            <summary>			
            CurrencyCode : The ISO code for the Currency.
            </summary>
            <remarks>Member of the primary key of the underlying table "Currency"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrency.OriginalCurrencyCode">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrency.Name">
            <summary>
            Name : Currency name.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrency.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrency.CountryRegionCodeCountryRegionCollection_From_CountryRegionCurrency">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table countryRegionCodeCountryRegionCollectionFromCountryRegionCurrency
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrency.CountryRegionCurrencyCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _countryRegionCurrencyCurrencyCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrency.CurrencyRateCollectionGetByFromCurrencyCode">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _currencyRateToCurrencyCodeGetByFromCurrencyCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrency.CurrencyRateCollectionGetByToCurrencyCode">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _currencyRateToCurrencyCodeGetByToCurrencyCode
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Currency">
            <summary>
             Lookup table containing standard ISO currencies.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyBase">
            <summary>
             Lookup table containing standard ISO currencies.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.#ctor(System.String,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyBase"/> instance.
            </summary>
            <param name="_currencyCode">The ISO code for the Currency.</param>
            <param name="_name">Currency name.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.CreateCurrency(System.String,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> instance.
            </summary>
            <param name="_currencyCode">The ISO code for the Currency.</param>
            <param name="_name">Currency name.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Currency Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.Copy">
            <summary>
              Returns a Typed Currency Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.DeepCopy">
            <summary>
              Returns a Typed Currency Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.CurrencyColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.GetOriginalEntity">
            <summary>
              Returns a Currency Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.Equals(Nettiers.AdventureWorks.Entities.CurrencyBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.ValueEquals(Nettiers.AdventureWorks.Entities.CurrencyBase,Nettiers.AdventureWorks.Entities.CurrencyBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CurrencyColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CurrencyBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CurrencyColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CurrencyBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CurrencyColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CurrencyBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CurrencyColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CurrencyBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CurrencyBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CurrencyBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.CurrencyCode">
            <summary>
            	Gets or sets the CurrencyCode property. 
            	The ISO code for the Currency.
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.OriginalCurrencyCode">
            <summary>
            	Get the original value of the CurrencyCode property.
            	The ISO code for the Currency.
            </summary>
            <remarks>This is the original value of the CurrencyCode property.</remarks>
            <value>This type is nchar</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Currency name.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.CountryRegionCodeCountryRegionCollection_From_CountryRegionCurrency">
            <summary>
            Holds a collection of CountryRegionFromCountryRegionCurrency objects
            which are related to this object through the junction table CountryRegionCurrency
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.CountryRegionCurrencyCollection">
            <summary>
            Holds a collection of CountryRegionCurrency objects
            which are related to this object through the relation FK_CountryRegionCurrency_Currency_CurrencyCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.CurrencyRateCollectionGetByFromCurrencyCode">
            <summary>
            Holds a collection of CurrencyRate objects
            which are related to this object through the relation FK_CurrencyRate_Currency_FromCurrencyCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.CurrencyRateCollectionGetByToCurrencyCode">
            <summary>
            Holds a collection of CurrencyRate objects
            which are related to this object through the relation FK_CurrencyRate_Currency_ToCurrencyCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CurrencyBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CurrencyBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyBase.CurrencyEntityData">
            <summary>
            	The data structure representation of the 'Currency' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyBase.CurrencyEntityData.CurrencyCode">
            <summary>			
            CurrencyCode : The ISO code for the Currency.
            </summary>
            <remarks>Member of the primary key of the underlying table "Currency"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyBase.CurrencyEntityData.OriginalCurrencyCode">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyBase.CurrencyEntityData.Name">
            <summary>
            Name : Currency name.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyBase.CurrencyEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.CurrencyEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyBase.CurrencyEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.CurrencyEntityData.CountryRegionCodeCountryRegionCollection_From_CountryRegionCurrency">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table countryRegionCodeCountryRegionCollectionFromCountryRegionCurrency
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.CurrencyEntityData.CountryRegionCurrencyCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _countryRegionCurrencyCurrencyCode
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.CurrencyEntityData.CurrencyRateCollectionGetByFromCurrencyCode">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _currencyRateToCurrencyCodeGetByFromCurrencyCode
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.CurrencyEntityData.CurrencyRateCollectionGetByToCurrencyCode">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _currencyRateToCurrencyCodeGetByToCurrencyCode
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyBase.CurrencyEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Currency.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographics">
            <summary>
             Stores (names and addresses) that sell Adventure Works Cycles products to consumers.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase">
            <summary>
             Stores (names and addresses) that sell Adventure Works Cycles products to consumers.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._customerId">
            <summary>
            CustomerID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._name">
            <summary>
            Name : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._contactType">
            <summary>
            ContactType : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._firstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._middleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._lastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._suffix">
            <summary>
            Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._phone">
            <summary>
            Phone : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._emailAddress">
            <summary>
            EmailAddress : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._emailPromotion">
            <summary>
            EmailPromotion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._addressType">
            <summary>
            AddressType : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._addressLine1">
            <summary>
            AddressLine1 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._addressLine2">
            <summary>
            AddressLine2 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._city">
            <summary>
            City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._stateProvinceName">
            <summary>
            StateProvinceName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._postalCode">
            <summary>
            PostalCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._countryRegionName">
            <summary>
            CountryRegionName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._annualSales">
            <summary>
            AnnualSales : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._annualRevenue">
            <summary>
            AnnualRevenue : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._bankName">
            <summary>
            BankName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._businessType">
            <summary>
            BusinessType : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._yearOpened">
            <summary>
            YearOpened : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._specialty">
            <summary>
            Specialty : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._squareFeet">
            <summary>
            SquareFeet : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._brands">
            <summary>
            Brands : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._internet">
            <summary>
            Internet : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._numberEmployees">
            <summary>
            NumberEmployees : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase"/> instance.
            </summary>
            <param name="_customerId"></param>
            <param name="_name"></param>
            <param name="_contactType"></param>
            <param name="_title"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_suffix"></param>
            <param name="_phone"></param>
            <param name="_emailAddress"></param>
            <param name="_emailPromotion"></param>
            <param name="_addressType"></param>
            <param name="_addressLine1"></param>
            <param name="_addressLine2"></param>
            <param name="_city"></param>
            <param name="_stateProvinceName"></param>
            <param name="_postalCode"></param>
            <param name="_countryRegionName"></param>
            <param name="_annualSales"></param>
            <param name="_annualRevenue"></param>
            <param name="_bankName"></param>
            <param name="_businessType"></param>
            <param name="_yearOpened"></param>
            <param name="_specialty"></param>
            <param name="_squareFeet"></param>
            <param name="_brands"></param>
            <param name="_internet"></param>
            <param name="_numberEmployees"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.CreateVStoreWithDemographics(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographics"/> instance.
            </summary>
            <param name="_customerId"></param>
            <param name="_name"></param>
            <param name="_contactType"></param>
            <param name="_title"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_suffix"></param>
            <param name="_phone"></param>
            <param name="_emailAddress"></param>
            <param name="_emailPromotion"></param>
            <param name="_addressType"></param>
            <param name="_addressLine1"></param>
            <param name="_addressLine2"></param>
            <param name="_city"></param>
            <param name="_stateProvinceName"></param>
            <param name="_postalCode"></param>
            <param name="_countryRegionName"></param>
            <param name="_annualSales"></param>
            <param name="_annualRevenue"></param>
            <param name="_bankName"></param>
            <param name="_businessType"></param>
            <param name="_yearOpened"></param>
            <param name="_specialty"></param>
            <param name="_squareFeet"></param>
            <param name="_brands"></param>
            <param name="_internet"></param>
            <param name="_numberEmployees"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.Copy">
            <summary>
              Returns a Typed VStoreWithDemographicsBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.Equals(Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.Equals(Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase,Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VStoreWithDemographics,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.CustomerId">
            <summary>
            	Gets or Sets the CustomerID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.Name">
            <summary>
            	Gets or Sets the Name property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.ContactType">
            <summary>
            	Gets or Sets the ContactType property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.Title">
            <summary>
            	Gets or Sets the Title property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.FirstName">
            <summary>
            	Gets or Sets the FirstName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.MiddleName">
            <summary>
            	Gets or Sets the MiddleName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.LastName">
            <summary>
            	Gets or Sets the LastName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.Suffix">
            <summary>
            	Gets or Sets the Suffix property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.Phone">
            <summary>
            	Gets or Sets the Phone property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.EmailAddress">
            <summary>
            	Gets or Sets the EmailAddress property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.EmailPromotion">
            <summary>
            	Gets or Sets the EmailPromotion property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.AddressType">
            <summary>
            	Gets or Sets the AddressType property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.AddressLine1">
            <summary>
            	Gets or Sets the AddressLine1 property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.AddressLine2">
            <summary>
            	Gets or Sets the AddressLine2 property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.City">
            <summary>
            	Gets or Sets the City property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.StateProvinceName">
            <summary>
            	Gets or Sets the StateProvinceName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.PostalCode">
            <summary>
            	Gets or Sets the PostalCode property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.CountryRegionName">
            <summary>
            	Gets or Sets the CountryRegionName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.AnnualSales">
            <summary>
            	Gets or Sets the AnnualSales property. 
            	
            </summary>
            <value>This type is money</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0. It is up to the developer
            to check the value of IsAnnualSalesNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.AnnualRevenue">
            <summary>
            	Gets or Sets the AnnualRevenue property. 
            	
            </summary>
            <value>This type is money</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0. It is up to the developer
            to check the value of IsAnnualRevenueNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.BankName">
            <summary>
            	Gets or Sets the BankName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.BusinessType">
            <summary>
            	Gets or Sets the BusinessType property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.YearOpened">
            <summary>
            	Gets or Sets the YearOpened property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsYearOpenedNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.Specialty">
            <summary>
            	Gets or Sets the Specialty property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.SquareFeet">
            <summary>
            	Gets or Sets the SquareFeet property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsSquareFeetNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.Brands">
            <summary>
            	Gets or Sets the Brands property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.Internet">
            <summary>
            	Gets or Sets the Internet property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.NumberEmployees">
            <summary>
            	Gets or Sets the NumberEmployees property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsNumberEmployeesNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStoreWithDemographics.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographics"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Expressions">
            <summary>
            Hold a list of <see cref="T:Nettiers.AdventureWorks.Entities.Expression"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Expressions.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <c>Expressions</c> class.
            </summary>
            <param name="holeFilterExpression">the filter expression that will be parsed to create the collection.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Expressions.#ctor">
            <summary>
            Initializes a new instance of the <c>Expressions</c> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Expressions.SplitFilter(System.String)">
            <summary>
            This method split a string filter expression anc create <c>EntityFilter</c> instances.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Expressions.Item(System.Int32)">
            <summary>
            Get the <see cref="T:Nettiers.AdventureWorks.Entities.Expression"/> at the specified index.
            </summary>
            <param name="Index">The index of the expression in the collection.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Expressions.Add(Nettiers.AdventureWorks.Entities.Expression)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Expressions.Remove(Nettiers.AdventureWorks.Entities.Expression)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Expression">
            <summary>
             Reprensents an expression to filter a collection.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Expression.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Expression"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Expression.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Expression"/> class.
            </summary>
            <param name="PropValue">The prop value.</param>
            <param name="Opr">The opr.</param>
            <param name="Usrvalue">The usrvalue.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Expression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Expression"/> class.
            </summary>
            <param name="wholeExpression">The whole expression.</param>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Expression.PropertyName">
            <summary>
            Gets or sets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Expression.Operator">
            <summary>
            Gets or sets the operator.
            </summary>
            <value>The operator.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Expression.UserValue">
            <summary>
            Gets or sets the user value.
            </summary>
            <value>The user value.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityFilter`2">
            <summary>
            Represents a filter.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EntityFilter&lt;T, Entity&gt;"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.#ctor(`0,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EntityFilter&lt;T, Entity&gt;"/> class.
            </summary>
            <param name="objToFilter">The obj to filter.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.IsOk(System.String,System.String,System.String)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.IsOk(System.Int32,System.String,System.Int32)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.IsOk(System.Decimal,System.String,System.Int32)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.IsOk(System.Guid,System.String,System.Guid)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.IsOk(System.Double,System.String,System.Double)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.IsOk(System.Int64,System.String,System.Int64)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.IsOk(System.Decimal,System.String,System.Decimal)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.IsOk(System.DateTime,System.String,System.DateTime)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.IsOk(System.Boolean,System.String,System.Boolean)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">if set to <c>true</c> [object property value].</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">if set to <c>true</c> [user value].</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.IsOk(System.Object,System.String,System.Object[])">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">array of the user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.IsOk(System.String,System.Object)">
            <summary>
            Determines whether the specified operator is ok.
            </summary>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified operator is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.CorrectUserValue(System.String)">
            <summary>
            Corrects the user value.
            </summary>
            <param name="UserValue">The user value.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.IsOk(System.Object,System.String,System.String)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFilter`2.ApplyFilter(`0,System.String)">
            <summary>
            Applies the filter.
            </summary>
            <param name="ObjectToFilter">The object to filter.</param>
            <param name="StrFilter">The STR filter.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShiftEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ShiftColumn)">
            <summary>
             Initalizes a new Instance of the ShiftEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ShiftColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ShiftEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftEventArgs.Column">
            <summary>
             The ShiftColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ShiftColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShiftEventHandler">
            <summary>
             Define a delegate for all Shift related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShiftComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ShiftComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftComparer.#ctor(Nettiers.AdventureWorks.Entities.ShiftColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ShiftComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftComparer.Equals(Nettiers.AdventureWorks.Entities.Shift,Nettiers.AdventureWorks.Entities.Shift)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> to compare.</param>
            <param name="b">The second <c>Shift</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftComparer.GetHashCode(Nettiers.AdventureWorks.Entities.Shift)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftComparer.Compare(Nettiers.AdventureWorks.Entities.Shift,Nettiers.AdventureWorks.Entities.Shift)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShiftKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftKey.#ctor">
            <summary>
            Initializes a new instance of the ShiftKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftKey.#ctor(Nettiers.AdventureWorks.Entities.ShiftBase)">
            <summary>
            Initializes a new instance of the ShiftKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftKey.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the ShiftKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShiftKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShiftKey.ShiftId">
            <summary>
            Gets or sets the ShiftId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShiftColumn">
            <summary>
            Enumerate the Shift columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShiftColumn.ShiftId">
            <summary>
            ShiftId : Primary key for Shift records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShiftColumn.Name">
            <summary>
            Name : Shift description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShiftColumn.StartTime">
            <summary>
            StartTime : Shift start time.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShiftColumn.EndTime">
            <summary>
            EndTime : Shift end time.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShiftColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ISalesTerritoryHistory">
            <summary>
            	The data structure representation of the 'SalesTerritoryHistory' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ISalesTerritoryHistory.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritoryHistory.SalesPersonId">
            <summary>			
            SalesPersonID : Primary key for SalesTerritoryHistory records.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesTerritoryHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritoryHistory.OriginalSalesPersonId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritoryHistory.StartDate">
            <summary>			
            StartDate : Date the sales representive started work in the territory.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesTerritoryHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritoryHistory.OriginalStartDate">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritoryHistory.TerritoryId">
            <summary>			
            TerritoryID : Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesTerritoryHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritoryHistory.OriginalTerritoryId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritoryHistory.EndDate">
            <summary>
            EndDate : Date the sales representative left work in the territory.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritoryHistory.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTerritoryHistory.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory">
            <summary>
             Sales representative transfers to other sales territories.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase">
            <summary>
             Sales representative transfers to other sales territories.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.#ctor(System.Int32,System.Int32,System.DateTime,System.Nullable{System.DateTime},System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase"/> instance.
            </summary>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.</param>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="_startDate">Date the sales representive started work in the territory.</param>
            <param name="_endDate">Date the sales representative left work in the territory.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.CreateSalesTerritoryHistory(System.Int32,System.Int32,System.DateTime,System.Nullable{System.DateTime},System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> instance.
            </summary>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.</param>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="_startDate">Date the sales representive started work in the territory.</param>
            <param name="_endDate">Date the sales representative left work in the territory.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed SalesTerritoryHistory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.Copy">
            <summary>
              Returns a Typed SalesTerritoryHistory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.DeepCopy">
            <summary>
              Returns a Typed SalesTerritoryHistory Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.GetOriginalEntity">
            <summary>
              Returns a SalesTerritoryHistory Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.Equals(Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.ValueEquals(Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase,Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesPersonId">
            <summary>
            	Gets or sets the SalesPersonId property. 
            	Primary key for SalesTerritoryHistory records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.OriginalSalesPersonId">
            <summary>
            	Get the original value of the SalesPersonID property.
            	Primary key for SalesTerritoryHistory records.
            </summary>
            <remarks>This is the original value of the SalesPersonID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.TerritoryId">
            <summary>
            	Gets or sets the TerritoryId property. 
            	Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.OriginalTerritoryId">
            <summary>
            	Get the original value of the TerritoryID property.
            	Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
            <remarks>This is the original value of the TerritoryID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.StartDate">
            <summary>
            	Gets or sets the StartDate property. 
            	Date the sales representive started work in the territory.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.OriginalStartDate">
            <summary>
            	Get the original value of the StartDate property.
            	Date the sales representive started work in the territory.
            </summary>
            <remarks>This is the original value of the StartDate property.</remarks>
            <value>This type is datetime</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.EndDate">
            <summary>
            	Gets or sets the EndDate property. 
            	Date the sales representative left work in the territory.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsEndDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesPersonIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/>.
            </summary>
            <value>The source SalesPerson for SalesPersonId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.TerritoryIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/>.
            </summary>
            <value>The source SalesTerritory for TerritoryId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesTerritoryHistoryEntityData">
            <summary>
            	The data structure representation of the 'SalesTerritoryHistory' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesTerritoryHistoryEntityData.SalesPersonId">
            <summary>			
            SalesPersonID : Primary key for SalesTerritoryHistory records.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesTerritoryHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesTerritoryHistoryEntityData.OriginalSalesPersonId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesTerritoryHistoryEntityData.StartDate">
            <summary>			
            StartDate : Date the sales representive started work in the territory.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesTerritoryHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesTerritoryHistoryEntityData.OriginalStartDate">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesTerritoryHistoryEntityData.TerritoryId">
            <summary>			
            TerritoryID : Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesTerritoryHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesTerritoryHistoryEntityData.OriginalTerritoryId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesTerritoryHistoryEntityData.EndDate">
            <summary>
            EndDate : Date the sales representative left work in the territory.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesTerritoryHistoryEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesTerritoryHistoryEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesTerritoryHistoryEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesTerritoryHistoryEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesTerritoryHistoryEntityData.SalesPersonIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/>.
            </summary>
            <value>The source SalesPerson for SalesPersonId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesTerritoryHistoryEntityData.TerritoryIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/>.
            </summary>
            <value>The source SalesTerritory for TerritoryId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase.SalesTerritoryHistoryEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ISalesPersonQuotaHistory">
            <summary>
            	The data structure representation of the 'SalesPersonQuotaHistory' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ISalesPersonQuotaHistory.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPersonQuotaHistory.SalesPersonId">
            <summary>			
            SalesPersonID : Sales person identification number. Foreign key to SalesPerson.SalesPersonID.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesPersonQuotaHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPersonQuotaHistory.OriginalSalesPersonId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPersonQuotaHistory.QuotaDate">
            <summary>			
            QuotaDate : Sales quota date.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesPersonQuotaHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPersonQuotaHistory.OriginalQuotaDate">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPersonQuotaHistory.SalesQuota">
            <summary>
            SalesQuota : Sales quota amount.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPersonQuotaHistory.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPersonQuotaHistory.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn)">
            <summary>
             Initalizes a new Instance of the SalesOrderHeaderSalesReasonEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the SalesOrderHeaderSalesReasonEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonEventArgs.Column">
            <summary>
             The SalesOrderHeaderSalesReasonColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonEventHandler">
            <summary>
             Define a delegate for all SalesOrderHeaderSalesReason related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SalesOrderHeaderSalesReasonComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonComparer.#ctor(Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:SalesOrderHeaderSalesReasonComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonComparer.Equals(Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason,Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> to compare.</param>
            <param name="b">The second <c>SalesOrderHeaderSalesReason</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonComparer.GetHashCode(Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonComparer.Compare(Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason,Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonKey.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonKey.#ctor(Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonBase)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonKey.SalesOrderId">
            <summary>
            Gets or sets the SalesOrderId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonKey.SalesReasonId">
            <summary>
            Gets or sets the SalesReasonId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn">
            <summary>
            Enumerate the SalesOrderHeaderSalesReason columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn.SalesOrderId">
            <summary>
            SalesOrderId : Primary key. Foreign key to SalesOrderHeader.SalesOrderID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn.SalesReasonId">
            <summary>
            SalesReasonId : Primary key. Foreign key to SalesReason.SalesReasonID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IProductVendor">
            <summary>
            	The data structure representation of the 'ProductVendor' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IProductVendor.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductVendor.ProductId">
            <summary>			
            ProductID : Primary key. Foreign key to Product.ProductID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductVendor"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductVendor.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductVendor.VendorId">
            <summary>			
            VendorID : Primary key. Foreign key to Vendor.VendorID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductVendor"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductVendor.OriginalVendorId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductVendor.AverageLeadTime">
            <summary>
            AverageLeadTime : The average span of time (in days) between placing an order with the vendor and receiving the purchased product.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductVendor.StandardPrice">
            <summary>
            StandardPrice : The vendor's usual selling price.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductVendor.LastReceiptCost">
            <summary>
            LastReceiptCost : The selling price when last purchased.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductVendor.LastReceiptDate">
            <summary>
            LastReceiptDate : Date the product was last received by the vendor.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductVendor.MinOrderQty">
            <summary>
            MinOrderQty : The maximum quantity that should be ordered.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductVendor.MaxOrderQty">
            <summary>
            MaxOrderQty : The minimum quantity that should be ordered.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductVendor.OnOrderQty">
            <summary>
            OnOrderQty : The quantity currently on order.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductVendor.UnitMeasureCode">
            <summary>
            UnitMeasureCode : The product's unit of measure.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductVendor.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IProductPhoto">
            <summary>
            	The data structure representation of the 'ProductPhoto' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IProductPhoto.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductPhoto.ProductPhotoId">
            <summary>			
            ProductPhotoID : Primary key for ProductPhoto records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductPhoto"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductPhoto.ThumbNailPhoto">
            <summary>
            ThumbNailPhoto : Small image of the product.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductPhoto.ThumbnailPhotoFileName">
            <summary>
            ThumbnailPhotoFileName : Small image file name.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductPhoto.LargePhoto">
            <summary>
            LargePhoto : Large image of the product.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductPhoto.LargePhotoFileName">
            <summary>
            LargePhotoFileName : Large image file name.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductPhoto.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductPhoto.ProductIdProductCollection_From_ProductProductPhoto">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productIdProductCollectionFromProductProductPhoto
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductPhoto.ProductProductPhotoCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productProductPhotoProductPhotoId
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory">
            <summary>
             Changes in the list price of a product over time.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase">
            <summary>
             Changes in the list price of a product over time.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IProductListPriceHistory">
            <summary>
            	The data structure representation of the 'ProductListPriceHistory' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IProductListPriceHistory.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductListPriceHistory.ProductId">
            <summary>			
            ProductID : Product identification number. Foreign key to Product.ProductID
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductListPriceHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductListPriceHistory.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductListPriceHistory.StartDate">
            <summary>			
            StartDate : List price start date.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductListPriceHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductListPriceHistory.OriginalStartDate">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductListPriceHistory.EndDate">
            <summary>
            EndDate : List price end date
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductListPriceHistory.ListPrice">
            <summary>
            ListPrice : Product list price.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductListPriceHistory.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.#ctor(System.Int32,System.DateTime,System.Nullable{System.DateTime},System.Decimal,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">List price start date.</param>
            <param name="_endDate">List price end date</param>
            <param name="_listPrice">Product list price.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.CreateProductListPriceHistory(System.Int32,System.DateTime,System.Nullable{System.DateTime},System.Decimal,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">List price start date.</param>
            <param name="_endDate">List price end date</param>
            <param name="_listPrice">Product list price.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ProductListPriceHistory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.Copy">
            <summary>
              Returns a Typed ProductListPriceHistory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.DeepCopy">
            <summary>
              Returns a Typed ProductListPriceHistory Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.GetOriginalEntity">
            <summary>
              Returns a ProductListPriceHistory Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.Equals(Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ValueEquals(Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase,Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Product identification number. Foreign key to Product.ProductID
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.OriginalProductId">
            <summary>
            	Get the original value of the ProductID property.
            	Product identification number. Foreign key to Product.ProductID
            </summary>
            <remarks>This is the original value of the ProductID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.StartDate">
            <summary>
            	Gets or sets the StartDate property. 
            	List price start date.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.OriginalStartDate">
            <summary>
            	Get the original value of the StartDate property.
            	List price start date.
            </summary>
            <remarks>This is the original value of the StartDate property.</remarks>
            <value>This type is datetime</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.EndDate">
            <summary>
            	Gets or sets the EndDate property. 
            	List price end date
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsEndDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ListPrice">
            <summary>
            	Gets or sets the ListPrice property. 
            	Product list price.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ProductListPriceHistoryEntityData">
            <summary>
            	The data structure representation of the 'ProductListPriceHistory' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ProductListPriceHistoryEntityData.ProductId">
            <summary>			
            ProductID : Product identification number. Foreign key to Product.ProductID
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductListPriceHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ProductListPriceHistoryEntityData.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ProductListPriceHistoryEntityData.StartDate">
            <summary>			
            StartDate : List price start date.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductListPriceHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ProductListPriceHistoryEntityData.OriginalStartDate">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ProductListPriceHistoryEntityData.EndDate">
            <summary>
            EndDate : List price end date
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ProductListPriceHistoryEntityData.ListPrice">
            <summary>
            ListPrice : Product list price.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ProductListPriceHistoryEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ProductListPriceHistoryEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ProductListPriceHistoryEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ProductListPriceHistoryEntityData.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase.ProductListPriceHistoryEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistory.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductInventory">
            <summary>
             Product inventory information.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductInventoryBase">
            <summary>
             Product inventory information.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IProductInventory">
            <summary>
            	The data structure representation of the 'ProductInventory' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IProductInventory.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductInventory.ProductId">
            <summary>			
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductInventory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductInventory.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductInventory.LocationId">
            <summary>			
            LocationID : Inventory location identification number. Foreign key to Location.LocationID. 
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductInventory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductInventory.OriginalLocationId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductInventory.Shelf">
            <summary>
            Shelf : Storage compartment within an inventory location.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductInventory.Bin">
            <summary>
            Bin : Storage container on a shelf in an inventory location.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductInventory.Quantity">
            <summary>
            Quantity : Quantity of products in the inventory location.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductInventory.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductInventory.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventoryBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.#ctor(System.Int32,System.Int16,System.String,System.Byte,System.Int16,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventoryBase"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <param name="_shelf">Storage compartment within an inventory location.</param>
            <param name="_bin">Storage container on a shelf in an inventory location.</param>
            <param name="_quantity">Quantity of products in the inventory location.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.CreateProductInventory(System.Int32,System.Int16,System.String,System.Byte,System.Int16,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <param name="_shelf">Storage compartment within an inventory location.</param>
            <param name="_bin">Storage container on a shelf in an inventory location.</param>
            <param name="_quantity">Quantity of products in the inventory location.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ProductInventory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.Copy">
            <summary>
              Returns a Typed ProductInventory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.DeepCopy">
            <summary>
              Returns a Typed ProductInventory Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ProductInventoryColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.GetOriginalEntity">
            <summary>
              Returns a ProductInventory Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventoryBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.Equals(Nettiers.AdventureWorks.Entities.ProductInventoryBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ValueEquals(Nettiers.AdventureWorks.Entities.ProductInventoryBase,Nettiers.AdventureWorks.Entities.ProductInventoryBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventoryBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventoryBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventoryBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductInventoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductInventoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductInventoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductInventoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Product identification number. Foreign key to Product.ProductID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.OriginalProductId">
            <summary>
            	Get the original value of the ProductID property.
            	Product identification number. Foreign key to Product.ProductID.
            </summary>
            <remarks>This is the original value of the ProductID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.LocationId">
            <summary>
            	Gets or sets the LocationId property. 
            	Inventory location identification number. Foreign key to Location.LocationID. 
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.OriginalLocationId">
            <summary>
            	Get the original value of the LocationID property.
            	Inventory location identification number. Foreign key to Location.LocationID. 
            </summary>
            <remarks>This is the original value of the LocationID property.</remarks>
            <value>This type is smallint</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.Shelf">
            <summary>
            	Gets or sets the Shelf property. 
            	Storage compartment within an inventory location.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.Bin">
            <summary>
            	Gets or sets the Bin property. 
            	Storage container on a shelf in an inventory location.
            </summary>
            <value>This type is tinyint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.Quantity">
            <summary>
            	Gets or sets the Quantity property. 
            	Quantity of products in the inventory location.
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.LocationIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Location"/>.
            </summary>
            <value>The source Location for LocationId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductInventoryBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductInventoryBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductInventoryBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductInventoryEntityData">
            <summary>
            	The data structure representation of the 'ProductInventory' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductInventoryEntityData.ProductId">
            <summary>			
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductInventory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductInventoryEntityData.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductInventoryEntityData.LocationId">
            <summary>			
            LocationID : Inventory location identification number. Foreign key to Location.LocationID. 
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductInventory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductInventoryEntityData.OriginalLocationId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductInventoryEntityData.Shelf">
            <summary>
            Shelf : Storage compartment within an inventory location.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductInventoryEntityData.Bin">
            <summary>
            Bin : Storage container on a shelf in an inventory location.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductInventoryEntityData.Quantity">
            <summary>
            Quantity : Quantity of products in the inventory location.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductInventoryEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductInventoryEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductInventoryEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductInventoryEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductInventoryEntityData.LocationIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Location"/>.
            </summary>
            <value>The source Location for LocationId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductInventoryEntityData.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryBase.ProductInventoryEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventory.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IProductCategory">
            <summary>
            	The data structure representation of the 'ProductCategory' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IProductCategory.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductCategory.ProductCategoryId">
            <summary>			
            ProductCategoryID : Primary key for ProductCategory records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductCategory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductCategory.Name">
            <summary>
            Name : Category description.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductCategory.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductCategory.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductCategory.ProductSubcategoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productSubcategoryProductCategoryId
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IJobCandidate">
            <summary>
            	The data structure representation of the 'JobCandidate' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IJobCandidate.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IJobCandidate.JobCandidateId">
            <summary>			
            JobCandidateID : Primary key for JobCandidate records.
            </summary>
            <remarks>Member of the primary key of the underlying table "JobCandidate"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IJobCandidate.EmployeeId">
            <summary>
            EmployeeID : Employee identification number if applicant was hired. Foreign key to Employee.EmployeeID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IJobCandidate.Resume">
            <summary>
            Resume : Résumé in XML format.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IJobCandidate.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressType">
            <summary>
             Types of addresses stored in the Address table. 	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressTypeBase">
            <summary>
             Types of addresses stored in the Address table. 	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IAddressType">
            <summary>
            	The data structure representation of the 'AddressType' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IAddressType.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddressType.AddressTypeId">
            <summary>			
            AddressTypeID : Primary key for AddressType records.
            </summary>
            <remarks>Member of the primary key of the underlying table "AddressType"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddressType.Name">
            <summary>
            Name : Address type description. For example, Billing, Home, or Shipping.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddressType.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddressType.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddressType.VendorAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _vendorAddressAddressTypeId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IAddressType.CustomerAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _customerAddressAddressTypeId
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressTypeBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressTypeBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressTypeBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressTypeBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressTypeBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.AddressTypeBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.#ctor(System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.AddressTypeBase"/> instance.
            </summary>
            <param name="_name">Address type description. For example, Billing, Home, or Shipping.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.CreateAddressType(System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> instance.
            </summary>
            <param name="_name">Address type description. For example, Billing, Home, or Shipping.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed AddressType Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.Copy">
            <summary>
              Returns a Typed AddressType Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.DeepCopy">
            <summary>
              Returns a Typed AddressType Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.AddressTypeColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.GetOriginalEntity">
            <summary>
              Returns a AddressType Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.AddressTypeBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.AddressTypeBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.Equals(Nettiers.AdventureWorks.Entities.AddressTypeBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.AddressTypeBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.ValueEquals(Nettiers.AdventureWorks.Entities.AddressTypeBase,Nettiers.AdventureWorks.Entities.AddressTypeBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.AddressTypeBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.AddressTypeBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.AddressTypeBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.AddressTypeColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.AddressTypeBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.AddressTypeColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.AddressTypeColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.AddressTypeBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.AddressTypeColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.AddressTypeColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.AddressTypeBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.AddressTypeColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.AddressTypeColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.AddressTypeBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.AddressTypeColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.AddressTypeBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.AddressTypeBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.AddressTypeId">
            <summary>
            	Gets or sets the AddressTypeId property. 
            	Primary key for AddressType records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Address type description. For example, Billing, Home, or Shipping.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.VendorAddressCollection">
            <summary>
            Holds a collection of VendorAddress objects
            which are related to this object through the relation FK_VendorAddress_AddressType_AddressTypeID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.CustomerAddressCollection">
            <summary>
            Holds a collection of CustomerAddress objects
            which are related to this object through the relation FK_CustomerAddress_AddressType_AddressTypeID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.AddressTypeBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.AddressTypeBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressTypeBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressTypeBase.AddressTypeEntityData">
            <summary>
            	The data structure representation of the 'AddressType' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressTypeBase.AddressTypeEntityData.AddressTypeId">
            <summary>			
            AddressTypeID : Primary key for AddressType records.
            </summary>
            <remarks>Member of the primary key of the underlying table "AddressType"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressTypeBase.AddressTypeEntityData.Name">
            <summary>
            Name : Address type description. For example, Billing, Home, or Shipping.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressTypeBase.AddressTypeEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressTypeBase.AddressTypeEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.AddressTypeEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeBase.AddressTypeEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.AddressTypeEntityData.VendorAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _vendorAddressAddressTypeId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.AddressTypeEntityData.CustomerAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _customerAddressAddressTypeId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeBase.AddressTypeEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressType.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VList`1">
            <summary>
            A generic collection for the nettiers entities that are generated from views. 
            Supports filtering, databinding, searching and sorting.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ListBase`1">
            <summary>
            A abstract generic base class for the nettiers entities that are generated from tables and views. 
            Supports filtering, databinding, searching and sorting.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TList{T}"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.InitializeList">
            <summary>
            Initialize any member variables when the list is created
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Searches for the index of the item that has the specified property descriptor with the specified value.
            </summary>
            <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> to search for.</param>
            <param name="key">The value of <i>property</i> to match.</param>
            <returns>The zero-based index of the item that matches the property descriptor and contains the specified value. </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object,System.Boolean)">
            <summary>
            Searches for the index of the item that has the specified property descriptor with the specified value.
            </summary>
            <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> to search for.</param>
            <param name="key">The value of <i>property</i> to match.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
            <returns>The zero-based index of the item that matches the property descriptor and contains the specified value. </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object,System.Int32,System.Boolean)">
            <summary>
            Searches for the index of the item that has the specified property descriptor with the specified value.
            </summary>
            <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor"> to search for.</see></param>
            <param name="key">The value of <i>property</i> to match.</param>
            <param name="start">The index in the list at which to start the search.</param>
            <param name="ignoreCase">Indicator of whether to perform a case-sensitive or case insensitive search (string properties only).</param>
            <returns>The zero-based index of the item that matches the property descriptor and contains the specified value. </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the items in the list
            </summary>
            <param name="prop">A <see cref="T:System.ComponentModel.PropertyDescriptor"/> that specifies the property to sort on.</param>
            <param name="direction">One of the <see cref="T:System.ComponentModel.ListSortDirection"/> values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.RemoveSortCore">
            <summary>
            Removes any sort applied to the list.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.RemoveFilter">
            <summary>
            Removes the current filter applied to the data source..
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
            <summary>
             Sorts the data source based on the given <see cref="T:System.ComponentModel.ListSortDescriptionCollection"/>.
            </summary>
            <param name="sorts">The <see cref="T:System.ComponentModel.ListSortDescriptionCollection"/> containing the sorts to apply to the data source.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
             Sorts the data source based on a <see cref="T:System.ComponentModel.PropertyDescriptor">PropertyDescriptor</see> and a <see cref="T:System.ComponentModel.ListSortDirection">ListSortDirection</see>.
            </summary>
            <param name="property">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> to sort the collection by.</param>
            <param name="direction">The <see cref="T:System.ComponentModel.ListSortDirection"/> in which to sort the collection.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.ApplySortInternal(System.Comparison{`0})">
            <summary>
            Sorts the elements in the entire list using the specified <see cref="T:System.Comparison`1"/>.
            </summary>
            <param name="comparison">The <see cref="T:System.Comparison`1"/> to use when comparing elements.</param>
            <exception cref="T:System.ArgumentNullException">comparison is a null reference.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.ApplySortInternal(System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in the entire list using the specified comparer. 
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1"/> implementation to use when comparing elements, or a null reference (Nothing in Visual Basic) to use the default comparer <see cref="F:System.Collections.Comparer.Default"/>.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in the entire list using the specified comparer. 
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1"/> implementation to use when comparing elements, or a null reference (Nothing in Visual Basic) to use the default comparer <see cref="F:System.Collections.Comparer.Default"/>.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.Sort(System.Comparison{`0})">
            <summary>
            Sorts the elements in the entire list using the specified <see cref="T:System.Comparison`1"/>.
            </summary>
            <param name="comparison">The <see cref="T:System.Comparison`1"/> to use when comparing elements.</param>
            <exception cref="T:System.ArgumentNullException">comparison is a null reference.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.Sort(System.String)">
            <summary>
            Sorts the elements in the entire list using the specified Order By statement.
            </summary>
            <param name="orderBy">SQL-like string representing the properties to sort the list by.</param>
            <remarks><i>orderBy</i> should be in the following format: 
            <para>PropertyName[[ [[ASC]|DESC]][, PropertyName[ [[ASC]|DESC]][,...]]]</para></remarks>
            <example><c>list.Sort("Property1, Property2 DESC, Property3 ASC");</c></example>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.ApplyFilter">
            <summary>
            Force the filtering of the collection, based on the filter expression set through the <see cref="P:Nettiers.AdventureWorks.Entities.ListBase`1.Filter"/> property.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.ApplyFilter(System.Predicate{`0})">
            <summary>
            Force the filtering of the collection, based on the use of the specified Predicate.
            </summary>
            <param name="match"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.RemoveFilteredItem(System.Int32)">
            <summary>
            Removes the non criteria matching item at the specified index for the current filter set.
            Adds the Item to the ExcludedItem  collection without changing EntityState
            </summary>
            <param name="index">The zero-based index of non criteria matching item to remove.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.OnItemChanged(System.Object,System.EventArgs)">
            <summary>
            Represents the method that will handle the ItemChanged event of the CurrencyManager class
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An EventArgs that contains the event data.</param>
            <remarks>This raises the ListChanged event of the list.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.Shuffle">
             <summary>
            		Sorts the collection based on a random shuffle.
             </summary>
             <author>Steven Smith</author>
             <url>http://blogs.aspadvice.com/ssmith/archive/2005/01/27/2480.aspx</url>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.Clone">
            <summary>
             Creates an exact copy of this instance.
            </summary>
            <implements><see cref="M:System.ICloneable.Clone"/></implements>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.Clone(System.Collections.IDictionary)">
            <summary>
             Creates an exact copy of this instance.
            </summary>
            <implements><see cref="M:Nettiers.AdventureWorks.Entities.ICloneableEx.Clone(System.Collections.IDictionary)"/></implements>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.MakeCopyOf(System.Object)">
            <summary>
             Creates an exact copy of this TList{T} object.
            </summary>
            <returns>A new, identical copy of the TList{T} casted as object.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Creates an exact copy of this TList{T} object.
            </summary>
            <returns>A new, identical copy of the TList{T} casted as object.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.EntityChanged(`0)">
            <summary>
            Raises the ListChanged event indicating that a item in the list has changed.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            This member allows binding objects to discover the field/column information.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            This member returns the name displayed in the IDE.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.GetList">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.Find(System.Enum,System.Object)">
            <summary>
             Finds the first <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object in the current list matching the search criteria.
            </summary>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.Find(System.Enum,System.Object,System.Boolean)">
            <summary>
             Finds the first <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object in the current list matching the search criteria.
            </summary>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.Find(System.String,System.Object)">
            <summary>
             Finds the first <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object in the current list matching the search criteria.
            </summary>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.Find(System.String,System.Object,System.Boolean)">
            <summary>
             Finds the first <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object in the current list matching the search criteria.
            </summary>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.OnDeserialization(System.Object)">
            <summary>
            Runs when the entire object graph has been deserialized.
            </summary>
            <param name="sender">The object that initiated the callback.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.IsNullOrEmpty(Nettiers.AdventureWorks.Entities.ListBase{`0})">
            <summary>
            Indicates whether the specified TList object is a null reference (Nothing in Visual Basic) or an empty collection (no item in it).
            </summary>
            <param name="list">The list.</param>
            <returns>
            	<c>true</c> if the object is null or has no item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.ForEach(System.Action{`0})">
            <summary>
            Performs the specified action on each element of the specified array.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.AddRange(`0[])">
            <summary>
            Adds an array of items to the list of items for a TList.
            </summary>
            <param name="array">The array of items to add.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.AddRange(Nettiers.AdventureWorks.Entities.ListBase{`0})">
            <summary>
            Adds an array of items to the list of items for a TList.
            </summary>
            <param name="list">The list of items to add.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.AddRange(System.Collections.Generic.List{`0})">
            <summary>
            Adds an array of items to the list of items for a VList.
            </summary>
            <param name="list">The list of items to add.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.FindAll(System.Predicate{`0})">
            <summary>
            Retrieves the all the elements that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the elements to search for.</param>
            <returns>
            A <see cref="T:TList`1"></see> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:TList`1"></see>.
            </returns>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>		
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.Find(System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:TList`1"></see>.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <returns>
            The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type T.
            </returns>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.ToArray">
            <summary>
             Convert list of entities to an <see cref="T:System.Array"/>
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.ToDataSet(System.Boolean)">
            <summary>
            Recursively adds child relationships of a <seealso cref="T:Nettiers.AdventureWorks.Entities.ListBase`1"/> Entities and 
            builds out a nested dataset including <see cref="T:System.Data.DataRelation"/> relationships.
            </summary>
            <param name="includeChildren">You can optionally go deep by including includeChildren</param>
            <returns>DataSet</returns>
            <example>
             An example using the Northwind database would be to deep load a TList or VList, 
             and then call list.ToDataSet(true/false);
             <code><![CDATA[
               TList<Categories> list = DataRepository.CategoriesProvider.GetAll();
               DataRepository.CategoriesProvider.DeepLoad(list, true);
               DataSet ds = list.ToDataSet(true);
               ds.WriteXml("C:\\Test2.xml");
               ]]></code>
            </example>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ListBase`1.AddRelations(System.Data.DataSet,System.Collections.Generic.List{System.Data.DataColumn},System.Boolean)">
            <summary>
            Recursively adds child relationships of a TList's Entity and builds out a nested dataset including relationships.
            </summary>
            <param name="dataset">An already instatiated dataset which will be used to fill all objects.</param>
            <param name="parentKeys">Used to pass down the parent primary key to a child datatable to add a dataRelation</param>
            <param name="includeChildren">bool, include deep load of all child collections in this object graph?</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ListBase`1.SupportsSearchingCore">
            <summary>
            Gets a value indicating whether the list supports searching. 
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ListBase`1.SupportsSortingCore">
            <summary>
            Gets a value indicating whether the list supports sorting. 
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ListBase`1.IsSortedCore">
            <summary>
            Gets a value indicating whether the list is sorted. 
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ListBase`1.SortDirectionCore">
            <summary>
            Gets the direction the list is sorted.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ListBase`1.SortPropertyCore">
            <summary>
            Gets the property descriptor that is used for sorting
            </summary>
            <returns>The <see cref="T:System.ComponentModel.PropertyDescriptor"/> used for sorting the list.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ListBase`1.Filter">
            <summary>
            Gets or sets the filter to be used to exclude items from the collection of items returned by the data source.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ListBase`1.SortDescriptions">
            <summary>
            Gets the collection of sort descriptions currently applied to the data source.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ListBase`1.SupportsAdvancedSorting">
            <summary>
            Gets a value indicating whether the data source supports advanced sorting.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ListBase`1.SupportsFiltering">
            <summary>
            Gets a value indicating whether the data source supports filtering.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ListBase`1.IsFiltering">
            <summary>
            Indicates whether a filter is currently applied to the collection.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ListBase`1.ExcludedItems">
            <summary>
            Get the list of items that are excluded by the current filter.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ListBase`1.System#ComponentModel#IRaiseItemChangedEvents#RaisesItemChangedEvents">
            <summary>
            Gets a value indicating whether the object raises <see cref="E:System.ComponentModel.IBindingList.ListChanged"/> events.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ListBase`1.PropertyCollection">
            <summary>
            Gets or sets the property descriptor collection for T.  
            </summary>
            <value>The property collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ListBase`1.ContainsListCollection">
            <summary>
            Return TRUE if our list contains additional/child lists.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ListBase`1.Site">
            <summary>
            Get / Set the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ListBase`1.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VList{T}"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.#ctor(System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:VList{T}"/> class based on another list.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts the specified item in the list at the specified index.
            </summary>
            <param name="index">The zero-based index where the item is to be inserted.</param>
            <param name="item">The item to insert in the list.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.Clone">
            <summary>
             Creates an exact copy of this VList{T} instance.
            </summary>
            <returns>The VList{T} object this method creates, cast as an object.</returns>
            <implements><see cref="M:System.ICloneable.Clone"/></implements>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.Copy">
            <summary>
             Creates an exact copy of this VList{T} object.
            </summary>
            <returns>A new, identical copy of the VList{T}.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.ForEach``1(Nettiers.AdventureWorks.Entities.VList{``0},System.Action{``0})">
            <summary>
            Performs the specified action on each element of the specified array.
            </summary>
            <param name="list">The list.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.FindAll(System.Enum,System.Object)">
            <summary>
             Finds a collection of objects in the current list matching the search criteria.
            </summary>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.FindAll(System.Enum,System.Object,System.Boolean)">
            <summary>
             Finds a collection of objects in the current list matching the search criteria.
            </summary>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.FindAll(System.String,System.Object)">
            <summary>
             Finds a collection of objects in the current list matching the search criteria.
            </summary>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.FindAll(System.String,System.Object,System.Boolean)">
            <summary>
             Finds a collection of objects in the current list matching the search criteria.
            </summary>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.FindAllBy(Nettiers.AdventureWorks.Entities.VList{`0}.FindAllByType,System.Enum,System.Object)">
            <summary>
             Finds a collection of <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:Nettiers.AdventureWorks.Entities.VList`1.FindAllByType"/> Type to easily search by</param>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.FindAllBy(Nettiers.AdventureWorks.Entities.VList{`0}.FindAllByType,System.Enum,System.Object,System.Boolean)">
            <summary>
             Finds a collection of <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:Nettiers.AdventureWorks.Entities.VList`1.FindAllByType"/> Type to easily search by</param>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.FindAllBy(Nettiers.AdventureWorks.Entities.VList{`0}.FindAllByType,System.String,System.Object)">
            <summary>
             Finds a collection of <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:Nettiers.AdventureWorks.Entities.VList`1.FindAllByType"/> Type to easily search by</param>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.FindAllBy(Nettiers.AdventureWorks.Entities.VList{`0}.FindAllByType,System.String,System.Object,System.Boolean)">
            <summary>
             Finds a collection of <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:Nettiers.AdventureWorks.Entities.VList`1.FindAllByType"/> Type to easily search by</param>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.FindAllBy(Nettiers.AdventureWorks.Entities.VList{`0}.FindAllByType,System.ComponentModel.PropertyDescriptor,System.Object,System.Int32,System.Boolean)">
            <summary>
            Searches for the index of the item that has the specified property descriptor with the specified value.
            </summary>
            <param name="findAllByType"><see cref="T:Nettiers.AdventureWorks.Entities.VList`1.FindAllByType"/> Type to easily search by</param>
            <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor"> to search for.</see></param>
            <param name="key">The value of <i>property</i> to match.</param>
            <param name="start">The index in the list at which to start the search.</param>
            <param name="ignoreCase">Indicator of whether to perform a case-sensitive or case insensitive search (string properties only).</param>
            <returns>The zero-based index of the item that matches the property descriptor and contains the specified value. </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.FindAllDistinct(System.Enum)">
            <summary>
            Finds all distinct elements for the specified column
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VList`1.FindAllDistinct(System.String)">
            <summary>
            Finds all distinct elements for the specified column
            </summary>
            <param name="columnName">Name of the column.</param>
            <returns></returns>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VList`1.FindAllByType">
            <summary>
             Used to by FindAllBy method to all for easy searching.
             </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VList`1.FindAllByType.StartsWith">
            <summary>
            Starts with Value in List
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VList`1.FindAllByType.EndsWith">
            <summary>
            Ends with Value in List
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VList`1.FindAllByType.Contains">
            <summary>
            Contains Value in List
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.UnitMeasure">
            <summary>
             Unit of measure lookup table.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.UnitMeasureBase">
            <summary>
             Unit of measure lookup table.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.UnitMeasureBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.UnitMeasureBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.UnitMeasureBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.UnitMeasureBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.UnitMeasureBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasureBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.#ctor(System.String,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasureBase"/> instance.
            </summary>
            <param name="_unitMeasureCode">Primary key.</param>
            <param name="_name">Unit of measure description.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.CreateUnitMeasure(System.String,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> instance.
            </summary>
            <param name="_unitMeasureCode">Primary key.</param>
            <param name="_name">Unit of measure description.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed UnitMeasure Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.Copy">
            <summary>
              Returns a Typed UnitMeasure Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.DeepCopy">
            <summary>
              Returns a Typed UnitMeasure Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.UnitMeasureColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.GetOriginalEntity">
            <summary>
              Returns a UnitMeasure Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasureBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasureBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.Equals(Nettiers.AdventureWorks.Entities.UnitMeasureBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasureBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.ValueEquals(Nettiers.AdventureWorks.Entities.UnitMeasureBase,Nettiers.AdventureWorks.Entities.UnitMeasureBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasureBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasureBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasureBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.UnitMeasureColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.UnitMeasureBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasureColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.UnitMeasureColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.UnitMeasureBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasureColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.UnitMeasureColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.UnitMeasureBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasureColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.UnitMeasureColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.UnitMeasureBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasureColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.UnitMeasureBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.UnitMeasureBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.UnitMeasureCode">
            <summary>
            	Gets or sets the UnitMeasureCode property. 
            	Primary key.
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.OriginalUnitMeasureCode">
            <summary>
            	Get the original value of the UnitMeasureCode property.
            	Primary key.
            </summary>
            <remarks>This is the original value of the UnitMeasureCode property.</remarks>
            <value>This type is nchar</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Unit of measure description.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.BillOfMaterialsCollection">
            <summary>
            Holds a collection of BillOfMaterials objects
            which are related to this object through the relation FK_BillOfMaterials_UnitMeasure_UnitMeasureCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.ProductCollectionGetByWeightUnitMeasureCode">
            <summary>
            Holds a collection of Product objects
            which are related to this object through the relation FK_Product_UnitMeasure_WeightUnitMeasureCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.ProductVendorCollection">
            <summary>
            Holds a collection of ProductVendor objects
            which are related to this object through the relation FK_ProductVendor_UnitMeasure_UnitMeasureCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.ProductCollectionGetBySizeUnitMeasureCode">
            <summary>
            Holds a collection of Product objects
            which are related to this object through the relation FK_Product_UnitMeasure_SizeUnitMeasureCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.UnitMeasureBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.UnitMeasureBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.UnitMeasureBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.UnitMeasureBase.UnitMeasureEntityData">
            <summary>
            	The data structure representation of the 'UnitMeasure' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.UnitMeasureBase.UnitMeasureEntityData.UnitMeasureCode">
            <summary>			
            UnitMeasureCode : Primary key.
            </summary>
            <remarks>Member of the primary key of the underlying table "UnitMeasure"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.UnitMeasureBase.UnitMeasureEntityData.OriginalUnitMeasureCode">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.UnitMeasureBase.UnitMeasureEntityData.Name">
            <summary>
            Name : Unit of measure description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.UnitMeasureBase.UnitMeasureEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.UnitMeasureEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureBase.UnitMeasureEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.UnitMeasureEntityData.BillOfMaterialsCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _billOfMaterialsUnitMeasureCode
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.UnitMeasureEntityData.ProductCollectionGetByWeightUnitMeasureCode">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productWeightUnitMeasureCodeGetByWeightUnitMeasureCode
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.UnitMeasureEntityData.ProductVendorCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productVendorUnitMeasureCode
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.UnitMeasureEntityData.ProductCollectionGetBySizeUnitMeasureCode">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productWeightUnitMeasureCodeGetBySizeUnitMeasureCode
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureBase.UnitMeasureEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasure.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TestVariant">
            <summary>
             An object representation of the 'TestVariant' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TestVariant.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase">
            <summary>
             Contains online customer orders until the order is submitted or cancelled.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IShoppingCartItem">
            <summary>
            	The data structure representation of the 'ShoppingCartItem' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IShoppingCartItem.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShoppingCartItem.ShoppingCartItemId">
            <summary>			
            ShoppingCartItemID : Primary key for ShoppingCartItem records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ShoppingCartItem"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShoppingCartItem.ShoppingCartId">
            <summary>
            ShoppingCartID : Shopping cart identification number.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShoppingCartItem.Quantity">
            <summary>
            Quantity : Product quantity ordered.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShoppingCartItem.ProductId">
            <summary>
            ProductID : Product ordered. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShoppingCartItem.DateCreated">
            <summary>
            DateCreated : Date the time the record was created.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IShoppingCartItem.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.#ctor(System.String,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase"/> instance.
            </summary>
            <param name="_shoppingCartId">Shopping cart identification number.</param>
            <param name="_quantity">Product quantity ordered.</param>
            <param name="_productId">Product ordered. Foreign key to Product.ProductID.</param>
            <param name="_dateCreated">Date the time the record was created.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.CreateShoppingCartItem(System.String,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> instance.
            </summary>
            <param name="_shoppingCartId">Shopping cart identification number.</param>
            <param name="_quantity">Product quantity ordered.</param>
            <param name="_productId">Product ordered. Foreign key to Product.ProductID.</param>
            <param name="_dateCreated">Date the time the record was created.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ShoppingCartItem Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.Copy">
            <summary>
              Returns a Typed ShoppingCartItem Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.DeepCopy">
            <summary>
              Returns a Typed ShoppingCartItem Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.GetOriginalEntity">
            <summary>
              Returns a ShoppingCartItem Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.Equals(Nettiers.AdventureWorks.Entities.ShoppingCartItemBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ValueEquals(Nettiers.AdventureWorks.Entities.ShoppingCartItemBase,Nettiers.AdventureWorks.Entities.ShoppingCartItemBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ShoppingCartItemId">
            <summary>
            	Gets or sets the ShoppingCartItemId property. 
            	Primary key for ShoppingCartItem records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ShoppingCartId">
            <summary>
            	Gets or sets the ShoppingCartId property. 
            	Shopping cart identification number.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.Quantity">
            <summary>
            	Gets or sets the Quantity property. 
            	Product quantity ordered.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Product ordered. Foreign key to Product.ProductID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.DateCreated">
            <summary>
            	Gets or sets the DateCreated property. 
            	Date the time the record was created.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ShoppingCartItemEntityData">
            <summary>
            	The data structure representation of the 'ShoppingCartItem' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ShoppingCartItemEntityData.ShoppingCartItemId">
            <summary>			
            ShoppingCartItemID : Primary key for ShoppingCartItem records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ShoppingCartItem"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ShoppingCartItemEntityData.ShoppingCartId">
            <summary>
            ShoppingCartID : Shopping cart identification number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ShoppingCartItemEntityData.Quantity">
            <summary>
            Quantity : Product quantity ordered.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ShoppingCartItemEntityData.ProductId">
            <summary>
            ProductID : Product ordered. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ShoppingCartItemEntityData.DateCreated">
            <summary>
            DateCreated : Date the time the record was created.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ShoppingCartItemEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ShoppingCartItemEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ShoppingCartItemEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ShoppingCartItemEntityData.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemBase.ShoppingCartItemEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn)">
            <summary>
             Initalizes a new Instance of the ShoppingCartItemEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ShoppingCartItemEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemEventArgs.Column">
            <summary>
             The ShoppingCartItemColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemEventHandler">
            <summary>
             Define a delegate for all ShoppingCartItem related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ShoppingCartItemComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemComparer.#ctor(Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ShoppingCartItemComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemComparer.Equals(Nettiers.AdventureWorks.Entities.ShoppingCartItem,Nettiers.AdventureWorks.Entities.ShoppingCartItem)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> to compare.</param>
            <param name="b">The second <c>ShoppingCartItem</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ShoppingCartItem)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemComparer.Compare(Nettiers.AdventureWorks.Entities.ShoppingCartItem,Nettiers.AdventureWorks.Entities.ShoppingCartItem)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemKey.#ctor">
            <summary>
            Initializes a new instance of the ShoppingCartItemKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemKey.#ctor(Nettiers.AdventureWorks.Entities.ShoppingCartItemBase)">
            <summary>
            Initializes a new instance of the ShoppingCartItemKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ShoppingCartItemKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItemKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShoppingCartItemKey.ShoppingCartItemId">
            <summary>
            Gets or sets the ShoppingCartItemId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn">
            <summary>
            Enumerate the ShoppingCartItem columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn.ShoppingCartItemId">
            <summary>
            ShoppingCartItemId : Primary key for ShoppingCartItem records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn.ShoppingCartId">
            <summary>
            ShoppingCartId : Shopping cart identification number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn.Quantity">
            <summary>
            Quantity : Product quantity ordered.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn.ProductId">
            <summary>
            ProductId : Product ordered. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn.DateCreated">
            <summary>
            DateCreated : Date the time the record was created.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShoppingCartItemColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader">
            <summary>
            	The data structure representation of the 'PurchaseOrderHeader' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader.PurchaseOrderId">
            <summary>			
            PurchaseOrderID : Primary key.
            </summary>
            <remarks>Member of the primary key of the underlying table "PurchaseOrderHeader"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader.RevisionNumber">
            <summary>
            RevisionNumber : Incremental number to track changes to the purchase order over time.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader.Status">
            <summary>
            Status : Order current status. 1 = Pending; 2 = Approved; 3 = Rejected; 4 = Complete
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader.EmployeeId">
            <summary>
            EmployeeID : Employee who created the purchase order. Foreign key to Employee.EmployeeID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader.VendorId">
            <summary>
            VendorID : Vendor with whom the purchase order is placed. Foreign key to Vendor.VendorID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader.ShipMethodId">
            <summary>
            ShipMethodID : Shipping method. Foreign key to ShipMethod.ShipMethodID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader.OrderDate">
            <summary>
            OrderDate : Purchase order creation date.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader.ShipDate">
            <summary>
            ShipDate : Estimated shipment date from the vendor.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader.SubTotal">
            <summary>
            SubTotal : Purchase order subtotal. Computed as SUM(PurchaseOrderDetail.LineTotal)for the appropriate PurchaseOrderID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader.TaxAmt">
            <summary>
            TaxAmt : Tax amount.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader.Freight">
            <summary>
            Freight : Shipping cost.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader.TotalDue">
            <summary>
            TotalDue : Total due to vendor. Computed as Subtotal + TaxAmt + Freight.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderHeader.PurchaseOrderDetailCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _purchaseOrderDetailPurchaseOrderId
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductSubcategory">
            <summary>
             Product subcategories. See ProductCategory table.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase">
            <summary>
             Product subcategories. See ProductCategory table.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IProductSubcategory">
            <summary>
            	The data structure representation of the 'ProductSubcategory' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IProductSubcategory.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductSubcategory.ProductSubcategoryId">
            <summary>			
            ProductSubcategoryID : Primary key for ProductSubcategory records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductSubcategory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductSubcategory.ProductCategoryId">
            <summary>
            ProductCategoryID : Product category identification number. Foreign key to ProductCategory.ProductCategoryID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductSubcategory.Name">
            <summary>
            Name : Subcategory description.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductSubcategory.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductSubcategory.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductSubcategory.ProductCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productProductSubcategoryId
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.#ctor(System.Int32,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase"/> instance.
            </summary>
            <param name="_productCategoryId">Product category identification number. Foreign key to ProductCategory.ProductCategoryID.</param>
            <param name="_name">Subcategory description.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.CreateProductSubcategory(System.Int32,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> instance.
            </summary>
            <param name="_productCategoryId">Product category identification number. Foreign key to ProductCategory.ProductCategoryID.</param>
            <param name="_name">Subcategory description.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ProductSubcategory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.Copy">
            <summary>
              Returns a Typed ProductSubcategory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.DeepCopy">
            <summary>
              Returns a Typed ProductSubcategory Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.GetOriginalEntity">
            <summary>
              Returns a ProductSubcategory Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.Equals(Nettiers.AdventureWorks.Entities.ProductSubcategoryBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ValueEquals(Nettiers.AdventureWorks.Entities.ProductSubcategoryBase,Nettiers.AdventureWorks.Entities.ProductSubcategoryBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ProductSubcategoryId">
            <summary>
            	Gets or sets the ProductSubcategoryId property. 
            	Primary key for ProductSubcategory records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ProductCategoryId">
            <summary>
            	Gets or sets the ProductCategoryId property. 
            	Product category identification number. Foreign key to ProductCategory.ProductCategoryID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Subcategory description.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ProductCategoryIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/>.
            </summary>
            <value>The source ProductCategory for ProductCategoryId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ProductCollection">
            <summary>
            Holds a collection of Product objects
            which are related to this object through the relation FK_Product_ProductSubcategory_ProductSubcategoryID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ProductSubcategoryEntityData">
            <summary>
            	The data structure representation of the 'ProductSubcategory' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ProductSubcategoryEntityData.ProductSubcategoryId">
            <summary>			
            ProductSubcategoryID : Primary key for ProductSubcategory records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductSubcategory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ProductSubcategoryEntityData.ProductCategoryId">
            <summary>
            ProductCategoryID : Product category identification number. Foreign key to ProductCategory.ProductCategoryID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ProductSubcategoryEntityData.Name">
            <summary>
            Name : Subcategory description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ProductSubcategoryEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ProductSubcategoryEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ProductSubcategoryEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ProductSubcategoryEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ProductSubcategoryEntityData.ProductCategoryIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/>.
            </summary>
            <value>The source ProductCategory for ProductCategoryId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ProductSubcategoryEntityData.ProductCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productProductSubcategoryId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryBase.ProductSubcategoryEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategory.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase">
            <summary>
             Changes in the cost of a product over time.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IProductCostHistory">
            <summary>
            	The data structure representation of the 'ProductCostHistory' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IProductCostHistory.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductCostHistory.ProductId">
            <summary>			
            ProductID : Product identification number. Foreign key to Product.ProductID
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductCostHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductCostHistory.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductCostHistory.StartDate">
            <summary>			
            StartDate : Product cost start date.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductCostHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductCostHistory.OriginalStartDate">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductCostHistory.EndDate">
            <summary>
            EndDate : Product cost end date.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductCostHistory.StandardCost">
            <summary>
            StandardCost : Standard cost of the product.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductCostHistory.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.#ctor(System.Int32,System.DateTime,System.Nullable{System.DateTime},System.Decimal,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">Product cost start date.</param>
            <param name="_endDate">Product cost end date.</param>
            <param name="_standardCost">Standard cost of the product.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.CreateProductCostHistory(System.Int32,System.DateTime,System.Nullable{System.DateTime},System.Decimal,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">Product cost start date.</param>
            <param name="_endDate">Product cost end date.</param>
            <param name="_standardCost">Standard cost of the product.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ProductCostHistory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.Copy">
            <summary>
              Returns a Typed ProductCostHistory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.DeepCopy">
            <summary>
              Returns a Typed ProductCostHistory Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.GetOriginalEntity">
            <summary>
              Returns a ProductCostHistory Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.Equals(Nettiers.AdventureWorks.Entities.ProductCostHistoryBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ValueEquals(Nettiers.AdventureWorks.Entities.ProductCostHistoryBase,Nettiers.AdventureWorks.Entities.ProductCostHistoryBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Product identification number. Foreign key to Product.ProductID
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.OriginalProductId">
            <summary>
            	Get the original value of the ProductID property.
            	Product identification number. Foreign key to Product.ProductID
            </summary>
            <remarks>This is the original value of the ProductID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.StartDate">
            <summary>
            	Gets or sets the StartDate property. 
            	Product cost start date.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.OriginalStartDate">
            <summary>
            	Get the original value of the StartDate property.
            	Product cost start date.
            </summary>
            <remarks>This is the original value of the StartDate property.</remarks>
            <value>This type is datetime</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.EndDate">
            <summary>
            	Gets or sets the EndDate property. 
            	Product cost end date.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsEndDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.StandardCost">
            <summary>
            	Gets or sets the StandardCost property. 
            	Standard cost of the product.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ProductCostHistoryEntityData">
            <summary>
            	The data structure representation of the 'ProductCostHistory' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ProductCostHistoryEntityData.ProductId">
            <summary>			
            ProductID : Product identification number. Foreign key to Product.ProductID
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductCostHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ProductCostHistoryEntityData.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ProductCostHistoryEntityData.StartDate">
            <summary>			
            StartDate : Product cost start date.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductCostHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ProductCostHistoryEntityData.OriginalStartDate">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ProductCostHistoryEntityData.EndDate">
            <summary>
            EndDate : Product cost end date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ProductCostHistoryEntityData.StandardCost">
            <summary>
            StandardCost : Standard cost of the product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ProductCostHistoryEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ProductCostHistoryEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ProductCostHistoryEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ProductCostHistoryEntityData.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryBase.ProductCostHistoryEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn)">
            <summary>
             Initalizes a new Instance of the ProductCostHistoryEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ProductCostHistoryEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryEventArgs.Column">
            <summary>
             The ProductCostHistoryColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryEventHandler">
            <summary>
             Define a delegate for all ProductCostHistory related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ProductCostHistoryComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryComparer.#ctor(Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductCostHistoryComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryComparer.Equals(Nettiers.AdventureWorks.Entities.ProductCostHistory,Nettiers.AdventureWorks.Entities.ProductCostHistory)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> to compare.</param>
            <param name="b">The second <c>ProductCostHistory</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ProductCostHistory)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryComparer.Compare(Nettiers.AdventureWorks.Entities.ProductCostHistory,Nettiers.AdventureWorks.Entities.ProductCostHistory)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryKey.#ctor">
            <summary>
            Initializes a new instance of the ProductCostHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryKey.#ctor(Nettiers.AdventureWorks.Entities.ProductCostHistoryBase)">
            <summary>
            Initializes a new instance of the ProductCostHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryKey.#ctor(System.Int32,System.DateTime)">
            <summary>
            Initializes a new instance of the ProductCostHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistoryKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryKey.ProductId">
            <summary>
            Gets or sets the ProductId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCostHistoryKey.StartDate">
            <summary>
            Gets or sets the StartDate property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn">
            <summary>
            Enumerate the ProductCostHistory columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn.ProductId">
            <summary>
            ProductId : Product identification number. Foreign key to Product.ProductID
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn.StartDate">
            <summary>
            StartDate : Product cost start date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn.EndDate">
            <summary>
            EndDate : Product cost end date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn.StandardCost">
            <summary>
            StandardCost : Standard cost of the product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCostHistoryColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IEmployeePayHistory">
            <summary>
            	The data structure representation of the 'EmployeePayHistory' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IEmployeePayHistory.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeePayHistory.EmployeeId">
            <summary>			
            EmployeeID : Employee identification number. Foreign key to Employee.EmployeeID.
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeePayHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeePayHistory.OriginalEmployeeId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeePayHistory.RateChangeDate">
            <summary>			
            RateChangeDate : Date the change in pay is effective
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeePayHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeePayHistory.OriginalRateChangeDate">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeePayHistory.Rate">
            <summary>
            Rate : Salary hourly rate.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeePayHistory.PayFrequency">
            <summary>
            PayFrequency : 1 = Salary received monthly, 2 = Salary received biweekly
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployeePayHistory.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DocumentBase">
            <summary>
             Product maintenance documents.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IDocument">
            <summary>
            	The data structure representation of the 'Document' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IDocument.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDocument.DocumentId">
            <summary>			
            DocumentID : Primary key for Document records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Document"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDocument.Title">
            <summary>
            Title : Title of the document.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDocument.FileName">
            <summary>
            FileName : Directory path and file name of the document
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDocument.FileExtension">
            <summary>
            FileExtension : File extension indicating the document type. For example, .doc or .txt.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDocument.Revision">
            <summary>
            Revision : Revision number of the document. 
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDocument.ChangeNumber">
            <summary>
            ChangeNumber : Engineering change approval number.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDocument.Status">
            <summary>
            Status : 1 = Pending approval, 2 = Approved, 3 = Obsolete
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDocument.DocumentSummary">
            <summary>
            DocumentSummary : Document abstract.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDocument.Document">
            <summary>
            Document : Complete document.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDocument.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDocument.ProductDocumentCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productDocumentDocumentId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IDocument.ProductIdProductCollection_From_ProductDocument">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productIdProductCollectionFromProductDocument
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.DocumentBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Byte,System.String,System.Byte[],System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.DocumentBase"/> instance.
            </summary>
            <param name="_title">Title of the document.</param>
            <param name="_fileName">Directory path and file name of the document</param>
            <param name="_fileExtension">File extension indicating the document type. For example, .doc or .txt.</param>
            <param name="_revision">Revision number of the document. </param>
            <param name="_changeNumber">Engineering change approval number.</param>
            <param name="_status">1 = Pending approval, 2 = Approved, 3 = Obsolete</param>
            <param name="_documentSummary">Document abstract.</param>
            <param name="_document">Complete document.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.CreateDocument(System.String,System.String,System.String,System.String,System.Int32,System.Byte,System.String,System.Byte[],System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="P:Nettiers.AdventureWorks.Entities.DocumentBase.Document"/> instance.
            </summary>
            <param name="_title">Title of the document.</param>
            <param name="_fileName">Directory path and file name of the document</param>
            <param name="_fileExtension">File extension indicating the document type. For example, .doc or .txt.</param>
            <param name="_revision">Revision number of the document. </param>
            <param name="_changeNumber">Engineering change approval number.</param>
            <param name="_status">1 = Pending approval, 2 = Approved, 3 = Obsolete</param>
            <param name="_documentSummary">Document abstract.</param>
            <param name="_document">Complete document.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Document Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.Copy">
            <summary>
              Returns a Typed Document Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.DeepCopy">
            <summary>
              Returns a Typed Document Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.DocumentColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.GetOriginalEntity">
            <summary>
              Returns a Document Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.DocumentBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.DocumentBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.Equals(Nettiers.AdventureWorks.Entities.DocumentBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.DocumentBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.ValueEquals(Nettiers.AdventureWorks.Entities.DocumentBase,Nettiers.AdventureWorks.Entities.DocumentBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.DocumentBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.DocumentBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.DocumentBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.DocumentColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.DocumentBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.DocumentColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.DocumentColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.DocumentBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.DocumentColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.DocumentColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.DocumentBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.DocumentColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.DocumentColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.DocumentBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.DocumentColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.DocumentBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.DocumentBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentId">
            <summary>
            	Gets or sets the DocumentId property. 
            	Primary key for Document records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.Title">
            <summary>
            	Gets or sets the Title property. 
            	Title of the document.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.FileName">
            <summary>
            	Gets or sets the FileName property. 
            	Directory path and file name of the document
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.FileExtension">
            <summary>
            	Gets or sets the FileExtension property. 
            	File extension indicating the document type. For example, .doc or .txt.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.Revision">
            <summary>
            	Gets or sets the Revision property. 
            	Revision number of the document. 
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.ChangeNumber">
            <summary>
            	Gets or sets the ChangeNumber property. 
            	Engineering change approval number.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	1 = Pending approval, 2 = Approved, 3 = Obsolete
            </summary>
            <value>This type is tinyint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentSummary">
            <summary>
            	Gets or sets the DocumentSummary property. 
            	Document abstract.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.Document">
            <summary>
            	Gets or sets the Document property. 
            	Complete document.
            </summary>
            <value>This type is varbinary.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.ProductDocumentCollection">
            <summary>
            Holds a collection of ProductDocument objects
            which are related to this object through the relation FK_ProductDocument_Document_DocumentID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.ProductIdProductCollection_From_ProductDocument">
            <summary>
            Holds a collection of ProductFromProductDocument objects
            which are related to this object through the junction table ProductDocument
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.DocumentBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.DocumentBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DocumentBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData">
            <summary>
            	The data structure representation of the 'Document' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData.DocumentId">
            <summary>			
            DocumentID : Primary key for Document records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Document"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData.Title">
            <summary>
            Title : Title of the document.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData.FileName">
            <summary>
            FileName : Directory path and file name of the document
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData.FileExtension">
            <summary>
            FileExtension : File extension indicating the document type. For example, .doc or .txt.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData.Revision">
            <summary>
            Revision : Revision number of the document. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData.ChangeNumber">
            <summary>
            ChangeNumber : Engineering change approval number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData.Status">
            <summary>
            Status : 1 = Pending approval, 2 = Approved, 3 = Obsolete
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData.DocumentSummary">
            <summary>
            DocumentSummary : Document abstract.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData.Document">
            <summary>
            Document : Complete document.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData.ProductDocumentCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productDocumentDocumentId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData.ProductIdProductCollection_From_ProductDocument">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productIdProductCollectionFromProductDocument
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentBase.DocumentEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DocumentEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentEventArgs.#ctor(Nettiers.AdventureWorks.Entities.DocumentColumn)">
            <summary>
             Initalizes a new Instance of the DocumentEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentEventArgs.#ctor(Nettiers.AdventureWorks.Entities.DocumentColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the DocumentEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentEventArgs.Column">
            <summary>
             The DocumentColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.DocumentColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DocumentEventHandler">
            <summary>
             Define a delegate for all Document related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DocumentComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocumentComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentComparer.#ctor(Nettiers.AdventureWorks.Entities.DocumentColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:DocumentComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentComparer.Equals(Nettiers.AdventureWorks.Entities.Document,Nettiers.AdventureWorks.Entities.Document)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> to compare.</param>
            <param name="b">The second <c>Document</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentComparer.GetHashCode(Nettiers.AdventureWorks.Entities.Document)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentComparer.Compare(Nettiers.AdventureWorks.Entities.Document,Nettiers.AdventureWorks.Entities.Document)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DocumentKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentKey.#ctor">
            <summary>
            Initializes a new instance of the DocumentKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentKey.#ctor(Nettiers.AdventureWorks.Entities.DocumentBase)">
            <summary>
            Initializes a new instance of the DocumentKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the DocumentKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DocumentKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DocumentKey.DocumentId">
            <summary>
            Gets or sets the DocumentId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DocumentColumn">
            <summary>
            Enumerate the Document columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentColumn.DocumentId">
            <summary>
            DocumentId : Primary key for Document records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentColumn.Title">
            <summary>
            Title : Title of the document.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentColumn.FileName">
            <summary>
            FileName : Directory path and file name of the document
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentColumn.FileExtension">
            <summary>
            FileExtension : File extension indicating the document type. For example, .doc or .txt.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentColumn.Revision">
            <summary>
            Revision : Revision number of the document. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentColumn.ChangeNumber">
            <summary>
            ChangeNumber : Engineering change approval number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentColumn.Status">
            <summary>
            Status : 1 = Pending approval, 2 = Approved, 3 = Obsolete
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentColumn.DocumentSummary">
            <summary>
            DocumentSummary : Document abstract.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentColumn.Document">
            <summary>
            Document : Complete document.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DocumentColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerAddress">
            <summary>
             Cross-reference table mapping customers to their address(es).	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerAddressBase">
            <summary>
             Cross-reference table mapping customers to their address(es).	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ICustomerAddress">
            <summary>
            	The data structure representation of the 'CustomerAddress' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ICustomerAddress.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomerAddress.CustomerId">
            <summary>			
            CustomerID : Primary key. Foreign key to Customer.CustomerID.
            </summary>
            <remarks>Member of the primary key of the underlying table "CustomerAddress"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomerAddress.OriginalCustomerId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomerAddress.AddressId">
            <summary>			
            AddressID : Primary key. Foreign key to Address.AddressID.
            </summary>
            <remarks>Member of the primary key of the underlying table "CustomerAddress"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomerAddress.OriginalAddressId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomerAddress.AddressTypeId">
            <summary>
            AddressTypeID : Address type. Foreign key to AddressType.AddressTypeID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomerAddress.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomerAddress.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddressBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.#ctor(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddressBase"/> instance.
            </summary>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CreateCustomerAddress(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> instance.
            </summary>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed CustomerAddress Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.Copy">
            <summary>
              Returns a Typed CustomerAddress Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.DeepCopy">
            <summary>
              Returns a Typed CustomerAddress Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.CustomerAddressColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.GetOriginalEntity">
            <summary>
              Returns a CustomerAddress Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddressBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddressBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.Equals(Nettiers.AdventureWorks.Entities.CustomerAddressBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddressBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.ValueEquals(Nettiers.AdventureWorks.Entities.CustomerAddressBase,Nettiers.AdventureWorks.Entities.CustomerAddressBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddressBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddressBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddressBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CustomerAddressColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CustomerAddressBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddressColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CustomerAddressColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CustomerAddressBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddressColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CustomerAddressColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CustomerAddressBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddressColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CustomerAddressColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CustomerAddressBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddressColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CustomerAddressBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CustomerAddressBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerId">
            <summary>
            	Gets or sets the CustomerId property. 
            	Primary key. Foreign key to Customer.CustomerID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.OriginalCustomerId">
            <summary>
            	Get the original value of the CustomerID property.
            	Primary key. Foreign key to Customer.CustomerID.
            </summary>
            <remarks>This is the original value of the CustomerID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.AddressId">
            <summary>
            	Gets or sets the AddressId property. 
            	Primary key. Foreign key to Address.AddressID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.OriginalAddressId">
            <summary>
            	Get the original value of the AddressID property.
            	Primary key. Foreign key to Address.AddressID.
            </summary>
            <remarks>This is the original value of the AddressID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.AddressTypeId">
            <summary>
            	Gets or sets the AddressTypeId property. 
            	Address type. Foreign key to AddressType.AddressTypeID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.AddressIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Address"/>.
            </summary>
            <value>The source Address for AddressId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.AddressTypeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/>.
            </summary>
            <value>The source AddressType for AddressTypeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/>.
            </summary>
            <value>The source Customer for CustomerId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CustomerAddressBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerAddressEntityData">
            <summary>
            	The data structure representation of the 'CustomerAddress' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerAddressEntityData.CustomerId">
            <summary>			
            CustomerID : Primary key. Foreign key to Customer.CustomerID.
            </summary>
            <remarks>Member of the primary key of the underlying table "CustomerAddress"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerAddressEntityData.OriginalCustomerId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerAddressEntityData.AddressId">
            <summary>			
            AddressID : Primary key. Foreign key to Address.AddressID.
            </summary>
            <remarks>Member of the primary key of the underlying table "CustomerAddress"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerAddressEntityData.OriginalAddressId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerAddressEntityData.AddressTypeId">
            <summary>
            AddressTypeID : Address type. Foreign key to AddressType.AddressTypeID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerAddressEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerAddressEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerAddressEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerAddressEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerAddressEntityData.AddressIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Address"/>.
            </summary>
            <value>The source Address for AddressId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerAddressEntityData.AddressTypeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/>.
            </summary>
            <value>The source AddressType for AddressTypeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerAddressEntityData.CustomerIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/>.
            </summary>
            <value>The source Customer for CustomerId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressBase.CustomerAddressEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddress.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CurrencyColumn)">
            <summary>
             Initalizes a new Instance of the CurrencyEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CurrencyColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the CurrencyEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyEventArgs.Column">
            <summary>
             The CurrencyColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.CurrencyColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyEventHandler">
            <summary>
             Define a delegate for all Currency related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CurrencyComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyComparer.#ctor(Nettiers.AdventureWorks.Entities.CurrencyColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:CurrencyComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyComparer.Equals(Nettiers.AdventureWorks.Entities.Currency,Nettiers.AdventureWorks.Entities.Currency)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> to compare.</param>
            <param name="b">The second <c>Currency</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyComparer.GetHashCode(Nettiers.AdventureWorks.Entities.Currency)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyComparer.Compare(Nettiers.AdventureWorks.Entities.Currency,Nettiers.AdventureWorks.Entities.Currency)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyKey.#ctor">
            <summary>
            Initializes a new instance of the CurrencyKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyKey.#ctor(Nettiers.AdventureWorks.Entities.CurrencyBase)">
            <summary>
            Initializes a new instance of the CurrencyKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CurrencyKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyKey.CurrencyCode">
            <summary>
            Gets or sets the CurrencyCode property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyColumn">
            <summary>
            Enumerate the Currency columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyColumn.CurrencyCode">
            <summary>
            CurrencyCode : The ISO code for the Currency.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyColumn.Name">
            <summary>
            Name : Currency name.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VProductModelInstructions">
            <summary>
             Displays the content from each element in the xml column Instructions for each product in the Production.ProductModel table that has manufacturing instructions.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase">
            <summary>
             Displays the content from each element in the xml column Instructions for each product in the Production.ProductModel table that has manufacturing instructions.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase._productModelId">
            <summary>
            ProductModelID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase._name">
            <summary>
            Name : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase._instructions">
            <summary>
            Instructions : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase._locationId">
            <summary>
            LocationID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase._setupHours">
            <summary>
            SetupHours : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase._machineHours">
            <summary>
            MachineHours : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase._laborHours">
            <summary>
            LaborHours : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase._lotSize">
            <summary>
            LotSize : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase._step">
            <summary>
            Step : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase._rowguid">
            <summary>
            rowguid : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase._modifiedDate">
            <summary>
            ModifiedDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.#ctor(System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Guid,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase"/> instance.
            </summary>
            <param name="_productModelId"></param>
            <param name="_name"></param>
            <param name="_instructions"></param>
            <param name="_locationId"></param>
            <param name="_setupHours"></param>
            <param name="_machineHours"></param>
            <param name="_laborHours"></param>
            <param name="_lotSize"></param>
            <param name="_step"></param>
            <param name="_rowguid"></param>
            <param name="_modifiedDate"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.CreateVProductModelInstructions(System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Guid,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructions"/> instance.
            </summary>
            <param name="_productModelId"></param>
            <param name="_name"></param>
            <param name="_instructions"></param>
            <param name="_locationId"></param>
            <param name="_setupHours"></param>
            <param name="_machineHours"></param>
            <param name="_laborHours"></param>
            <param name="_lotSize"></param>
            <param name="_step"></param>
            <param name="_rowguid"></param>
            <param name="_modifiedDate"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.Copy">
            <summary>
              Returns a Typed VProductModelInstructionsBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.Equals(Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.Equals(Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase,Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VProductModelInstructions,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.ProductModelId">
            <summary>
            	Gets or Sets the ProductModelID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.Name">
            <summary>
            	Gets or Sets the Name property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.Instructions">
            <summary>
            	Gets or Sets the Instructions property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.LocationId">
            <summary>
            	Gets or Sets the LocationID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsLocationIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.SetupHours">
            <summary>
            	Gets or Sets the SetupHours property. 
            	
            </summary>
            <value>This type is decimal</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0.0m. It is up to the developer
            to check the value of IsSetupHoursNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.MachineHours">
            <summary>
            	Gets or Sets the MachineHours property. 
            	
            </summary>
            <value>This type is decimal</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0.0m. It is up to the developer
            to check the value of IsMachineHoursNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.LaborHours">
            <summary>
            	Gets or Sets the LaborHours property. 
            	
            </summary>
            <value>This type is decimal</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0.0m. It is up to the developer
            to check the value of IsLaborHoursNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.LotSize">
            <summary>
            	Gets or Sets the LotSize property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsLotSizeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.Step">
            <summary>
            	Gets or Sets the Step property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.Rowguid">
            <summary>
            	Gets or Sets the rowguid property. 
            	
            </summary>
            <value>This type is uniqueidentifier</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.ModifiedDate">
            <summary>
            	Gets or Sets the ModifiedDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VProductModelInstructionsBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelInstructions.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructions"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrder">
            <summary>
             Manufacturing work orders.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderBase">
            <summary>
             Manufacturing work orders.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IWorkOrder">
            <summary>
            	The data structure representation of the 'WorkOrder' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IWorkOrder.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrder.WorkOrderId">
            <summary>			
            WorkOrderID : Primary key for WorkOrder records.
            </summary>
            <remarks>Member of the primary key of the underlying table "WorkOrder"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrder.ProductId">
            <summary>
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrder.OrderQty">
            <summary>
            OrderQty : Product quantity to build.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrder.StockedQty">
            <summary>
            StockedQty : Quantity built and put in inventory.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrder.ScrappedQty">
            <summary>
            ScrappedQty : Quantity that failed inspection.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrder.StartDate">
            <summary>
            StartDate : Work order start date.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrder.EndDate">
            <summary>
            EndDate : Work order end date.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrder.DueDate">
            <summary>
            DueDate : Work order due date.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrder.ScrapReasonId">
            <summary>
            ScrapReasonID : Reason for inspection failure.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrder.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrder.WorkOrderRoutingCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _workOrderRoutingWorkOrderId
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.#ctor(System.Int32,System.Int32,System.Int16,System.DateTime,System.Nullable{System.DateTime},System.DateTime,System.Nullable{System.Int16},System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderBase"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_orderQty">Product quantity to build.</param>
            <param name="_scrappedQty">Quantity that failed inspection.</param>
            <param name="_startDate">Work order start date.</param>
            <param name="_endDate">Work order end date.</param>
            <param name="_dueDate">Work order due date.</param>
            <param name="_scrapReasonId">Reason for inspection failure.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.CreateWorkOrder(System.Int32,System.Int32,System.Int16,System.DateTime,System.Nullable{System.DateTime},System.DateTime,System.Nullable{System.Int16},System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_orderQty">Product quantity to build.</param>
            <param name="_scrappedQty">Quantity that failed inspection.</param>
            <param name="_startDate">Work order start date.</param>
            <param name="_endDate">Work order end date.</param>
            <param name="_dueDate">Work order due date.</param>
            <param name="_scrapReasonId">Reason for inspection failure.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed WorkOrder Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.Copy">
            <summary>
              Returns a Typed WorkOrder Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.DeepCopy">
            <summary>
              Returns a Typed WorkOrder Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.WorkOrderColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.GetOriginalEntity">
            <summary>
              Returns a WorkOrder Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.Equals(Nettiers.AdventureWorks.Entities.WorkOrderBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.ValueEquals(Nettiers.AdventureWorks.Entities.WorkOrderBase,Nettiers.AdventureWorks.Entities.WorkOrderBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.WorkOrderColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.WorkOrderBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.WorkOrderColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.WorkOrderBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.WorkOrderColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.WorkOrderBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.WorkOrderColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.WorkOrderBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.WorkOrderBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.WorkOrderBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderId">
            <summary>
            	Gets or sets the WorkOrderId property. 
            	Primary key for WorkOrder records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Product identification number. Foreign key to Product.ProductID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.OrderQty">
            <summary>
            	Gets or sets the OrderQty property. 
            	Product quantity to build.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.StockedQty">
            <summary>
            	Gets or sets the StockedQty property. 
            	Quantity built and put in inventory.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.ScrappedQty">
            <summary>
            	Gets or sets the ScrappedQty property. 
            	Quantity that failed inspection.
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.StartDate">
            <summary>
            	Gets or sets the StartDate property. 
            	Work order start date.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.EndDate">
            <summary>
            	Gets or sets the EndDate property. 
            	Work order end date.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsEndDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.DueDate">
            <summary>
            	Gets or sets the DueDate property. 
            	Work order due date.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.ScrapReasonId">
            <summary>
            	Gets or sets the ScrapReasonId property. 
            	Reason for inspection failure.
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (short)0. It is up to the developer
            to check the value of IsScrapReasonIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.ScrapReasonIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/>.
            </summary>
            <value>The source ScrapReason for ScrapReasonId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderRoutingCollection">
            <summary>
            Holds a collection of WorkOrderRouting objects
            which are related to this object through the relation FK_WorkOrderRouting_WorkOrder_WorkOrderID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.WorkOrderBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.WorkOrderBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData">
            <summary>
            	The data structure representation of the 'WorkOrder' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.WorkOrderId">
            <summary>			
            WorkOrderID : Primary key for WorkOrder records.
            </summary>
            <remarks>Member of the primary key of the underlying table "WorkOrder"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.ProductId">
            <summary>
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.OrderQty">
            <summary>
            OrderQty : Product quantity to build.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.StockedQty">
            <summary>
            StockedQty : Quantity built and put in inventory.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.ScrappedQty">
            <summary>
            ScrappedQty : Quantity that failed inspection.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.StartDate">
            <summary>
            StartDate : Work order start date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.EndDate">
            <summary>
            EndDate : Work order end date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.DueDate">
            <summary>
            DueDate : Work order due date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.ScrapReasonId">
            <summary>
            ScrapReasonID : Reason for inspection failure.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.ScrapReasonIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/>.
            </summary>
            <value>The source ScrapReason for ScrapReasonId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.WorkOrderRoutingCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _workOrderRoutingWorkOrderId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderBase.WorkOrderEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrder.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorAddressEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressEventArgs.#ctor(Nettiers.AdventureWorks.Entities.VendorAddressColumn)">
            <summary>
             Initalizes a new Instance of the VendorAddressEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressEventArgs.#ctor(Nettiers.AdventureWorks.Entities.VendorAddressColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the VendorAddressEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressEventArgs.Column">
            <summary>
             The VendorAddressColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.VendorAddressColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorAddressEventHandler">
            <summary>
             Define a delegate for all VendorAddress related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorAddressComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VendorAddressComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressComparer.#ctor(Nettiers.AdventureWorks.Entities.VendorAddressColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:VendorAddressComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressComparer.Equals(Nettiers.AdventureWorks.Entities.VendorAddress,Nettiers.AdventureWorks.Entities.VendorAddress)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> to compare.</param>
            <param name="b">The second <c>VendorAddress</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressComparer.GetHashCode(Nettiers.AdventureWorks.Entities.VendorAddress)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressComparer.Compare(Nettiers.AdventureWorks.Entities.VendorAddress,Nettiers.AdventureWorks.Entities.VendorAddress)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorAddressKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressKey.#ctor">
            <summary>
            Initializes a new instance of the VendorAddressKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressKey.#ctor(Nettiers.AdventureWorks.Entities.VendorAddressBase)">
            <summary>
            Initializes a new instance of the VendorAddressKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the VendorAddressKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorAddressKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressKey.VendorId">
            <summary>
            Gets or sets the VendorId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorAddressKey.AddressId">
            <summary>
            Gets or sets the AddressId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorAddressColumn">
            <summary>
            Enumerate the VendorAddress columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorAddressColumn.VendorId">
            <summary>
            VendorId : Primary key. Foreign key to Vendor.VendorID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorAddressColumn.AddressId">
            <summary>
            AddressId : Primary key. Foreign key to Address.AddressID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorAddressColumn.AddressTypeId">
            <summary>
            AddressTypeId : Address type. Foreign key to AddressType.AddressTypeID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorAddressColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferBase">
            <summary>
             Sale discounts lookup table.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ISpecialOffer">
            <summary>
            	The data structure representation of the 'SpecialOffer' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ISpecialOffer.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOffer.SpecialOfferId">
            <summary>			
            SpecialOfferID : Primary key for SpecialOffer records.
            </summary>
            <remarks>Member of the primary key of the underlying table "SpecialOffer"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOffer.Description">
            <summary>
            Description : Discount description.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOffer.DiscountPct">
            <summary>
            DiscountPct : Discount precentage.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOffer.Type">
            <summary>
            Type : Discount type category.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOffer.Category">
            <summary>
            Category : Group the discount applies to such as Reseller or Customer.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOffer.StartDate">
            <summary>
            StartDate : Discount start date.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOffer.EndDate">
            <summary>
            EndDate : Discount end date.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOffer.MinQty">
            <summary>
            MinQty : Minimum discount percent allowed.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOffer.MaxQty">
            <summary>
            MaxQty : Maximum discount percent allowed.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOffer.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOffer.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOffer.SpecialOfferProductCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _specialOfferProductSpecialOfferId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOffer.ProductIdProductCollection_From_SpecialOfferProduct">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productIdProductCollectionFromSpecialOfferProduct
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.#ctor(System.String,System.Decimal,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Nullable{System.Int32},System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferBase"/> instance.
            </summary>
            <param name="_description">Discount description.</param>
            <param name="_discountPct">Discount precentage.</param>
            <param name="_type">Discount type category.</param>
            <param name="_category">Group the discount applies to such as Reseller or Customer.</param>
            <param name="_startDate">Discount start date.</param>
            <param name="_endDate">Discount end date.</param>
            <param name="_minQty">Minimum discount percent allowed.</param>
            <param name="_maxQty">Maximum discount percent allowed.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.CreateSpecialOffer(System.String,System.Decimal,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Nullable{System.Int32},System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> instance.
            </summary>
            <param name="_description">Discount description.</param>
            <param name="_discountPct">Discount precentage.</param>
            <param name="_type">Discount type category.</param>
            <param name="_category">Group the discount applies to such as Reseller or Customer.</param>
            <param name="_startDate">Discount start date.</param>
            <param name="_endDate">Discount end date.</param>
            <param name="_minQty">Minimum discount percent allowed.</param>
            <param name="_maxQty">Maximum discount percent allowed.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed SpecialOffer Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.Copy">
            <summary>
              Returns a Typed SpecialOffer Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.DeepCopy">
            <summary>
              Returns a Typed SpecialOffer Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.SpecialOfferColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.GetOriginalEntity">
            <summary>
              Returns a SpecialOffer Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.Equals(Nettiers.AdventureWorks.Entities.SpecialOfferBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.ValueEquals(Nettiers.AdventureWorks.Entities.SpecialOfferBase,Nettiers.AdventureWorks.Entities.SpecialOfferBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SpecialOfferColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SpecialOfferBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SpecialOfferColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SpecialOfferBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SpecialOfferColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SpecialOfferBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SpecialOfferColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SpecialOfferBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SpecialOfferBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SpecialOfferBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferId">
            <summary>
            	Gets or sets the SpecialOfferId property. 
            	Primary key for SpecialOffer records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.Description">
            <summary>
            	Gets or sets the Description property. 
            	Discount description.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.DiscountPct">
            <summary>
            	Gets or sets the DiscountPct property. 
            	Discount precentage.
            </summary>
            <value>This type is smallmoney.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.Type">
            <summary>
            	Gets or sets the Type property. 
            	Discount type category.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.Category">
            <summary>
            	Gets or sets the Category property. 
            	Group the discount applies to such as Reseller or Customer.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.StartDate">
            <summary>
            	Gets or sets the StartDate property. 
            	Discount start date.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.EndDate">
            <summary>
            	Gets or sets the EndDate property. 
            	Discount end date.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.MinQty">
            <summary>
            	Gets or sets the MinQty property. 
            	Minimum discount percent allowed.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.MaxQty">
            <summary>
            	Gets or sets the MaxQty property. 
            	Maximum discount percent allowed.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsMaxQtyNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferProductCollection">
            <summary>
            Holds a collection of SpecialOfferProduct objects
            which are related to this object through the relation FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.ProductIdProductCollection_From_SpecialOfferProduct">
            <summary>
            Holds a collection of ProductFromSpecialOfferProduct objects
            which are related to this object through the junction table SpecialOfferProduct
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SpecialOfferBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SpecialOfferBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData">
            <summary>
            	The data structure representation of the 'SpecialOffer' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.SpecialOfferId">
            <summary>			
            SpecialOfferID : Primary key for SpecialOffer records.
            </summary>
            <remarks>Member of the primary key of the underlying table "SpecialOffer"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.Description">
            <summary>
            Description : Discount description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.DiscountPct">
            <summary>
            DiscountPct : Discount precentage.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.Type">
            <summary>
            Type : Discount type category.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.Category">
            <summary>
            Category : Group the discount applies to such as Reseller or Customer.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.StartDate">
            <summary>
            StartDate : Discount start date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.EndDate">
            <summary>
            EndDate : Discount end date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.MinQty">
            <summary>
            MinQty : Minimum discount percent allowed.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.MaxQty">
            <summary>
            MaxQty : Maximum discount percent allowed.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.SpecialOfferProductCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _specialOfferProductSpecialOfferId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.ProductIdProductCollection_From_SpecialOfferProduct">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productIdProductCollectionFromSpecialOfferProduct
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferBase.SpecialOfferEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SpecialOfferColumn)">
            <summary>
             Initalizes a new Instance of the SpecialOfferEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SpecialOfferColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the SpecialOfferEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferEventArgs.Column">
            <summary>
             The SpecialOfferColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferEventHandler">
            <summary>
             Define a delegate for all SpecialOffer related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SpecialOfferComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferComparer.#ctor(Nettiers.AdventureWorks.Entities.SpecialOfferColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:SpecialOfferComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferComparer.Equals(Nettiers.AdventureWorks.Entities.SpecialOffer,Nettiers.AdventureWorks.Entities.SpecialOffer)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> to compare.</param>
            <param name="b">The second <c>SpecialOffer</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferComparer.GetHashCode(Nettiers.AdventureWorks.Entities.SpecialOffer)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferComparer.Compare(Nettiers.AdventureWorks.Entities.SpecialOffer,Nettiers.AdventureWorks.Entities.SpecialOffer)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferKey.#ctor">
            <summary>
            Initializes a new instance of the SpecialOfferKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferKey.#ctor(Nettiers.AdventureWorks.Entities.SpecialOfferBase)">
            <summary>
            Initializes a new instance of the SpecialOfferKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the SpecialOfferKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferKey.SpecialOfferId">
            <summary>
            Gets or sets the SpecialOfferId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferColumn">
            <summary>
            Enumerate the SpecialOffer columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferColumn.SpecialOfferId">
            <summary>
            SpecialOfferId : Primary key for SpecialOffer records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferColumn.Description">
            <summary>
            Description : Discount description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferColumn.DiscountPct">
            <summary>
            DiscountPct : Discount precentage.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferColumn.Type">
            <summary>
            Type : Discount type category.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferColumn.Category">
            <summary>
            Category : Group the discount applies to such as Reseller or Customer.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferColumn.StartDate">
            <summary>
            StartDate : Discount start date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferColumn.EndDate">
            <summary>
            EndDate : Discount end date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferColumn.MinQty">
            <summary>
            MinQty : Minimum discount percent allowed.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferColumn.MaxQty">
            <summary>
            MaxQty : Maximum discount percent allowed.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShipMethod">
            <summary>
             Shipping company lookup table.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShipMethodBase">
            <summary>
             Shipping company lookup table.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethodBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.#ctor(System.String,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethodBase"/> instance.
            </summary>
            <param name="_name">Shipping company name.</param>
            <param name="_shipBase">Minimum shipping charge.</param>
            <param name="_shipRate">Shipping charge per pound.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.CreateShipMethod(System.String,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> instance.
            </summary>
            <param name="_name">Shipping company name.</param>
            <param name="_shipBase">Minimum shipping charge.</param>
            <param name="_shipRate">Shipping charge per pound.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ShipMethod Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.Copy">
            <summary>
              Returns a Typed ShipMethod Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.DeepCopy">
            <summary>
              Returns a Typed ShipMethod Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ShipMethodColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.GetOriginalEntity">
            <summary>
              Returns a ShipMethod Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethodBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethodBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.Equals(Nettiers.AdventureWorks.Entities.ShipMethodBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethodBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.ValueEquals(Nettiers.AdventureWorks.Entities.ShipMethodBase,Nettiers.AdventureWorks.Entities.ShipMethodBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethodBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethodBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethodBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ShipMethodColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ShipMethodBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethodColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ShipMethodColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ShipMethodBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethodColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ShipMethodColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ShipMethodBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethodColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ShipMethodColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ShipMethodBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethodColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ShipMethodBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ShipMethodBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.ShipMethodId">
            <summary>
            	Gets or sets the ShipMethodId property. 
            	Primary key for ShipMethod records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Shipping company name.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.ShipBase">
            <summary>
            	Gets or sets the ShipBase property. 
            	Minimum shipping charge.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.ShipRate">
            <summary>
            	Gets or sets the ShipRate property. 
            	Shipping charge per pound.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of SalesOrderHeader objects
            which are related to this object through the relation FK_SalesOrderHeader_ShipMethod_ShipMethodID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.PurchaseOrderHeaderCollection">
            <summary>
            Holds a collection of PurchaseOrderHeader objects
            which are related to this object through the relation FK_PurchaseOrderHeader_ShipMethod_ShipMethodID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ShipMethodBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ShipMethodBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShipMethodBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShipMethodBase.ShipMethodEntityData">
            <summary>
            	The data structure representation of the 'ShipMethod' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodBase.ShipMethodEntityData.ShipMethodId">
            <summary>			
            ShipMethodID : Primary key for ShipMethod records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ShipMethod"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodBase.ShipMethodEntityData.Name">
            <summary>
            Name : Shipping company name.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodBase.ShipMethodEntityData.ShipBase">
            <summary>
            ShipBase : Minimum shipping charge.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodBase.ShipMethodEntityData.ShipRate">
            <summary>
            ShipRate : Shipping charge per pound.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodBase.ShipMethodEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodBase.ShipMethodEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.ShipMethodEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodBase.ShipMethodEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.ShipMethodEntityData.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderShipMethodId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.ShipMethodEntityData.PurchaseOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _purchaseOrderHeaderShipMethodId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodBase.ShipMethodEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethod.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IScrapReason">
            <summary>
            	The data structure representation of the 'ScrapReason' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IScrapReason.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IScrapReason.ScrapReasonId">
            <summary>			
            ScrapReasonID : Primary key for ScrapReason records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ScrapReason"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IScrapReason.Name">
            <summary>
            Name : Failure description.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IScrapReason.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IScrapReason.WorkOrderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _workOrderScrapReasonId
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase">
            <summary>
             General purchase order information. See PurchaseOrderDetail.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.#ctor(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32,System.DateTime,System.Nullable{System.DateTime},System.Decimal,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase"/> instance.
            </summary>
            <param name="_revisionNumber">Incremental number to track changes to the purchase order over time.</param>
            <param name="_status">Order current status. 1 = Pending; 2 = Approved; 3 = Rejected; 4 = Complete</param>
            <param name="_employeeId">Employee who created the purchase order. Foreign key to Employee.EmployeeID.</param>
            <param name="_vendorId">Vendor with whom the purchase order is placed. Foreign key to Vendor.VendorID.</param>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <param name="_orderDate">Purchase order creation date.</param>
            <param name="_shipDate">Estimated shipment date from the vendor.</param>
            <param name="_subTotal">Purchase order subtotal. Computed as SUM(PurchaseOrderDetail.LineTotal)for the appropriate PurchaseOrderID.</param>
            <param name="_taxAmt">Tax amount.</param>
            <param name="_freight">Shipping cost.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.CreatePurchaseOrderHeader(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32,System.DateTime,System.Nullable{System.DateTime},System.Decimal,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> instance.
            </summary>
            <param name="_revisionNumber">Incremental number to track changes to the purchase order over time.</param>
            <param name="_status">Order current status. 1 = Pending; 2 = Approved; 3 = Rejected; 4 = Complete</param>
            <param name="_employeeId">Employee who created the purchase order. Foreign key to Employee.EmployeeID.</param>
            <param name="_vendorId">Vendor with whom the purchase order is placed. Foreign key to Vendor.VendorID.</param>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <param name="_orderDate">Purchase order creation date.</param>
            <param name="_shipDate">Estimated shipment date from the vendor.</param>
            <param name="_subTotal">Purchase order subtotal. Computed as SUM(PurchaseOrderDetail.LineTotal)for the appropriate PurchaseOrderID.</param>
            <param name="_taxAmt">Tax amount.</param>
            <param name="_freight">Shipping cost.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed PurchaseOrderHeader Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.Copy">
            <summary>
              Returns a Typed PurchaseOrderHeader Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.DeepCopy">
            <summary>
              Returns a Typed PurchaseOrderHeader Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.GetOriginalEntity">
            <summary>
              Returns a PurchaseOrderHeader Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.Equals(Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.ValueEquals(Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase,Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderId">
            <summary>
            	Gets or sets the PurchaseOrderId property. 
            	Primary key.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.RevisionNumber">
            <summary>
            	Gets or sets the RevisionNumber property. 
            	Incremental number to track changes to the purchase order over time.
            </summary>
            <value>This type is tinyint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	Order current status. 1 = Pending; 2 = Approved; 3 = Rejected; 4 = Complete
            </summary>
            <value>This type is tinyint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.EmployeeId">
            <summary>
            	Gets or sets the EmployeeId property. 
            	Employee who created the purchase order. Foreign key to Employee.EmployeeID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.VendorId">
            <summary>
            	Gets or sets the VendorId property. 
            	Vendor with whom the purchase order is placed. Foreign key to Vendor.VendorID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.ShipMethodId">
            <summary>
            	Gets or sets the ShipMethodId property. 
            	Shipping method. Foreign key to ShipMethod.ShipMethodID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.OrderDate">
            <summary>
            	Gets or sets the OrderDate property. 
            	Purchase order creation date.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.ShipDate">
            <summary>
            	Gets or sets the ShipDate property. 
            	Estimated shipment date from the vendor.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsShipDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.SubTotal">
            <summary>
            	Gets or sets the SubTotal property. 
            	Purchase order subtotal. Computed as SUM(PurchaseOrderDetail.LineTotal)for the appropriate PurchaseOrderID.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.TaxAmt">
            <summary>
            	Gets or sets the TaxAmt property. 
            	Tax amount.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.Freight">
            <summary>
            	Gets or sets the Freight property. 
            	Shipping cost.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.TotalDue">
            <summary>
            	Gets or sets the TotalDue property. 
            	Total due to vendor. Computed as Subtotal + TaxAmt + Freight.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.EmployeeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/>.
            </summary>
            <value>The source Employee for EmployeeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.ShipMethodIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/>.
            </summary>
            <value>The source ShipMethod for ShipMethodId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.VendorIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/>.
            </summary>
            <value>The source Vendor for VendorId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderDetailCollection">
            <summary>
            Holds a collection of PurchaseOrderDetail objects
            which are related to this object through the relation FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData">
            <summary>
            	The data structure representation of the 'PurchaseOrderHeader' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.PurchaseOrderId">
            <summary>			
            PurchaseOrderID : Primary key.
            </summary>
            <remarks>Member of the primary key of the underlying table "PurchaseOrderHeader"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.RevisionNumber">
            <summary>
            RevisionNumber : Incremental number to track changes to the purchase order over time.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.Status">
            <summary>
            Status : Order current status. 1 = Pending; 2 = Approved; 3 = Rejected; 4 = Complete
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.EmployeeId">
            <summary>
            EmployeeID : Employee who created the purchase order. Foreign key to Employee.EmployeeID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.VendorId">
            <summary>
            VendorID : Vendor with whom the purchase order is placed. Foreign key to Vendor.VendorID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.ShipMethodId">
            <summary>
            ShipMethodID : Shipping method. Foreign key to ShipMethod.ShipMethodID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.OrderDate">
            <summary>
            OrderDate : Purchase order creation date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.ShipDate">
            <summary>
            ShipDate : Estimated shipment date from the vendor.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.SubTotal">
            <summary>
            SubTotal : Purchase order subtotal. Computed as SUM(PurchaseOrderDetail.LineTotal)for the appropriate PurchaseOrderID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.TaxAmt">
            <summary>
            TaxAmt : Tax amount.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.Freight">
            <summary>
            Freight : Shipping cost.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.TotalDue">
            <summary>
            TotalDue : Total due to vendor. Computed as Subtotal + TaxAmt + Freight.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.EmployeeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/>.
            </summary>
            <value>The source Employee for EmployeeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.ShipMethodIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/>.
            </summary>
            <value>The source ShipMethod for ShipMethodId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.VendorIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/>.
            </summary>
            <value>The source Vendor for VendorId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.PurchaseOrderDetailCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _purchaseOrderDetailPurchaseOrderId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase.PurchaseOrderHeaderEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderEventArgs.#ctor(Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn)">
            <summary>
             Initalizes a new Instance of the PurchaseOrderHeaderEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderEventArgs.#ctor(Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the PurchaseOrderHeaderEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderEventArgs.Column">
            <summary>
             The PurchaseOrderHeaderColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderEventHandler">
            <summary>
             Define a delegate for all PurchaseOrderHeader related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PurchaseOrderHeaderComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderComparer.#ctor(Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:PurchaseOrderHeaderComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderComparer.Equals(Nettiers.AdventureWorks.Entities.PurchaseOrderHeader,Nettiers.AdventureWorks.Entities.PurchaseOrderHeader)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> to compare.</param>
            <param name="b">The second <c>PurchaseOrderHeader</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderComparer.GetHashCode(Nettiers.AdventureWorks.Entities.PurchaseOrderHeader)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderComparer.Compare(Nettiers.AdventureWorks.Entities.PurchaseOrderHeader,Nettiers.AdventureWorks.Entities.PurchaseOrderHeader)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderKey.#ctor">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderKey.#ctor(Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderBase)">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderKey.PurchaseOrderId">
            <summary>
            Gets or sets the PurchaseOrderId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn">
            <summary>
            Enumerate the PurchaseOrderHeader columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn.PurchaseOrderId">
            <summary>
            PurchaseOrderId : Primary key.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn.RevisionNumber">
            <summary>
            RevisionNumber : Incremental number to track changes to the purchase order over time.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn.Status">
            <summary>
            Status : Order current status. 1 = Pending; 2 = Approved; 3 = Rejected; 4 = Complete
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn.EmployeeId">
            <summary>
            EmployeeId : Employee who created the purchase order. Foreign key to Employee.EmployeeID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn.VendorId">
            <summary>
            VendorId : Vendor with whom the purchase order is placed. Foreign key to Vendor.VendorID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn.ShipMethodId">
            <summary>
            ShipMethodId : Shipping method. Foreign key to ShipMethod.ShipMethodID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn.OrderDate">
            <summary>
            OrderDate : Purchase order creation date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn.ShipDate">
            <summary>
            ShipDate : Estimated shipment date from the vendor.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn.SubTotal">
            <summary>
            SubTotal : Purchase order subtotal. Computed as SUM(PurchaseOrderDetail.LineTotal)for the appropriate PurchaseOrderID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn.TaxAmt">
            <summary>
            TaxAmt : Tax amount.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn.Freight">
            <summary>
            Freight : Shipping cost.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn.TotalDue">
            <summary>
            TotalDue : Total due to vendor. Computed as Subtotal + TaxAmt + Freight.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail">
            <summary>
             Individual products associated with a specific purchase order. See PurchaseOrderHeader.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase">
            <summary>
             Individual products associated with a specific purchase order. See PurchaseOrderHeader.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IPurchaseOrderDetail">
            <summary>
            	The data structure representation of the 'PurchaseOrderDetail' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IPurchaseOrderDetail.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderDetail.PurchaseOrderId">
            <summary>			
            PurchaseOrderID : Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.
            </summary>
            <remarks>Member of the primary key of the underlying table "PurchaseOrderDetail"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderDetail.OriginalPurchaseOrderId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderDetail.PurchaseOrderDetailId">
            <summary>			
            PurchaseOrderDetailID : Primary key. One line number per purchased product.
            </summary>
            <remarks>Member of the primary key of the underlying table "PurchaseOrderDetail"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderDetail.DueDate">
            <summary>
            DueDate : Date the product is expected to be received.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderDetail.OrderQty">
            <summary>
            OrderQty : Quantity ordered.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderDetail.ProductId">
            <summary>
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderDetail.UnitPrice">
            <summary>
            UnitPrice : Vendor's selling price of a single product.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderDetail.LineTotal">
            <summary>
            LineTotal : Per product subtotal. Computed as OrderQty * UnitPrice.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderDetail.ReceivedQty">
            <summary>
            ReceivedQty : Quantity actually received from the vendor.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderDetail.RejectedQty">
            <summary>
            RejectedQty : Quantity rejected during inspection.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderDetail.StockedQty">
            <summary>
            StockedQty : Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IPurchaseOrderDetail.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.#ctor(System.Int32,System.DateTime,System.Int16,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase"/> instance.
            </summary>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.</param>
            <param name="_dueDate">Date the product is expected to be received.</param>
            <param name="_orderQty">Quantity ordered.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_unitPrice">Vendor's selling price of a single product.</param>
            <param name="_receivedQty">Quantity actually received from the vendor.</param>
            <param name="_rejectedQty">Quantity rejected during inspection.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.CreatePurchaseOrderDetail(System.Int32,System.DateTime,System.Int16,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> instance.
            </summary>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.</param>
            <param name="_dueDate">Date the product is expected to be received.</param>
            <param name="_orderQty">Quantity ordered.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_unitPrice">Vendor's selling price of a single product.</param>
            <param name="_receivedQty">Quantity actually received from the vendor.</param>
            <param name="_rejectedQty">Quantity rejected during inspection.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed PurchaseOrderDetail Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.Copy">
            <summary>
              Returns a Typed PurchaseOrderDetail Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.DeepCopy">
            <summary>
              Returns a Typed PurchaseOrderDetail Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.GetOriginalEntity">
            <summary>
              Returns a PurchaseOrderDetail Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.Equals(Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.ValueEquals(Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase,Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderId">
            <summary>
            	Gets or sets the PurchaseOrderId property. 
            	Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.OriginalPurchaseOrderId">
            <summary>
            	Get the original value of the PurchaseOrderID property.
            	Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.
            </summary>
            <remarks>This is the original value of the PurchaseOrderID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailId">
            <summary>
            	Gets or sets the PurchaseOrderDetailId property. 
            	Primary key. One line number per purchased product.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.DueDate">
            <summary>
            	Gets or sets the DueDate property. 
            	Date the product is expected to be received.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.OrderQty">
            <summary>
            	Gets or sets the OrderQty property. 
            	Quantity ordered.
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Product identification number. Foreign key to Product.ProductID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.UnitPrice">
            <summary>
            	Gets or sets the UnitPrice property. 
            	Vendor's selling price of a single product.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.LineTotal">
            <summary>
            	Gets or sets the LineTotal property. 
            	Per product subtotal. Computed as OrderQty * UnitPrice.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.ReceivedQty">
            <summary>
            	Gets or sets the ReceivedQty property. 
            	Quantity actually received from the vendor.
            </summary>
            <value>This type is decimal.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.RejectedQty">
            <summary>
            	Gets or sets the RejectedQty property. 
            	Quantity rejected during inspection.
            </summary>
            <value>This type is decimal.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.StockedQty">
            <summary>
            	Gets or sets the StockedQty property. 
            	Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.
            </summary>
            <value>This type is decimal.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/>.
            </summary>
            <value>The source PurchaseOrderHeader for PurchaseOrderId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData">
            <summary>
            	The data structure representation of the 'PurchaseOrderDetail' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.PurchaseOrderId">
            <summary>			
            PurchaseOrderID : Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.
            </summary>
            <remarks>Member of the primary key of the underlying table "PurchaseOrderDetail"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.OriginalPurchaseOrderId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.PurchaseOrderDetailId">
            <summary>			
            PurchaseOrderDetailID : Primary key. One line number per purchased product.
            </summary>
            <remarks>Member of the primary key of the underlying table "PurchaseOrderDetail"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.DueDate">
            <summary>
            DueDate : Date the product is expected to be received.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.OrderQty">
            <summary>
            OrderQty : Quantity ordered.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.ProductId">
            <summary>
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.UnitPrice">
            <summary>
            UnitPrice : Vendor's selling price of a single product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.LineTotal">
            <summary>
            LineTotal : Per product subtotal. Computed as OrderQty * UnitPrice.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.ReceivedQty">
            <summary>
            ReceivedQty : Quantity actually received from the vendor.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.RejectedQty">
            <summary>
            RejectedQty : Quantity rejected during inspection.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.StockedQty">
            <summary>
            StockedQty : Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.PurchaseOrderIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/>.
            </summary>
            <value>The source PurchaseOrderHeader for PurchaseOrderId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase.PurchaseOrderDetailEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductReviewBase">
            <summary>
             Customer reviews of products they have purchased.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductReviewBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.#ctor(System.Int32,System.String,System.DateTime,System.String,System.Int32,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductReviewBase"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_reviewerName">Name of the reviewer.</param>
            <param name="_reviewDate">Date review was submitted.</param>
            <param name="_emailAddress">Reviewer's e-mail address.</param>
            <param name="_rating">Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating.</param>
            <param name="_comments">Reviewer's comments</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.CreateProductReview(System.Int32,System.String,System.DateTime,System.String,System.Int32,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_reviewerName">Name of the reviewer.</param>
            <param name="_reviewDate">Date review was submitted.</param>
            <param name="_emailAddress">Reviewer's e-mail address.</param>
            <param name="_rating">Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating.</param>
            <param name="_comments">Reviewer's comments</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ProductReview Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.Copy">
            <summary>
              Returns a Typed ProductReview Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.DeepCopy">
            <summary>
              Returns a Typed ProductReview Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ProductReviewColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.GetOriginalEntity">
            <summary>
              Returns a ProductReview Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductReviewBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ProductReviewBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.Equals(Nettiers.AdventureWorks.Entities.ProductReviewBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductReviewBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.ValueEquals(Nettiers.AdventureWorks.Entities.ProductReviewBase,Nettiers.AdventureWorks.Entities.ProductReviewBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductReviewBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductReviewBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ProductReviewBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductReviewColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductReviewBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductReviewColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductReviewColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductReviewBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductReviewColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductReviewColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductReviewBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductReviewColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductReviewColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductReviewBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductReviewColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductReviewBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductReviewBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductReviewId">
            <summary>
            	Gets or sets the ProductReviewId property. 
            	Primary key for ProductReview records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Product identification number. Foreign key to Product.ProductID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.ReviewerName">
            <summary>
            	Gets or sets the ReviewerName property. 
            	Name of the reviewer.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.ReviewDate">
            <summary>
            	Gets or sets the ReviewDate property. 
            	Date review was submitted.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.EmailAddress">
            <summary>
            	Gets or sets the EmailAddress property. 
            	Reviewer's e-mail address.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.Rating">
            <summary>
            	Gets or sets the Rating property. 
            	Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.Comments">
            <summary>
            	Gets or sets the Comments property. 
            	Reviewer's comments
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductReviewBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductReviewBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductReviewBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductReviewEntityData">
            <summary>
            	The data structure representation of the 'ProductReview' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductReviewEntityData.ProductReviewId">
            <summary>			
            ProductReviewID : Primary key for ProductReview records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductReview"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductReviewEntityData.ProductId">
            <summary>
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductReviewEntityData.ReviewerName">
            <summary>
            ReviewerName : Name of the reviewer.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductReviewEntityData.ReviewDate">
            <summary>
            ReviewDate : Date review was submitted.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductReviewEntityData.EmailAddress">
            <summary>
            EmailAddress : Reviewer's e-mail address.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductReviewEntityData.Rating">
            <summary>
            Rating : Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductReviewEntityData.Comments">
            <summary>
            Comments : Reviewer's comments
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductReviewEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductReviewEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductReviewEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductReviewEntityData.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewBase.ProductReviewEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductReviewEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductReviewColumn)">
            <summary>
             Initalizes a new Instance of the ProductReviewEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductReviewColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ProductReviewEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewEventArgs.Column">
            <summary>
             The ProductReviewColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ProductReviewColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductReviewEventHandler">
            <summary>
             Define a delegate for all ProductReview related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductReviewComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ProductReviewComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewComparer.#ctor(Nettiers.AdventureWorks.Entities.ProductReviewColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductReviewComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewComparer.Equals(Nettiers.AdventureWorks.Entities.ProductReview,Nettiers.AdventureWorks.Entities.ProductReview)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> to compare.</param>
            <param name="b">The second <c>ProductReview</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ProductReview)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewComparer.Compare(Nettiers.AdventureWorks.Entities.ProductReview,Nettiers.AdventureWorks.Entities.ProductReview)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductReviewKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewKey.#ctor">
            <summary>
            Initializes a new instance of the ProductReviewKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewKey.#ctor(Nettiers.AdventureWorks.Entities.ProductReviewBase)">
            <summary>
            Initializes a new instance of the ProductReviewKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ProductReviewKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReviewKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductReviewKey.ProductReviewId">
            <summary>
            Gets or sets the ProductReviewId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductReviewColumn">
            <summary>
            Enumerate the ProductReview columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewColumn.ProductReviewId">
            <summary>
            ProductReviewId : Primary key for ProductReview records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewColumn.ProductId">
            <summary>
            ProductId : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewColumn.ReviewerName">
            <summary>
            ReviewerName : Name of the reviewer.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewColumn.ReviewDate">
            <summary>
            ReviewDate : Date review was submitted.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewColumn.EmailAddress">
            <summary>
            EmailAddress : Reviewer's e-mail address.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewColumn.Rating">
            <summary>
            Rating : Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewColumn.Comments">
            <summary>
            Comments : Reviewer's comments
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductReviewColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IProductModelIllustration">
            <summary>
            	The data structure representation of the 'ProductModelIllustration' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IProductModelIllustration.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModelIllustration.ProductModelId">
            <summary>			
            ProductModelID : Primary key. Foreign key to ProductModel.ProductModelID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductModelIllustration"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModelIllustration.OriginalProductModelId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModelIllustration.IllustrationId">
            <summary>			
            IllustrationID : Primary key. Foreign key to Illustration.IllustrationID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductModelIllustration"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModelIllustration.OriginalIllustrationId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModelIllustration.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDocument">
            <summary>
             Cross-reference table mapping products to related product documents.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDocument.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyParentEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentEventArgs.#ctor(Nettiers.AdventureWorks.Entities.NullFkeyParentColumn)">
            <summary>
             Initalizes a new Instance of the NullFkeyParentEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentEventArgs.#ctor(Nettiers.AdventureWorks.Entities.NullFkeyParentColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the NullFkeyParentEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentEventArgs.Column">
            <summary>
             The NullFkeyParentColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParentColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyParentEventHandler">
            <summary>
             Define a delegate for all NullFkeyParent related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyParentComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NullFkeyParentComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentComparer.#ctor(Nettiers.AdventureWorks.Entities.NullFkeyParentColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:NullFkeyParentComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentComparer.Equals(Nettiers.AdventureWorks.Entities.NullFkeyParent,Nettiers.AdventureWorks.Entities.NullFkeyParent)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> to compare.</param>
            <param name="b">The second <c>NullFkeyParent</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentComparer.GetHashCode(Nettiers.AdventureWorks.Entities.NullFkeyParent)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentComparer.Compare(Nettiers.AdventureWorks.Entities.NullFkeyParent,Nettiers.AdventureWorks.Entities.NullFkeyParent)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyParentKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentKey.#ctor">
            <summary>
            Initializes a new instance of the NullFkeyParentKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentKey.#ctor(Nettiers.AdventureWorks.Entities.NullFkeyParentBase)">
            <summary>
            Initializes a new instance of the NullFkeyParentKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the NullFkeyParentKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyParentKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.NullFkeyParentKey.NullFkeyParentId">
            <summary>
            Gets or sets the NullFkeyParentId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyParentColumn">
            <summary>
            Enumerate the NullFkeyParent columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyParentColumn.NullFkeyParentId">
            <summary>
            NullFkeyParentId : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.NullFkeyParentColumn.SomeText">
            <summary>
            SomeText : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Contact">
            <summary>
             Names of each employee, customer contact, and vendor contact.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactBase">
            <summary>
             Names of each employee, customer contact, and vendor contact.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IContact">
            <summary>
            	The data structure representation of the 'Contact' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IContact.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.ContactId">
            <summary>			
            ContactID : Primary key for Contact records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Contact"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.NameStyle">
            <summary>
            NameStyle : 0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.Title">
            <summary>
            Title : A courtesy title. For example, Mr. or Ms.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.FirstName">
            <summary>
            FirstName : First name of the person.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.MiddleName">
            <summary>
            MiddleName : Middle name or middle initial of the person.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.LastName">
            <summary>
            LastName : Last name of the person.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.Suffix">
            <summary>
            Suffix : Surname suffix. For example, Sr. or Jr.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.EmailAddress">
            <summary>
            EmailAddress : E-mail address for the person.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.EmailPromotion">
            <summary>
            EmailPromotion : 0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners. 
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.Phone">
            <summary>
            Phone : Phone number associated with the person.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.PasswordHash">
            <summary>
            PasswordHash : Password for the e-mail account.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.PasswordSalt">
            <summary>
            PasswordSalt : Random value concatenated with the password string before the password is hashed.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.AdditionalContactInfo">
            <summary>
            AdditionalContactInfo : Additional contact information about the person stored in xml format. 
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.EmployeeCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeeContactId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderContactId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.IndividualCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _individualContactId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.StoreContactCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _storeContactContactId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.ContactCreditCardCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _contactCreditCardContactId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.VendorContactCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _vendorContactContactId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.CreditCardIdCreditCardCollection_From_ContactCreditCard">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table creditCardIdCreditCardCollectionFromContactCreditCard
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.CustomerIdStoreCollection_From_StoreContact">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table customerIdStoreCollectionFromStoreContact
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContact.VendorIdVendorCollection_From_VendorContact">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table vendorIdVendorCollectionFromVendorContact
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ContactBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.#ctor(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ContactBase"/> instance.
            </summary>
            <param name="_nameStyle">0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.</param>
            <param name="_title">A courtesy title. For example, Mr. or Ms.</param>
            <param name="_firstName">First name of the person.</param>
            <param name="_middleName">Middle name or middle initial of the person.</param>
            <param name="_lastName">Last name of the person.</param>
            <param name="_suffix">Surname suffix. For example, Sr. or Jr.</param>
            <param name="_emailAddress">E-mail address for the person.</param>
            <param name="_emailPromotion">0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners. </param>
            <param name="_phone">Phone number associated with the person.</param>
            <param name="_passwordHash">Password for the e-mail account.</param>
            <param name="_passwordSalt">Random value concatenated with the password string before the password is hashed.</param>
            <param name="_additionalContactInfo">Additional contact information about the person stored in xml format. </param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.CreateContact(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> instance.
            </summary>
            <param name="_nameStyle">0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.</param>
            <param name="_title">A courtesy title. For example, Mr. or Ms.</param>
            <param name="_firstName">First name of the person.</param>
            <param name="_middleName">Middle name or middle initial of the person.</param>
            <param name="_lastName">Last name of the person.</param>
            <param name="_suffix">Surname suffix. For example, Sr. or Jr.</param>
            <param name="_emailAddress">E-mail address for the person.</param>
            <param name="_emailPromotion">0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners. </param>
            <param name="_phone">Phone number associated with the person.</param>
            <param name="_passwordHash">Password for the e-mail account.</param>
            <param name="_passwordSalt">Random value concatenated with the password string before the password is hashed.</param>
            <param name="_additionalContactInfo">Additional contact information about the person stored in xml format. </param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Contact Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.Copy">
            <summary>
              Returns a Typed Contact Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.DeepCopy">
            <summary>
              Returns a Typed Contact Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ContactColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.GetOriginalEntity">
            <summary>
              Returns a Contact Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ContactBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ContactBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.Equals(Nettiers.AdventureWorks.Entities.ContactBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ContactBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.ValueEquals(Nettiers.AdventureWorks.Entities.ContactBase,Nettiers.AdventureWorks.Entities.ContactBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ContactBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ContactBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ContactBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ContactColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ContactBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ContactColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ContactBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ContactColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ContactBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ContactColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ContactBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ContactBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ContactBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.ContactId">
            <summary>
            	Gets or sets the ContactId property. 
            	Primary key for Contact records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.NameStyle">
            <summary>
            	Gets or sets the NameStyle property. 
            	0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.
            </summary>
            <value>This type is bit.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.Title">
            <summary>
            	Gets or sets the Title property. 
            	A courtesy title. For example, Mr. or Ms.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.FirstName">
            <summary>
            	Gets or sets the FirstName property. 
            	First name of the person.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.MiddleName">
            <summary>
            	Gets or sets the MiddleName property. 
            	Middle name or middle initial of the person.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.LastName">
            <summary>
            	Gets or sets the LastName property. 
            	Last name of the person.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.Suffix">
            <summary>
            	Gets or sets the Suffix property. 
            	Surname suffix. For example, Sr. or Jr.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.EmailAddress">
            <summary>
            	Gets or sets the EmailAddress property. 
            	E-mail address for the person.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.EmailPromotion">
            <summary>
            	Gets or sets the EmailPromotion property. 
            	0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners. 
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.Phone">
            <summary>
            	Gets or sets the Phone property. 
            	Phone number associated with the person.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.PasswordHash">
            <summary>
            	Gets or sets the PasswordHash property. 
            	Password for the e-mail account.
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.PasswordSalt">
            <summary>
            	Gets or sets the PasswordSalt property. 
            	Random value concatenated with the password string before the password is hashed.
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.AdditionalContactInfo">
            <summary>
            	Gets or sets the AdditionalContactInfo property. 
            	Additional contact information about the person stored in xml format. 
            </summary>
            <value>This type is xml.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.EmployeeCollection">
            <summary>
            Holds a collection of Employee objects
            which are related to this object through the relation FK_Employee_Contact_ContactID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of SalesOrderHeader objects
            which are related to this object through the relation FK_SalesOrderHeader_Contact_ContactID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.IndividualCollection">
            <summary>
            Holds a collection of Individual objects
            which are related to this object through the relation FK_Individual_Contact_ContactID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.StoreContactCollection">
            <summary>
            Holds a collection of StoreContact objects
            which are related to this object through the relation FK_StoreContact_Contact_ContactID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.ContactCreditCardCollection">
            <summary>
            Holds a collection of ContactCreditCard objects
            which are related to this object through the relation FK_ContactCreditCard_Contact_ContactID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.VendorContactCollection">
            <summary>
            Holds a collection of VendorContact objects
            which are related to this object through the relation FK_VendorContact_Contact_ContactID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.CreditCardIdCreditCardCollection_From_ContactCreditCard">
            <summary>
            Holds a collection of CreditCardFromContactCreditCard objects
            which are related to this object through the junction table ContactCreditCard
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.CustomerIdStoreCollection_From_StoreContact">
            <summary>
            Holds a collection of StoreFromStoreContact objects
            which are related to this object through the junction table StoreContact
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.VendorIdVendorCollection_From_VendorContact">
            <summary>
            Holds a collection of VendorFromVendorContact objects
            which are related to this object through the junction table VendorContact
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ContactBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ContactBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData">
            <summary>
            	The data structure representation of the 'Contact' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.ContactId">
            <summary>			
            ContactID : Primary key for Contact records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Contact"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.NameStyle">
            <summary>
            NameStyle : 0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.Title">
            <summary>
            Title : A courtesy title. For example, Mr. or Ms.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.FirstName">
            <summary>
            FirstName : First name of the person.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.MiddleName">
            <summary>
            MiddleName : Middle name or middle initial of the person.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.LastName">
            <summary>
            LastName : Last name of the person.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.Suffix">
            <summary>
            Suffix : Surname suffix. For example, Sr. or Jr.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.EmailAddress">
            <summary>
            EmailAddress : E-mail address for the person.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.EmailPromotion">
            <summary>
            EmailPromotion : 0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.Phone">
            <summary>
            Phone : Phone number associated with the person.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.PasswordHash">
            <summary>
            PasswordHash : Password for the e-mail account.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.PasswordSalt">
            <summary>
            PasswordSalt : Random value concatenated with the password string before the password is hashed.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.AdditionalContactInfo">
            <summary>
            AdditionalContactInfo : Additional contact information about the person stored in xml format. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.EmployeeCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeeContactId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderContactId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.IndividualCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _individualContactId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.StoreContactCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _storeContactContactId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.ContactCreditCardCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _contactCreditCardContactId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.VendorContactCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _vendorContactContactId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.CreditCardIdCreditCardCollection_From_ContactCreditCard">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table creditCardIdCreditCardCollectionFromContactCreditCard
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.CustomerIdStoreCollection_From_StoreContact">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table customerIdStoreCollectionFromStoreContact
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.VendorIdVendorCollection_From_VendorContact">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table vendorIdVendorCollectionFromVendorContact
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactBase.ContactEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Contact.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase">
            <summary>
             Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IBillOfMaterials">
            <summary>
            	The data structure representation of the 'BillOfMaterials' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IBillOfMaterials.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IBillOfMaterials.BillOfMaterialsId">
            <summary>			
            BillOfMaterialsID : Primary key for BillOfMaterials records.
            </summary>
            <remarks>Member of the primary key of the underlying table "BillOfMaterials"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IBillOfMaterials.ProductAssemblyId">
            <summary>
            ProductAssemblyID : Parent product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IBillOfMaterials.ComponentId">
            <summary>
            ComponentID : Component identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IBillOfMaterials.StartDate">
            <summary>
            StartDate : Date the component started being used in the assembly item.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IBillOfMaterials.EndDate">
            <summary>
            EndDate : Date the component stopped being used in the assembly item.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IBillOfMaterials.UnitMeasureCode">
            <summary>
            UnitMeasureCode : Standard code identifying the unit of measure for the quantity.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IBillOfMaterials.BomLevel">
            <summary>
            BOMLevel : Indicates the depth the component is from its parent (AssemblyID).
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IBillOfMaterials.PerAssemblyQty">
            <summary>
            PerAssemblyQty : Quantity of the component needed to create the assembly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IBillOfMaterials.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.#ctor(System.Nullable{System.Int32},System.Int32,System.DateTime,System.Nullable{System.DateTime},System.String,System.Int16,System.Decimal,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase"/> instance.
            </summary>
            <param name="_productAssemblyId">Parent product identification number. Foreign key to Product.ProductID.</param>
            <param name="_componentId">Component identification number. Foreign key to Product.ProductID.</param>
            <param name="_startDate">Date the component started being used in the assembly item.</param>
            <param name="_endDate">Date the component stopped being used in the assembly item.</param>
            <param name="_unitMeasureCode">Standard code identifying the unit of measure for the quantity.</param>
            <param name="_bomLevel">Indicates the depth the component is from its parent (AssemblyID).</param>
            <param name="_perAssemblyQty">Quantity of the component needed to create the assembly.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.CreateBillOfMaterials(System.Nullable{System.Int32},System.Int32,System.DateTime,System.Nullable{System.DateTime},System.String,System.Int16,System.Decimal,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> instance.
            </summary>
            <param name="_productAssemblyId">Parent product identification number. Foreign key to Product.ProductID.</param>
            <param name="_componentId">Component identification number. Foreign key to Product.ProductID.</param>
            <param name="_startDate">Date the component started being used in the assembly item.</param>
            <param name="_endDate">Date the component stopped being used in the assembly item.</param>
            <param name="_unitMeasureCode">Standard code identifying the unit of measure for the quantity.</param>
            <param name="_bomLevel">Indicates the depth the component is from its parent (AssemblyID).</param>
            <param name="_perAssemblyQty">Quantity of the component needed to create the assembly.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed BillOfMaterials Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.Copy">
            <summary>
              Returns a Typed BillOfMaterials Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.DeepCopy">
            <summary>
              Returns a Typed BillOfMaterials Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.GetOriginalEntity">
            <summary>
              Returns a BillOfMaterials Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.Equals(Nettiers.AdventureWorks.Entities.BillOfMaterialsBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.ValueEquals(Nettiers.AdventureWorks.Entities.BillOfMaterialsBase,Nettiers.AdventureWorks.Entities.BillOfMaterialsBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsId">
            <summary>
            	Gets or sets the BillOfMaterialsId property. 
            	Primary key for BillOfMaterials records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.ProductAssemblyId">
            <summary>
            	Gets or sets the ProductAssemblyId property. 
            	Parent product identification number. Foreign key to Product.ProductID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsProductAssemblyIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.ComponentId">
            <summary>
            	Gets or sets the ComponentId property. 
            	Component identification number. Foreign key to Product.ProductID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.StartDate">
            <summary>
            	Gets or sets the StartDate property. 
            	Date the component started being used in the assembly item.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.EndDate">
            <summary>
            	Gets or sets the EndDate property. 
            	Date the component stopped being used in the assembly item.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsEndDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.UnitMeasureCode">
            <summary>
            	Gets or sets the UnitMeasureCode property. 
            	Standard code identifying the unit of measure for the quantity.
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BomLevel">
            <summary>
            	Gets or sets the BomLevel property. 
            	Indicates the depth the component is from its parent (AssemblyID).
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.PerAssemblyQty">
            <summary>
            	Gets or sets the PerAssemblyQty property. 
            	Quantity of the component needed to create the assembly.
            </summary>
            <value>This type is decimal.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.ComponentIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ComponentId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.ProductAssemblyIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductAssemblyId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.UnitMeasureCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/>.
            </summary>
            <value>The source UnitMeasure for UnitMeasureCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData">
            <summary>
            	The data structure representation of the 'BillOfMaterials' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData.BillOfMaterialsId">
            <summary>			
            BillOfMaterialsID : Primary key for BillOfMaterials records.
            </summary>
            <remarks>Member of the primary key of the underlying table "BillOfMaterials"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData.ProductAssemblyId">
            <summary>
            ProductAssemblyID : Parent product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData.ComponentId">
            <summary>
            ComponentID : Component identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData.StartDate">
            <summary>
            StartDate : Date the component started being used in the assembly item.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData.EndDate">
            <summary>
            EndDate : Date the component stopped being used in the assembly item.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData.UnitMeasureCode">
            <summary>
            UnitMeasureCode : Standard code identifying the unit of measure for the quantity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData.BomLevel">
            <summary>
            BOMLevel : Indicates the depth the component is from its parent (AssemblyID).
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData.PerAssemblyQty">
            <summary>
            PerAssemblyQty : Quantity of the component needed to create the assembly.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData.ComponentIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ComponentId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData.ProductAssemblyIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductAssemblyId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData.UnitMeasureCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/>.
            </summary>
            <value>The source UnitMeasure for UnitMeasureCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsBase.BillOfMaterialsEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsEventArgs.#ctor(Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn)">
            <summary>
             Initalizes a new Instance of the BillOfMaterialsEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsEventArgs.#ctor(Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the BillOfMaterialsEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsEventArgs.Column">
            <summary>
             The BillOfMaterialsColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsEventHandler">
            <summary>
             Define a delegate for all BillOfMaterials related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BillOfMaterialsComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsComparer.#ctor(Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:BillOfMaterialsComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsComparer.Equals(Nettiers.AdventureWorks.Entities.BillOfMaterials,Nettiers.AdventureWorks.Entities.BillOfMaterials)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> to compare.</param>
            <param name="b">The second <c>BillOfMaterials</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsComparer.GetHashCode(Nettiers.AdventureWorks.Entities.BillOfMaterials)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsComparer.Compare(Nettiers.AdventureWorks.Entities.BillOfMaterials,Nettiers.AdventureWorks.Entities.BillOfMaterials)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsKey.#ctor">
            <summary>
            Initializes a new instance of the BillOfMaterialsKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsKey.#ctor(Nettiers.AdventureWorks.Entities.BillOfMaterialsBase)">
            <summary>
            Initializes a new instance of the BillOfMaterialsKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the BillOfMaterialsKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterialsKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.BillOfMaterialsKey.BillOfMaterialsId">
            <summary>
            Gets or sets the BillOfMaterialsId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn">
            <summary>
            Enumerate the BillOfMaterials columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn.BillOfMaterialsId">
            <summary>
            BillOfMaterialsId : Primary key for BillOfMaterials records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn.ProductAssemblyId">
            <summary>
            ProductAssemblyId : Parent product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn.ComponentId">
            <summary>
            ComponentId : Component identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn.StartDate">
            <summary>
            StartDate : Date the component started being used in the assembly item.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn.EndDate">
            <summary>
            EndDate : Date the component stopped being used in the assembly item.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn.UnitMeasureCode">
            <summary>
            UnitMeasureCode : Standard code identifying the unit of measure for the quantity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn.BomLevel">
            <summary>
            BomLevel : Indicates the depth the component is from its parent (AssemblyID).
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn.PerAssemblyQty">
            <summary>
            PerAssemblyQty : Quantity of the component needed to create the assembly.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.BillOfMaterialsColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressEventArgs.#ctor(Nettiers.AdventureWorks.Entities.AddressColumn)">
            <summary>
             Initalizes a new Instance of the AddressEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressEventArgs.#ctor(Nettiers.AdventureWorks.Entities.AddressColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the AddressEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressEventArgs.Column">
            <summary>
             The AddressColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.AddressColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressEventHandler">
            <summary>
             Define a delegate for all Address related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AddressComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressComparer.#ctor(Nettiers.AdventureWorks.Entities.AddressColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:AddressComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressComparer.Equals(Nettiers.AdventureWorks.Entities.Address,Nettiers.AdventureWorks.Entities.Address)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> to compare.</param>
            <param name="b">The second <c>Address</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressComparer.GetHashCode(Nettiers.AdventureWorks.Entities.Address)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressComparer.Compare(Nettiers.AdventureWorks.Entities.Address,Nettiers.AdventureWorks.Entities.Address)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressKey.#ctor">
            <summary>
            Initializes a new instance of the AddressKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressKey.#ctor(Nettiers.AdventureWorks.Entities.AddressBase)">
            <summary>
            Initializes a new instance of the AddressKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the AddressKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressKey.AddressId">
            <summary>
            Gets or sets the AddressId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressColumn">
            <summary>
            Enumerate the Address columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressColumn.AddressId">
            <summary>
            AddressId : Primary key for Address records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressColumn.AddressLine1">
            <summary>
            AddressLine1 : First street address line.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressColumn.AddressLine2">
            <summary>
            AddressLine2 : Second street address line.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressColumn.City">
            <summary>
            City : Name of the city.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressColumn.StateProvinceId">
            <summary>
            StateProvinceId : Unique identification number for the state or province. Foreign key to StateProvince table.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressColumn.PostalCode">
            <summary>
            PostalCode : Postal code for the street address.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VVendorBase">
            <summary>
             Vendor (company) names and addresses and the names of vendor employees to contact.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._vendorId">
            <summary>
            VendorID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._name">
            <summary>
            Name : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._contactType">
            <summary>
            ContactType : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._firstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._middleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._lastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._suffix">
            <summary>
            Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._phone">
            <summary>
            Phone : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._emailAddress">
            <summary>
            EmailAddress : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._emailPromotion">
            <summary>
            EmailPromotion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._addressLine1">
            <summary>
            AddressLine1 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._addressLine2">
            <summary>
            AddressLine2 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._city">
            <summary>
            City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._stateProvinceName">
            <summary>
            StateProvinceName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._postalCode">
            <summary>
            PostalCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._countryRegionName">
            <summary>
            CountryRegionName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VVendorBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VVendorBase"/> instance.
            </summary>
            <param name="_vendorId"></param>
            <param name="_name"></param>
            <param name="_contactType"></param>
            <param name="_title"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_suffix"></param>
            <param name="_phone"></param>
            <param name="_emailAddress"></param>
            <param name="_emailPromotion"></param>
            <param name="_addressLine1"></param>
            <param name="_addressLine2"></param>
            <param name="_city"></param>
            <param name="_stateProvinceName"></param>
            <param name="_postalCode"></param>
            <param name="_countryRegionName"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.CreateVVendor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VVendor"/> instance.
            </summary>
            <param name="_vendorId"></param>
            <param name="_name"></param>
            <param name="_contactType"></param>
            <param name="_title"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_suffix"></param>
            <param name="_phone"></param>
            <param name="_emailAddress"></param>
            <param name="_emailPromotion"></param>
            <param name="_addressLine1"></param>
            <param name="_addressLine2"></param>
            <param name="_city"></param>
            <param name="_stateProvinceName"></param>
            <param name="_postalCode"></param>
            <param name="_countryRegionName"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.Copy">
            <summary>
              Returns a Typed VVendorBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.Equals(Nettiers.AdventureWorks.Entities.VVendorBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VVendorBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.Equals(Nettiers.AdventureWorks.Entities.VVendorBase,Nettiers.AdventureWorks.Entities.VVendorBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VVendorBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VVendorBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VVendorBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VVendor,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendorBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.VendorId">
            <summary>
            	Gets or Sets the VendorID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.Name">
            <summary>
            	Gets or Sets the Name property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.ContactType">
            <summary>
            	Gets or Sets the ContactType property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.Title">
            <summary>
            	Gets or Sets the Title property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.FirstName">
            <summary>
            	Gets or Sets the FirstName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.MiddleName">
            <summary>
            	Gets or Sets the MiddleName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.LastName">
            <summary>
            	Gets or Sets the LastName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.Suffix">
            <summary>
            	Gets or Sets the Suffix property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.Phone">
            <summary>
            	Gets or Sets the Phone property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.EmailAddress">
            <summary>
            	Gets or Sets the EmailAddress property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.EmailPromotion">
            <summary>
            	Gets or Sets the EmailPromotion property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.AddressLine1">
            <summary>
            	Gets or Sets the AddressLine1 property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.AddressLine2">
            <summary>
            	Gets or Sets the AddressLine2 property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.City">
            <summary>
            	Gets or Sets the City property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.StateProvinceName">
            <summary>
            	Gets or Sets the StateProvinceName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.PostalCode">
            <summary>
            	Gets or Sets the PostalCode property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.CountryRegionName">
            <summary>
            	Gets or Sets the CountryRegionName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VVendorBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VVendorBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VVendorBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VVendorColumn">
            <summary>
            Enumerate the VVendor columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.VendorId">
            <summary>
            VendorID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.Name">
            <summary>
            Name : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.ContactType">
            <summary>
            ContactType : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.Title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.FirstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.MiddleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.LastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.Suffix">
            <summary>
            Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.Phone">
            <summary>
            Phone : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.EmailAddress">
            <summary>
            EmailAddress : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.EmailPromotion">
            <summary>
            EmailPromotion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.AddressLine1">
            <summary>
            AddressLine1 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.AddressLine2">
            <summary>
            AddressLine2 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.City">
            <summary>
            City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.StateProvinceName">
            <summary>
            StateProvinceName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.PostalCode">
            <summary>
            PostalCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VVendorColumn.CountryRegionName">
            <summary>
            CountryRegionName : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityState">
            <summary>
            List of possible state for an entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EntityState.Unchanged">
            <summary>
            Entity is unchanged
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EntityState.Added">
            <summary>
            Entity is new
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EntityState.Changed">
            <summary>
            Entity has been modified
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EntityState.Deleted">
            <summary>
            Entity has been deleted
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorContact">
            <summary>
             Cross-reference table mapping vendors and their employees.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorContactBase">
            <summary>
             Cross-reference table mapping vendors and their employees.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IVendorContact">
            <summary>
            	The data structure representation of the 'VendorContact' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IVendorContact.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendorContact.VendorId">
            <summary>			
            VendorID : Primary key.
            </summary>
            <remarks>Member of the primary key of the underlying table "VendorContact"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendorContact.OriginalVendorId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendorContact.ContactId">
            <summary>			
            ContactID : Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.
            </summary>
            <remarks>Member of the primary key of the underlying table "VendorContact"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendorContact.OriginalContactId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendorContact.ContactTypeId">
            <summary>
            ContactTypeID : Contact type such as sales manager, or sales agent.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendorContact.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorContactBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorContactBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorContactBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorContactBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorContactBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VendorContactBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.#ctor(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VendorContactBase"/> instance.
            </summary>
            <param name="_vendorId">Primary key.</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="_contactTypeId">Contact type such as sales manager, or sales agent.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.CreateVendorContact(System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> instance.
            </summary>
            <param name="_vendorId">Primary key.</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="_contactTypeId">Contact type such as sales manager, or sales agent.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed VendorContact Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.Copy">
            <summary>
              Returns a Typed VendorContact Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.DeepCopy">
            <summary>
              Returns a Typed VendorContact Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.VendorContactColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.GetOriginalEntity">
            <summary>
              Returns a VendorContact Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.VendorContactBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.VendorContactBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.Equals(Nettiers.AdventureWorks.Entities.VendorContactBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VendorContactBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.ValueEquals(Nettiers.AdventureWorks.Entities.VendorContactBase,Nettiers.AdventureWorks.Entities.VendorContactBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VendorContactBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VendorContactBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VendorContactBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.VendorContactColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.VendorContactBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorContactColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.VendorContactColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.VendorContactBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorContactColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.VendorContactColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.VendorContactBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorContactColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.VendorContactColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.VendorContactBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorContactColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VendorContactBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VendorContactBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.VendorId">
            <summary>
            	Gets or sets the VendorId property. 
            	Primary key.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.OriginalVendorId">
            <summary>
            	Get the original value of the VendorID property.
            	Primary key.
            </summary>
            <remarks>This is the original value of the VendorID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.ContactId">
            <summary>
            	Gets or sets the ContactId property. 
            	Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.OriginalContactId">
            <summary>
            	Get the original value of the ContactID property.
            	Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.
            </summary>
            <remarks>This is the original value of the ContactID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.ContactTypeId">
            <summary>
            	Gets or sets the ContactTypeId property. 
            	Contact type such as sales manager, or sales agent.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.ContactIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/>.
            </summary>
            <value>The source Contact for ContactId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.ContactTypeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/>.
            </summary>
            <value>The source ContactType for ContactTypeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.VendorIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/>.
            </summary>
            <value>The source Vendor for VendorId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VendorContactBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VendorContactBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorContactBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorContactBase.VendorContactEntityData">
            <summary>
            	The data structure representation of the 'VendorContact' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorContactBase.VendorContactEntityData.VendorId">
            <summary>			
            VendorID : Primary key.
            </summary>
            <remarks>Member of the primary key of the underlying table "VendorContact"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorContactBase.VendorContactEntityData.OriginalVendorId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorContactBase.VendorContactEntityData.ContactId">
            <summary>			
            ContactID : Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.
            </summary>
            <remarks>Member of the primary key of the underlying table "VendorContact"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorContactBase.VendorContactEntityData.OriginalContactId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorContactBase.VendorContactEntityData.ContactTypeId">
            <summary>
            ContactTypeID : Contact type such as sales manager, or sales agent.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorContactBase.VendorContactEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.VendorContactEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactBase.VendorContactEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.VendorContactEntityData.ContactIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/>.
            </summary>
            <value>The source Contact for ContactId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.VendorContactEntityData.ContactTypeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/>.
            </summary>
            <value>The source ContactType for ContactTypeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.VendorContactEntityData.VendorIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/>.
            </summary>
            <value>The source Vendor for VendorId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactBase.VendorContactEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContact.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ITransactionHistoryArchive">
            <summary>
            	The data structure representation of the 'TransactionHistoryArchive' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ITransactionHistoryArchive.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistoryArchive.TransactionId">
            <summary>			
            TransactionID : Primary key for TransactionHistoryArchive records.
            </summary>
            <remarks>Member of the primary key of the underlying table "TransactionHistoryArchive"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistoryArchive.OriginalTransactionId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistoryArchive.ProductId">
            <summary>
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistoryArchive.ReferenceOrderId">
            <summary>
            ReferenceOrderID : Purchase order, sales order, or work order identification number.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistoryArchive.ReferenceOrderLineId">
            <summary>
            ReferenceOrderLineID : Line number associated with the purchase order, sales order, or work order.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistoryArchive.TransactionDate">
            <summary>
            TransactionDate : Date and time of the transaction.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistoryArchive.TransactionType">
            <summary>
            TransactionType : W = Work Order, S = Sales Order, P = Purchase Order
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistoryArchive.Quantity">
            <summary>
            Quantity : Product quantity.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistoryArchive.ActualCost">
            <summary>
            ActualCost : Product cost.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistoryArchive.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ISalesTaxRate">
            <summary>
            	The data structure representation of the 'SalesTaxRate' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ISalesTaxRate.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTaxRate.SalesTaxRateId">
            <summary>			
            SalesTaxRateID : Primary key for SalesTaxRate records.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesTaxRate"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTaxRate.StateProvinceId">
            <summary>
            StateProvinceID : State, province, or country/region the sales tax applies to.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTaxRate.TaxType">
            <summary>
            TaxType : 1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTaxRate.TaxRate">
            <summary>
            TaxRate : Tax rate amount.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTaxRate.Name">
            <summary>
            Name : Tax rate description.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTaxRate.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesTaxRate.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTaxRateBase">
            <summary>
             Tax rate lookup table.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRateBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.#ctor(System.Int32,System.Byte,System.Decimal,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRateBase"/> instance.
            </summary>
            <param name="_stateProvinceId">State, province, or country/region the sales tax applies to.</param>
            <param name="_taxType">1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.</param>
            <param name="_taxRate">Tax rate amount.</param>
            <param name="_name">Tax rate description.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.CreateSalesTaxRate(System.Int32,System.Byte,System.Decimal,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> instance.
            </summary>
            <param name="_stateProvinceId">State, province, or country/region the sales tax applies to.</param>
            <param name="_taxType">1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.</param>
            <param name="_taxRate">Tax rate amount.</param>
            <param name="_name">Tax rate description.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed SalesTaxRate Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.Copy">
            <summary>
              Returns a Typed SalesTaxRate Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.DeepCopy">
            <summary>
              Returns a Typed SalesTaxRate Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.SalesTaxRateColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.GetOriginalEntity">
            <summary>
              Returns a SalesTaxRate Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRateBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRateBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.Equals(Nettiers.AdventureWorks.Entities.SalesTaxRateBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRateBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.ValueEquals(Nettiers.AdventureWorks.Entities.SalesTaxRateBase,Nettiers.AdventureWorks.Entities.SalesTaxRateBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRateBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRateBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRateBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesTaxRateColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRateColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesTaxRateColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRateColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesTaxRateColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRateColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesTaxRateColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRateColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.SalesTaxRateId">
            <summary>
            	Gets or sets the SalesTaxRateId property. 
            	Primary key for SalesTaxRate records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.StateProvinceId">
            <summary>
            	Gets or sets the StateProvinceId property. 
            	State, province, or country/region the sales tax applies to.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.TaxType">
            <summary>
            	Gets or sets the TaxType property. 
            	1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.
            </summary>
            <value>This type is tinyint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.TaxRate">
            <summary>
            	Gets or sets the TaxRate property. 
            	Tax rate amount.
            </summary>
            <value>This type is smallmoney.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Tax rate description.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.StateProvinceIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/>.
            </summary>
            <value>The source StateProvince for StateProvinceId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.SalesTaxRateEntityData">
            <summary>
            	The data structure representation of the 'SalesTaxRate' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.SalesTaxRateEntityData.SalesTaxRateId">
            <summary>			
            SalesTaxRateID : Primary key for SalesTaxRate records.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesTaxRate"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.SalesTaxRateEntityData.StateProvinceId">
            <summary>
            StateProvinceID : State, province, or country/region the sales tax applies to.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.SalesTaxRateEntityData.TaxType">
            <summary>
            TaxType : 1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.SalesTaxRateEntityData.TaxRate">
            <summary>
            TaxRate : Tax rate amount.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.SalesTaxRateEntityData.Name">
            <summary>
            Name : Tax rate description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.SalesTaxRateEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.SalesTaxRateEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.SalesTaxRateEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.SalesTaxRateEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.SalesTaxRateEntityData.StateProvinceIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/>.
            </summary>
            <value>The source StateProvince for StateProvinceId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateBase.SalesTaxRateEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTaxRateEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesTaxRateColumn)">
            <summary>
             Initalizes a new Instance of the SalesTaxRateEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesTaxRateColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the SalesTaxRateEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateEventArgs.Column">
            <summary>
             The SalesTaxRateColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRateColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTaxRateEventHandler">
            <summary>
             Define a delegate for all SalesTaxRate related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTaxRateComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SalesTaxRateComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateComparer.#ctor(Nettiers.AdventureWorks.Entities.SalesTaxRateColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:SalesTaxRateComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateComparer.Equals(Nettiers.AdventureWorks.Entities.SalesTaxRate,Nettiers.AdventureWorks.Entities.SalesTaxRate)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> to compare.</param>
            <param name="b">The second <c>SalesTaxRate</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateComparer.GetHashCode(Nettiers.AdventureWorks.Entities.SalesTaxRate)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateComparer.Compare(Nettiers.AdventureWorks.Entities.SalesTaxRate,Nettiers.AdventureWorks.Entities.SalesTaxRate)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTaxRateKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateKey.#ctor">
            <summary>
            Initializes a new instance of the SalesTaxRateKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateKey.#ctor(Nettiers.AdventureWorks.Entities.SalesTaxRateBase)">
            <summary>
            Initializes a new instance of the SalesTaxRateKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the SalesTaxRateKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRateKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTaxRateKey.SalesTaxRateId">
            <summary>
            Gets or sets the SalesTaxRateId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTaxRateColumn">
            <summary>
            Enumerate the SalesTaxRate columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateColumn.SalesTaxRateId">
            <summary>
            SalesTaxRateId : Primary key for SalesTaxRate records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateColumn.StateProvinceId">
            <summary>
            StateProvinceId : State, province, or country/region the sales tax applies to.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateColumn.TaxType">
            <summary>
            TaxType : 1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateColumn.TaxRate">
            <summary>
            TaxRate : Tax rate amount.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateColumn.Name">
            <summary>
            Name : Tax rate description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTaxRateColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn)">
            <summary>
             Initalizes a new Instance of the SalesOrderHeaderEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the SalesOrderHeaderEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderEventArgs.Column">
            <summary>
             The SalesOrderHeaderColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderEventHandler">
            <summary>
             Define a delegate for all SalesOrderHeader related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SalesOrderHeaderComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderComparer.#ctor(Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:SalesOrderHeaderComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderComparer.Equals(Nettiers.AdventureWorks.Entities.SalesOrderHeader,Nettiers.AdventureWorks.Entities.SalesOrderHeader)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> to compare.</param>
            <param name="b">The second <c>SalesOrderHeader</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderComparer.GetHashCode(Nettiers.AdventureWorks.Entities.SalesOrderHeader)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderComparer.Compare(Nettiers.AdventureWorks.Entities.SalesOrderHeader,Nettiers.AdventureWorks.Entities.SalesOrderHeader)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderKey.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderHeaderKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderKey.#ctor(Nettiers.AdventureWorks.Entities.SalesOrderHeaderBase)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderHeaderKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderHeaderKey.SalesOrderId">
            <summary>
            Gets or sets the SalesOrderId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn">
            <summary>
            Enumerate the SalesOrderHeader columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.SalesOrderId">
            <summary>
            SalesOrderId : Primary key.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.RevisionNumber">
            <summary>
            RevisionNumber : Incremental number to track changes to the sales order over time.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.OrderDate">
            <summary>
            OrderDate : Dates the sales order was created.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.DueDate">
            <summary>
            DueDate : Date the order is due to the customer.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.ShipDate">
            <summary>
            ShipDate : Date the order was shipped to the customer.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.Status">
            <summary>
            Status : Order current status. 1 = In process; 2 = Approved; 3 = Backordered; 4 = Rejected; 5 = Shipped; 6 = Cancelled
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.OnlineOrderFlag">
            <summary>
            OnlineOrderFlag : 0 = Order placed by sales person. 1 = Order placed online by customer.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.SalesOrderNumber">
            <summary>
            SalesOrderNumber : Unique sales order identification number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.PurchaseOrderNumber">
            <summary>
            PurchaseOrderNumber : Customer purchase order number reference. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.AccountNumber">
            <summary>
            AccountNumber : Financial accounting number reference.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.CustomerId">
            <summary>
            CustomerId : Customer identification number. Foreign key to Customer.CustomerID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.ContactId">
            <summary>
            ContactId : Customer contact identification number. Foreign key to Contact.ContactID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.SalesPersonId">
            <summary>
            SalesPersonId : Sales person who created the sales order. Foreign key to SalesPerson.SalePersonID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.TerritoryId">
            <summary>
            TerritoryId : Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.BillToAddressId">
            <summary>
            BillToAddressId : Customer billing address. Foreign key to Address.AddressID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.ShipToAddressId">
            <summary>
            ShipToAddressId : Customer shipping address. Foreign key to Address.AddressID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.ShipMethodId">
            <summary>
            ShipMethodId : Shipping method. Foreign key to ShipMethod.ShipMethodID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.CreditCardId">
            <summary>
            CreditCardId : Credit card identification number. Foreign key to CreditCard.CreditCardID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.CreditCardApprovalCode">
            <summary>
            CreditCardApprovalCode : Approval code provided by the credit card company.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.CurrencyRateId">
            <summary>
            CurrencyRateId : Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.SubTotal">
            <summary>
            SubTotal : Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal)for the appropriate SalesOrderID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.TaxAmt">
            <summary>
            TaxAmt : Tax amount.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.Freight">
            <summary>
            Freight : Shipping cost.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.TotalDue">
            <summary>
            TotalDue : Total due from customer. Computed as Subtotal + TaxAmt + Freight.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.Comment">
            <summary>
            Comment : Sales representative comments.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderHeaderColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase">
            <summary>
             Individual products associated with a specific sales order. See SalesOrderHeader.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ISalesOrderDetail">
            <summary>
            	The data structure representation of the 'SalesOrderDetail' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ISalesOrderDetail.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderDetail.SalesOrderId">
            <summary>			
            SalesOrderID : Primary key. Foreign key to SalesOrderHeader.SalesOrderID.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesOrderDetail"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderDetail.OriginalSalesOrderId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderDetail.SalesOrderDetailId">
            <summary>			
            SalesOrderDetailID : Primary key. One incremental unique number per product sold.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesOrderDetail"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderDetail.CarrierTrackingNumber">
            <summary>
            CarrierTrackingNumber : Shipment tracking number supplied by the shipper.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderDetail.OrderQty">
            <summary>
            OrderQty : Quantity ordered per product.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderDetail.ProductId">
            <summary>
            ProductID : Product sold to customer. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderDetail.SpecialOfferId">
            <summary>
            SpecialOfferID : Promotional code. Foreign key to SpecialOffer.SpecialOfferID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderDetail.UnitPrice">
            <summary>
            UnitPrice : Selling price of a single product.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderDetail.UnitPriceDiscount">
            <summary>
            UnitPriceDiscount : Discount amount.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderDetail.LineTotal">
            <summary>
            LineTotal : Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderDetail.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesOrderDetail.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.#ctor(System.Int32,System.String,System.Int16,System.Int32,System.Int32,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase"/> instance.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_carrierTrackingNumber">Shipment tracking number supplied by the shipper.</param>
            <param name="_orderQty">Quantity ordered per product.</param>
            <param name="_productId">Product sold to customer. Foreign key to Product.ProductID.</param>
            <param name="_specialOfferId">Promotional code. Foreign key to SpecialOffer.SpecialOfferID.</param>
            <param name="_unitPrice">Selling price of a single product.</param>
            <param name="_unitPriceDiscount">Discount amount.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.CreateSalesOrderDetail(System.Int32,System.String,System.Int16,System.Int32,System.Int32,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> instance.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_carrierTrackingNumber">Shipment tracking number supplied by the shipper.</param>
            <param name="_orderQty">Quantity ordered per product.</param>
            <param name="_productId">Product sold to customer. Foreign key to Product.ProductID.</param>
            <param name="_specialOfferId">Promotional code. Foreign key to SpecialOffer.SpecialOfferID.</param>
            <param name="_unitPrice">Selling price of a single product.</param>
            <param name="_unitPriceDiscount">Discount amount.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed SalesOrderDetail Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.Copy">
            <summary>
              Returns a Typed SalesOrderDetail Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.DeepCopy">
            <summary>
              Returns a Typed SalesOrderDetail Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.GetOriginalEntity">
            <summary>
              Returns a SalesOrderDetail Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.Equals(Nettiers.AdventureWorks.Entities.SalesOrderDetailBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.ValueEquals(Nettiers.AdventureWorks.Entities.SalesOrderDetailBase,Nettiers.AdventureWorks.Entities.SalesOrderDetailBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderId">
            <summary>
            	Gets or sets the SalesOrderId property. 
            	Primary key. Foreign key to SalesOrderHeader.SalesOrderID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.OriginalSalesOrderId">
            <summary>
            	Get the original value of the SalesOrderID property.
            	Primary key. Foreign key to SalesOrderHeader.SalesOrderID.
            </summary>
            <remarks>This is the original value of the SalesOrderID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailId">
            <summary>
            	Gets or sets the SalesOrderDetailId property. 
            	Primary key. One incremental unique number per product sold.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.CarrierTrackingNumber">
            <summary>
            	Gets or sets the CarrierTrackingNumber property. 
            	Shipment tracking number supplied by the shipper.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.OrderQty">
            <summary>
            	Gets or sets the OrderQty property. 
            	Quantity ordered per product.
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Product sold to customer. Foreign key to Product.ProductID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SpecialOfferId">
            <summary>
            	Gets or sets the SpecialOfferId property. 
            	Promotional code. Foreign key to SpecialOffer.SpecialOfferID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.UnitPrice">
            <summary>
            	Gets or sets the UnitPrice property. 
            	Selling price of a single product.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.UnitPriceDiscount">
            <summary>
            	Gets or sets the UnitPriceDiscount property. 
            	Discount amount.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.LineTotal">
            <summary>
            	Gets or sets the LineTotal property. 
            	Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.
            </summary>
            <value>This type is numeric.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/>.
            </summary>
            <value>The source SalesOrderHeader for SalesOrderId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SpecialOfferIdProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/>.
            </summary>
            <value>The source SpecialOfferProduct for SpecialOfferIdProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData">
            <summary>
            	The data structure representation of the 'SalesOrderDetail' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.SalesOrderId">
            <summary>			
            SalesOrderID : Primary key. Foreign key to SalesOrderHeader.SalesOrderID.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesOrderDetail"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.OriginalSalesOrderId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.SalesOrderDetailId">
            <summary>			
            SalesOrderDetailID : Primary key. One incremental unique number per product sold.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesOrderDetail"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.CarrierTrackingNumber">
            <summary>
            CarrierTrackingNumber : Shipment tracking number supplied by the shipper.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.OrderQty">
            <summary>
            OrderQty : Quantity ordered per product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.ProductId">
            <summary>
            ProductID : Product sold to customer. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.SpecialOfferId">
            <summary>
            SpecialOfferID : Promotional code. Foreign key to SpecialOffer.SpecialOfferID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.UnitPrice">
            <summary>
            UnitPrice : Selling price of a single product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.UnitPriceDiscount">
            <summary>
            UnitPriceDiscount : Discount amount.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.LineTotal">
            <summary>
            LineTotal : Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.SalesOrderIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/>.
            </summary>
            <value>The source SalesOrderHeader for SalesOrderId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.SpecialOfferIdProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/>.
            </summary>
            <value>The source SpecialOfferProduct for SpecialOfferIdProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailBase.SalesOrderDetailEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn)">
            <summary>
             Initalizes a new Instance of the SalesOrderDetailEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the SalesOrderDetailEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailEventArgs.Column">
            <summary>
             The SalesOrderDetailColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailEventHandler">
            <summary>
             Define a delegate for all SalesOrderDetail related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SalesOrderDetailComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailComparer.#ctor(Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:SalesOrderDetailComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailComparer.Equals(Nettiers.AdventureWorks.Entities.SalesOrderDetail,Nettiers.AdventureWorks.Entities.SalesOrderDetail)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> to compare.</param>
            <param name="b">The second <c>SalesOrderDetail</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailComparer.GetHashCode(Nettiers.AdventureWorks.Entities.SalesOrderDetail)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailComparer.Compare(Nettiers.AdventureWorks.Entities.SalesOrderDetail,Nettiers.AdventureWorks.Entities.SalesOrderDetail)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailKey.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderDetailKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailKey.#ctor(Nettiers.AdventureWorks.Entities.SalesOrderDetailBase)">
            <summary>
            Initializes a new instance of the SalesOrderDetailKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the SalesOrderDetailKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetailKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailKey.SalesOrderId">
            <summary>
            Gets or sets the SalesOrderId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesOrderDetailKey.SalesOrderDetailId">
            <summary>
            Gets or sets the SalesOrderDetailId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn">
            <summary>
            Enumerate the SalesOrderDetail columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn.SalesOrderId">
            <summary>
            SalesOrderId : Primary key. Foreign key to SalesOrderHeader.SalesOrderID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn.SalesOrderDetailId">
            <summary>
            SalesOrderDetailId : Primary key. One incremental unique number per product sold.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn.CarrierTrackingNumber">
            <summary>
            CarrierTrackingNumber : Shipment tracking number supplied by the shipper.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn.OrderQty">
            <summary>
            OrderQty : Quantity ordered per product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn.ProductId">
            <summary>
            ProductId : Product sold to customer. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn.SpecialOfferId">
            <summary>
            SpecialOfferId : Promotional code. Foreign key to SpecialOffer.SpecialOfferID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn.UnitPrice">
            <summary>
            UnitPrice : Selling price of a single product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn.UnitPriceDiscount">
            <summary>
            UnitPriceDiscount : Discount amount.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn.LineTotal">
            <summary>
            LineTotal : Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesOrderDetailColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailEventArgs.#ctor(Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn)">
            <summary>
             Initalizes a new Instance of the PurchaseOrderDetailEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailEventArgs.#ctor(Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the PurchaseOrderDetailEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailEventArgs.Column">
            <summary>
             The PurchaseOrderDetailColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailEventHandler">
            <summary>
             Define a delegate for all PurchaseOrderDetail related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PurchaseOrderDetailComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailComparer.#ctor(Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:PurchaseOrderDetailComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailComparer.Equals(Nettiers.AdventureWorks.Entities.PurchaseOrderDetail,Nettiers.AdventureWorks.Entities.PurchaseOrderDetail)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> to compare.</param>
            <param name="b">The second <c>PurchaseOrderDetail</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailComparer.GetHashCode(Nettiers.AdventureWorks.Entities.PurchaseOrderDetail)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailComparer.Compare(Nettiers.AdventureWorks.Entities.PurchaseOrderDetail,Nettiers.AdventureWorks.Entities.PurchaseOrderDetail)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailKey.#ctor">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailKey.#ctor(Nettiers.AdventureWorks.Entities.PurchaseOrderDetailBase)">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailKey.PurchaseOrderId">
            <summary>
            Gets or sets the PurchaseOrderId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailKey.PurchaseOrderDetailId">
            <summary>
            Gets or sets the PurchaseOrderDetailId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn">
            <summary>
            Enumerate the PurchaseOrderDetail columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn.PurchaseOrderId">
            <summary>
            PurchaseOrderId : Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn.PurchaseOrderDetailId">
            <summary>
            PurchaseOrderDetailId : Primary key. One line number per purchased product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn.DueDate">
            <summary>
            DueDate : Date the product is expected to be received.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn.OrderQty">
            <summary>
            OrderQty : Quantity ordered.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn.ProductId">
            <summary>
            ProductId : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn.UnitPrice">
            <summary>
            UnitPrice : Vendor's selling price of a single product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn.LineTotal">
            <summary>
            LineTotal : Per product subtotal. Computed as OrderQty * UnitPrice.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn.ReceivedQty">
            <summary>
            ReceivedQty : Quantity actually received from the vendor.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn.RejectedQty">
            <summary>
            RejectedQty : Quantity rejected during inspection.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn.StockedQty">
            <summary>
            StockedQty : Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.PurchaseOrderDetailColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IProductModel">
            <summary>
            	The data structure representation of the 'ProductModel' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IProductModel.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModel.ProductModelId">
            <summary>			
            ProductModelID : Primary key for ProductModel records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductModel"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModel.Name">
            <summary>
            Name : Product model description.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModel.CatalogDescription">
            <summary>
            CatalogDescription : Detailed product catalog information in xml format.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModel.Instructions">
            <summary>
            Instructions : Manufacturing instructions in xml format.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModel.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModel.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModel.ProductModelProductDescriptionCultureCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productModelProductDescriptionCultureProductModelId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModel.CultureIdCultureCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table cultureIdCultureCollectionFromProductModelProductDescriptionCulture
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModel.ProductDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productDescriptionIdProductDescriptionCollectionFromProductModelProductDescriptionCulture
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModel.IllustrationIdIllustrationCollection_From_ProductModelIllustration">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table illustrationIdIllustrationCollectionFromProductModelIllustration
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModel.ProductModelIllustrationCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productModelIllustrationProductModelId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IProductModel.ProductCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productProductModelId
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCategoryBase">
            <summary>
             High-level product categorization.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCategoryBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCategoryBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCategoryBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCategoryBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCategoryBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategoryBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.#ctor(System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategoryBase"/> instance.
            </summary>
            <param name="_name">Category description.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.CreateProductCategory(System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> instance.
            </summary>
            <param name="_name">Category description.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ProductCategory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.Copy">
            <summary>
              Returns a Typed ProductCategory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.DeepCopy">
            <summary>
              Returns a Typed ProductCategory Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ProductCategoryColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.GetOriginalEntity">
            <summary>
              Returns a ProductCategory Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategoryBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.Equals(Nettiers.AdventureWorks.Entities.ProductCategoryBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ValueEquals(Nettiers.AdventureWorks.Entities.ProductCategoryBase,Nettiers.AdventureWorks.Entities.ProductCategoryBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategoryBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategoryBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategoryBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductCategoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductCategoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductCategoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductCategoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ProductCategoryId">
            <summary>
            	Gets or sets the ProductCategoryId property. 
            	Primary key for ProductCategory records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Category description.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ProductSubcategoryCollection">
            <summary>
            Holds a collection of ProductSubcategory objects
            which are related to this object through the relation FK_ProductSubcategory_ProductCategory_ProductCategoryID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductCategoryBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductCategoryBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCategoryBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ProductCategoryEntityData">
            <summary>
            	The data structure representation of the 'ProductCategory' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ProductCategoryEntityData.ProductCategoryId">
            <summary>			
            ProductCategoryID : Primary key for ProductCategory records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductCategory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ProductCategoryEntityData.Name">
            <summary>
            Name : Category description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ProductCategoryEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ProductCategoryEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ProductCategoryEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ProductCategoryEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ProductCategoryEntityData.ProductSubcategoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productSubcategoryProductCategoryId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryBase.ProductCategoryEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCategoryEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductCategoryColumn)">
            <summary>
             Initalizes a new Instance of the ProductCategoryEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductCategoryColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ProductCategoryEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryEventArgs.Column">
            <summary>
             The ProductCategoryColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ProductCategoryColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCategoryEventHandler">
            <summary>
             Define a delegate for all ProductCategory related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCategoryComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ProductCategoryComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryComparer.#ctor(Nettiers.AdventureWorks.Entities.ProductCategoryColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductCategoryComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryComparer.Equals(Nettiers.AdventureWorks.Entities.ProductCategory,Nettiers.AdventureWorks.Entities.ProductCategory)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> to compare.</param>
            <param name="b">The second <c>ProductCategory</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ProductCategory)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryComparer.Compare(Nettiers.AdventureWorks.Entities.ProductCategory,Nettiers.AdventureWorks.Entities.ProductCategory)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCategoryKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryKey.#ctor">
            <summary>
            Initializes a new instance of the ProductCategoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryKey.#ctor(Nettiers.AdventureWorks.Entities.ProductCategoryBase)">
            <summary>
            Initializes a new instance of the ProductCategoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ProductCategoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategoryKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductCategoryKey.ProductCategoryId">
            <summary>
            Gets or sets the ProductCategoryId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCategoryColumn">
            <summary>
            Enumerate the ProductCategory columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCategoryColumn.ProductCategoryId">
            <summary>
            ProductCategoryId : Primary key for ProductCategory records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCategoryColumn.Name">
            <summary>
            Name : Category description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCategoryColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductCategoryColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DepartmentEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentEventArgs.#ctor(Nettiers.AdventureWorks.Entities.DepartmentColumn)">
            <summary>
             Initalizes a new Instance of the DepartmentEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentEventArgs.#ctor(Nettiers.AdventureWorks.Entities.DepartmentColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the DepartmentEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentEventArgs.Column">
            <summary>
             The DepartmentColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.DepartmentColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DepartmentEventHandler">
            <summary>
             Define a delegate for all Department related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DepartmentComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DepartmentComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentComparer.#ctor(Nettiers.AdventureWorks.Entities.DepartmentColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:DepartmentComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentComparer.Equals(Nettiers.AdventureWorks.Entities.Department,Nettiers.AdventureWorks.Entities.Department)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> to compare.</param>
            <param name="b">The second <c>Department</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentComparer.GetHashCode(Nettiers.AdventureWorks.Entities.Department)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentComparer.Compare(Nettiers.AdventureWorks.Entities.Department,Nettiers.AdventureWorks.Entities.Department)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DepartmentKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentKey.#ctor">
            <summary>
            Initializes a new instance of the DepartmentKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentKey.#ctor(Nettiers.AdventureWorks.Entities.DepartmentBase)">
            <summary>
            Initializes a new instance of the DepartmentKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentKey.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of the DepartmentKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DepartmentKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DepartmentKey.DepartmentId">
            <summary>
            Gets or sets the DepartmentId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DepartmentColumn">
            <summary>
            Enumerate the Department columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DepartmentColumn.DepartmentId">
            <summary>
            DepartmentId : Primary key for Department records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DepartmentColumn.Name">
            <summary>
            Name : Name of the department.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DepartmentColumn.GroupName">
            <summary>
            GroupName : Name of the group to which the department belongs.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DepartmentColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyRate">
            <summary>
             Currency exchange rates.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyRateBase">
            <summary>
             Currency exchange rates.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ICurrencyRate">
            <summary>
            	The data structure representation of the 'CurrencyRate' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ICurrencyRate.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrencyRate.CurrencyRateId">
            <summary>			
            CurrencyRateID : Primary key for CurrencyRate records.
            </summary>
            <remarks>Member of the primary key of the underlying table "CurrencyRate"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrencyRate.CurrencyRateDate">
            <summary>
            CurrencyRateDate : Date and time the exchange rate was obtained.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrencyRate.FromCurrencyCode">
            <summary>
            FromCurrencyCode : Exchange rate was converted from this currency code.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrencyRate.ToCurrencyCode">
            <summary>
            ToCurrencyCode : Exchange rate was converted to this currency code.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrencyRate.AverageRate">
            <summary>
            AverageRate : Average exchange rate for the day.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrencyRate.EndOfDayRate">
            <summary>
            EndOfDayRate : Final exchange rate for the day.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrencyRate.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICurrencyRate.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderCurrencyRateId
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRateBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.#ctor(System.DateTime,System.String,System.String,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRateBase"/> instance.
            </summary>
            <param name="_currencyRateDate">Date and time the exchange rate was obtained.</param>
            <param name="_fromCurrencyCode">Exchange rate was converted from this currency code.</param>
            <param name="_toCurrencyCode">Exchange rate was converted to this currency code.</param>
            <param name="_averageRate">Average exchange rate for the day.</param>
            <param name="_endOfDayRate">Final exchange rate for the day.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CreateCurrencyRate(System.DateTime,System.String,System.String,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> instance.
            </summary>
            <param name="_currencyRateDate">Date and time the exchange rate was obtained.</param>
            <param name="_fromCurrencyCode">Exchange rate was converted from this currency code.</param>
            <param name="_toCurrencyCode">Exchange rate was converted to this currency code.</param>
            <param name="_averageRate">Average exchange rate for the day.</param>
            <param name="_endOfDayRate">Final exchange rate for the day.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed CurrencyRate Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.Copy">
            <summary>
              Returns a Typed CurrencyRate Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.DeepCopy">
            <summary>
              Returns a Typed CurrencyRate Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.CurrencyRateColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.GetOriginalEntity">
            <summary>
              Returns a CurrencyRate Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRateBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRateBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.Equals(Nettiers.AdventureWorks.Entities.CurrencyRateBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRateBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.ValueEquals(Nettiers.AdventureWorks.Entities.CurrencyRateBase,Nettiers.AdventureWorks.Entities.CurrencyRateBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRateBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRateBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRateBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CurrencyRateColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CurrencyRateBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRateColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CurrencyRateColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CurrencyRateBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRateColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CurrencyRateColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CurrencyRateBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRateColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CurrencyRateColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CurrencyRateBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRateColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CurrencyRateBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CurrencyRateBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateId">
            <summary>
            	Gets or sets the CurrencyRateId property. 
            	Primary key for CurrencyRate records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateDate">
            <summary>
            	Gets or sets the CurrencyRateDate property. 
            	Date and time the exchange rate was obtained.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.FromCurrencyCode">
            <summary>
            	Gets or sets the FromCurrencyCode property. 
            	Exchange rate was converted from this currency code.
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.ToCurrencyCode">
            <summary>
            	Gets or sets the ToCurrencyCode property. 
            	Exchange rate was converted to this currency code.
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.AverageRate">
            <summary>
            	Gets or sets the AverageRate property. 
            	Average exchange rate for the day.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.EndOfDayRate">
            <summary>
            	Gets or sets the EndOfDayRate property. 
            	Final exchange rate for the day.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.FromCurrencyCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/>.
            </summary>
            <value>The source Currency for FromCurrencyCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.ToCurrencyCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/>.
            </summary>
            <value>The source Currency for ToCurrencyCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of SalesOrderHeader objects
            which are related to this object through the relation FK_SalesOrderHeader_CurrencyRate_CurrencyRateID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CurrencyRateBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateEntityData">
            <summary>
            	The data structure representation of the 'CurrencyRate' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateEntityData.CurrencyRateId">
            <summary>			
            CurrencyRateID : Primary key for CurrencyRate records.
            </summary>
            <remarks>Member of the primary key of the underlying table "CurrencyRate"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateEntityData.CurrencyRateDate">
            <summary>
            CurrencyRateDate : Date and time the exchange rate was obtained.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateEntityData.FromCurrencyCode">
            <summary>
            FromCurrencyCode : Exchange rate was converted from this currency code.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateEntityData.ToCurrencyCode">
            <summary>
            ToCurrencyCode : Exchange rate was converted to this currency code.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateEntityData.AverageRate">
            <summary>
            AverageRate : Average exchange rate for the day.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateEntityData.EndOfDayRate">
            <summary>
            EndOfDayRate : Final exchange rate for the day.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateEntityData.FromCurrencyCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/>.
            </summary>
            <value>The source Currency for FromCurrencyCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateEntityData.ToCurrencyCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/>.
            </summary>
            <value>The source Currency for ToCurrencyCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateEntityData.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderCurrencyRateId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateBase.CurrencyRateEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRate.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ICulture">
            <summary>
            	The data structure representation of the 'Culture' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ICulture.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICulture.CultureId">
            <summary>			
            CultureID : Primary key for Culture records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Culture"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICulture.OriginalCultureId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICulture.Name">
            <summary>
            Name : Culture description.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICulture.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICulture.ProductModelProductDescriptionCultureCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productModelProductDescriptionCultureCultureId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICulture.ProductModelIdProductModelCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productModelIdProductModelCollectionFromProductModelProductDescriptionCulture
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICulture.ProductDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productDescriptionIdProductDescriptionCollectionFromProductModelProductDescriptionCulture
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ICreditCard">
            <summary>
            	The data structure representation of the 'CreditCard' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ICreditCard.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICreditCard.CreditCardId">
            <summary>			
            CreditCardID : Primary key for CreditCard records.
            </summary>
            <remarks>Member of the primary key of the underlying table "CreditCard"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICreditCard.CardType">
            <summary>
            CardType : Credit card name.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICreditCard.CardNumber">
            <summary>
            CardNumber : Credit card number.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICreditCard.ExpMonth">
            <summary>
            ExpMonth : Credit card expiration month.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICreditCard.ExpYear">
            <summary>
            ExpYear : Credit card expiration year.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICreditCard.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICreditCard.ContactCreditCardCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _contactCreditCardCreditCardId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICreditCard.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderCreditCardId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICreditCard.ContactIdContactCollection_From_ContactCreditCard">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table contactIdContactCollectionFromContactCreditCard
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IContactType">
            <summary>
            	The data structure representation of the 'ContactType' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IContactType.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContactType.ContactTypeId">
            <summary>			
            ContactTypeID : Primary key for ContactType records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ContactType"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContactType.Name">
            <summary>
            Name : Contact type description.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContactType.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContactType.StoreContactCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _storeContactContactTypeId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContactType.VendorContactCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _vendorContactContactTypeId
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VSalesPersonBase">
            <summary>
             Sales representiatives (names and addresses) and their sales-related information.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._salesPersonId">
            <summary>
            SalesPersonID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._firstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._middleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._lastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._suffix">
            <summary>
            Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._jobTitle">
            <summary>
            JobTitle : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._phone">
            <summary>
            Phone : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._emailAddress">
            <summary>
            EmailAddress : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._emailPromotion">
            <summary>
            EmailPromotion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._addressLine1">
            <summary>
            AddressLine1 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._addressLine2">
            <summary>
            AddressLine2 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._city">
            <summary>
            City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._stateProvinceName">
            <summary>
            StateProvinceName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._postalCode">
            <summary>
            PostalCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._countryRegionName">
            <summary>
            CountryRegionName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._territoryName">
            <summary>
            TerritoryName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._territoryGroup">
            <summary>
            TerritoryGroup : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._salesQuota">
            <summary>
            SalesQuota : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._salesYtd">
            <summary>
            SalesYTD : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._salesLastYear">
            <summary>
            SalesLastYear : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Decimal,System.Decimal)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonBase"/> instance.
            </summary>
            <param name="_salesPersonId"></param>
            <param name="_title"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_suffix"></param>
            <param name="_jobTitle"></param>
            <param name="_phone"></param>
            <param name="_emailAddress"></param>
            <param name="_emailPromotion"></param>
            <param name="_addressLine1"></param>
            <param name="_addressLine2"></param>
            <param name="_city"></param>
            <param name="_stateProvinceName"></param>
            <param name="_postalCode"></param>
            <param name="_countryRegionName"></param>
            <param name="_territoryName"></param>
            <param name="_territoryGroup"></param>
            <param name="_salesQuota"></param>
            <param name="_salesYtd"></param>
            <param name="_salesLastYear"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.CreateVSalesPerson(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Decimal,System.Decimal)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPerson"/> instance.
            </summary>
            <param name="_salesPersonId"></param>
            <param name="_title"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_suffix"></param>
            <param name="_jobTitle"></param>
            <param name="_phone"></param>
            <param name="_emailAddress"></param>
            <param name="_emailPromotion"></param>
            <param name="_addressLine1"></param>
            <param name="_addressLine2"></param>
            <param name="_city"></param>
            <param name="_stateProvinceName"></param>
            <param name="_postalCode"></param>
            <param name="_countryRegionName"></param>
            <param name="_territoryName"></param>
            <param name="_territoryGroup"></param>
            <param name="_salesQuota"></param>
            <param name="_salesYtd"></param>
            <param name="_salesLastYear"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.Copy">
            <summary>
              Returns a Typed VSalesPersonBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.Equals(Nettiers.AdventureWorks.Entities.VSalesPersonBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.Equals(Nettiers.AdventureWorks.Entities.VSalesPersonBase,Nettiers.AdventureWorks.Entities.VSalesPersonBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VSalesPerson,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.SalesPersonId">
            <summary>
            	Gets or Sets the SalesPersonID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.Title">
            <summary>
            	Gets or Sets the Title property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.FirstName">
            <summary>
            	Gets or Sets the FirstName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.MiddleName">
            <summary>
            	Gets or Sets the MiddleName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.LastName">
            <summary>
            	Gets or Sets the LastName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.Suffix">
            <summary>
            	Gets or Sets the Suffix property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.JobTitle">
            <summary>
            	Gets or Sets the JobTitle property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.Phone">
            <summary>
            	Gets or Sets the Phone property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.EmailAddress">
            <summary>
            	Gets or Sets the EmailAddress property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.EmailPromotion">
            <summary>
            	Gets or Sets the EmailPromotion property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.AddressLine1">
            <summary>
            	Gets or Sets the AddressLine1 property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.AddressLine2">
            <summary>
            	Gets or Sets the AddressLine2 property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.City">
            <summary>
            	Gets or Sets the City property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.StateProvinceName">
            <summary>
            	Gets or Sets the StateProvinceName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.PostalCode">
            <summary>
            	Gets or Sets the PostalCode property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.CountryRegionName">
            <summary>
            	Gets or Sets the CountryRegionName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.TerritoryName">
            <summary>
            	Gets or Sets the TerritoryName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.TerritoryGroup">
            <summary>
            	Gets or Sets the TerritoryGroup property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.SalesQuota">
            <summary>
            	Gets or Sets the SalesQuota property. 
            	
            </summary>
            <value>This type is money</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0. It is up to the developer
            to check the value of IsSalesQuotaNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.SalesYtd">
            <summary>
            	Gets or Sets the SalesYTD property. 
            	
            </summary>
            <value>This type is money</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.SalesLastYear">
            <summary>
            	Gets or Sets the SalesLastYear property. 
            	
            </summary>
            <value>This type is money</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VSalesPersonBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VSalesPersonBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VSalesPersonColumn">
            <summary>
            Enumerate the VSalesPerson columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.SalesPersonId">
            <summary>
            SalesPersonID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.Title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.FirstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.MiddleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.LastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.Suffix">
            <summary>
            Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.JobTitle">
            <summary>
            JobTitle : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.Phone">
            <summary>
            Phone : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.EmailAddress">
            <summary>
            EmailAddress : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.EmailPromotion">
            <summary>
            EmailPromotion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.AddressLine1">
            <summary>
            AddressLine1 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.AddressLine2">
            <summary>
            AddressLine2 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.City">
            <summary>
            City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.StateProvinceName">
            <summary>
            StateProvinceName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.PostalCode">
            <summary>
            PostalCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.CountryRegionName">
            <summary>
            CountryRegionName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.TerritoryName">
            <summary>
            TerritoryName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.TerritoryGroup">
            <summary>
            TerritoryGroup : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.SalesQuota">
            <summary>
            SalesQuota : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.SalesYtd">
            <summary>
            SalesYTD : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonColumn.SalesLastYear">
            <summary>
            SalesLastYear : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase">
            <summary>
             Product names and descriptions. Product descriptions are provided in multiple languages.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase._productId">
            <summary>
            ProductID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase._name">
            <summary>
            Name : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase._productModel">
            <summary>
            ProductModel : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase._cultureId">
            <summary>
            CultureID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase._description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.#ctor(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase"/> instance.
            </summary>
            <param name="_productId"></param>
            <param name="_name"></param>
            <param name="_productModel"></param>
            <param name="_cultureId"></param>
            <param name="_description"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.CreateVProductAndDescription(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescription"/> instance.
            </summary>
            <param name="_productId"></param>
            <param name="_name"></param>
            <param name="_productModel"></param>
            <param name="_cultureId"></param>
            <param name="_description"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.Copy">
            <summary>
              Returns a Typed VProductAndDescriptionBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.Equals(Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.Equals(Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase,Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VProductAndDescription,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.ProductId">
            <summary>
            	Gets or Sets the ProductID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.Name">
            <summary>
            	Gets or Sets the Name property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.ProductModel">
            <summary>
            	Gets or Sets the ProductModel property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.CultureId">
            <summary>
            	Gets or Sets the CultureID property. 
            	
            </summary>
            <value>This type is nchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.Description">
            <summary>
            	Gets or Sets the Description property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VProductAndDescriptionBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VProductAndDescriptionColumn">
            <summary>
            Enumerate the VProductAndDescription columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductAndDescriptionColumn.ProductId">
            <summary>
            ProductID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductAndDescriptionColumn.Name">
            <summary>
            Name : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductAndDescriptionColumn.ProductModel">
            <summary>
            ProductModel : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductAndDescriptionColumn.CultureId">
            <summary>
            CultureID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductAndDescriptionColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VProductAndDescription">
            <summary>
             Product names and descriptions. Product descriptions are provided in multiple languages.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductAndDescription.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescription"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase">
            <summary>
             Displays the content from each element in the xml column Demographics for each customer in the Sales.Individual table.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase._customerId">
            <summary>
            CustomerID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase._totalPurchaseYtd">
            <summary>
            TotalPurchaseYTD : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase._dateFirstPurchase">
            <summary>
            DateFirstPurchase : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase._birthDate">
            <summary>
            BirthDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase._maritalStatus">
            <summary>
            MaritalStatus : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase._yearlyIncome">
            <summary>
            YearlyIncome : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase._gender">
            <summary>
            Gender : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase._totalChildren">
            <summary>
            TotalChildren : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase._numberChildrenAtHome">
            <summary>
            NumberChildrenAtHome : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase._education">
            <summary>
            Education : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase._occupation">
            <summary>
            Occupation : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase._homeOwnerFlag">
            <summary>
            HomeOwnerFlag : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase._numberCarsOwned">
            <summary>
            NumberCarsOwned : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.#ctor(System.Int32,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase"/> instance.
            </summary>
            <param name="_customerId"></param>
            <param name="_totalPurchaseYtd"></param>
            <param name="_dateFirstPurchase"></param>
            <param name="_birthDate"></param>
            <param name="_maritalStatus"></param>
            <param name="_yearlyIncome"></param>
            <param name="_gender"></param>
            <param name="_totalChildren"></param>
            <param name="_numberChildrenAtHome"></param>
            <param name="_education"></param>
            <param name="_occupation"></param>
            <param name="_homeOwnerFlag"></param>
            <param name="_numberCarsOwned"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.CreateVIndividualDemographics(System.Int32,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographics"/> instance.
            </summary>
            <param name="_customerId"></param>
            <param name="_totalPurchaseYtd"></param>
            <param name="_dateFirstPurchase"></param>
            <param name="_birthDate"></param>
            <param name="_maritalStatus"></param>
            <param name="_yearlyIncome"></param>
            <param name="_gender"></param>
            <param name="_totalChildren"></param>
            <param name="_numberChildrenAtHome"></param>
            <param name="_education"></param>
            <param name="_occupation"></param>
            <param name="_homeOwnerFlag"></param>
            <param name="_numberCarsOwned"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.Copy">
            <summary>
              Returns a Typed VIndividualDemographicsBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.Equals(Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.Equals(Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase,Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VIndividualDemographics,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.CustomerId">
            <summary>
            	Gets or Sets the CustomerID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.TotalPurchaseYtd">
            <summary>
            	Gets or Sets the TotalPurchaseYTD property. 
            	
            </summary>
            <value>This type is money</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0. It is up to the developer
            to check the value of IsTotalPurchaseYtdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.DateFirstPurchase">
            <summary>
            	Gets or Sets the DateFirstPurchase property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsDateFirstPurchaseNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.BirthDate">
            <summary>
            	Gets or Sets the BirthDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsBirthDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.MaritalStatus">
            <summary>
            	Gets or Sets the MaritalStatus property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.YearlyIncome">
            <summary>
            	Gets or Sets the YearlyIncome property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.Gender">
            <summary>
            	Gets or Sets the Gender property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.TotalChildren">
            <summary>
            	Gets or Sets the TotalChildren property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsTotalChildrenNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.NumberChildrenAtHome">
            <summary>
            	Gets or Sets the NumberChildrenAtHome property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsNumberChildrenAtHomeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.Education">
            <summary>
            	Gets or Sets the Education property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.Occupation">
            <summary>
            	Gets or Sets the Occupation property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.HomeOwnerFlag">
            <summary>
            	Gets or Sets the HomeOwnerFlag property. 
            	
            </summary>
            <value>This type is bit</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return false. It is up to the developer
            to check the value of IsHomeOwnerFlagNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.NumberCarsOwned">
            <summary>
            	Gets or Sets the NumberCarsOwned property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsNumberCarsOwnedNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VIndividualDemographicsBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VIndividualDemographicsColumn">
            <summary>
            Enumerate the VIndividualDemographics columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsColumn.CustomerId">
            <summary>
            CustomerID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsColumn.TotalPurchaseYtd">
            <summary>
            TotalPurchaseYTD : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsColumn.DateFirstPurchase">
            <summary>
            DateFirstPurchase : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsColumn.BirthDate">
            <summary>
            BirthDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsColumn.MaritalStatus">
            <summary>
            MaritalStatus : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsColumn.YearlyIncome">
            <summary>
            YearlyIncome : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsColumn.Gender">
            <summary>
            Gender : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsColumn.TotalChildren">
            <summary>
            TotalChildren : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsColumn.NumberChildrenAtHome">
            <summary>
            NumberChildrenAtHome : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsColumn.Education">
            <summary>
            Education : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsColumn.Occupation">
            <summary>
            Occupation : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsColumn.HomeOwnerFlag">
            <summary>
            HomeOwnerFlag : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VIndividualDemographicsColumn.NumberCarsOwned">
            <summary>
            NumberCarsOwned : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Validation.BrokenRule">
            <summary>
            Object representing a broken validation rule
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.BrokenRule.#ctor">
            <summary>
            Default parameterless constructor used by Reflection for Soap Serialization
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.BrokenRule.#ctor(Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo)">
            <summary>
            Creates a instance of the object.
            </summary>
            <param name="rule"><see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo"/> containing the details about the rule that was broken.</param>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.BrokenRule.RuleName">
            <summary>
            Provides access to the name of the broken rule.
            </summary>
            <value>The name of the rule.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.BrokenRule.Description">
            <summary>
            The description of the broken rule.
            </summary>
            <value>The description of the rule.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.BrokenRule.Property">
            <summary>
            The name of the property affected by the broken rule.
            </summary>
            <value>The property affected by the rule.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TList`1">
            <summary>
            Represents a strongly typed list of .netTiers table entity that can be accessed by index. 
            Provides methods to search, sort, and manipulate lists.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TList{T}"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.#ctor(System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:TList{T}"/> class based on another list.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.RemoveEntity(System.Int32)">
            <summary>
            Removes the entity item at the specified index and places it in the DeletedItems collection.
            If this list were to be persisted, it would delete the entity from the repository.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.RemoveEntity(`0)">
            <summary>
            Removes the entity item and places it in the DeletedItems collection.
            If this list were to be persisted, it would delete the entity from the repository.
            </summary>
            <param name="item">The entity to delete and place in DeletedItems collection.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts the specified item in the list at the specified index.
            </summary>
            <param name="index">The zero-based index where the item is to be inserted.</param>
            <param name="item">The item to insert in the list.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.Clone">
            <summary>
             Creates an exact copy of this TList{T} instance.
            </summary>
            <returns>The TList{T} object this method creates, cast as an object.</returns>
            <implements><see cref="M:System.ICloneable.Clone"/></implements>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.Clone(System.Collections.IDictionary)">
            <summary>
             Creates an exact copy of this TList{T} instance.
            </summary>
            <returns>The TList{T} object this method creates, cast as an object.</returns>
            <implements><see cref="M:Nettiers.AdventureWorks.Entities.ICloneableEx.Clone(System.Collections.IDictionary)"/></implements>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.Copy">
            <summary>
             Creates an exact copy of this TList{T} object.
            </summary>
            <returns>A new, identical copy of the TList{T}.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.Copy(System.Collections.IDictionary)">
            <summary>
             Creates an exact copy of this TList{T} object.
            </summary>
            <returns>A new, identical copy of the TList{T}.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.AcceptChanges">
            <summary>
            Accepts the changes made to underlyting entities.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.CopyTo(Nettiers.AdventureWorks.Entities.TList{`0})">
            <summary>
            Adds the data in this collection to another collection
            </summary>
            <param name="copyTo"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.ForEach``1(Nettiers.AdventureWorks.Entities.TList{``0},System.Action{``0})">
            <summary>
            Performs the specified action on each element of the specified array.
            </summary>
            <param name="list">The list.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.GetRange(System.Int32,System.Int32)">
            <summary>
            Gets the range
            </summary>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.FindAll(System.Enum,System.Object)">
            <summary>
             Finds a collection of <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.FindAll(System.Enum,System.Object,System.Boolean)">
            <summary>
             Finds a collection of <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.FindAll(System.String,System.Object)">
            <summary>
             Finds a collection of <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.FindAll(System.String,System.Object,System.Boolean)">
            <summary>
             Finds a collection of <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.FindAll(System.Predicate{`0})">
            <summary>
            Retrieves the all the elements that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the elements to search for.</param>
            <returns>
            A <see cref="T:TList{T}"></see> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:TList{T}"></see>.
            </returns>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>		
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.FindAllDistinct(System.Enum)">
            <summary>
            Finds all distinct elements for the specified column
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.FindAllDistinct(System.String)">
            <summary>
            Finds all distinct elements for the specified column
            </summary>
            <param name="columnName">Name of the column.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.Exists(System.Predicate{`0})">
            <summary>
            Determines whether the <see cref="T:TList{T}"></see> contains elements that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the elements to search for.</param>
            <returns>
            true if the <see cref="T:TList{T}"></see> contains one or more elements that match the conditions defined by the specified predicate; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.FindIndex(System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:TList{T}"></see>.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <returns>
            The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, 1.
            </returns>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.FindIndex(System.Int32,System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:TList{T}"></see> that extends from the specified index to the last element.
            </summary>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <returns>
            The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, 1.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">startIndex is outside the range of valid indexes for the <see cref="T:TList{T}"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:TList{T}"></see> that starts at the specified index and contains the specified number of elements.
            </summary>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <param name="count">The number of elements in the section to search.</param>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <returns>
            The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, 1.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">startIndex is outside the range of valid indexes for the <see cref="T:TList{T}"></see>.-or-count is less than 0.-or-startIndex and count do not specify a valid section in the <see cref="T:TList{T}"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.FindAllBy(Nettiers.AdventureWorks.Entities.TList{`0}.FindAllByType,System.Enum,System.Object)">
            <summary>
             Finds a collection of <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:Nettiers.AdventureWorks.Entities.TList`1.FindAllByType"/> Type to easily search by</param>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.FindAllBy(Nettiers.AdventureWorks.Entities.TList{`0}.FindAllByType,System.Enum,System.Object,System.Boolean)">
            <summary>
             Finds a collection of <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:Nettiers.AdventureWorks.Entities.TList`1.FindAllByType"/> Type to easily search by</param>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.FindAllBy(Nettiers.AdventureWorks.Entities.TList{`0}.FindAllByType,System.String,System.Object)">
            <summary>
             Finds a collection of <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:Nettiers.AdventureWorks.Entities.TList`1.FindAllByType"/> Type to easily search by</param>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.FindAllBy(Nettiers.AdventureWorks.Entities.TList{`0}.FindAllByType,System.String,System.Object,System.Boolean)">
            <summary>
             Finds a collection of <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:Nettiers.AdventureWorks.Entities.TList`1.FindAllByType"/> Type to easily search by</param>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TList`1.FindAllBy(Nettiers.AdventureWorks.Entities.TList{`0}.FindAllByType,System.ComponentModel.PropertyDescriptor,System.Object,System.Int32,System.Boolean)">
            <summary>
            Searches for the index of the item that has the specified property descriptor with the specified value.
            </summary>
            <param name="findAllByType"><see cref="T:Nettiers.AdventureWorks.Entities.TList`1.FindAllByType"/> Type to easily search by</param>
            <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor"> to search for.</see></param>
            <param name="key">The value of <i>property</i> to match.</param>
            <param name="start">The index in the list at which to start the search.</param>
            <param name="ignoreCase">Indicator of whether to perform a case-sensitive or case insensitive search (string properties only).</param>
            <returns>The zero-based index of the item that matches the property descriptor and contains the specified value. </returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TList`1.IsDirty">
             <summary>
            		Indicates whether the collection was modified or not, and thus if it needs to be saved.
             </summary>
            <returns>true is the collection needs to be saved; otherwise false.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TList`1.IsNewCount">
             <summary>
            		Returns the number of items that have been marked new in the collection.
             </summary>
            <returns>the number of items that have been marked new in the collection</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TList`1.IsDeletedCount">
             <summary>
            		Returns the number of items that have been marked to delete in the collection.
             </summary>
            <returns>the number of items that have been marked for deletation in the collection</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TList`1.IsDirtyCount">
             <summary>
            		Returns the number of items that have been marked as modified in the collection.
             </summary>
            <returns>the number of items that have been marked as modified in the collection</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TList`1.AllChangesCount">
            <summary>
            Gets all changes count.
            <remarks>
            This is a total of the following counts:
             IsNewCount
             IsDirtyCount
             IsDeletedCount
            </remarks>
            </summary>
            <value>All changes count.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TList`1.IsValid">
            <summary>
            Returns whether all items contained in the list.
            </summary>
            <value>True if all items are valid; otherwise False.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TList`1.InvalidItems">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.List`1"/> object of invalid items.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TList`1.DeletedItems">
            <summary>
            Hold a collection of item that we want to delete. they are removed from the main collection, so the databinding is working.
            </summary>
            <remark>The save method will loop on this collection to delete item from the datasource.</remark>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TList`1.FindAllByType">
            <summary>
             Used to by FindAllBy method to all for easy searching.
             </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TList`1.FindAllByType.StartsWith">
            <summary>
            Starts with Value in List
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TList`1.FindAllByType.EndsWith">
            <summary>
            Ends with Value in List
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TList`1.FindAllByType.Contains">
            <summary>
            Contains Value in List
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting">
            <summary>
             Work order details.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase">
            <summary>
             Work order details.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IWorkOrderRouting">
            <summary>
            	The data structure representation of the 'WorkOrderRouting' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.WorkOrderId">
            <summary>			
            WorkOrderID : Primary key. Foreign key to WorkOrder.WorkOrderID.
            </summary>
            <remarks>Member of the primary key of the underlying table "WorkOrderRouting"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.OriginalWorkOrderId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.ProductId">
            <summary>			
            ProductID : Primary key. Foreign key to Product.ProductID.
            </summary>
            <remarks>Member of the primary key of the underlying table "WorkOrderRouting"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.OperationSequence">
            <summary>			
            OperationSequence : Primary key. Indicates the manufacturing process sequence.
            </summary>
            <remarks>Member of the primary key of the underlying table "WorkOrderRouting"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.OriginalOperationSequence">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.LocationId">
            <summary>
            LocationID : Manufacturing location where the part is processed. Foreign key to Location.LocationID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.ScheduledStartDate">
            <summary>
            ScheduledStartDate : Planned manufacturing start date.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.ScheduledEndDate">
            <summary>
            ScheduledEndDate : Planned manufacturing end date.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.ActualStartDate">
            <summary>
            ActualStartDate : Actual start date.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.ActualEndDate">
            <summary>
            ActualEndDate : Actual end date.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.ActualResourceHrs">
            <summary>
            ActualResourceHrs : Number of manufacturing hours used.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.PlannedCost">
            <summary>
            PlannedCost : Estimated manufacturing cost.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.ActualCost">
            <summary>
            ActualCost : Actual manufacturing cost.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IWorkOrderRouting.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.#ctor(System.Int32,System.Int32,System.Int16,System.Int16,System.DateTime,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Decimal,System.Nullable{System.Decimal},System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase"/> instance.
            </summary>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_operationSequence">Primary key. Indicates the manufacturing process sequence.</param>
            <param name="_locationId">Manufacturing location where the part is processed. Foreign key to Location.LocationID.</param>
            <param name="_scheduledStartDate">Planned manufacturing start date.</param>
            <param name="_scheduledEndDate">Planned manufacturing end date.</param>
            <param name="_actualStartDate">Actual start date.</param>
            <param name="_actualEndDate">Actual end date.</param>
            <param name="_actualResourceHrs">Number of manufacturing hours used.</param>
            <param name="_plannedCost">Estimated manufacturing cost.</param>
            <param name="_actualCost">Actual manufacturing cost.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.CreateWorkOrderRouting(System.Int32,System.Int32,System.Int16,System.Int16,System.DateTime,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.Decimal,System.Nullable{System.Decimal},System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> instance.
            </summary>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_operationSequence">Primary key. Indicates the manufacturing process sequence.</param>
            <param name="_locationId">Manufacturing location where the part is processed. Foreign key to Location.LocationID.</param>
            <param name="_scheduledStartDate">Planned manufacturing start date.</param>
            <param name="_scheduledEndDate">Planned manufacturing end date.</param>
            <param name="_actualStartDate">Actual start date.</param>
            <param name="_actualEndDate">Actual end date.</param>
            <param name="_actualResourceHrs">Number of manufacturing hours used.</param>
            <param name="_plannedCost">Estimated manufacturing cost.</param>
            <param name="_actualCost">Actual manufacturing cost.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed WorkOrderRouting Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.Copy">
            <summary>
              Returns a Typed WorkOrderRouting Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.DeepCopy">
            <summary>
              Returns a Typed WorkOrderRouting Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.GetOriginalEntity">
            <summary>
              Returns a WorkOrderRouting Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.Equals(Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ValueEquals(Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase,Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderId">
            <summary>
            	Gets or sets the WorkOrderId property. 
            	Primary key. Foreign key to WorkOrder.WorkOrderID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.OriginalWorkOrderId">
            <summary>
            	Get the original value of the WorkOrderID property.
            	Primary key. Foreign key to WorkOrder.WorkOrderID.
            </summary>
            <remarks>This is the original value of the WorkOrderID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Primary key. Foreign key to Product.ProductID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.OriginalProductId">
            <summary>
            	Get the original value of the ProductID property.
            	Primary key. Foreign key to Product.ProductID.
            </summary>
            <remarks>This is the original value of the ProductID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.OperationSequence">
            <summary>
            	Gets or sets the OperationSequence property. 
            	Primary key. Indicates the manufacturing process sequence.
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.OriginalOperationSequence">
            <summary>
            	Get the original value of the OperationSequence property.
            	Primary key. Indicates the manufacturing process sequence.
            </summary>
            <remarks>This is the original value of the OperationSequence property.</remarks>
            <value>This type is smallint</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.LocationId">
            <summary>
            	Gets or sets the LocationId property. 
            	Manufacturing location where the part is processed. Foreign key to Location.LocationID.
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ScheduledStartDate">
            <summary>
            	Gets or sets the ScheduledStartDate property. 
            	Planned manufacturing start date.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ScheduledEndDate">
            <summary>
            	Gets or sets the ScheduledEndDate property. 
            	Planned manufacturing end date.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ActualStartDate">
            <summary>
            	Gets or sets the ActualStartDate property. 
            	Actual start date.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsActualStartDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ActualEndDate">
            <summary>
            	Gets or sets the ActualEndDate property. 
            	Actual end date.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsActualEndDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ActualResourceHrs">
            <summary>
            	Gets or sets the ActualResourceHrs property. 
            	Number of manufacturing hours used.
            </summary>
            <value>This type is decimal.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0.0m. It is up to the developer
            to check the value of IsActualResourceHrsNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.PlannedCost">
            <summary>
            	Gets or sets the PlannedCost property. 
            	Estimated manufacturing cost.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ActualCost">
            <summary>
            	Gets or sets the ActualCost property. 
            	Actual manufacturing cost.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0. It is up to the developer
            to check the value of IsActualCostNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.LocationIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Location"/>.
            </summary>
            <value>The source Location for LocationId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/>.
            </summary>
            <value>The source WorkOrder for WorkOrderId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData">
            <summary>
            	The data structure representation of the 'WorkOrderRouting' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.WorkOrderId">
            <summary>			
            WorkOrderID : Primary key. Foreign key to WorkOrder.WorkOrderID.
            </summary>
            <remarks>Member of the primary key of the underlying table "WorkOrderRouting"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.OriginalWorkOrderId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.ProductId">
            <summary>			
            ProductID : Primary key. Foreign key to Product.ProductID.
            </summary>
            <remarks>Member of the primary key of the underlying table "WorkOrderRouting"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.OperationSequence">
            <summary>			
            OperationSequence : Primary key. Indicates the manufacturing process sequence.
            </summary>
            <remarks>Member of the primary key of the underlying table "WorkOrderRouting"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.OriginalOperationSequence">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.LocationId">
            <summary>
            LocationID : Manufacturing location where the part is processed. Foreign key to Location.LocationID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.ScheduledStartDate">
            <summary>
            ScheduledStartDate : Planned manufacturing start date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.ScheduledEndDate">
            <summary>
            ScheduledEndDate : Planned manufacturing end date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.ActualStartDate">
            <summary>
            ActualStartDate : Actual start date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.ActualEndDate">
            <summary>
            ActualEndDate : Actual end date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.ActualResourceHrs">
            <summary>
            ActualResourceHrs : Number of manufacturing hours used.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.PlannedCost">
            <summary>
            PlannedCost : Estimated manufacturing cost.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.ActualCost">
            <summary>
            ActualCost : Actual manufacturing cost.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.LocationIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Location"/>.
            </summary>
            <value>The source Location for LocationId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.WorkOrderIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/>.
            </summary>
            <value>The source WorkOrder for WorkOrderId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase.WorkOrderRoutingEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRouting.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorContactEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactEventArgs.#ctor(Nettiers.AdventureWorks.Entities.VendorContactColumn)">
            <summary>
             Initalizes a new Instance of the VendorContactEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactEventArgs.#ctor(Nettiers.AdventureWorks.Entities.VendorContactColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the VendorContactEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactEventArgs.Column">
            <summary>
             The VendorContactColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.VendorContactColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorContactEventHandler">
            <summary>
             Define a delegate for all VendorContact related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorContactComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VendorContactComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactComparer.#ctor(Nettiers.AdventureWorks.Entities.VendorContactColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:VendorContactComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactComparer.Equals(Nettiers.AdventureWorks.Entities.VendorContact,Nettiers.AdventureWorks.Entities.VendorContact)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> to compare.</param>
            <param name="b">The second <c>VendorContact</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactComparer.GetHashCode(Nettiers.AdventureWorks.Entities.VendorContact)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactComparer.Compare(Nettiers.AdventureWorks.Entities.VendorContact,Nettiers.AdventureWorks.Entities.VendorContact)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorContactKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactKey.#ctor">
            <summary>
            Initializes a new instance of the VendorContactKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactKey.#ctor(Nettiers.AdventureWorks.Entities.VendorContactBase)">
            <summary>
            Initializes a new instance of the VendorContactKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the VendorContactKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorContactKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactKey.VendorId">
            <summary>
            Gets or sets the VendorId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorContactKey.ContactId">
            <summary>
            Gets or sets the ContactId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorContactColumn">
            <summary>
            Enumerate the VendorContact columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorContactColumn.VendorId">
            <summary>
            VendorId : Primary key.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorContactColumn.ContactId">
            <summary>
            ContactId : Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorContactColumn.ContactTypeId">
            <summary>
            ContactTypeId : Contact type such as sales manager, or sales agent.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorContactColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Vendor">
            <summary>
             Companies from whom Adventure Works Cycles purchases parts or other goods.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorBase">
            <summary>
             Companies from whom Adventure Works Cycles purchases parts or other goods.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IVendor">
            <summary>
            	The data structure representation of the 'Vendor' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IVendor.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendor.VendorId">
            <summary>			
            VendorID : Primary key for Vendor records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Vendor"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendor.AccountNumber">
            <summary>
            AccountNumber : Vendor account (identification) number.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendor.Name">
            <summary>
            Name : Company name.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendor.CreditRating">
            <summary>
            CreditRating : 1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendor.PreferredVendorStatus">
            <summary>
            PreferredVendorStatus : 0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendor.ActiveFlag">
            <summary>
            ActiveFlag : 0 = Vendor no longer used. 1 = Vendor is actively used.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendor.PurchasingWebServiceUrl">
            <summary>
            PurchasingWebServiceURL : Vendor URL.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendor.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendor.VendorAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _vendorAddressVendorId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendor.ProductIdProductCollection_From_ProductVendor">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productIdProductCollectionFromProductVendor
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendor.AddressIdAddressCollection_From_VendorAddress">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table addressIdAddressCollectionFromVendorAddress
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendor.ContactIdContactCollection_From_VendorContact">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table contactIdContactCollectionFromVendorContact
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendor.VendorContactCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _vendorContactVendorId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendor.PurchaseOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _purchaseOrderHeaderVendorId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IVendor.ProductVendorCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productVendorVendorId
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VendorBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.#ctor(System.String,System.String,System.Byte,System.Boolean,System.Boolean,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VendorBase"/> instance.
            </summary>
            <param name="_accountNumber">Vendor account (identification) number.</param>
            <param name="_name">Company name.</param>
            <param name="_creditRating">1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average</param>
            <param name="_preferredVendorStatus">0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.</param>
            <param name="_activeFlag">0 = Vendor no longer used. 1 = Vendor is actively used.</param>
            <param name="_purchasingWebServiceUrl">Vendor URL.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.CreateVendor(System.String,System.String,System.Byte,System.Boolean,System.Boolean,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> instance.
            </summary>
            <param name="_accountNumber">Vendor account (identification) number.</param>
            <param name="_name">Company name.</param>
            <param name="_creditRating">1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average</param>
            <param name="_preferredVendorStatus">0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.</param>
            <param name="_activeFlag">0 = Vendor no longer used. 1 = Vendor is actively used.</param>
            <param name="_purchasingWebServiceUrl">Vendor URL.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Vendor Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.Copy">
            <summary>
              Returns a Typed Vendor Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.DeepCopy">
            <summary>
              Returns a Typed Vendor Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.VendorColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.GetOriginalEntity">
            <summary>
              Returns a Vendor Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.VendorBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.VendorBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.Equals(Nettiers.AdventureWorks.Entities.VendorBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VendorBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.ValueEquals(Nettiers.AdventureWorks.Entities.VendorBase,Nettiers.AdventureWorks.Entities.VendorBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VendorBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VendorBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VendorBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.VendorColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.VendorBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.VendorColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.VendorBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.VendorColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.VendorBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.VendorColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.VendorBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VendorBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VendorBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.VendorId">
            <summary>
            	Gets or sets the VendorId property. 
            	Primary key for Vendor records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.AccountNumber">
            <summary>
            	Gets or sets the AccountNumber property. 
            	Vendor account (identification) number.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Company name.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.CreditRating">
            <summary>
            	Gets or sets the CreditRating property. 
            	1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average
            </summary>
            <value>This type is tinyint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.PreferredVendorStatus">
            <summary>
            	Gets or sets the PreferredVendorStatus property. 
            	0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.
            </summary>
            <value>This type is bit.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.ActiveFlag">
            <summary>
            	Gets or sets the ActiveFlag property. 
            	0 = Vendor no longer used. 1 = Vendor is actively used.
            </summary>
            <value>This type is bit.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.PurchasingWebServiceUrl">
            <summary>
            	Gets or sets the PurchasingWebServiceUrl property. 
            	Vendor URL.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.VendorAddressCollection">
            <summary>
            Holds a collection of VendorAddress objects
            which are related to this object through the relation FK_VendorAddress_Vendor_VendorID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.ProductIdProductCollection_From_ProductVendor">
            <summary>
            Holds a collection of ProductFromProductVendor objects
            which are related to this object through the junction table ProductVendor
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.AddressIdAddressCollection_From_VendorAddress">
            <summary>
            Holds a collection of AddressFromVendorAddress objects
            which are related to this object through the junction table VendorAddress
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.ContactIdContactCollection_From_VendorContact">
            <summary>
            Holds a collection of ContactFromVendorContact objects
            which are related to this object through the junction table VendorContact
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.VendorContactCollection">
            <summary>
            Holds a collection of VendorContact objects
            which are related to this object through the relation FK_VendorContact_Vendor_VendorID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.PurchaseOrderHeaderCollection">
            <summary>
            Holds a collection of PurchaseOrderHeader objects
            which are related to this object through the relation FK_PurchaseOrderHeader_Vendor_VendorID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.ProductVendorCollection">
            <summary>
            Holds a collection of ProductVendor objects
            which are related to this object through the relation FK_ProductVendor_Vendor_VendorID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VendorBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VendorBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData">
            <summary>
            	The data structure representation of the 'Vendor' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.VendorId">
            <summary>			
            VendorID : Primary key for Vendor records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Vendor"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.AccountNumber">
            <summary>
            AccountNumber : Vendor account (identification) number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.Name">
            <summary>
            Name : Company name.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.CreditRating">
            <summary>
            CreditRating : 1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.PreferredVendorStatus">
            <summary>
            PreferredVendorStatus : 0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.ActiveFlag">
            <summary>
            ActiveFlag : 0 = Vendor no longer used. 1 = Vendor is actively used.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.PurchasingWebServiceUrl">
            <summary>
            PurchasingWebServiceURL : Vendor URL.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.VendorAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _vendorAddressVendorId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.ProductIdProductCollection_From_ProductVendor">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productIdProductCollectionFromProductVendor
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.AddressIdAddressCollection_From_VendorAddress">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table addressIdAddressCollectionFromVendorAddress
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.ContactIdContactCollection_From_VendorContact">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table contactIdContactCollectionFromVendorContact
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.VendorContactCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _vendorContactVendorId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.PurchaseOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _purchaseOrderHeaderVendorId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.ProductVendorCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productVendorVendorId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorBase.VendorEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Vendor.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistory">
            <summary>
             Record of each purchase order, sales order, or work order transaction year to date.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryBase">
            <summary>
             Record of each purchase order, sales order, or work order transaction year to date.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ITransactionHistory">
            <summary>
            	The data structure representation of the 'TransactionHistory' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ITransactionHistory.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistory.TransactionId">
            <summary>			
            TransactionID : Primary key for TransactionHistory records.
            </summary>
            <remarks>Member of the primary key of the underlying table "TransactionHistory"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistory.ProductId">
            <summary>
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistory.ReferenceOrderId">
            <summary>
            ReferenceOrderID : Purchase order, sales order, or work order identification number.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistory.ReferenceOrderLineId">
            <summary>
            ReferenceOrderLineID : Line number associated with the purchase order, sales order, or work order.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistory.TransactionDate">
            <summary>
            TransactionDate : Date and time of the transaction.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistory.TransactionType">
            <summary>
            TransactionType : W = WorkOrder, S = SalesOrder, P = PurchaseOrder
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistory.Quantity">
            <summary>
            Quantity : Product quantity.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistory.ActualCost">
            <summary>
            ActualCost : Product cost.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITransactionHistory.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.#ctor(System.Int32,System.Int32,System.Int32,System.DateTime,System.String,System.Int32,System.Decimal,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryBase"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <param name="_transactionDate">Date and time of the transaction.</param>
            <param name="_transactionType">W = WorkOrder, S = SalesOrder, P = PurchaseOrder</param>
            <param name="_quantity">Product quantity.</param>
            <param name="_actualCost">Product cost.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.CreateTransactionHistory(System.Int32,System.Int32,System.Int32,System.DateTime,System.String,System.Int32,System.Decimal,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <param name="_transactionDate">Date and time of the transaction.</param>
            <param name="_transactionType">W = WorkOrder, S = SalesOrder, P = PurchaseOrder</param>
            <param name="_quantity">Product quantity.</param>
            <param name="_actualCost">Product cost.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed TransactionHistory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.Copy">
            <summary>
              Returns a Typed TransactionHistory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.DeepCopy">
            <summary>
              Returns a Typed TransactionHistory Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.TransactionHistoryColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.GetOriginalEntity">
            <summary>
              Returns a TransactionHistory Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.Equals(Nettiers.AdventureWorks.Entities.TransactionHistoryBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.ValueEquals(Nettiers.AdventureWorks.Entities.TransactionHistoryBase,Nettiers.AdventureWorks.Entities.TransactionHistoryBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.TransactionHistoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.TransactionHistoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.TransactionHistoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.TransactionHistoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionId">
            <summary>
            	Gets or sets the TransactionId property. 
            	Primary key for TransactionHistory records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Product identification number. Foreign key to Product.ProductID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.ReferenceOrderId">
            <summary>
            	Gets or sets the ReferenceOrderId property. 
            	Purchase order, sales order, or work order identification number.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.ReferenceOrderLineId">
            <summary>
            	Gets or sets the ReferenceOrderLineId property. 
            	Line number associated with the purchase order, sales order, or work order.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionDate">
            <summary>
            	Gets or sets the TransactionDate property. 
            	Date and time of the transaction.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionType">
            <summary>
            	Gets or sets the TransactionType property. 
            	W = WorkOrder, S = SalesOrder, P = PurchaseOrder
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.Quantity">
            <summary>
            	Gets or sets the Quantity property. 
            	Product quantity.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.ActualCost">
            <summary>
            	Gets or sets the ActualCost property. 
            	Product cost.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionHistoryEntityData">
            <summary>
            	The data structure representation of the 'TransactionHistory' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionHistoryEntityData.TransactionId">
            <summary>			
            TransactionID : Primary key for TransactionHistory records.
            </summary>
            <remarks>Member of the primary key of the underlying table "TransactionHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionHistoryEntityData.ProductId">
            <summary>
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionHistoryEntityData.ReferenceOrderId">
            <summary>
            ReferenceOrderID : Purchase order, sales order, or work order identification number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionHistoryEntityData.ReferenceOrderLineId">
            <summary>
            ReferenceOrderLineID : Line number associated with the purchase order, sales order, or work order.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionHistoryEntityData.TransactionDate">
            <summary>
            TransactionDate : Date and time of the transaction.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionHistoryEntityData.TransactionType">
            <summary>
            TransactionType : W = WorkOrder, S = SalesOrder, P = PurchaseOrder
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionHistoryEntityData.Quantity">
            <summary>
            Quantity : Product quantity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionHistoryEntityData.ActualCost">
            <summary>
            ActualCost : Product cost.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionHistoryEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionHistoryEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionHistoryEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionHistoryEntityData.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryBase.TransactionHistoryEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistory.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase">
            <summary>
             Cross-reference table mapping products to special offer discounts.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ISpecialOfferProduct">
            <summary>
            	The data structure representation of the 'SpecialOfferProduct' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ISpecialOfferProduct.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOfferProduct.SpecialOfferId">
            <summary>			
            SpecialOfferID : Primary key for SpecialOfferProduct records.
            </summary>
            <remarks>Member of the primary key of the underlying table "SpecialOfferProduct"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOfferProduct.OriginalSpecialOfferId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOfferProduct.ProductId">
            <summary>			
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
            <remarks>Member of the primary key of the underlying table "SpecialOfferProduct"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOfferProduct.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOfferProduct.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOfferProduct.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISpecialOfferProduct.SalesOrderDetailCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderDetailSpecialOfferIdProductId
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.#ctor(System.Int32,System.Int32,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase"/> instance.
            </summary>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.CreateSpecialOfferProduct(System.Int32,System.Int32,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> instance.
            </summary>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed SpecialOfferProduct Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.Copy">
            <summary>
              Returns a Typed SpecialOfferProduct Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.DeepCopy">
            <summary>
              Returns a Typed SpecialOfferProduct Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.GetOriginalEntity">
            <summary>
              Returns a SpecialOfferProduct Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.Equals(Nettiers.AdventureWorks.Entities.SpecialOfferProductBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.ValueEquals(Nettiers.AdventureWorks.Entities.SpecialOfferProductBase,Nettiers.AdventureWorks.Entities.SpecialOfferProductBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SpecialOfferId">
            <summary>
            	Gets or sets the SpecialOfferId property. 
            	Primary key for SpecialOfferProduct records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.OriginalSpecialOfferId">
            <summary>
            	Get the original value of the SpecialOfferID property.
            	Primary key for SpecialOfferProduct records.
            </summary>
            <remarks>This is the original value of the SpecialOfferID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Product identification number. Foreign key to Product.ProductID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.OriginalProductId">
            <summary>
            	Get the original value of the ProductID property.
            	Product identification number. Foreign key to Product.ProductID.
            </summary>
            <remarks>This is the original value of the ProductID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SpecialOfferIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/>.
            </summary>
            <value>The source SpecialOffer for SpecialOfferId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SalesOrderDetailCollection">
            <summary>
            Holds a collection of SalesOrderDetail objects
            which are related to this object through the relation FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SpecialOfferProductEntityData">
            <summary>
            	The data structure representation of the 'SpecialOfferProduct' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SpecialOfferProductEntityData.SpecialOfferId">
            <summary>			
            SpecialOfferID : Primary key for SpecialOfferProduct records.
            </summary>
            <remarks>Member of the primary key of the underlying table "SpecialOfferProduct"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SpecialOfferProductEntityData.OriginalSpecialOfferId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SpecialOfferProductEntityData.ProductId">
            <summary>			
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
            <remarks>Member of the primary key of the underlying table "SpecialOfferProduct"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SpecialOfferProductEntityData.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SpecialOfferProductEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SpecialOfferProductEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SpecialOfferProductEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SpecialOfferProductEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SpecialOfferProductEntityData.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SpecialOfferProductEntityData.SpecialOfferIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/>.
            </summary>
            <value>The source SpecialOffer for SpecialOfferId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SpecialOfferProductEntityData.SalesOrderDetailCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderDetailSpecialOfferIdProductId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductBase.SpecialOfferProductEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn)">
            <summary>
             Initalizes a new Instance of the SpecialOfferProductEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the SpecialOfferProductEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductEventArgs.Column">
            <summary>
             The SpecialOfferProductColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductEventHandler">
            <summary>
             Define a delegate for all SpecialOfferProduct related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SpecialOfferProductComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductComparer.#ctor(Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:SpecialOfferProductComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductComparer.Equals(Nettiers.AdventureWorks.Entities.SpecialOfferProduct,Nettiers.AdventureWorks.Entities.SpecialOfferProduct)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> to compare.</param>
            <param name="b">The second <c>SpecialOfferProduct</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductComparer.GetHashCode(Nettiers.AdventureWorks.Entities.SpecialOfferProduct)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductComparer.Compare(Nettiers.AdventureWorks.Entities.SpecialOfferProduct,Nettiers.AdventureWorks.Entities.SpecialOfferProduct)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductKey.#ctor">
            <summary>
            Initializes a new instance of the SpecialOfferProductKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductKey.#ctor(Nettiers.AdventureWorks.Entities.SpecialOfferProductBase)">
            <summary>
            Initializes a new instance of the SpecialOfferProductKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the SpecialOfferProductKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProductKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductKey.SpecialOfferId">
            <summary>
            Gets or sets the SpecialOfferId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SpecialOfferProductKey.ProductId">
            <summary>
            Gets or sets the ProductId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn">
            <summary>
            Enumerate the SpecialOfferProduct columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn.SpecialOfferId">
            <summary>
            SpecialOfferId : Primary key for SpecialOfferProduct records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn.ProductId">
            <summary>
            ProductId : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SpecialOfferProductColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct">
            <summary>
             Cross-reference table mapping products to special offer discounts.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOfferProduct.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem">
            <summary>
             Contains online customer orders until the order is submitted or cancelled.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShoppingCartItem.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn)">
            <summary>
             Initalizes a new Instance of the ProductListPriceHistoryEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ProductListPriceHistoryEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryEventArgs.Column">
            <summary>
             The ProductListPriceHistoryColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryEventHandler">
            <summary>
             Define a delegate for all ProductListPriceHistory related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ProductListPriceHistoryComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryComparer.#ctor(Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductListPriceHistoryComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryComparer.Equals(Nettiers.AdventureWorks.Entities.ProductListPriceHistory,Nettiers.AdventureWorks.Entities.ProductListPriceHistory)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> to compare.</param>
            <param name="b">The second <c>ProductListPriceHistory</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ProductListPriceHistory)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryComparer.Compare(Nettiers.AdventureWorks.Entities.ProductListPriceHistory,Nettiers.AdventureWorks.Entities.ProductListPriceHistory)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryKey.#ctor">
            <summary>
            Initializes a new instance of the ProductListPriceHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryKey.#ctor(Nettiers.AdventureWorks.Entities.ProductListPriceHistoryBase)">
            <summary>
            Initializes a new instance of the ProductListPriceHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryKey.#ctor(System.Int32,System.DateTime)">
            <summary>
            Initializes a new instance of the ProductListPriceHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryKey.ProductId">
            <summary>
            Gets or sets the ProductId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryKey.StartDate">
            <summary>
            Gets or sets the StartDate property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn">
            <summary>
            Enumerate the ProductListPriceHistory columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn.ProductId">
            <summary>
            ProductId : Product identification number. Foreign key to Product.ProductID
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn.StartDate">
            <summary>
            StartDate : List price start date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn.EndDate">
            <summary>
            EndDate : List price end date
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn.ListPrice">
            <summary>
            ListPrice : Product list price.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductListPriceHistoryColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.JobCandidateBase">
            <summary>
             Résumés submitted to Human Resources by job applicants.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.JobCandidateBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.JobCandidateBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.JobCandidateBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.JobCandidateBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.JobCandidateBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidateBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.#ctor(System.Nullable{System.Int32},System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidateBase"/> instance.
            </summary>
            <param name="_employeeId">Employee identification number if applicant was hired. Foreign key to Employee.EmployeeID.</param>
            <param name="_resume">Résumé in XML format.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.CreateJobCandidate(System.Nullable{System.Int32},System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> instance.
            </summary>
            <param name="_employeeId">Employee identification number if applicant was hired. Foreign key to Employee.EmployeeID.</param>
            <param name="_resume">Résumé in XML format.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed JobCandidate Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.Copy">
            <summary>
              Returns a Typed JobCandidate Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.DeepCopy">
            <summary>
              Returns a Typed JobCandidate Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.JobCandidateColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.GetOriginalEntity">
            <summary>
              Returns a JobCandidate Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidateBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidateBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.Equals(Nettiers.AdventureWorks.Entities.JobCandidateBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidateBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.ValueEquals(Nettiers.AdventureWorks.Entities.JobCandidateBase,Nettiers.AdventureWorks.Entities.JobCandidateBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidateBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidateBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidateBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.JobCandidateColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.JobCandidateBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidateColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.JobCandidateColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.JobCandidateBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidateColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.JobCandidateColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.JobCandidateBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidateColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.JobCandidateColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.JobCandidateBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidateColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.JobCandidateBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.JobCandidateBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateBase.JobCandidateId">
            <summary>
            	Gets or sets the JobCandidateId property. 
            	Primary key for JobCandidate records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateBase.EmployeeId">
            <summary>
            	Gets or sets the EmployeeId property. 
            	Employee identification number if applicant was hired. Foreign key to Employee.EmployeeID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsEmployeeIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateBase.Resume">
            <summary>
            	Gets or sets the Resume property. 
            	Résumé in XML format.
            </summary>
            <value>This type is xml.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateBase.EmployeeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/>.
            </summary>
            <value>The source Employee for EmployeeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.JobCandidateBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.JobCandidateBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.JobCandidateBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.JobCandidateBase.JobCandidateEntityData">
            <summary>
            	The data structure representation of the 'JobCandidate' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.JobCandidateBase.JobCandidateEntityData.JobCandidateId">
            <summary>			
            JobCandidateID : Primary key for JobCandidate records.
            </summary>
            <remarks>Member of the primary key of the underlying table "JobCandidate"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.JobCandidateBase.JobCandidateEntityData.EmployeeId">
            <summary>
            EmployeeID : Employee identification number if applicant was hired. Foreign key to Employee.EmployeeID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.JobCandidateBase.JobCandidateEntityData.Resume">
            <summary>
            Resume : Résumé in XML format.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.JobCandidateBase.JobCandidateEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.JobCandidateEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateBase.JobCandidateEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateBase.JobCandidateEntityData.EmployeeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/>.
            </summary>
            <value>The source Employee for EmployeeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateBase.JobCandidateEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.JobCandidateEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateEventArgs.#ctor(Nettiers.AdventureWorks.Entities.JobCandidateColumn)">
            <summary>
             Initalizes a new Instance of the JobCandidateEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateEventArgs.#ctor(Nettiers.AdventureWorks.Entities.JobCandidateColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the JobCandidateEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateEventArgs.Column">
            <summary>
             The JobCandidateColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.JobCandidateColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.JobCandidateEventHandler">
            <summary>
             Define a delegate for all JobCandidate related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.JobCandidateComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:JobCandidateComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateComparer.#ctor(Nettiers.AdventureWorks.Entities.JobCandidateColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:JobCandidateComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateComparer.Equals(Nettiers.AdventureWorks.Entities.JobCandidate,Nettiers.AdventureWorks.Entities.JobCandidate)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> to compare.</param>
            <param name="b">The second <c>JobCandidate</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateComparer.GetHashCode(Nettiers.AdventureWorks.Entities.JobCandidate)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateComparer.Compare(Nettiers.AdventureWorks.Entities.JobCandidate,Nettiers.AdventureWorks.Entities.JobCandidate)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.JobCandidateKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateKey.#ctor">
            <summary>
            Initializes a new instance of the JobCandidateKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateKey.#ctor(Nettiers.AdventureWorks.Entities.JobCandidateBase)">
            <summary>
            Initializes a new instance of the JobCandidateKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the JobCandidateKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidateKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.JobCandidateKey.JobCandidateId">
            <summary>
            Gets or sets the JobCandidateId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.JobCandidateColumn">
            <summary>
            Enumerate the JobCandidate columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.JobCandidateColumn.JobCandidateId">
            <summary>
            JobCandidateId : Primary key for JobCandidate records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.JobCandidateColumn.EmployeeId">
            <summary>
            EmployeeId : Employee identification number if applicant was hired. Foreign key to Employee.EmployeeID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.JobCandidateColumn.Resume">
            <summary>
            Resume : Résumé in XML format.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.JobCandidateColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IEmployee">
            <summary>
            	The data structure representation of the 'Employee' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IEmployee.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.EmployeeId">
            <summary>			
            EmployeeID : Primary key for Employee records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Employee"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.NationalIdNumber">
            <summary>
            NationalIDNumber : Unique national identification number such as a social security number.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.ContactId">
            <summary>
            ContactID : Identifies the employee in the Contact table. Foreign key to Contact.ContactID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.LoginId">
            <summary>
            LoginID : Network login.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.ManagerId">
            <summary>
            ManagerID : Manager to whom the employee is assigned. Foreign Key to Employee.M
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.Title">
            <summary>
            Title : Work title such as Buyer or Sales Representative.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.BirthDate">
            <summary>
            BirthDate : Date of birth.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.MaritalStatus">
            <summary>
            MaritalStatus : M = Married, S = Single
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.Gender">
            <summary>
            Gender : M = Male, F = Female
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.HireDate">
            <summary>
            HireDate : Employee hired on this date.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.SalariedFlag">
            <summary>
            SalariedFlag : Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.VacationHours">
            <summary>
            VacationHours : Number of available vacation hours.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.SickLeaveHours">
            <summary>
            SickLeaveHours : Number of available sick leave hours.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.CurrentFlag">
            <summary>
            CurrentFlag : 0 = Inactive, 1 = Active
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.EmployeeCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeeManagerId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.JobCandidateCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _jobCandidateEmployeeId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.SalesPerson">
            <summary>
            Holds a  SalesPerson entity object
            which is related to this object through the relation _salesPersonSalesPersonId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.EmployeeAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeeAddressEmployeeId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.EmployeePayHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeePayHistoryEmployeeId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.PurchaseOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _purchaseOrderHeaderEmployeeId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.AddressIdAddressCollection_From_EmployeeAddress">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table addressIdAddressCollectionFromEmployeeAddress
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEmployee.EmployeeDepartmentHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeeDepartmentHistoryEmployeeId
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Employee">
            <summary>
             Employee information such as salary, department, and title.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeBase">
            <summary>
             Employee information such as salary, department, and title.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.#ctor(System.String,System.Int32,System.String,System.Nullable{System.Int32},System.String,System.DateTime,System.String,System.String,System.DateTime,System.Boolean,System.Int16,System.Int16,System.Boolean,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeBase"/> instance.
            </summary>
            <param name="_nationalIdNumber">Unique national identification number such as a social security number.</param>
            <param name="_contactId">Identifies the employee in the Contact table. Foreign key to Contact.ContactID.</param>
            <param name="_loginId">Network login.</param>
            <param name="_managerId">Manager to whom the employee is assigned. Foreign Key to Employee.M</param>
            <param name="_title">Work title such as Buyer or Sales Representative.</param>
            <param name="_birthDate">Date of birth.</param>
            <param name="_maritalStatus">M = Married, S = Single</param>
            <param name="_gender">M = Male, F = Female</param>
            <param name="_hireDate">Employee hired on this date.</param>
            <param name="_salariedFlag">Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.</param>
            <param name="_vacationHours">Number of available vacation hours.</param>
            <param name="_sickLeaveHours">Number of available sick leave hours.</param>
            <param name="_currentFlag">0 = Inactive, 1 = Active</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.CreateEmployee(System.String,System.Int32,System.String,System.Nullable{System.Int32},System.String,System.DateTime,System.String,System.String,System.DateTime,System.Boolean,System.Int16,System.Int16,System.Boolean,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> instance.
            </summary>
            <param name="_nationalIdNumber">Unique national identification number such as a social security number.</param>
            <param name="_contactId">Identifies the employee in the Contact table. Foreign key to Contact.ContactID.</param>
            <param name="_loginId">Network login.</param>
            <param name="_managerId">Manager to whom the employee is assigned. Foreign Key to Employee.M</param>
            <param name="_title">Work title such as Buyer or Sales Representative.</param>
            <param name="_birthDate">Date of birth.</param>
            <param name="_maritalStatus">M = Married, S = Single</param>
            <param name="_gender">M = Male, F = Female</param>
            <param name="_hireDate">Employee hired on this date.</param>
            <param name="_salariedFlag">Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.</param>
            <param name="_vacationHours">Number of available vacation hours.</param>
            <param name="_sickLeaveHours">Number of available sick leave hours.</param>
            <param name="_currentFlag">0 = Inactive, 1 = Active</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Employee Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.Copy">
            <summary>
              Returns a Typed Employee Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.DeepCopy">
            <summary>
              Returns a Typed Employee Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.EmployeeColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.GetOriginalEntity">
            <summary>
              Returns a Employee Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.Equals(Nettiers.AdventureWorks.Entities.EmployeeBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.ValueEquals(Nettiers.AdventureWorks.Entities.EmployeeBase,Nettiers.AdventureWorks.Entities.EmployeeBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.EmployeeColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeeBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.EmployeeColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeeBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.EmployeeColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeeBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.EmployeeColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeeBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeeBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeeBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeId">
            <summary>
            	Gets or sets the EmployeeId property. 
            	Primary key for Employee records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.NationalIdNumber">
            <summary>
            	Gets or sets the NationalIdNumber property. 
            	Unique national identification number such as a social security number.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.ContactId">
            <summary>
            	Gets or sets the ContactId property. 
            	Identifies the employee in the Contact table. Foreign key to Contact.ContactID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.LoginId">
            <summary>
            	Gets or sets the LoginId property. 
            	Network login.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.ManagerId">
            <summary>
            	Gets or sets the ManagerId property. 
            	Manager to whom the employee is assigned. Foreign Key to Employee.M
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsManagerIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.Title">
            <summary>
            	Gets or sets the Title property. 
            	Work title such as Buyer or Sales Representative.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.BirthDate">
            <summary>
            	Gets or sets the BirthDate property. 
            	Date of birth.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.MaritalStatus">
            <summary>
            	Gets or sets the MaritalStatus property. 
            	M = Married, S = Single
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.Gender">
            <summary>
            	Gets or sets the Gender property. 
            	M = Male, F = Female
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.HireDate">
            <summary>
            	Gets or sets the HireDate property. 
            	Employee hired on this date.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.SalariedFlag">
            <summary>
            	Gets or sets the SalariedFlag property. 
            	Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.
            </summary>
            <value>This type is bit.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.VacationHours">
            <summary>
            	Gets or sets the VacationHours property. 
            	Number of available vacation hours.
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.SickLeaveHours">
            <summary>
            	Gets or sets the SickLeaveHours property. 
            	Number of available sick leave hours.
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.CurrentFlag">
            <summary>
            	Gets or sets the CurrentFlag property. 
            	0 = Inactive, 1 = Active
            </summary>
            <value>This type is bit.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.ContactIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/>.
            </summary>
            <value>The source Contact for ContactId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.ManagerIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/>.
            </summary>
            <value>The source Employee for ManagerId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeCollection">
            <summary>
            Holds a collection of Employee objects
            which are related to this object through the relation FK_Employee_Employee_ManagerID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.JobCandidateCollection">
            <summary>
            Holds a collection of JobCandidate objects
            which are related to this object through the relation FK_JobCandidate_Employee_EmployeeID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.SalesPerson">
            <summary>
            Holds a SalesPerson object
            which is related to this object through the relation SalesPerson
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeAddressCollection">
            <summary>
            Holds a collection of EmployeeAddress objects
            which are related to this object through the relation FK_EmployeeAddress_Employee_EmployeeID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeePayHistoryCollection">
            <summary>
            Holds a collection of EmployeePayHistory objects
            which are related to this object through the relation FK_EmployeePayHistory_Employee_EmployeeID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.PurchaseOrderHeaderCollection">
            <summary>
            Holds a collection of PurchaseOrderHeader objects
            which are related to this object through the relation FK_PurchaseOrderHeader_Employee_EmployeeID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.AddressIdAddressCollection_From_EmployeeAddress">
            <summary>
            Holds a collection of AddressFromEmployeeAddress objects
            which are related to this object through the junction table EmployeeAddress
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeDepartmentHistoryCollection">
            <summary>
            Holds a collection of EmployeeDepartmentHistory objects
            which are related to this object through the relation FK_EmployeeDepartmentHistory_Employee_EmployeeID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeeBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeeBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData">
            <summary>
            	The data structure representation of the 'Employee' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.EmployeeId">
            <summary>			
            EmployeeID : Primary key for Employee records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Employee"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.NationalIdNumber">
            <summary>
            NationalIDNumber : Unique national identification number such as a social security number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.ContactId">
            <summary>
            ContactID : Identifies the employee in the Contact table. Foreign key to Contact.ContactID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.LoginId">
            <summary>
            LoginID : Network login.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.ManagerId">
            <summary>
            ManagerID : Manager to whom the employee is assigned. Foreign Key to Employee.M
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.Title">
            <summary>
            Title : Work title such as Buyer or Sales Representative.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.BirthDate">
            <summary>
            BirthDate : Date of birth.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.MaritalStatus">
            <summary>
            MaritalStatus : M = Married, S = Single
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.Gender">
            <summary>
            Gender : M = Male, F = Female
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.HireDate">
            <summary>
            HireDate : Employee hired on this date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.SalariedFlag">
            <summary>
            SalariedFlag : Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.VacationHours">
            <summary>
            VacationHours : Number of available vacation hours.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.SickLeaveHours">
            <summary>
            SickLeaveHours : Number of available sick leave hours.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.CurrentFlag">
            <summary>
            CurrentFlag : 0 = Inactive, 1 = Active
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.ContactIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/>.
            </summary>
            <value>The source Contact for ContactId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.ManagerIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/>.
            </summary>
            <value>The source Employee for ManagerId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.EmployeeCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeeManagerId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.JobCandidateCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _jobCandidateEmployeeId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.SalesPerson">
            <summary>
            Holds a  SalesPerson entity object
            which is related to this object through the relation _salesPersonSalesPersonId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.EmployeeAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeeAddressEmployeeId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.EmployeePayHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeePayHistoryEmployeeId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.PurchaseOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _purchaseOrderHeaderEmployeeId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.AddressIdAddressCollection_From_EmployeeAddress">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table addressIdAddressCollectionFromEmployeeAddress
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.EmployeeDepartmentHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _employeeDepartmentHistoryEmployeeId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeBase.EmployeeEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Employee.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerBase">
            <summary>
             Current customer information. Also see the Individual and Store tables.	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ICustomer">
            <summary>
            	The data structure representation of the 'Customer' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ICustomer.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomer.CustomerId">
            <summary>			
            CustomerID : Primary key for Customer records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Customer"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomer.TerritoryId">
            <summary>
            TerritoryID : ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomer.AccountNumber">
            <summary>
            AccountNumber : Unique number identifying the customer assigned by the accounting system.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomer.CustomerType">
            <summary>
            CustomerType : Customer type: I = Individual, S = Store
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomer.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomer.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomer.Store">
            <summary>
            Holds a  Store entity object
            which is related to this object through the relation _storeCustomerId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomer.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderCustomerId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomer.AddressIdAddressCollection_From_CustomerAddress">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table addressIdAddressCollectionFromCustomerAddress
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomer.Individual">
            <summary>
            Holds a  Individual entity object
            which is related to this object through the relation _individualCustomerId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ICustomer.CustomerAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _customerAddressCustomerId
            </summary>	
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CustomerBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.#ctor(System.Nullable{System.Int32},System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CustomerBase"/> instance.
            </summary>
            <param name="_territoryId">ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="_customerType">Customer type: I = Individual, S = Store</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.CreateCustomer(System.Nullable{System.Int32},System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> instance.
            </summary>
            <param name="_territoryId">ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="_customerType">Customer type: I = Individual, S = Store</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Customer Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.Copy">
            <summary>
              Returns a Typed Customer Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.DeepCopy">
            <summary>
              Returns a Typed Customer Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.CustomerColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.GetOriginalEntity">
            <summary>
              Returns a Customer Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.CustomerBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.CustomerBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.Equals(Nettiers.AdventureWorks.Entities.CustomerBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.CustomerBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.ValueEquals(Nettiers.AdventureWorks.Entities.CustomerBase,Nettiers.AdventureWorks.Entities.CustomerBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.CustomerBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.CustomerBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.CustomerBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CustomerColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CustomerBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CustomerColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CustomerColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CustomerBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CustomerColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CustomerColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CustomerBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CustomerColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CustomerColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CustomerBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CustomerColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CustomerBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CustomerBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerId">
            <summary>
            	Gets or sets the CustomerId property. 
            	Primary key for Customer records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.TerritoryId">
            <summary>
            	Gets or sets the TerritoryId property. 
            	ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsTerritoryIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.AccountNumber">
            <summary>
            	Gets or sets the AccountNumber property. 
            	Unique number identifying the customer assigned by the accounting system.
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerType">
            <summary>
            	Gets or sets the CustomerType property. 
            	Customer type: I = Individual, S = Store
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.TerritoryIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/>.
            </summary>
            <value>The source SalesTerritory for TerritoryId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.Store">
            <summary>
            Holds a Store object
            which is related to this object through the relation Store
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of SalesOrderHeader objects
            which are related to this object through the relation FK_SalesOrderHeader_Customer_CustomerID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.AddressIdAddressCollection_From_CustomerAddress">
            <summary>
            Holds a collection of AddressFromCustomerAddress objects
            which are related to this object through the junction table CustomerAddress
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.Individual">
            <summary>
            Holds a Individual object
            which is related to this object through the relation Individual
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerAddressCollection">
            <summary>
            Holds a collection of CustomerAddress objects
            which are related to this object through the relation FK_CustomerAddress_Customer_CustomerID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CustomerBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CustomerBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData">
            <summary>
            	The data structure representation of the 'Customer' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData.CustomerId">
            <summary>			
            CustomerID : Primary key for Customer records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Customer"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData.TerritoryId">
            <summary>
            TerritoryID : ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData.AccountNumber">
            <summary>
            AccountNumber : Unique number identifying the customer assigned by the accounting system.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData.CustomerType">
            <summary>
            CustomerType : Customer type: I = Individual, S = Store
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData.TerritoryIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/>.
            </summary>
            <value>The source SalesTerritory for TerritoryId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData.Store">
            <summary>
            Holds a  Store entity object
            which is related to this object through the relation _storeCustomerId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderCustomerId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData.AddressIdAddressCollection_From_CustomerAddress">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table addressIdAddressCollectionFromCustomerAddress
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData.Individual">
            <summary>
            Holds a  Individual entity object
            which is related to this object through the relation _individualCustomerId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData.CustomerAddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _customerAddressCustomerId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerBase.CustomerEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CustomerColumn)">
            <summary>
             Initalizes a new Instance of the CustomerEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CustomerColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the CustomerEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerEventArgs.Column">
            <summary>
             The CustomerColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.CustomerColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerEventHandler">
            <summary>
             Define a delegate for all Customer related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CustomerComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerComparer.#ctor(Nettiers.AdventureWorks.Entities.CustomerColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomerComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerComparer.Equals(Nettiers.AdventureWorks.Entities.Customer,Nettiers.AdventureWorks.Entities.Customer)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> to compare.</param>
            <param name="b">The second <c>Customer</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerComparer.GetHashCode(Nettiers.AdventureWorks.Entities.Customer)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerComparer.Compare(Nettiers.AdventureWorks.Entities.Customer,Nettiers.AdventureWorks.Entities.Customer)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerKey.#ctor">
            <summary>
            Initializes a new instance of the CustomerKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerKey.#ctor(Nettiers.AdventureWorks.Entities.CustomerBase)">
            <summary>
            Initializes a new instance of the CustomerKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the CustomerKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerKey.CustomerId">
            <summary>
            Gets or sets the CustomerId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerColumn">
            <summary>
            Enumerate the Customer columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerColumn.CustomerId">
            <summary>
            CustomerId : Primary key for Customer records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerColumn.TerritoryId">
            <summary>
            TerritoryId : ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerColumn.AccountNumber">
            <summary>
            AccountNumber : Unique number identifying the customer assigned by the accounting system.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerColumn.CustomerType">
            <summary>
            CustomerType : Customer type: I = Individual, S = Store
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ContactColumn)">
            <summary>
             Initalizes a new Instance of the ContactEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ContactColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ContactEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactEventArgs.Column">
            <summary>
             The ContactColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ContactColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactEventHandler">
            <summary>
             Define a delegate for all Contact related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ContactComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactComparer.#ctor(Nettiers.AdventureWorks.Entities.ContactColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ContactComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactComparer.Equals(Nettiers.AdventureWorks.Entities.Contact,Nettiers.AdventureWorks.Entities.Contact)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> to compare.</param>
            <param name="b">The second <c>Contact</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactComparer.GetHashCode(Nettiers.AdventureWorks.Entities.Contact)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactComparer.Compare(Nettiers.AdventureWorks.Entities.Contact,Nettiers.AdventureWorks.Entities.Contact)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactKey.#ctor">
            <summary>
            Initializes a new instance of the ContactKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactKey.#ctor(Nettiers.AdventureWorks.Entities.ContactBase)">
            <summary>
            Initializes a new instance of the ContactKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ContactKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactKey.ContactId">
            <summary>
            Gets or sets the ContactId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactColumn">
            <summary>
            Enumerate the Contact columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactColumn.ContactId">
            <summary>
            ContactId : Primary key for Contact records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactColumn.NameStyle">
            <summary>
            NameStyle : 0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactColumn.Title">
            <summary>
            Title : A courtesy title. For example, Mr. or Ms.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactColumn.FirstName">
            <summary>
            FirstName : First name of the person.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactColumn.MiddleName">
            <summary>
            MiddleName : Middle name or middle initial of the person.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactColumn.LastName">
            <summary>
            LastName : Last name of the person.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactColumn.Suffix">
            <summary>
            Suffix : Surname suffix. For example, Sr. or Jr.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactColumn.EmailAddress">
            <summary>
            EmailAddress : E-mail address for the person.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactColumn.EmailPromotion">
            <summary>
            EmailPromotion : 0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactColumn.Phone">
            <summary>
            Phone : Phone number associated with the person.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactColumn.PasswordHash">
            <summary>
            PasswordHash : Password for the e-mail account.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactColumn.PasswordSalt">
            <summary>
            PasswordSalt : Random value concatenated with the password string before the password is hashed.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactColumn.AdditionalContactInfo">
            <summary>
            AdditionalContactInfo : Additional contact information about the person stored in xml format. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressTypeEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeEventArgs.#ctor(Nettiers.AdventureWorks.Entities.AddressTypeColumn)">
            <summary>
             Initalizes a new Instance of the AddressTypeEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeEventArgs.#ctor(Nettiers.AdventureWorks.Entities.AddressTypeColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the AddressTypeEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeEventArgs.Column">
            <summary>
             The AddressTypeColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.AddressTypeColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressTypeEventHandler">
            <summary>
             Define a delegate for all AddressType related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressTypeComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AddressTypeComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeComparer.#ctor(Nettiers.AdventureWorks.Entities.AddressTypeColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:AddressTypeComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeComparer.Equals(Nettiers.AdventureWorks.Entities.AddressType,Nettiers.AdventureWorks.Entities.AddressType)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> to compare.</param>
            <param name="b">The second <c>AddressType</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeComparer.GetHashCode(Nettiers.AdventureWorks.Entities.AddressType)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeComparer.Compare(Nettiers.AdventureWorks.Entities.AddressType,Nettiers.AdventureWorks.Entities.AddressType)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressTypeKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeKey.#ctor">
            <summary>
            Initializes a new instance of the AddressTypeKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeKey.#ctor(Nettiers.AdventureWorks.Entities.AddressTypeBase)">
            <summary>
            Initializes a new instance of the AddressTypeKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the AddressTypeKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AddressTypeKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.AddressTypeKey.AddressTypeId">
            <summary>
            Gets or sets the AddressTypeId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AddressTypeColumn">
            <summary>
            Enumerate the AddressType columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressTypeColumn.AddressTypeId">
            <summary>
            AddressTypeId : Primary key for AddressType records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressTypeColumn.Name">
            <summary>
            Name : Address type description. For example, Billing, Home, or Shipping.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressTypeColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.AddressTypeColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn">
            <summary>
            Enumerate the VStoreWithDemographics columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.CustomerId">
            <summary>
            CustomerID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.Name">
            <summary>
            Name : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.ContactType">
            <summary>
            ContactType : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.Title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.FirstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.MiddleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.LastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.Suffix">
            <summary>
            Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.Phone">
            <summary>
            Phone : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.EmailAddress">
            <summary>
            EmailAddress : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.EmailPromotion">
            <summary>
            EmailPromotion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.AddressType">
            <summary>
            AddressType : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.AddressLine1">
            <summary>
            AddressLine1 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.AddressLine2">
            <summary>
            AddressLine2 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.City">
            <summary>
            City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.StateProvinceName">
            <summary>
            StateProvinceName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.PostalCode">
            <summary>
            PostalCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.CountryRegionName">
            <summary>
            CountryRegionName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.AnnualSales">
            <summary>
            AnnualSales : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.AnnualRevenue">
            <summary>
            AnnualRevenue : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.BankName">
            <summary>
            BankName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.BusinessType">
            <summary>
            BusinessType : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.YearOpened">
            <summary>
            YearOpened : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.Specialty">
            <summary>
            Specialty : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.SquareFeet">
            <summary>
            SquareFeet : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.Brands">
            <summary>
            Brands : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.Internet">
            <summary>
            Internet : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStoreWithDemographicsColumn.NumberEmployees">
            <summary>
            NumberEmployees : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VProductModelInstructionsColumn">
            <summary>
            Enumerate the VProductModelInstructions columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsColumn.ProductModelId">
            <summary>
            ProductModelID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsColumn.Name">
            <summary>
            Name : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsColumn.Instructions">
            <summary>
            Instructions : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsColumn.LocationId">
            <summary>
            LocationID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsColumn.SetupHours">
            <summary>
            SetupHours : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsColumn.MachineHours">
            <summary>
            MachineHours : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsColumn.LaborHours">
            <summary>
            LaborHours : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsColumn.LotSize">
            <summary>
            LotSize : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsColumn.Step">
            <summary>
            Step : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsColumn.Rowguid">
            <summary>
            rowguid : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelInstructionsColumn.ModifiedDate">
            <summary>
            ModifiedDate : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase">
            <summary>
             Displays the content from each education related element in the xml column Resume in the HumanResources.JobCandidate table. The content has been localized into French, Simplified Chinese and Thai. Some data may not display correctly unless supplemental language support is installed.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase._jobCandidateId">
            <summary>
            JobCandidateID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase._safeNameEduLevel">
            <summary>
            Edu.Level : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase._safeNameEduStartDate">
            <summary>
            Edu.StartDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase._safeNameEduEndDate">
            <summary>
            Edu.EndDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase._safeNameEduDegree">
            <summary>
            Edu.Degree : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase._safeNameEduMajor">
            <summary>
            Edu.Major : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase._safeNameEduMinor">
            <summary>
            Edu.Minor : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase._safeNameEduGpa">
            <summary>
            Edu.GPA : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase._safeNameEduGpaScale">
            <summary>
            Edu.GPAScale : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase._safeNameEduSchool">
            <summary>
            Edu.School : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase._safeNameEduLocCountryRegion">
            <summary>
            Edu.Loc.CountryRegion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase._safeNameEduLocState">
            <summary>
            Edu.Loc.State : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase._safeNameEduLocCity">
            <summary>
            Edu.Loc.City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.#ctor(System.Int32,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase"/> instance.
            </summary>
            <param name="_jobCandidateId"></param>
            <param name="_safeNameEduLevel"></param>
            <param name="_safeNameEduStartDate"></param>
            <param name="_safeNameEduEndDate"></param>
            <param name="_safeNameEduDegree"></param>
            <param name="_safeNameEduMajor"></param>
            <param name="_safeNameEduMinor"></param>
            <param name="_safeNameEduGpa"></param>
            <param name="_safeNameEduGpaScale"></param>
            <param name="_safeNameEduSchool"></param>
            <param name="_safeNameEduLocCountryRegion"></param>
            <param name="_safeNameEduLocState"></param>
            <param name="_safeNameEduLocCity"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.CreateVJobCandidateEducation(System.Int32,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducation"/> instance.
            </summary>
            <param name="_jobCandidateId"></param>
            <param name="_safeNameEduLevel"></param>
            <param name="_safeNameEduStartDate"></param>
            <param name="_safeNameEduEndDate"></param>
            <param name="_safeNameEduDegree"></param>
            <param name="_safeNameEduMajor"></param>
            <param name="_safeNameEduMinor"></param>
            <param name="_safeNameEduGpa"></param>
            <param name="_safeNameEduGpaScale"></param>
            <param name="_safeNameEduSchool"></param>
            <param name="_safeNameEduLocCountryRegion"></param>
            <param name="_safeNameEduLocState"></param>
            <param name="_safeNameEduLocCity"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.Copy">
            <summary>
              Returns a Typed VJobCandidateEducationBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.Equals(Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.Equals(Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase,Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VJobCandidateEducation,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.JobCandidateId">
            <summary>
            	Gets or Sets the JobCandidateID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.SafeNameEduLevel">
            <summary>
            	Gets or Sets the Edu.Level property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.SafeNameEduStartDate">
            <summary>
            	Gets or Sets the Edu.StartDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsSafeNameEduStartDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.SafeNameEduEndDate">
            <summary>
            	Gets or Sets the Edu.EndDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsSafeNameEduEndDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.SafeNameEduDegree">
            <summary>
            	Gets or Sets the Edu.Degree property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.SafeNameEduMajor">
            <summary>
            	Gets or Sets the Edu.Major property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.SafeNameEduMinor">
            <summary>
            	Gets or Sets the Edu.Minor property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.SafeNameEduGpa">
            <summary>
            	Gets or Sets the Edu.GPA property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.SafeNameEduGpaScale">
            <summary>
            	Gets or Sets the Edu.GPAScale property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.SafeNameEduSchool">
            <summary>
            	Gets or Sets the Edu.School property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.SafeNameEduLocCountryRegion">
            <summary>
            	Gets or Sets the Edu.Loc.CountryRegion property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.SafeNameEduLocState">
            <summary>
            	Gets or Sets the Edu.Loc.State property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.SafeNameEduLocCity">
            <summary>
            	Gets or Sets the Edu.Loc.City property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VJobCandidateEducationBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducationColumn">
            <summary>
            Enumerate the VJobCandidateEducation columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationColumn.JobCandidateId">
            <summary>
            JobCandidateID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationColumn.SafeNameEduLevel">
            <summary>
            Edu.Level : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationColumn.SafeNameEduStartDate">
            <summary>
            Edu.StartDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationColumn.SafeNameEduEndDate">
            <summary>
            Edu.EndDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationColumn.SafeNameEduDegree">
            <summary>
            Edu.Degree : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationColumn.SafeNameEduMajor">
            <summary>
            Edu.Major : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationColumn.SafeNameEduMinor">
            <summary>
            Edu.Minor : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationColumn.SafeNameEduGpa">
            <summary>
            Edu.GPA : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationColumn.SafeNameEduGpaScale">
            <summary>
            Edu.GPAScale : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationColumn.SafeNameEduSchool">
            <summary>
            Edu.School : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationColumn.SafeNameEduLocCountryRegion">
            <summary>
            Edu.Loc.CountryRegion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationColumn.SafeNameEduLocState">
            <summary>
            Edu.Loc.State : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEducationColumn.SafeNameEduLocCity">
            <summary>
            Edu.Loc.City : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase">
            <summary>
             Returns employee name and current and previous departments.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase._employeeId">
            <summary>
            EmployeeID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase._title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase._firstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase._middleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase._lastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase._suffix">
            <summary>
            Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase._shift">
            <summary>
            Shift : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase._department">
            <summary>
            Department : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase._groupName">
            <summary>
            GroupName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase._startDate">
            <summary>
            StartDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase._endDate">
            <summary>
            EndDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase"/> instance.
            </summary>
            <param name="_employeeId"></param>
            <param name="_title"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_suffix"></param>
            <param name="_shift"></param>
            <param name="_department"></param>
            <param name="_groupName"></param>
            <param name="_startDate"></param>
            <param name="_endDate"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.CreateVEmployeeDepartmentHistory(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistory"/> instance.
            </summary>
            <param name="_employeeId"></param>
            <param name="_title"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_suffix"></param>
            <param name="_shift"></param>
            <param name="_department"></param>
            <param name="_groupName"></param>
            <param name="_startDate"></param>
            <param name="_endDate"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.Copy">
            <summary>
              Returns a Typed VEmployeeDepartmentHistoryBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.Equals(Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.Equals(Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase,Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistory,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.EmployeeId">
            <summary>
            	Gets or Sets the EmployeeID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.Title">
            <summary>
            	Gets or Sets the Title property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.FirstName">
            <summary>
            	Gets or Sets the FirstName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.MiddleName">
            <summary>
            	Gets or Sets the MiddleName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.LastName">
            <summary>
            	Gets or Sets the LastName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.Suffix">
            <summary>
            	Gets or Sets the Suffix property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.Shift">
            <summary>
            	Gets or Sets the Shift property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.Department">
            <summary>
            	Gets or Sets the Department property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.GroupName">
            <summary>
            	Gets or Sets the GroupName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.StartDate">
            <summary>
            	Gets or Sets the StartDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.EndDate">
            <summary>
            	Gets or Sets the EndDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsEndDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryColumn">
            <summary>
            Enumerate the VEmployeeDepartmentHistory columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryColumn.EmployeeId">
            <summary>
            EmployeeID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryColumn.Title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryColumn.FirstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryColumn.MiddleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryColumn.LastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryColumn.Suffix">
            <summary>
            Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryColumn.Shift">
            <summary>
            Shift : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryColumn.Department">
            <summary>
            Department : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryColumn.GroupName">
            <summary>
            GroupName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryColumn.StartDate">
            <summary>
            StartDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistoryColumn.EndDate">
            <summary>
            EndDate : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityFactory">
            <summary>
            Entity Factory provides methods to create entity types from type names as strings.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityFactoryBase">
            <summary>
            Provides the core entity factory behavior.  Will create a type based on a string
            or a type and will try to auto discover which assembly this type lives in, even if it's
            not a local referenced assembly.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IEntityFactory">
            <summary>
            Exposes a factory to create an entity based on a typeString and a default type.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IEntityFactory.CreateEntity(System.String,System.Type)">
            <summary>
            Create an entity based on a string.  
            It will autodiscover the type based on any information we can gather.
            </summary>
            <param name="typeString">string of entity to discover and create</param>
            <param name="defaultType">if string is not found defaultType will be created.</param>
            <returns>Created IEntity object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IEntityFactory.CreateViewEntity(System.String,System.Type)">
            <summary>
            Create a readonly entity based on a string for views.  
            It will autodiscover the type based on any information we can gather.
            </summary>
            <param name="typeString">string of entity to discover and create</param>
            <param name="defaultType">if string is not found defaultType will be created.</param>
            <returns>Created IEntity object</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IEntityFactory.CurrentEntityAssembly">
            <summary>
            Gets the current assembly responsible for entity creation.
            </summary>
            <value>The current assembly.</value>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EntityFactoryBase.currentAssembly">
            <summary>
            The current assembly from which to attempt to create entities from.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EntityFactoryBase.defaultCreationalNamespace">
            <summary>
            This will create entities by default if not found in the current assembly
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EntityFactoryBase.internalTypeCache">
            <summary>
            This provides a cache of already discovered types, so that there is minimal performance hit after first lookup.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EntityFactoryBase.syncRoot">
            <summary>
            A synchronization object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EntityFactoryBase.currentEntityAssemblyNamespace">
            <summary>
            This is the namespace for the currentAssembly property
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.CreateEntity(System.String,System.Type)">
            <summary>
            Create an entity based on a string.
            It will autodiscover the type based on any information we can gather.
            </summary>
            <param name="typeString">string of entity to discover and create</param>
            <param name="defaultType">if string is not found defaultType will be created.</param>
            <returns>Created IEntity object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.CreateViewEntity(System.String,System.Type)">
            <summary>
            Create a view entity based on a string.
            It will autodiscover the type based on any information we can gather.
            </summary>
            <param name="typeString">string of entity to discover and create</param>
            <param name="defaultType">if string is not found defaultType will be created.</param>
            <returns>Created object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.Create(System.String)">
            <summary>
            Create an entity based on a string.  It will autodiscover the type based on
            based on any information we can gather.
            </summary>
            <param name="typeString">string of entity to discover and create</param>
            <returns>created IEntity object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.Create``1">
            <summary>
            Create an entity of generic type T
            </summary>
            <returns>T</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.Create(System.String,System.Type)">
            <summary>
            Create an entity based on a string.  It will autodiscover the type based on any information we can gather.
            </summary>
            <param name="typeString"></param>
            <param name="defaultType"></param>
            <returns>IEntity</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.Create(System.Type)">
            <summary>
            Creates an <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object and begins tracking on the object.
            </summary>
            <param name="type">known type to create</param>
            <returns>created IEntity object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.CreateReadOnlyEntity(System.String,System.Type)">
            <summary>
            Create an entity based on a string from a view.  It will autodiscover the type based on any information we can gather.
            </summary>
            <param name="typeString"></param>
            <param name="defaultType"></param>
            <returns>Object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.CreateReadOnlyEntity(System.Type)">
            <summary>
            Creates an view object.
            </summary>
            <param name="type">known type to create</param>
            <returns>created view ReadOnlyEntity entity object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.CoreCreate(System.String,System.Type)">
            <summary>
            Create an entity based on a string.  It will autodiscover the type based on any information we can gather.
            </summary>
            <param name="typeString"></param>
            <param name="defaultType"></param>
            <returns>object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.CoreCreate(System.Type)">
            <summary>
            Creates an object and begins .
            </summary>
            <param name="type">known type to create</param>
            <returns>created object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.ResolveType(System.String)">
            <summary>
            Resolves a type based on a string.  It will attempt to Auto-Discover the type, 
            based on it's fullname or partial names.
            </summary>
            <param name="typeString">the string of the type to resolve</param>
            <returns>IEntity</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.ResolveType(System.String,System.String)">
            <summary>
            Resolves a type based on a string.  It will attempt to Auto-Discover the type, 
            based on it's fullname or partial names.
            </summary>
            <param name="typeString">the string of the type to resolve</param>
            <param name="defaultNamespace">the string of the type to resolve</param>
            <returns>IEntity</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.GetClassNameFromString(System.String)">
            <summary>
            Parses a string and gets the class name from a qualified name, based on [Type, Assembly]
            </summary>
            <param name="typeString"></param>
            <example>
                MyNamespace.MyType, MyNamespace
            </example>
            <returns>string of the qualified classname</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.GetAssemblyNameFromString(System.String)">
            <summary>
            Parses a string and gets the class name from a qualified name, based on [Type, Assembly]
            </summary>
            <param name="typeString"></param>
            <example>
                MyNamespace.MyType, MyNamespace
            </example>
            <returns>string of the qualified Assembly Name</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.FlushTypeCache">
            <summary>
            Flushes the Internal Type Cache
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.OnEntityCreating(System.Type)">
            <summary>
            Used to fire the event just before an entity is creating.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.OnEntityCreated(Nettiers.AdventureWorks.Entities.IEntity,System.Type)">
            <summary>
            Used to fire the an event when the entity has just been created.
            </summary>
            <param name="entity">The entity.</param>
            <param name="type">The type.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EntityFactoryBase.EntityCreating">
            <summary>
            Exposes an Event which fires when an Entity is about to be created.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EntityFactoryBase.EntityCreated">
            <summary>
            Exposes an Event which fires when an Entity has been created.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityFactoryBase.CurrentEntityAssembly">
            <summary>
            Gets the current assembly.
            </summary>
            <value>The current assembly.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityFactoryBase.CurrentEntityAssemblyNamespace">
            <summary>
            Gets the current entity assembly namespace to discover types from.
            </summary>
            <value>The current assembly.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityFactoryBase.EntityCreatingEventHandler">
            <summary>
            A delegate to handle <see cref="E:Nettiers.AdventureWorks.Entities.EntityFactoryBase.EntityCreating"/> events
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityFactoryBase.EntityCreatedEventHandler">
            <summary>
            A delegate to handle <see cref="E:Nettiers.AdventureWorks.Entities.EntityFactoryBase.EntityCreated"/> events
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityFactoryBase.EntityEventArgs">
            <summary>
            Used to suppliment information for the EntityCreating and EntityCreated events.
            </summary>
            <remarks>
            The EntityCreating and EntityCreated events occur when an Entity is about to be created,
            or just after an Entity is created.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactoryBase.EntityEventArgs.#ctor(Nettiers.AdventureWorks.Entities.IEntity,System.Type)">
            <summary>
            Initalizes a new Instance of the ComponentEntityEventArgs class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="type">The type.</param>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityFactoryBase.EntityEventArgs.Entity">
            <summary>
            The entity that is about to be created or has just been created.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityFactoryBase.EntityEventArgs.CreationalType">
            <summary>
            Gets the type of the entity to be created.
            </summary>
            <value>The type of the creational.</value>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EntityFactory"/> class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.UnitMeasureEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureEventArgs.#ctor(Nettiers.AdventureWorks.Entities.UnitMeasureColumn)">
            <summary>
             Initalizes a new Instance of the UnitMeasureEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureEventArgs.#ctor(Nettiers.AdventureWorks.Entities.UnitMeasureColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the UnitMeasureEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureEventArgs.Column">
            <summary>
             The UnitMeasureColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.UnitMeasureColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.UnitMeasureEventHandler">
            <summary>
             Define a delegate for all UnitMeasure related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.UnitMeasureComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UnitMeasureComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureComparer.#ctor(Nettiers.AdventureWorks.Entities.UnitMeasureColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:UnitMeasureComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureComparer.Equals(Nettiers.AdventureWorks.Entities.UnitMeasure,Nettiers.AdventureWorks.Entities.UnitMeasure)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> to compare.</param>
            <param name="b">The second <c>UnitMeasure</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureComparer.GetHashCode(Nettiers.AdventureWorks.Entities.UnitMeasure)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureComparer.Compare(Nettiers.AdventureWorks.Entities.UnitMeasure,Nettiers.AdventureWorks.Entities.UnitMeasure)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.UnitMeasureKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureKey.#ctor">
            <summary>
            Initializes a new instance of the UnitMeasureKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureKey.#ctor(Nettiers.AdventureWorks.Entities.UnitMeasureBase)">
            <summary>
            Initializes a new instance of the UnitMeasureKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UnitMeasureKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.UnitMeasureKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.UnitMeasureKey.UnitMeasureCode">
            <summary>
            Gets or sets the UnitMeasureCode property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.UnitMeasureColumn">
            <summary>
            Enumerate the UnitMeasure columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.UnitMeasureColumn.UnitMeasureCode">
            <summary>
            UnitMeasureCode : Primary key.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.UnitMeasureColumn.Name">
            <summary>
            Name : Unit of measure description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.UnitMeasureColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.TransactionHistoryColumn)">
            <summary>
             Initalizes a new Instance of the TransactionHistoryEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.TransactionHistoryColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the TransactionHistoryEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryEventArgs.Column">
            <summary>
             The TransactionHistoryColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryEventHandler">
            <summary>
             Define a delegate for all TransactionHistory related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TransactionHistoryComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryComparer.#ctor(Nettiers.AdventureWorks.Entities.TransactionHistoryColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:TransactionHistoryComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryComparer.Equals(Nettiers.AdventureWorks.Entities.TransactionHistory,Nettiers.AdventureWorks.Entities.TransactionHistory)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> to compare.</param>
            <param name="b">The second <c>TransactionHistory</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryComparer.GetHashCode(Nettiers.AdventureWorks.Entities.TransactionHistory)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryComparer.Compare(Nettiers.AdventureWorks.Entities.TransactionHistory,Nettiers.AdventureWorks.Entities.TransactionHistory)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryKey.#ctor">
            <summary>
            Initializes a new instance of the TransactionHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryKey.#ctor(Nettiers.AdventureWorks.Entities.TransactionHistoryBase)">
            <summary>
            Initializes a new instance of the TransactionHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the TransactionHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryKey.TransactionId">
            <summary>
            Gets or sets the TransactionId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryColumn">
            <summary>
            Enumerate the TransactionHistory columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryColumn.TransactionId">
            <summary>
            TransactionId : Primary key for TransactionHistory records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryColumn.ProductId">
            <summary>
            ProductId : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryColumn.ReferenceOrderId">
            <summary>
            ReferenceOrderId : Purchase order, sales order, or work order identification number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryColumn.ReferenceOrderLineId">
            <summary>
            ReferenceOrderLineId : Line number associated with the purchase order, sales order, or work order.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryColumn.TransactionDate">
            <summary>
            TransactionDate : Date and time of the transaction.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryColumn.TransactionType">
            <summary>
            TransactionType : W = WorkOrder, S = SalesOrder, P = PurchaseOrder
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryColumn.Quantity">
            <summary>
            Quantity : Product quantity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryColumn.ActualCost">
            <summary>
            ActualCost : Product cost.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SpecialOffer">
            <summary>
             Sale discounts lookup table.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SpecialOffer.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail">
            <summary>
             Individual products associated with a specific sales order. See SalesOrderHeader.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesOrderDetail.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductInventoryEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductInventoryColumn)">
            <summary>
             Initalizes a new Instance of the ProductInventoryEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductInventoryColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ProductInventoryEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryEventArgs.Column">
            <summary>
             The ProductInventoryColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ProductInventoryColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductInventoryEventHandler">
            <summary>
             Define a delegate for all ProductInventory related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductInventoryComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ProductInventoryComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryComparer.#ctor(Nettiers.AdventureWorks.Entities.ProductInventoryColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductInventoryComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryComparer.Equals(Nettiers.AdventureWorks.Entities.ProductInventory,Nettiers.AdventureWorks.Entities.ProductInventory)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> to compare.</param>
            <param name="b">The second <c>ProductInventory</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ProductInventory)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryComparer.Compare(Nettiers.AdventureWorks.Entities.ProductInventory,Nettiers.AdventureWorks.Entities.ProductInventory)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductInventoryKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryKey.#ctor">
            <summary>
            Initializes a new instance of the ProductInventoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryKey.#ctor(Nettiers.AdventureWorks.Entities.ProductInventoryBase)">
            <summary>
            Initializes a new instance of the ProductInventoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryKey.#ctor(System.Int32,System.Int16)">
            <summary>
            Initializes a new instance of the ProductInventoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductInventoryKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryKey.ProductId">
            <summary>
            Gets or sets the ProductId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductInventoryKey.LocationId">
            <summary>
            Gets or sets the LocationId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductInventoryColumn">
            <summary>
            Enumerate the ProductInventory columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryColumn.ProductId">
            <summary>
            ProductId : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryColumn.LocationId">
            <summary>
            LocationId : Inventory location identification number. Foreign key to Location.LocationID. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryColumn.Shelf">
            <summary>
            Shelf : Storage compartment within an inventory location.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryColumn.Bin">
            <summary>
            Bin : Storage container on a shelf in an inventory location.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryColumn.Quantity">
            <summary>
            Quantity : Quantity of products in the inventory location.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductInventoryColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCategory">
            <summary>
             High-level product categorization.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCategory.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CreditCardBase">
            <summary>
             Customer credit card information.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CreditCardBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.#ctor(System.String,System.String,System.Byte,System.Int16,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CreditCardBase"/> instance.
            </summary>
            <param name="_cardType">Credit card name.</param>
            <param name="_cardNumber">Credit card number.</param>
            <param name="_expMonth">Credit card expiration month.</param>
            <param name="_expYear">Credit card expiration year.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.CreateCreditCard(System.String,System.String,System.Byte,System.Int16,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> instance.
            </summary>
            <param name="_cardType">Credit card name.</param>
            <param name="_cardNumber">Credit card number.</param>
            <param name="_expMonth">Credit card expiration month.</param>
            <param name="_expYear">Credit card expiration year.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed CreditCard Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.Copy">
            <summary>
              Returns a Typed CreditCard Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.DeepCopy">
            <summary>
              Returns a Typed CreditCard Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.CreditCardColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.GetOriginalEntity">
            <summary>
              Returns a CreditCard Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.CreditCardBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.CreditCardBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.Equals(Nettiers.AdventureWorks.Entities.CreditCardBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.CreditCardBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.ValueEquals(Nettiers.AdventureWorks.Entities.CreditCardBase,Nettiers.AdventureWorks.Entities.CreditCardBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.CreditCardBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.CreditCardBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.CreditCardBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CreditCardColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CreditCardBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CreditCardColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CreditCardColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CreditCardBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CreditCardColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CreditCardColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CreditCardBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CreditCardColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CreditCardColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CreditCardBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CreditCardColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CreditCardBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CreditCardBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.CreditCardId">
            <summary>
            	Gets or sets the CreditCardId property. 
            	Primary key for CreditCard records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.CardType">
            <summary>
            	Gets or sets the CardType property. 
            	Credit card name.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.CardNumber">
            <summary>
            	Gets or sets the CardNumber property. 
            	Credit card number.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.ExpMonth">
            <summary>
            	Gets or sets the ExpMonth property. 
            	Credit card expiration month.
            </summary>
            <value>This type is tinyint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.ExpYear">
            <summary>
            	Gets or sets the ExpYear property. 
            	Credit card expiration year.
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.ContactCreditCardCollection">
            <summary>
            Holds a collection of ContactCreditCard objects
            which are related to this object through the relation FK_ContactCreditCard_CreditCard_CreditCardID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of SalesOrderHeader objects
            which are related to this object through the relation FK_SalesOrderHeader_CreditCard_CreditCardID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.ContactIdContactCollection_From_ContactCreditCard">
            <summary>
            Holds a collection of ContactFromContactCreditCard objects
            which are related to this object through the junction table ContactCreditCard
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CreditCardBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CreditCardBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CreditCardBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CreditCardBase.CreditCardEntityData">
            <summary>
            	The data structure representation of the 'CreditCard' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardBase.CreditCardEntityData.CreditCardId">
            <summary>			
            CreditCardID : Primary key for CreditCard records.
            </summary>
            <remarks>Member of the primary key of the underlying table "CreditCard"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardBase.CreditCardEntityData.CardType">
            <summary>
            CardType : Credit card name.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardBase.CreditCardEntityData.CardNumber">
            <summary>
            CardNumber : Credit card number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardBase.CreditCardEntityData.ExpMonth">
            <summary>
            ExpMonth : Credit card expiration month.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardBase.CreditCardEntityData.ExpYear">
            <summary>
            ExpYear : Credit card expiration year.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardBase.CreditCardEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.CreditCardEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardBase.CreditCardEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.CreditCardEntityData.ContactCreditCardCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _contactCreditCardCreditCardId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.CreditCardEntityData.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderCreditCardId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.CreditCardEntityData.ContactIdContactCollection_From_ContactCreditCard">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table contactIdContactCollectionFromContactCreditCard
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardBase.CreditCardEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CreditCardEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CreditCardColumn)">
            <summary>
             Initalizes a new Instance of the CreditCardEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CreditCardColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the CreditCardEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardEventArgs.Column">
            <summary>
             The CreditCardColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.CreditCardColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CreditCardEventHandler">
            <summary>
             Define a delegate for all CreditCard related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CreditCardComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CreditCardComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardComparer.#ctor(Nettiers.AdventureWorks.Entities.CreditCardColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:CreditCardComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardComparer.Equals(Nettiers.AdventureWorks.Entities.CreditCard,Nettiers.AdventureWorks.Entities.CreditCard)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> to compare.</param>
            <param name="b">The second <c>CreditCard</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardComparer.GetHashCode(Nettiers.AdventureWorks.Entities.CreditCard)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardComparer.Compare(Nettiers.AdventureWorks.Entities.CreditCard,Nettiers.AdventureWorks.Entities.CreditCard)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CreditCardKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardKey.#ctor">
            <summary>
            Initializes a new instance of the CreditCardKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardKey.#ctor(Nettiers.AdventureWorks.Entities.CreditCardBase)">
            <summary>
            Initializes a new instance of the CreditCardKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the CreditCardKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCardKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CreditCardKey.CreditCardId">
            <summary>
            Gets or sets the CreditCardId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CreditCardColumn">
            <summary>
            Enumerate the CreditCard columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardColumn.CreditCardId">
            <summary>
            CreditCardId : Primary key for CreditCard records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardColumn.CardType">
            <summary>
            CardType : Credit card name.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardColumn.CardNumber">
            <summary>
            CardNumber : Credit card number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardColumn.ExpMonth">
            <summary>
            ExpMonth : Credit card expiration month.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardColumn.ExpYear">
            <summary>
            ExpYear : Credit card expiration year.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CreditCardColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactCreditCard">
            <summary>
             Cross-reference table mapping customers in the Contact table to their credit card information in the CreditCard table. 	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactCreditCardBase">
            <summary>
             Cross-reference table mapping customers in the Contact table to their credit card information in the CreditCard table. 	
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IContactCreditCard">
            <summary>
            	The data structure representation of the 'ContactCreditCard' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IContactCreditCard.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContactCreditCard.ContactId">
            <summary>			
            ContactID : Customer identification number. Foreign key to Contact.ContactID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ContactCreditCard"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContactCreditCard.OriginalContactId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContactCreditCard.CreditCardId">
            <summary>			
            CreditCardID : Credit card identification number. Foreign key to CreditCard.CreditCardID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ContactCreditCard"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContactCreditCard.OriginalCreditCardId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IContactCreditCard.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactCreditCardBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCardBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.#ctor(System.Int32,System.Int32,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCardBase"/> instance.
            </summary>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.CreateContactCreditCard(System.Int32,System.Int32,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> instance.
            </summary>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ContactCreditCard Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.Copy">
            <summary>
              Returns a Typed ContactCreditCard Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.DeepCopy">
            <summary>
              Returns a Typed ContactCreditCard Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ContactCreditCardColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.GetOriginalEntity">
            <summary>
              Returns a ContactCreditCard Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCardBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCardBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.Equals(Nettiers.AdventureWorks.Entities.ContactCreditCardBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCardBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ValueEquals(Nettiers.AdventureWorks.Entities.ContactCreditCardBase,Nettiers.AdventureWorks.Entities.ContactCreditCardBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCardBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCardBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCardBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ContactCreditCardColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCardColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ContactCreditCardColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCardColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ContactCreditCardColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCardColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ContactCreditCardColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCardColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ContactId">
            <summary>
            	Gets or sets the ContactId property. 
            	Customer identification number. Foreign key to Contact.ContactID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.OriginalContactId">
            <summary>
            	Get the original value of the ContactID property.
            	Customer identification number. Foreign key to Contact.ContactID.
            </summary>
            <remarks>This is the original value of the ContactID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.CreditCardId">
            <summary>
            	Gets or sets the CreditCardId property. 
            	Credit card identification number. Foreign key to CreditCard.CreditCardID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.OriginalCreditCardId">
            <summary>
            	Get the original value of the CreditCardID property.
            	Credit card identification number. Foreign key to CreditCard.CreditCardID.
            </summary>
            <remarks>This is the original value of the CreditCardID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ContactIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/>.
            </summary>
            <value>The source Contact for ContactId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.CreditCardIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/>.
            </summary>
            <value>The source CreditCard for CreditCardId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ContactCreditCardEntityData">
            <summary>
            	The data structure representation of the 'ContactCreditCard' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ContactCreditCardEntityData.ContactId">
            <summary>			
            ContactID : Customer identification number. Foreign key to Contact.ContactID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ContactCreditCard"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ContactCreditCardEntityData.OriginalContactId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ContactCreditCardEntityData.CreditCardId">
            <summary>			
            CreditCardID : Credit card identification number. Foreign key to CreditCard.CreditCardID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ContactCreditCard"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ContactCreditCardEntityData.OriginalCreditCardId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ContactCreditCardEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ContactCreditCardEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ContactCreditCardEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ContactCreditCardEntityData.ContactIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/>.
            </summary>
            <value>The source Contact for ContactId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ContactCreditCardEntityData.CreditCardIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/>.
            </summary>
            <value>The source CreditCard for CreditCardId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardBase.ContactCreditCardEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCard.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.AwBuildVersion">
            <summary>
             Current version number of the AdventureWorks sample database. 	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.AwBuildVersion.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase">
            <summary>
             Displays the contact name and content from each element in the xml column AdditionalContactInfo for that person.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._contactId">
            <summary>
            ContactID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._firstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._middleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._lastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._telephoneNumber">
            <summary>
            TelephoneNumber : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._telephoneSpecialInstructions">
            <summary>
            TelephoneSpecialInstructions : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._street">
            <summary>
            Street : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._city">
            <summary>
            City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._stateProvince">
            <summary>
            StateProvince : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._postalCode">
            <summary>
            PostalCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._countryRegion">
            <summary>
            CountryRegion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._homeAddressSpecialInstructions">
            <summary>
            HomeAddressSpecialInstructions : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._emailAddress">
            <summary>
            EMailAddress : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._emailSpecialInstructions">
            <summary>
            EMailSpecialInstructions : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._emailTelephoneNumber">
            <summary>
            EMailTelephoneNumber : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._rowguid">
            <summary>
            rowguid : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._modifiedDate">
            <summary>
            ModifiedDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase"/> instance.
            </summary>
            <param name="_contactId"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_telephoneNumber"></param>
            <param name="_telephoneSpecialInstructions"></param>
            <param name="_street"></param>
            <param name="_city"></param>
            <param name="_stateProvince"></param>
            <param name="_postalCode"></param>
            <param name="_countryRegion"></param>
            <param name="_homeAddressSpecialInstructions"></param>
            <param name="_emailAddress"></param>
            <param name="_emailSpecialInstructions"></param>
            <param name="_emailTelephoneNumber"></param>
            <param name="_rowguid"></param>
            <param name="_modifiedDate"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.CreateVAdditionalContactInfo(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfo"/> instance.
            </summary>
            <param name="_contactId"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_telephoneNumber"></param>
            <param name="_telephoneSpecialInstructions"></param>
            <param name="_street"></param>
            <param name="_city"></param>
            <param name="_stateProvince"></param>
            <param name="_postalCode"></param>
            <param name="_countryRegion"></param>
            <param name="_homeAddressSpecialInstructions"></param>
            <param name="_emailAddress"></param>
            <param name="_emailSpecialInstructions"></param>
            <param name="_emailTelephoneNumber"></param>
            <param name="_rowguid"></param>
            <param name="_modifiedDate"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.Copy">
            <summary>
              Returns a Typed VAdditionalContactInfoBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.Equals(Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.Equals(Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase,Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VAdditionalContactInfo,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.ContactId">
            <summary>
            	Gets or Sets the ContactID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.FirstName">
            <summary>
            	Gets or Sets the FirstName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.MiddleName">
            <summary>
            	Gets or Sets the MiddleName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.LastName">
            <summary>
            	Gets or Sets the LastName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.TelephoneNumber">
            <summary>
            	Gets or Sets the TelephoneNumber property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.TelephoneSpecialInstructions">
            <summary>
            	Gets or Sets the TelephoneSpecialInstructions property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.Street">
            <summary>
            	Gets or Sets the Street property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.City">
            <summary>
            	Gets or Sets the City property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.StateProvince">
            <summary>
            	Gets or Sets the StateProvince property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.PostalCode">
            <summary>
            	Gets or Sets the PostalCode property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.CountryRegion">
            <summary>
            	Gets or Sets the CountryRegion property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.HomeAddressSpecialInstructions">
            <summary>
            	Gets or Sets the HomeAddressSpecialInstructions property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.EmailAddress">
            <summary>
            	Gets or Sets the EMailAddress property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.EmailSpecialInstructions">
            <summary>
            	Gets or Sets the EMailSpecialInstructions property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.EmailTelephoneNumber">
            <summary>
            	Gets or Sets the EMailTelephoneNumber property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.Rowguid">
            <summary>
            	Gets or Sets the rowguid property. 
            	
            </summary>
            <value>This type is uniqueidentifier</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.ModifiedDate">
            <summary>
            	Gets or Sets the ModifiedDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn">
            <summary>
            Enumerate the VAdditionalContactInfo columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.ContactId">
            <summary>
            ContactID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.FirstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.MiddleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.LastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.TelephoneNumber">
            <summary>
            TelephoneNumber : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.TelephoneSpecialInstructions">
            <summary>
            TelephoneSpecialInstructions : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.Street">
            <summary>
            Street : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.City">
            <summary>
            City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.StateProvince">
            <summary>
            StateProvince : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.PostalCode">
            <summary>
            PostalCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.CountryRegion">
            <summary>
            CountryRegion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.HomeAddressSpecialInstructions">
            <summary>
            HomeAddressSpecialInstructions : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.EmailAddress">
            <summary>
            EMailAddress : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.EmailSpecialInstructions">
            <summary>
            EMailSpecialInstructions : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.EmailTelephoneNumber">
            <summary>
            EMailTelephoneNumber : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.Rowguid">
            <summary>
            rowguid : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VAdditionalContactInfoColumn.ModifiedDate">
            <summary>
            ModifiedDate : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleHandler">
            <summary>
            Delegate providing the signature of all methods that will process validation rules.
            </summary>
            <remarks>
            <para>
            The method handler should set the Description attribute of the 
            <see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs"/> parameter so that a meaningful
            error is returned.
            </para><para>
            If the data is valid, the method must return true.  If the data is invalid,
            the Description should be set the false should be returned.
            </para>
            </remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.GenericTypeConverter">
            <summary>
            Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.
            Used by the nettiers strongly typed collection, so they can be saved in ViewState.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.GenericTypeConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Entities.GenericTypeConverter"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.GenericTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.GenericTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityLocator">
            <summary>
            Provides a means to weak reference and already created and untouched locate entities.
            </summary>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityLocator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityLocator.Add(System.String,System.Object)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityLocator.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified key].
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if [contains] [the specified key]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityLocator.Get(System.Object)">
            <summary>
            Gets the specified key of any object.
            </summary>
            <param name="key">The key.</param>
            <returns>object if available, else null </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityLocator.GetEntity``1(System.String)">
            <summary>
            Get's an Entity from the Tracking Locator
            </summary>
            <typeparam name="Entity">A type that implements IEntity</typeparam>
            <param name="key">locator list key to fetch, best used 
            if it's the (TypeName or TableName) + EntityKey of the this entity</param>
            <returns>Entity from Locator if available.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityLocator.GetList``1(System.String)">
            <summary>
            Get's a List of Entities from the Tracking Locator
            </summary>
            <typeparam name="EntityList"> a type that implements ListBase&lt;IEntity&gt;</typeparam>
            <param name="key">locator list key to fetch, best used 
            if it's like the criteria of the method used to populate this list
            </param>
            <returns>ListBase&lt;IEntity&gt; if available</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityLocator.ConstructKeyFromPkItems(System.Type,System.Object[])">
            <summary>
            Re-Creates the key based on primary key values.
            </summary>
            <param name="type">The type.</param>
            <param name="pkItems">The pk items.</param>
            <returns></returns>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderEventArgs.#ctor(Nettiers.AdventureWorks.Entities.WorkOrderColumn)">
            <summary>
             Initalizes a new Instance of the WorkOrderEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderEventArgs.#ctor(Nettiers.AdventureWorks.Entities.WorkOrderColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the WorkOrderEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderEventArgs.Column">
            <summary>
             The WorkOrderColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.WorkOrderColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderEventHandler">
            <summary>
             Define a delegate for all WorkOrder related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WorkOrderComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderComparer.#ctor(Nettiers.AdventureWorks.Entities.WorkOrderColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:WorkOrderComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderComparer.Equals(Nettiers.AdventureWorks.Entities.WorkOrder,Nettiers.AdventureWorks.Entities.WorkOrder)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> to compare.</param>
            <param name="b">The second <c>WorkOrder</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderComparer.GetHashCode(Nettiers.AdventureWorks.Entities.WorkOrder)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderComparer.Compare(Nettiers.AdventureWorks.Entities.WorkOrder,Nettiers.AdventureWorks.Entities.WorkOrder)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderKey.#ctor">
            <summary>
            Initializes a new instance of the WorkOrderKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderKey.#ctor(Nettiers.AdventureWorks.Entities.WorkOrderBase)">
            <summary>
            Initializes a new instance of the WorkOrderKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the WorkOrderKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderKey.WorkOrderId">
            <summary>
            Gets or sets the WorkOrderId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderColumn">
            <summary>
            Enumerate the WorkOrder columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderColumn.WorkOrderId">
            <summary>
            WorkOrderId : Primary key for WorkOrder records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderColumn.ProductId">
            <summary>
            ProductId : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderColumn.OrderQty">
            <summary>
            OrderQty : Product quantity to build.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderColumn.StockedQty">
            <summary>
            StockedQty : Quantity built and put in inventory.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderColumn.ScrappedQty">
            <summary>
            ScrappedQty : Quantity that failed inspection.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderColumn.StartDate">
            <summary>
            StartDate : Work order start date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderColumn.EndDate">
            <summary>
            EndDate : Work order end date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderColumn.DueDate">
            <summary>
            DueDate : Work order due date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderColumn.ScrapReasonId">
            <summary>
            ScrapReasonId : Reason for inspection failure.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorEventArgs.#ctor(Nettiers.AdventureWorks.Entities.VendorColumn)">
            <summary>
             Initalizes a new Instance of the VendorEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorEventArgs.#ctor(Nettiers.AdventureWorks.Entities.VendorColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the VendorEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorEventArgs.Column">
            <summary>
             The VendorColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.VendorColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorEventHandler">
            <summary>
             Define a delegate for all Vendor related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VendorComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorComparer.#ctor(Nettiers.AdventureWorks.Entities.VendorColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:VendorComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorComparer.Equals(Nettiers.AdventureWorks.Entities.Vendor,Nettiers.AdventureWorks.Entities.Vendor)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> to compare.</param>
            <param name="b">The second <c>Vendor</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorComparer.GetHashCode(Nettiers.AdventureWorks.Entities.Vendor)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorComparer.Compare(Nettiers.AdventureWorks.Entities.Vendor,Nettiers.AdventureWorks.Entities.Vendor)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorKey.#ctor">
            <summary>
            Initializes a new instance of the VendorKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorKey.#ctor(Nettiers.AdventureWorks.Entities.VendorBase)">
            <summary>
            Initializes a new instance of the VendorKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the VendorKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VendorKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VendorKey.VendorId">
            <summary>
            Gets or sets the VendorId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VendorColumn">
            <summary>
            Enumerate the Vendor columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorColumn.VendorId">
            <summary>
            VendorId : Primary key for Vendor records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorColumn.AccountNumber">
            <summary>
            AccountNumber : Vendor account (identification) number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorColumn.Name">
            <summary>
            Name : Company name.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorColumn.CreditRating">
            <summary>
            CreditRating : 1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorColumn.PreferredVendorStatus">
            <summary>
            PreferredVendorStatus : 0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorColumn.ActiveFlag">
            <summary>
            ActiveFlag : 0 = Vendor no longer used. 1 = Vendor is actively used.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorColumn.PurchasingWebServiceUrl">
            <summary>
            PurchasingWebServiceUrl : Vendor URL.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VendorColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StateProvince">
            <summary>
             State and province lookup table.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StateProvinceBase">
            <summary>
             State and province lookup table.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.StateProvinceBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.#ctor(System.String,System.String,System.Boolean,System.String,System.Int32,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.StateProvinceBase"/> instance.
            </summary>
            <param name="_stateProvinceCode">ISO standard state or province code.</param>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <param name="_isOnlyStateProvinceFlag">0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.</param>
            <param name="_name">State or province description.</param>
            <param name="_territoryId">ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.CreateStateProvince(System.String,System.String,System.Boolean,System.String,System.Int32,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> instance.
            </summary>
            <param name="_stateProvinceCode">ISO standard state or province code.</param>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <param name="_isOnlyStateProvinceFlag">0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.</param>
            <param name="_name">State or province description.</param>
            <param name="_territoryId">ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed StateProvince Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.Copy">
            <summary>
              Returns a Typed StateProvince Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.DeepCopy">
            <summary>
              Returns a Typed StateProvince Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.StateProvinceColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.GetOriginalEntity">
            <summary>
              Returns a StateProvince Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.StateProvinceBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.StateProvinceBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.Equals(Nettiers.AdventureWorks.Entities.StateProvinceBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.StateProvinceBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.ValueEquals(Nettiers.AdventureWorks.Entities.StateProvinceBase,Nettiers.AdventureWorks.Entities.StateProvinceBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.StateProvinceBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.StateProvinceBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.StateProvinceBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.StateProvinceColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.StateProvinceBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.StateProvinceColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.StateProvinceColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.StateProvinceBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.StateProvinceColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.StateProvinceColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.StateProvinceBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.StateProvinceColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.StateProvinceColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.StateProvinceBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.StateProvinceColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.StateProvinceBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.StateProvinceBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceId">
            <summary>
            	Gets or sets the StateProvinceId property. 
            	Primary key for StateProvince records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceCode">
            <summary>
            	Gets or sets the StateProvinceCode property. 
            	ISO standard state or province code.
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.CountryRegionCode">
            <summary>
            	Gets or sets the CountryRegionCode property. 
            	ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. 
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.IsOnlyStateProvinceFlag">
            <summary>
            	Gets or sets the IsOnlyStateProvinceFlag property. 
            	0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.
            </summary>
            <value>This type is bit.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	State or province description.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.TerritoryId">
            <summary>
            	Gets or sets the TerritoryId property. 
            	ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.CountryRegionCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/>.
            </summary>
            <value>The source CountryRegion for CountryRegionCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.TerritoryIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/>.
            </summary>
            <value>The source SalesTerritory for TerritoryId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.AddressCollection">
            <summary>
            Holds a collection of Address objects
            which are related to this object through the relation FK_Address_StateProvince_StateProvinceID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.SalesTaxRateCollection">
            <summary>
            Holds a collection of SalesTaxRate objects
            which are related to this object through the relation FK_SalesTaxRate_StateProvince_StateProvinceID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.StateProvinceBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.StateProvinceBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StateProvinceBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData">
            <summary>
            	The data structure representation of the 'StateProvince' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData.StateProvinceId">
            <summary>			
            StateProvinceID : Primary key for StateProvince records.
            </summary>
            <remarks>Member of the primary key of the underlying table "StateProvince"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData.StateProvinceCode">
            <summary>
            StateProvinceCode : ISO standard state or province code.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData.CountryRegionCode">
            <summary>
            CountryRegionCode : ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData.IsOnlyStateProvinceFlag">
            <summary>
            IsOnlyStateProvinceFlag : 0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData.Name">
            <summary>
            Name : State or province description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData.TerritoryId">
            <summary>
            TerritoryID : ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData.CountryRegionCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/>.
            </summary>
            <value>The source CountryRegion for CountryRegionCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData.TerritoryIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/>.
            </summary>
            <value>The source SalesTerritory for TerritoryId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData.AddressCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _addressStateProvinceId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData.SalesTaxRateCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesTaxRateStateProvinceId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceBase.StateProvinceEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvince.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ScrapReason">
            <summary>
             Manufacturing failure reasons lookup table.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ScrapReasonBase">
            <summary>
             Manufacturing failure reasons lookup table.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ScrapReasonBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ScrapReasonBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ScrapReasonBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ScrapReasonBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ScrapReasonBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReasonBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.#ctor(System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReasonBase"/> instance.
            </summary>
            <param name="_name">Failure description.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.CreateScrapReason(System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> instance.
            </summary>
            <param name="_name">Failure description.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ScrapReason Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.Copy">
            <summary>
              Returns a Typed ScrapReason Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.DeepCopy">
            <summary>
              Returns a Typed ScrapReason Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ScrapReasonColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.GetOriginalEntity">
            <summary>
              Returns a ScrapReason Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReasonBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReasonBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.Equals(Nettiers.AdventureWorks.Entities.ScrapReasonBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReasonBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ValueEquals(Nettiers.AdventureWorks.Entities.ScrapReasonBase,Nettiers.AdventureWorks.Entities.ScrapReasonBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReasonBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReasonBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReasonBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ScrapReasonColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReasonColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ScrapReasonColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReasonColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ScrapReasonColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReasonColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ScrapReasonColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReasonColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ScrapReasonId">
            <summary>
            	Gets or sets the ScrapReasonId property. 
            	Primary key for ScrapReason records.
            </summary>
            <value>This type is smallint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Failure description.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonBase.WorkOrderCollection">
            <summary>
            Holds a collection of WorkOrder objects
            which are related to this object through the relation FK_WorkOrder_ScrapReason_ScrapReasonID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ScrapReasonBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ScrapReasonBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ScrapReasonBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ScrapReasonEntityData">
            <summary>
            	The data structure representation of the 'ScrapReason' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ScrapReasonEntityData.ScrapReasonId">
            <summary>			
            ScrapReasonID : Primary key for ScrapReason records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ScrapReason"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ScrapReasonEntityData.Name">
            <summary>
            Name : Failure description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ScrapReasonEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ScrapReasonEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ScrapReasonEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ScrapReasonEntityData.WorkOrderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _workOrderScrapReasonId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonBase.ScrapReasonEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReason.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductDescription">
            <summary>
             Product descriptions in several languages.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductDescription.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactType">
            <summary>
             Lookup table containing the types of contacts stored in Contact.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactTypeBase">
            <summary>
             Lookup table containing the types of contacts stored in Contact.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactTypeBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactTypeBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactTypeBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactTypeBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactTypeBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ContactTypeBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.#ctor(System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ContactTypeBase"/> instance.
            </summary>
            <param name="_name">Contact type description.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.CreateContactType(System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> instance.
            </summary>
            <param name="_name">Contact type description.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ContactType Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.Copy">
            <summary>
              Returns a Typed ContactType Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.DeepCopy">
            <summary>
              Returns a Typed ContactType Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ContactTypeColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.GetOriginalEntity">
            <summary>
              Returns a ContactType Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ContactTypeBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ContactTypeBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.Equals(Nettiers.AdventureWorks.Entities.ContactTypeBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ContactTypeBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.ValueEquals(Nettiers.AdventureWorks.Entities.ContactTypeBase,Nettiers.AdventureWorks.Entities.ContactTypeBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ContactTypeBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ContactTypeBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ContactTypeBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ContactTypeColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ContactTypeBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactTypeColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ContactTypeColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ContactTypeBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactTypeColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ContactTypeColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ContactTypeBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactTypeColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ContactTypeColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ContactTypeBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactTypeColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ContactTypeBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ContactTypeBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeBase.ContactTypeId">
            <summary>
            	Gets or sets the ContactTypeId property. 
            	Primary key for ContactType records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Contact type description.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeBase.StoreContactCollection">
            <summary>
            Holds a collection of StoreContact objects
            which are related to this object through the relation FK_StoreContact_ContactType_ContactTypeID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeBase.VendorContactCollection">
            <summary>
            Holds a collection of VendorContact objects
            which are related to this object through the relation FK_VendorContact_ContactType_ContactTypeID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ContactTypeBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ContactTypeBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactTypeBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactTypeBase.ContactTypeEntityData">
            <summary>
            	The data structure representation of the 'ContactType' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactTypeBase.ContactTypeEntityData.ContactTypeId">
            <summary>			
            ContactTypeID : Primary key for ContactType records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ContactType"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactTypeBase.ContactTypeEntityData.Name">
            <summary>
            Name : Contact type description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactTypeBase.ContactTypeEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.ContactTypeEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeBase.ContactTypeEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeBase.ContactTypeEntityData.StoreContactCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _storeContactContactTypeId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeBase.ContactTypeEntityData.VendorContactCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _vendorContactContactTypeId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeBase.ContactTypeEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactType.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityHelper">
            <summary>
            This classes contains utilities functions for the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> instances and collections.
            </summary>
            <remarks>All methods static</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.SerializeBinary(Nettiers.AdventureWorks.Entities.IEntity)">
            <summary>
            Serializes the entity to binary.
            </summary>
            <param name="entity">The Entity to serialize.</param>
            <value>A byte array that contains the serialized entity.</value>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.SerializeBinary(System.Collections.IList)">
            <summary>
            Serializes the entity collection to binary.
            </summary>
            <param name="entityCollection">The Entity collection to serialize.</param>
            <value>A byte array that contains the serialized entity.</value>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.SerializeBinary(Nettiers.AdventureWorks.Entities.IEntity,System.String)">
            <summary>
            Serializes the entity to binary and puts the data into a file.
            </summary>
            <param name="entity">The Entity to serialize.</param>
            <param name="path">The Path to the destination file.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.SerializeBinary(System.Collections.IList,System.String)">
            <summary>
            Serializes the entity collection to binary and puts the data into a file.
            </summary>
            <param name="entityCollection">The Entity collection to serialize.</param>
            <param name="path">The Path to the destination file.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.XmlSerialize``1(``0)">
            <summary>
            serialize an object to xml.
            </summary>
            <param name="item">The item to serialize.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.SerializeXml(Nettiers.AdventureWorks.Entities.IEntity)">
            <summary>
            Serializes the entity to Xml.
            </summary>
            <param name="entity">The Entity to serialize.</param>
            <returns>A string that contains the serialized entity.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.SerializeXml``1(Nettiers.AdventureWorks.Entities.TList{``0})">
            <summary>
            Serializes the <see cref="T:TList{T}"/> of IEntity to XML
            </summary>
            <typeparam name="T">type to return, type must implement IEntity</typeparam>
            <param name="entityCollection">TList of T type to return</param>
            <returns>string of serialized XML</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.SerializeXml(Nettiers.AdventureWorks.Entities.IEntity,System.String)">
            <summary>
            Serializes the entity to xml and puts the data into a file.
            </summary>
            <param name="entity">The Entity to serialize.</param>
            <param name="path">The Path to the destination file.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.SerializeXml``1(Nettiers.AdventureWorks.Entities.TList{``0},System.String)">
            <summary>
            Serializes the entity collection to xml and puts the data into a file.
            </summary>
            <param name="entityCollection">The Entity collection to serialize.</param>
            <param name="path">The Path to the destination file.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.SerializeXml``1(Nettiers.AdventureWorks.Entities.VList{``0})">
            <summary>
            Serializes the <see cref="T:VList{T}"/> of view entities to XML
            </summary>
            <typeparam name="T">type to return</typeparam>
            <param name="entityCollection">VList of T type to return</param>
            <returns>string of serialized XML</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.SerializeXml``1(Nettiers.AdventureWorks.Entities.VList{``0},System.String)">
            <summary>
            Serializes the view collection to xml and puts the data into a file.
            </summary>
            <param name="entityCollection">The Entity View collection to serialize.</param>
            <param name="path">The Path to the destination file.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.DeserializeBinary(System.Byte[])">
            <summary>
            Deserializes the binary data to an object instance.
            </summary>
            <param name="bytes">The byte array that contains binary serialized datas.</param>
            <returns>The deserialized instance</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.XmlDeserialize``1(System.String)">
            <summary>
            deserialize an xml string into an object.
            </summary>
            <param name="xmlData">The XML data.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.DeserializeEntityXml``1(System.String)">
            <summary>
            Deserialize an Entity from an xml string to T
            </summary>
            <typeparam name="T">T where T : IEntity</typeparam>
            <param name="data">string of serialized xml</param>
            <returns>T where T : IEntity</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.DeserializeListXml``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"><see cref="T:TList{T}"/> where T : IEntity, new()</typeparam>
            <param name="data">string of serialized TList of T xml</param>
            <returns><see cref="T:TList{T}"/> where T : IEntity, new()</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.DeserializeXml(System.String,System.Type,System.Xml.XmlReader)">
            <summary>
            Deserializes the XML string to an instance of the specified type.
            </summary>
            <param name="root">The name of the root node.</param>
            <param name="type">The targeted Type.</param>
            <param name="reader">The xmlReader instance that point to the xml data.</param>
            <returns>An instance of the Type class.</returns>		
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.DeserializeVListXml``1(System.String)">
            <summary>
            Deserialize a list of view entity objects from an Xml string
            </summary>
            <typeparam name="T"><see cref="T:VList{T}"/> where T is a view entity class</typeparam>
            <param name="data">string of serialized VList of T xml</param>
            <returns><see cref="T:VList{T}"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.GetByteLength(System.Object)">
            <summary>
            Gets the byte length of the specified object.
            </summary>
            <param name="obj">The object we want the length.</param>
            <returns>The byte length of the object.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.ToString(System.Object)">
            <summary>
            Give a string representation of a object, with use of reflection.
            </summary>
            <param name="o">O.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.Clone``1(``0)">
            <summary>
            Generic method to perform a deep copy of an object
            </summary>
            <typeparam name="T">Type of object being cloned and returned</typeparam>
            <param name="sourceEntity">Source object to be cloned.</param>
            <returns>An object that is a deep copy of the sourceEntity object.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.GetBindableProperties(System.Type)">
            <summary>
            Get the collection of properties that have been marked as Bindable
            </summary>
            <param name="type">The type of the object to get the properties for.</param>
            <returns><see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> of bindable properties.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.GetEnumTextValue(System.Enum)">
            <summary>
             Allows the discovery of an enumeration text value based on the <c>EnumTextValueAttribute</c>
            </summary>
             <param name="e">The enum to get the reader friendly text value for.</param>
             <returns><see cref="T:System.String"/> </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.GetEnumValue(System.String,System.Type)">
            <summary>
             Allows the discovery of an enumeration value based on the <c>EnumTextValueAttribute</c>
            </summary>
             <param name="text">The text of the <c>EnumTextValueAttribute</c>.</param>
             <param name="enumType">The type of the enum to get the value for.</param>
             <returns><see cref="T:System.Object"/> boxed representation of the enum value </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.GetEnumValue``1(System.String)">
            <summary>
             Allows the discovery of an enumeration value based on the <c>Enum.Parse</c>
            </summary>
             <param name="text">The text of a enum value of the specified enumeration.</param>
             <returns>A enum value of the specified enumeration,</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.GetAttribute``1(System.Enum)">
            <summary>
            Gets the first occurrence of the specified type of <see cref="T:System.Attribute"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityHelper.GetPascalSpacedName(System.String)">
            <summary>
            Get the Pascal spaced version of a name.  
            </summary>
            <param name="name">Name to be changed</param>
            <returns>PascalSpaced version of the name</returns>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EnumTextValueAttribute">
            <summary>
             Attribute used to decorate enumerations with reader friendly names
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EnumTextValueAttribute.#ctor(System.String)">
            <summary>
             Allows the creation of a friendly text representation of the enumeration.
            </summary>
             <param name="text">The reader friendly text to decorate the enum.</param>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EnumTextValueAttribute.Text">
            <summary>
             Returns the text representation of the value
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute">
            <summary>
            Provides column metadata information for an entity column enumeration.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.#ctor(System.String,System.Type,System.Data.DbType,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the ColumnEnumAttribute class.
            </summary>
            <param name="name"></param>
            <param name="systemType"></param>
            <param name="dbType"></param>
            <param name="isPrimaryKey"></param>
            <param name="isIdentity"></param>
            <param name="allowDbNull"></param>
            <param name="length"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.#ctor(System.String,System.Type,System.Data.DbType,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ColumnEnumAttribute class.
            </summary>
            <param name="name"></param>
            <param name="systemType"></param>
            <param name="dbType"></param>
            <param name="isPrimaryKey"></param>
            <param name="isIdentity"></param>
            <param name="allowDbNull"></param>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.name">
            <summary>
            The Name member variable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.systemType">
            <summary>
            The SystemType member variable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.dbType">
            <summary>
            The DbType member variable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.isPrimaryKey">
            <summary>
            The IsPrimaryKey member variable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.isIdentity">
            <summary>
            The IsIdentity member variable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.allowDbNull">
            <summary>
            The AllowDbNull member variable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.length">
            <summary>
            The Length member variable.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.Name">
            <summary>
            Gets or sets the Name property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.SystemType">
            <summary>
            Gets or sets the SystemType property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.DbType">
            <summary>
            Gets or sets the DbType property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.IsPrimaryKey">
            <summary>
            Gets or sets the IsPrimaryKey property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.IsIdentity">
            <summary>
            Gets or sets the IsIdentity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.AllowDbNull">
            <summary>
            Gets or sets the AllowDbNull property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ColumnEnumAttribute.Length">
            <summary>
            Gets or sets the Length property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.GenericStateChangedEventArgs`1">
            <summary>
            Provides a generic way to inform interested objects about state change
            Supplies the old value and the new value of the changed state.
            </summary>
            <typeparam name="T">State Object</typeparam>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.GenericStateChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Entities.GenericStateChangedEventArgs`1"/> class.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.GenericStateChangedEventArgs`1.OldValue">
            <summary>
            Gets the old value.
            </summary>
            <value>The old value.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.GenericStateChangedEventArgs`1.NewValue">
            <summary>
            Gets the new value.
            </summary>
            <value>The new value.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingEventArgs.#ctor(Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn)">
            <summary>
             Initalizes a new Instance of the WorkOrderRoutingEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingEventArgs.#ctor(Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the WorkOrderRoutingEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingEventArgs.Column">
            <summary>
             The WorkOrderRoutingColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingEventHandler">
            <summary>
             Define a delegate for all WorkOrderRouting related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WorkOrderRoutingComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingComparer.#ctor(Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:WorkOrderRoutingComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingComparer.Equals(Nettiers.AdventureWorks.Entities.WorkOrderRouting,Nettiers.AdventureWorks.Entities.WorkOrderRouting)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> to compare.</param>
            <param name="b">The second <c>WorkOrderRouting</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingComparer.GetHashCode(Nettiers.AdventureWorks.Entities.WorkOrderRouting)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingComparer.Compare(Nettiers.AdventureWorks.Entities.WorkOrderRouting,Nettiers.AdventureWorks.Entities.WorkOrderRouting)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingKey.#ctor">
            <summary>
            Initializes a new instance of the WorkOrderRoutingKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingKey.#ctor(Nettiers.AdventureWorks.Entities.WorkOrderRoutingBase)">
            <summary>
            Initializes a new instance of the WorkOrderRoutingKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingKey.#ctor(System.Int32,System.Int32,System.Int16)">
            <summary>
            Initializes a new instance of the WorkOrderRoutingKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.WorkOrderRoutingKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingKey.WorkOrderId">
            <summary>
            Gets or sets the WorkOrderId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingKey.ProductId">
            <summary>
            Gets or sets the ProductId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.WorkOrderRoutingKey.OperationSequence">
            <summary>
            Gets or sets the OperationSequence property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn">
            <summary>
            Enumerate the WorkOrderRouting columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn.WorkOrderId">
            <summary>
            WorkOrderId : Primary key. Foreign key to WorkOrder.WorkOrderID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn.ProductId">
            <summary>
            ProductId : Primary key. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn.OperationSequence">
            <summary>
            OperationSequence : Primary key. Indicates the manufacturing process sequence.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn.LocationId">
            <summary>
            LocationId : Manufacturing location where the part is processed. Foreign key to Location.LocationID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn.ScheduledStartDate">
            <summary>
            ScheduledStartDate : Planned manufacturing start date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn.ScheduledEndDate">
            <summary>
            ScheduledEndDate : Planned manufacturing end date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn.ActualStartDate">
            <summary>
            ActualStartDate : Actual start date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn.ActualEndDate">
            <summary>
            ActualEndDate : Actual end date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn.ActualResourceHrs">
            <summary>
            ActualResourceHrs : Number of manufacturing hours used.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn.PlannedCost">
            <summary>
            PlannedCost : Estimated manufacturing cost.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn.ActualCost">
            <summary>
            ActualCost : Actual manufacturing cost.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.WorkOrderRoutingColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ITimestampPk">
            <summary>
            	The data structure representation of the 'TimestampPK' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ITimestampPk.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITimestampPk.TimestampPk">
            <summary>			
            TimestampPK : 
            </summary>
            <remarks>Member of the primary key of the underlying table "TimestampPK"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ITimestampPk.SomeText">
            <summary>
            SomeText : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IStore">
            <summary>
            	The data structure representation of the 'Store' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IStore.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStore.CustomerId">
            <summary>			
            CustomerID : Primary key. Foreign key to Customer.CustomerID.
            </summary>
            <remarks>Member of the primary key of the underlying table "Store"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStore.OriginalCustomerId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStore.Name">
            <summary>
            Name : Name of the store.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStore.SalesPersonId">
            <summary>
            SalesPersonID : ID of the sales person assigned to the customer. Foreign key to SalesPerson.SalesPersonID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStore.Demographics">
            <summary>
            Demographics : Demographic informationg about the store such as the number of employees, annual sales and store type.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStore.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStore.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStore.StoreContactCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _storeContactCustomerId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IStore.ContactIdContactCollection_From_StoreContact">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table contactIdContactCollectionFromStoreContact
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ScrapReasonEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ScrapReasonColumn)">
            <summary>
             Initalizes a new Instance of the ScrapReasonEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ScrapReasonColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ScrapReasonEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonEventArgs.Column">
            <summary>
             The ScrapReasonColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ScrapReasonColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ScrapReasonEventHandler">
            <summary>
             Define a delegate for all ScrapReason related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ScrapReasonComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ScrapReasonComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonComparer.#ctor(Nettiers.AdventureWorks.Entities.ScrapReasonColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ScrapReasonComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonComparer.Equals(Nettiers.AdventureWorks.Entities.ScrapReason,Nettiers.AdventureWorks.Entities.ScrapReason)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> to compare.</param>
            <param name="b">The second <c>ScrapReason</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ScrapReason)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonComparer.Compare(Nettiers.AdventureWorks.Entities.ScrapReason,Nettiers.AdventureWorks.Entities.ScrapReason)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ScrapReasonKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonKey.#ctor">
            <summary>
            Initializes a new instance of the ScrapReasonKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonKey.#ctor(Nettiers.AdventureWorks.Entities.ScrapReasonBase)">
            <summary>
            Initializes a new instance of the ScrapReasonKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonKey.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of the ScrapReasonKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ScrapReasonKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ScrapReasonKey.ScrapReasonId">
            <summary>
            Gets or sets the ScrapReasonId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ScrapReasonColumn">
            <summary>
            Enumerate the ScrapReason columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ScrapReasonColumn.ScrapReasonId">
            <summary>
            ScrapReasonId : Primary key for ScrapReason records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ScrapReasonColumn.Name">
            <summary>
            Name : Failure description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ScrapReasonColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase">
            <summary>
             Cross-reference table mapping product models and illustrations.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.#ctor(System.Int32,System.Int32,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase"/> instance.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.CreateProductModelIllustration(System.Int32,System.Int32,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> instance.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ProductModelIllustration Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.Copy">
            <summary>
              Returns a Typed ProductModelIllustration Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.DeepCopy">
            <summary>
              Returns a Typed ProductModelIllustration Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.GetOriginalEntity">
            <summary>
              Returns a ProductModelIllustration Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.Equals(Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ValueEquals(Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase,Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ProductModelId">
            <summary>
            	Gets or sets the ProductModelId property. 
            	Primary key. Foreign key to ProductModel.ProductModelID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.OriginalProductModelId">
            <summary>
            	Get the original value of the ProductModelID property.
            	Primary key. Foreign key to ProductModel.ProductModelID.
            </summary>
            <remarks>This is the original value of the ProductModelID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.IllustrationId">
            <summary>
            	Gets or sets the IllustrationId property. 
            	Primary key. Foreign key to Illustration.IllustrationID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.OriginalIllustrationId">
            <summary>
            	Get the original value of the IllustrationID property.
            	Primary key. Foreign key to Illustration.IllustrationID.
            </summary>
            <remarks>This is the original value of the IllustrationID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.IllustrationIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/>.
            </summary>
            <value>The source Illustration for IllustrationId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ProductModelIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/>.
            </summary>
            <value>The source ProductModel for ProductModelId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ProductModelIllustrationEntityData">
            <summary>
            	The data structure representation of the 'ProductModelIllustration' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ProductModelIllustrationEntityData.ProductModelId">
            <summary>			
            ProductModelID : Primary key. Foreign key to ProductModel.ProductModelID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductModelIllustration"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ProductModelIllustrationEntityData.OriginalProductModelId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ProductModelIllustrationEntityData.IllustrationId">
            <summary>			
            IllustrationID : Primary key. Foreign key to Illustration.IllustrationID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductModelIllustration"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ProductModelIllustrationEntityData.OriginalIllustrationId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ProductModelIllustrationEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ProductModelIllustrationEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ProductModelIllustrationEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ProductModelIllustrationEntityData.IllustrationIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/>.
            </summary>
            <value>The source Illustration for IllustrationId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ProductModelIllustrationEntityData.ProductModelIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/>.
            </summary>
            <value>The source ProductModel for ProductModelId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase.ProductModelIllustrationEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn)">
            <summary>
             Initalizes a new Instance of the ProductModelIllustrationEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ProductModelIllustrationEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationEventArgs.Column">
            <summary>
             The ProductModelIllustrationColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationEventHandler">
            <summary>
             Define a delegate for all ProductModelIllustration related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ProductModelIllustrationComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationComparer.#ctor(Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductModelIllustrationComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationComparer.Equals(Nettiers.AdventureWorks.Entities.ProductModelIllustration,Nettiers.AdventureWorks.Entities.ProductModelIllustration)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> to compare.</param>
            <param name="b">The second <c>ProductModelIllustration</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ProductModelIllustration)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationComparer.Compare(Nettiers.AdventureWorks.Entities.ProductModelIllustration,Nettiers.AdventureWorks.Entities.ProductModelIllustration)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationKey.#ctor">
            <summary>
            Initializes a new instance of the ProductModelIllustrationKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationKey.#ctor(Nettiers.AdventureWorks.Entities.ProductModelIllustrationBase)">
            <summary>
            Initializes a new instance of the ProductModelIllustrationKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ProductModelIllustrationKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustrationKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationKey.ProductModelId">
            <summary>
            Gets or sets the ProductModelId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelIllustrationKey.IllustrationId">
            <summary>
            Gets or sets the IllustrationId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn">
            <summary>
            Enumerate the ProductModelIllustration columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn.ProductModelId">
            <summary>
            ProductModelId : Primary key. Foreign key to ProductModel.ProductModelID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn.IllustrationId">
            <summary>
            IllustrationId : Primary key. Foreign key to Illustration.IllustrationID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelIllustrationColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Customer">
            <summary>
             Current customer information. Also see the Individual and Store tables.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Customer.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegion">
            <summary>
             Lookup table containing the ISO standard codes for countries and regions.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionBase">
            <summary>
             Lookup table containing the ISO standard codes for countries and regions.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.#ctor(System.String,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionBase"/> instance.
            </summary>
            <param name="_countryRegionCode">ISO standard code for countries and regions.</param>
            <param name="_name">Country or region name.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.CreateCountryRegion(System.String,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> instance.
            </summary>
            <param name="_countryRegionCode">ISO standard code for countries and regions.</param>
            <param name="_name">Country or region name.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed CountryRegion Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.Copy">
            <summary>
              Returns a Typed CountryRegion Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.DeepCopy">
            <summary>
              Returns a Typed CountryRegion Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.CountryRegionColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.GetOriginalEntity">
            <summary>
              Returns a CountryRegion Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.Equals(Nettiers.AdventureWorks.Entities.CountryRegionBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.ValueEquals(Nettiers.AdventureWorks.Entities.CountryRegionBase,Nettiers.AdventureWorks.Entities.CountryRegionBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CountryRegionColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CountryRegionBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CountryRegionColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CountryRegionBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CountryRegionColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CountryRegionBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CountryRegionColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CountryRegionBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CountryRegionBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CountryRegionBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.CountryRegionCode">
            <summary>
            	Gets or sets the CountryRegionCode property. 
            	ISO standard code for countries and regions.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.OriginalCountryRegionCode">
            <summary>
            	Get the original value of the CountryRegionCode property.
            	ISO standard code for countries and regions.
            </summary>
            <remarks>This is the original value of the CountryRegionCode property.</remarks>
            <value>This type is nvarchar</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Country or region name.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.StateProvinceCollection">
            <summary>
            Holds a collection of StateProvince objects
            which are related to this object through the relation FK_StateProvince_CountryRegion_CountryRegionCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.CountryRegionCurrencyCollection">
            <summary>
            Holds a collection of CountryRegionCurrency objects
            which are related to this object through the relation FK_CountryRegionCurrency_CountryRegion_CountryRegionCode
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.CurrencyCodeCurrencyCollection_From_CountryRegionCurrency">
            <summary>
            Holds a collection of CurrencyFromCountryRegionCurrency objects
            which are related to this object through the junction table CountryRegionCurrency
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CountryRegionBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CountryRegionBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionBase.CountryRegionEntityData">
            <summary>
            	The data structure representation of the 'CountryRegion' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionBase.CountryRegionEntityData.CountryRegionCode">
            <summary>			
            CountryRegionCode : ISO standard code for countries and regions.
            </summary>
            <remarks>Member of the primary key of the underlying table "CountryRegion"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionBase.CountryRegionEntityData.OriginalCountryRegionCode">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionBase.CountryRegionEntityData.Name">
            <summary>
            Name : Country or region name.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionBase.CountryRegionEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.CountryRegionEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionBase.CountryRegionEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.CountryRegionEntityData.StateProvinceCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _stateProvinceCountryRegionCode
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.CountryRegionEntityData.CountryRegionCurrencyCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _countryRegionCurrencyCountryRegionCode
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.CountryRegionEntityData.CurrencyCodeCurrencyCollection_From_CountryRegionCurrency">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table currencyCodeCurrencyCollectionFromCountryRegionCurrency
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionBase.CountryRegionEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegion.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase">
            <summary>
             Uses PIVOT to return aggregated sales information for each sales representative.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase._salesPersonId">
            <summary>
            SalesPersonID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase._fullName">
            <summary>
            FullName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase._title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase._salesTerritory">
            <summary>
            SalesTerritory : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase._safeName2002">
            <summary>
            2002 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase._safeName2003">
            <summary>
            2003 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase._safeName2004">
            <summary>
            2004 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase"/> instance.
            </summary>
            <param name="_salesPersonId"></param>
            <param name="_fullName"></param>
            <param name="_title"></param>
            <param name="_salesTerritory"></param>
            <param name="_safeName2002"></param>
            <param name="_safeName2003"></param>
            <param name="_safeName2004"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.CreateVSalesPersonSalesByFiscalYears(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYears"/> instance.
            </summary>
            <param name="_salesPersonId"></param>
            <param name="_fullName"></param>
            <param name="_title"></param>
            <param name="_salesTerritory"></param>
            <param name="_safeName2002"></param>
            <param name="_safeName2003"></param>
            <param name="_safeName2004"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.Copy">
            <summary>
              Returns a Typed VSalesPersonSalesByFiscalYearsBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.Equals(Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.Equals(Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase,Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYears,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.SalesPersonId">
            <summary>
            	Gets or Sets the SalesPersonID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsSalesPersonIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.FullName">
            <summary>
            	Gets or Sets the FullName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.Title">
            <summary>
            	Gets or Sets the Title property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.SalesTerritory">
            <summary>
            	Gets or Sets the SalesTerritory property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.SafeName2002">
            <summary>
            	Gets or Sets the 2002 property. 
            	
            </summary>
            <value>This type is money</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0. It is up to the developer
            to check the value of IsSafeName2002Null() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.SafeName2003">
            <summary>
            	Gets or Sets the 2003 property. 
            	
            </summary>
            <value>This type is money</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0. It is up to the developer
            to check the value of IsSafeName2003Null() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.SafeName2004">
            <summary>
            	Gets or Sets the 2004 property. 
            	
            </summary>
            <value>This type is money</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0. It is up to the developer
            to check the value of IsSafeName2004Null() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsColumn">
            <summary>
            Enumerate the VSalesPersonSalesByFiscalYears columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsColumn.SalesPersonId">
            <summary>
            SalesPersonID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsColumn.FullName">
            <summary>
            FullName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsColumn.Title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsColumn.SalesTerritory">
            <summary>
            SalesTerritory : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsColumn.SafeName2002">
            <summary>
            2002 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsColumn.SafeName2003">
            <summary>
            2003 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYearsColumn.SafeName2004">
            <summary>
            2004 : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase">
            <summary>
             Displays the content from each employement history related element in the xml column Resume in the HumanResources.JobCandidate table. The content has been localized into French, Simplified Chinese and Thai. Some data may not display correctly unless supplemental language support is installed.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase._jobCandidateId">
            <summary>
            JobCandidateID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase._safeNameEmpStartDate">
            <summary>
            Emp.StartDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase._safeNameEmpEndDate">
            <summary>
            Emp.EndDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase._safeNameEmpOrgName">
            <summary>
            Emp.OrgName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase._safeNameEmpJobTitle">
            <summary>
            Emp.JobTitle : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase._safeNameEmpResponsibility">
            <summary>
            Emp.Responsibility : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase._safeNameEmpFunctionCategory">
            <summary>
            Emp.FunctionCategory : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase._safeNameEmpIndustryCategory">
            <summary>
            Emp.IndustryCategory : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase._safeNameEmpLocCountryRegion">
            <summary>
            Emp.Loc.CountryRegion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase._safeNameEmpLocState">
            <summary>
            Emp.Loc.State : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase._safeNameEmpLocCity">
            <summary>
            Emp.Loc.City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.#ctor(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase"/> instance.
            </summary>
            <param name="_jobCandidateId"></param>
            <param name="_safeNameEmpStartDate"></param>
            <param name="_safeNameEmpEndDate"></param>
            <param name="_safeNameEmpOrgName"></param>
            <param name="_safeNameEmpJobTitle"></param>
            <param name="_safeNameEmpResponsibility"></param>
            <param name="_safeNameEmpFunctionCategory"></param>
            <param name="_safeNameEmpIndustryCategory"></param>
            <param name="_safeNameEmpLocCountryRegion"></param>
            <param name="_safeNameEmpLocState"></param>
            <param name="_safeNameEmpLocCity"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.CreateVJobCandidateEmployment(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmployment"/> instance.
            </summary>
            <param name="_jobCandidateId"></param>
            <param name="_safeNameEmpStartDate"></param>
            <param name="_safeNameEmpEndDate"></param>
            <param name="_safeNameEmpOrgName"></param>
            <param name="_safeNameEmpJobTitle"></param>
            <param name="_safeNameEmpResponsibility"></param>
            <param name="_safeNameEmpFunctionCategory"></param>
            <param name="_safeNameEmpIndustryCategory"></param>
            <param name="_safeNameEmpLocCountryRegion"></param>
            <param name="_safeNameEmpLocState"></param>
            <param name="_safeNameEmpLocCity"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.Copy">
            <summary>
              Returns a Typed VJobCandidateEmploymentBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.Equals(Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.Equals(Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase,Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VJobCandidateEmployment,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.JobCandidateId">
            <summary>
            	Gets or Sets the JobCandidateID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.SafeNameEmpStartDate">
            <summary>
            	Gets or Sets the Emp.StartDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsSafeNameEmpStartDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.SafeNameEmpEndDate">
            <summary>
            	Gets or Sets the Emp.EndDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsSafeNameEmpEndDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.SafeNameEmpOrgName">
            <summary>
            	Gets or Sets the Emp.OrgName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.SafeNameEmpJobTitle">
            <summary>
            	Gets or Sets the Emp.JobTitle property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.SafeNameEmpResponsibility">
            <summary>
            	Gets or Sets the Emp.Responsibility property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.SafeNameEmpFunctionCategory">
            <summary>
            	Gets or Sets the Emp.FunctionCategory property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.SafeNameEmpIndustryCategory">
            <summary>
            	Gets or Sets the Emp.IndustryCategory property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.SafeNameEmpLocCountryRegion">
            <summary>
            	Gets or Sets the Emp.Loc.CountryRegion property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.SafeNameEmpLocState">
            <summary>
            	Gets or Sets the Emp.Loc.State property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.SafeNameEmpLocCity">
            <summary>
            	Gets or Sets the Emp.Loc.City property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentColumn">
            <summary>
            Enumerate the VJobCandidateEmployment columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentColumn.JobCandidateId">
            <summary>
            JobCandidateID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentColumn.SafeNameEmpStartDate">
            <summary>
            Emp.StartDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentColumn.SafeNameEmpEndDate">
            <summary>
            Emp.EndDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentColumn.SafeNameEmpOrgName">
            <summary>
            Emp.OrgName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentColumn.SafeNameEmpJobTitle">
            <summary>
            Emp.JobTitle : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentColumn.SafeNameEmpResponsibility">
            <summary>
            Emp.Responsibility : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentColumn.SafeNameEmpFunctionCategory">
            <summary>
            Emp.FunctionCategory : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentColumn.SafeNameEmpIndustryCategory">
            <summary>
            Emp.IndustryCategory : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentColumn.SafeNameEmpLocCountryRegion">
            <summary>
            Emp.Loc.CountryRegion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentColumn.SafeNameEmpLocState">
            <summary>
            Emp.Loc.State : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateEmploymentColumn.SafeNameEmpLocCity">
            <summary>
            Emp.Loc.City : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityCache">
            <summary>
            Entity Cache provides a caching mechanism for entities on a by entity level.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityCache.GenerateConfiguration">
            <summary>
            Generates the configuration.
            </summary>
            <returns>DictionaryConfigurationSource to Configure the cache</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityCache.GenerateDefaultCacheManagerSettings">
            <summary>
            Generates the default cache manager settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityCache.RemoveItem(System.String)">
            <summary>
            Removes the item.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityCache.FlushCacheManager">
            <summary>
            Flushes the cache manager.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityCache.FlushCache">
            <summary>
            Flushes the cache.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityCache.AddCache(System.String,System.Object)">
            <summary>
            Adds the cache.
            </summary>
            <param name="id">The id.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityCache.GetItem``1(System.String)">
            <summary>
            Gets the item.
            </summary>
            <param name="id">The id.</param>
            <returns></returns> 
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityCache.CacheManager">
            <summary>
            Gets the cache manager.
            </summary>
            <value>The cache manager.</value>		
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityCache.ConfigurationFile">
            <summary>
            Gets or sets the configuration file.
            </summary>
            <value>The configuration file.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityCache.CacheManagerFactory">
            <summary>
            Gets or sets the cache manager factory.
            </summary>
            <value>The cache manager factory.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityCache.CacheManagerKey">
            <summary>
            Assigns the Default CacheManagerKey To Be Used.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ISalesPerson">
            <summary>
            	The data structure representation of the 'SalesPerson' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ISalesPerson.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPerson.SalesPersonId">
            <summary>			
            SalesPersonID : Primary key for SalesPerson records.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesPerson"</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPerson.OriginalSalesPersonId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPerson.TerritoryId">
            <summary>
            TerritoryID : Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPerson.SalesQuota">
            <summary>
            SalesQuota : Projected yearly sales.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPerson.Bonus">
            <summary>
            Bonus : Bonus due if quota is met.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPerson.CommissionPct">
            <summary>
            CommissionPct : Commision percent received per sale.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPerson.SalesYtd">
            <summary>
            SalesYTD : Sales total year to date.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPerson.SalesLastYear">
            <summary>
            SalesLastYear : Sales total of previous year.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPerson.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPerson.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPerson.StoreCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _storeSalesPersonId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPerson.SalesPersonQuotaHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesPersonQuotaHistorySalesPersonId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPerson.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderSalesPersonId
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ISalesPerson.SalesTerritoryHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesTerritoryHistorySalesPersonId
            </summary>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductVendorBase">
            <summary>
             Cross-reference table mapping vendors with the products they supply.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendorBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.#ctor(System.Int32,System.Int32,System.Int32,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendorBase"/> instance.
            </summary>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="_averageLeadTime">The average span of time (in days) between placing an order with the vendor and receiving the purchased product.</param>
            <param name="_standardPrice">The vendor's usual selling price.</param>
            <param name="_lastReceiptCost">The selling price when last purchased.</param>
            <param name="_lastReceiptDate">Date the product was last received by the vendor.</param>
            <param name="_minOrderQty">The maximum quantity that should be ordered.</param>
            <param name="_maxOrderQty">The minimum quantity that should be ordered.</param>
            <param name="_onOrderQty">The quantity currently on order.</param>
            <param name="_unitMeasureCode">The product's unit of measure.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.CreateProductVendor(System.Int32,System.Int32,System.Int32,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> instance.
            </summary>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="_averageLeadTime">The average span of time (in days) between placing an order with the vendor and receiving the purchased product.</param>
            <param name="_standardPrice">The vendor's usual selling price.</param>
            <param name="_lastReceiptCost">The selling price when last purchased.</param>
            <param name="_lastReceiptDate">Date the product was last received by the vendor.</param>
            <param name="_minOrderQty">The maximum quantity that should be ordered.</param>
            <param name="_maxOrderQty">The minimum quantity that should be ordered.</param>
            <param name="_onOrderQty">The quantity currently on order.</param>
            <param name="_unitMeasureCode">The product's unit of measure.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ProductVendor Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.Copy">
            <summary>
              Returns a Typed ProductVendor Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.DeepCopy">
            <summary>
              Returns a Typed ProductVendor Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ProductVendorColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.GetOriginalEntity">
            <summary>
              Returns a ProductVendor Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendorBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendorBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.Equals(Nettiers.AdventureWorks.Entities.ProductVendorBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendorBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.ValueEquals(Nettiers.AdventureWorks.Entities.ProductVendorBase,Nettiers.AdventureWorks.Entities.ProductVendorBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendorBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendorBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendorBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductVendorColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductVendorBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendorColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductVendorColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductVendorBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendorColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductVendorColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductVendorBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendorColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductVendorColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductVendorBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendorColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductVendorBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductVendorBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Primary key. Foreign key to Product.ProductID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.OriginalProductId">
            <summary>
            	Get the original value of the ProductID property.
            	Primary key. Foreign key to Product.ProductID.
            </summary>
            <remarks>This is the original value of the ProductID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.VendorId">
            <summary>
            	Gets or sets the VendorId property. 
            	Primary key. Foreign key to Vendor.VendorID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.OriginalVendorId">
            <summary>
            	Get the original value of the VendorID property.
            	Primary key. Foreign key to Vendor.VendorID.
            </summary>
            <remarks>This is the original value of the VendorID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.AverageLeadTime">
            <summary>
            	Gets or sets the AverageLeadTime property. 
            	The average span of time (in days) between placing an order with the vendor and receiving the purchased product.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.StandardPrice">
            <summary>
            	Gets or sets the StandardPrice property. 
            	The vendor's usual selling price.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.LastReceiptCost">
            <summary>
            	Gets or sets the LastReceiptCost property. 
            	The selling price when last purchased.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0. It is up to the developer
            to check the value of IsLastReceiptCostNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.LastReceiptDate">
            <summary>
            	Gets or sets the LastReceiptDate property. 
            	Date the product was last received by the vendor.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsLastReceiptDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.MinOrderQty">
            <summary>
            	Gets or sets the MinOrderQty property. 
            	The maximum quantity that should be ordered.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.MaxOrderQty">
            <summary>
            	Gets or sets the MaxOrderQty property. 
            	The minimum quantity that should be ordered.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.OnOrderQty">
            <summary>
            	Gets or sets the OnOrderQty property. 
            	The quantity currently on order.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsOnOrderQtyNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.UnitMeasureCode">
            <summary>
            	Gets or sets the UnitMeasureCode property. 
            	The product's unit of measure.
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.UnitMeasureCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/>.
            </summary>
            <value>The source UnitMeasure for UnitMeasureCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.VendorIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/>.
            </summary>
            <value>The source Vendor for VendorId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductVendorBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductVendorBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductVendorBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData">
            <summary>
            	The data structure representation of the 'ProductVendor' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.ProductId">
            <summary>			
            ProductID : Primary key. Foreign key to Product.ProductID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductVendor"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.VendorId">
            <summary>			
            VendorID : Primary key. Foreign key to Vendor.VendorID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductVendor"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.OriginalVendorId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.AverageLeadTime">
            <summary>
            AverageLeadTime : The average span of time (in days) between placing an order with the vendor and receiving the purchased product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.StandardPrice">
            <summary>
            StandardPrice : The vendor's usual selling price.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.LastReceiptCost">
            <summary>
            LastReceiptCost : The selling price when last purchased.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.LastReceiptDate">
            <summary>
            LastReceiptDate : Date the product was last received by the vendor.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.MinOrderQty">
            <summary>
            MinOrderQty : The maximum quantity that should be ordered.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.MaxOrderQty">
            <summary>
            MaxOrderQty : The minimum quantity that should be ordered.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.OnOrderQty">
            <summary>
            OnOrderQty : The quantity currently on order.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.UnitMeasureCode">
            <summary>
            UnitMeasureCode : The product's unit of measure.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.UnitMeasureCodeSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/>.
            </summary>
            <value>The source UnitMeasure for UnitMeasureCode.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.VendorIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/>.
            </summary>
            <value>The source Vendor for VendorId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorBase.ProductVendorEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductVendorEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductVendorColumn)">
            <summary>
             Initalizes a new Instance of the ProductVendorEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductVendorColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ProductVendorEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorEventArgs.Column">
            <summary>
             The ProductVendorColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ProductVendorColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductVendorEventHandler">
            <summary>
             Define a delegate for all ProductVendor related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductVendorComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ProductVendorComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorComparer.#ctor(Nettiers.AdventureWorks.Entities.ProductVendorColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductVendorComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorComparer.Equals(Nettiers.AdventureWorks.Entities.ProductVendor,Nettiers.AdventureWorks.Entities.ProductVendor)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> to compare.</param>
            <param name="b">The second <c>ProductVendor</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ProductVendor)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorComparer.Compare(Nettiers.AdventureWorks.Entities.ProductVendor,Nettiers.AdventureWorks.Entities.ProductVendor)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductVendorKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorKey.#ctor">
            <summary>
            Initializes a new instance of the ProductVendorKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorKey.#ctor(Nettiers.AdventureWorks.Entities.ProductVendorBase)">
            <summary>
            Initializes a new instance of the ProductVendorKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ProductVendorKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendorKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorKey.ProductId">
            <summary>
            Gets or sets the ProductId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductVendorKey.VendorId">
            <summary>
            Gets or sets the VendorId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductVendorColumn">
            <summary>
            Enumerate the ProductVendor columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorColumn.ProductId">
            <summary>
            ProductId : Primary key. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorColumn.VendorId">
            <summary>
            VendorId : Primary key. Foreign key to Vendor.VendorID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorColumn.AverageLeadTime">
            <summary>
            AverageLeadTime : The average span of time (in days) between placing an order with the vendor and receiving the purchased product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorColumn.StandardPrice">
            <summary>
            StandardPrice : The vendor's usual selling price.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorColumn.LastReceiptCost">
            <summary>
            LastReceiptCost : The selling price when last purchased.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorColumn.LastReceiptDate">
            <summary>
            LastReceiptDate : Date the product was last received by the vendor.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorColumn.MinOrderQty">
            <summary>
            MinOrderQty : The maximum quantity that should be ordered.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorColumn.MaxOrderQty">
            <summary>
            MaxOrderQty : The minimum quantity that should be ordered.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorColumn.OnOrderQty">
            <summary>
            OnOrderQty : The quantity currently on order.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorColumn.UnitMeasureCode">
            <summary>
            UnitMeasureCode : The product's unit of measure.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductVendorColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductReview">
            <summary>
             Customer reviews of products they have purchased.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductReview.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration">
            <summary>
             Cross-reference table mapping product models and illustrations.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelIllustration.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductCostHistory">
            <summary>
             Changes in the cost of a product over time.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductCostHistory.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Location">
            <summary>
             Product inventory and manufacturing locations.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Location.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CreditCard">
            <summary>
             Customer credit card information.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CreditCard.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase">
            <summary>
             Joins StateProvince table with CountryRegion table.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase._stateProvinceId">
            <summary>
            StateProvinceID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase._stateProvinceCode">
            <summary>
            StateProvinceCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase._isOnlyStateProvinceFlag">
            <summary>
            IsOnlyStateProvinceFlag : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase._stateProvinceName">
            <summary>
            StateProvinceName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase._territoryId">
            <summary>
            TerritoryID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase._countryRegionCode">
            <summary>
            CountryRegionCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase._countryRegionName">
            <summary>
            CountryRegionName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.#ctor(System.Int32,System.String,System.Boolean,System.String,System.Int32,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase"/> instance.
            </summary>
            <param name="_stateProvinceId"></param>
            <param name="_stateProvinceCode"></param>
            <param name="_isOnlyStateProvinceFlag"></param>
            <param name="_stateProvinceName"></param>
            <param name="_territoryId"></param>
            <param name="_countryRegionCode"></param>
            <param name="_countryRegionName"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.CreateVStateProvinceCountryRegion(System.Int32,System.String,System.Boolean,System.String,System.Int32,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegion"/> instance.
            </summary>
            <param name="_stateProvinceId"></param>
            <param name="_stateProvinceCode"></param>
            <param name="_isOnlyStateProvinceFlag"></param>
            <param name="_stateProvinceName"></param>
            <param name="_territoryId"></param>
            <param name="_countryRegionCode"></param>
            <param name="_countryRegionName"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.Copy">
            <summary>
              Returns a Typed VStateProvinceCountryRegionBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.Equals(Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.Equals(Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase,Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegion,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.StateProvinceId">
            <summary>
            	Gets or Sets the StateProvinceID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.StateProvinceCode">
            <summary>
            	Gets or Sets the StateProvinceCode property. 
            	
            </summary>
            <value>This type is nchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.IsOnlyStateProvinceFlag">
            <summary>
            	Gets or Sets the IsOnlyStateProvinceFlag property. 
            	
            </summary>
            <value>This type is bit</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.StateProvinceName">
            <summary>
            	Gets or Sets the StateProvinceName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.TerritoryId">
            <summary>
            	Gets or Sets the TerritoryID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.CountryRegionCode">
            <summary>
            	Gets or Sets the CountryRegionCode property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.CountryRegionName">
            <summary>
            	Gets or Sets the CountryRegionName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionColumn">
            <summary>
            Enumerate the VStateProvinceCountryRegion columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionColumn.StateProvinceId">
            <summary>
            StateProvinceID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionColumn.StateProvinceCode">
            <summary>
            StateProvinceCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionColumn.IsOnlyStateProvinceFlag">
            <summary>
            IsOnlyStateProvinceFlag : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionColumn.StateProvinceName">
            <summary>
            StateProvinceName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionColumn.TerritoryId">
            <summary>
            TerritoryID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionColumn.CountryRegionCode">
            <summary>
            CountryRegionCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegionColumn.CountryRegionName">
            <summary>
            CountryRegionName : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYears">
            <summary>
             Uses PIVOT to return aggregated sales information for each sales representative.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYears.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYears"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescription">
            <summary>
             Displays the content from each element in the xml column CatalogDescription for each product in the Production.ProductModel table that has catalog data.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase">
            <summary>
             Displays the content from each element in the xml column CatalogDescription for each product in the Production.ProductModel table that has catalog data.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._productModelId">
            <summary>
            ProductModelID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._name">
            <summary>
            Name : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._summary">
            <summary>
            Summary : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._manufacturer">
            <summary>
            Manufacturer : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._copyright">
            <summary>
            Copyright : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._productUrl">
            <summary>
            ProductURL : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._warrantyPeriod">
            <summary>
            WarrantyPeriod : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._warrantyDescription">
            <summary>
            WarrantyDescription : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._noOfYears">
            <summary>
            NoOfYears : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._maintenanceDescription">
            <summary>
            MaintenanceDescription : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._wheel">
            <summary>
            Wheel : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._saddle">
            <summary>
            Saddle : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._pedal">
            <summary>
            Pedal : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._bikeFrame">
            <summary>
            BikeFrame : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._crankset">
            <summary>
            Crankset : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._pictureAngle">
            <summary>
            PictureAngle : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._pictureSize">
            <summary>
            PictureSize : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._productPhotoId">
            <summary>
            ProductPhotoID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._material">
            <summary>
            Material : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._color">
            <summary>
            Color : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._productLine">
            <summary>
            ProductLine : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._style">
            <summary>
            Style : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._riderExperience">
            <summary>
            RiderExperience : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._rowguid">
            <summary>
            rowguid : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._modifiedDate">
            <summary>
            ModifiedDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase"/> instance.
            </summary>
            <param name="_productModelId"></param>
            <param name="_name"></param>
            <param name="_summary"></param>
            <param name="_manufacturer"></param>
            <param name="_copyright"></param>
            <param name="_productUrl"></param>
            <param name="_warrantyPeriod"></param>
            <param name="_warrantyDescription"></param>
            <param name="_noOfYears"></param>
            <param name="_maintenanceDescription"></param>
            <param name="_wheel"></param>
            <param name="_saddle"></param>
            <param name="_pedal"></param>
            <param name="_bikeFrame"></param>
            <param name="_crankset"></param>
            <param name="_pictureAngle"></param>
            <param name="_pictureSize"></param>
            <param name="_productPhotoId"></param>
            <param name="_material"></param>
            <param name="_color"></param>
            <param name="_productLine"></param>
            <param name="_style"></param>
            <param name="_riderExperience"></param>
            <param name="_rowguid"></param>
            <param name="_modifiedDate"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.CreateVProductModelCatalogDescription(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescription"/> instance.
            </summary>
            <param name="_productModelId"></param>
            <param name="_name"></param>
            <param name="_summary"></param>
            <param name="_manufacturer"></param>
            <param name="_copyright"></param>
            <param name="_productUrl"></param>
            <param name="_warrantyPeriod"></param>
            <param name="_warrantyDescription"></param>
            <param name="_noOfYears"></param>
            <param name="_maintenanceDescription"></param>
            <param name="_wheel"></param>
            <param name="_saddle"></param>
            <param name="_pedal"></param>
            <param name="_bikeFrame"></param>
            <param name="_crankset"></param>
            <param name="_pictureAngle"></param>
            <param name="_pictureSize"></param>
            <param name="_productPhotoId"></param>
            <param name="_material"></param>
            <param name="_color"></param>
            <param name="_productLine"></param>
            <param name="_style"></param>
            <param name="_riderExperience"></param>
            <param name="_rowguid"></param>
            <param name="_modifiedDate"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Copy">
            <summary>
              Returns a Typed VProductModelCatalogDescriptionBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Equals(Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Equals(Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase,Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VProductModelCatalogDescription,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.ProductModelId">
            <summary>
            	Gets or Sets the ProductModelID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Name">
            <summary>
            	Gets or Sets the Name property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Summary">
            <summary>
            	Gets or Sets the Summary property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Manufacturer">
            <summary>
            	Gets or Sets the Manufacturer property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Copyright">
            <summary>
            	Gets or Sets the Copyright property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.ProductUrl">
            <summary>
            	Gets or Sets the ProductURL property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.WarrantyPeriod">
            <summary>
            	Gets or Sets the WarrantyPeriod property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.WarrantyDescription">
            <summary>
            	Gets or Sets the WarrantyDescription property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.NoOfYears">
            <summary>
            	Gets or Sets the NoOfYears property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.MaintenanceDescription">
            <summary>
            	Gets or Sets the MaintenanceDescription property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Wheel">
            <summary>
            	Gets or Sets the Wheel property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Saddle">
            <summary>
            	Gets or Sets the Saddle property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Pedal">
            <summary>
            	Gets or Sets the Pedal property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.BikeFrame">
            <summary>
            	Gets or Sets the BikeFrame property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Crankset">
            <summary>
            	Gets or Sets the Crankset property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.PictureAngle">
            <summary>
            	Gets or Sets the PictureAngle property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.PictureSize">
            <summary>
            	Gets or Sets the PictureSize property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.ProductPhotoId">
            <summary>
            	Gets or Sets the ProductPhotoID property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Material">
            <summary>
            	Gets or Sets the Material property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Color">
            <summary>
            	Gets or Sets the Color property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.ProductLine">
            <summary>
            	Gets or Sets the ProductLine property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Style">
            <summary>
            	Gets or Sets the Style property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.RiderExperience">
            <summary>
            	Gets or Sets the RiderExperience property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Rowguid">
            <summary>
            	Gets or Sets the rowguid property. 
            	
            </summary>
            <value>This type is uniqueidentifier</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.ModifiedDate">
            <summary>
            	Gets or Sets the ModifiedDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescription.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescription"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducation">
            <summary>
             Displays the content from each education related element in the xml column Resume in the HumanResources.JobCandidate table. The content has been localized into French, Simplified Chinese and Thai. Some data may not display correctly unless supplemental language support is installed.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEducation.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducation"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase">
            <summary>
             Transactions for previous years.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.String,System.Int32,System.Decimal,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase"/> instance.
            </summary>
            <param name="_transactionId">Primary key for TransactionHistoryArchive records.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <param name="_transactionDate">Date and time of the transaction.</param>
            <param name="_transactionType">W = Work Order, S = Sales Order, P = Purchase Order</param>
            <param name="_quantity">Product quantity.</param>
            <param name="_actualCost">Product cost.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.CreateTransactionHistoryArchive(System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.String,System.Int32,System.Decimal,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> instance.
            </summary>
            <param name="_transactionId">Primary key for TransactionHistoryArchive records.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <param name="_transactionDate">Date and time of the transaction.</param>
            <param name="_transactionType">W = Work Order, S = Sales Order, P = Purchase Order</param>
            <param name="_quantity">Product quantity.</param>
            <param name="_actualCost">Product cost.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed TransactionHistoryArchive Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.Copy">
            <summary>
              Returns a Typed TransactionHistoryArchive Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.DeepCopy">
            <summary>
              Returns a Typed TransactionHistoryArchive Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.GetOriginalEntity">
            <summary>
              Returns a TransactionHistoryArchive Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.Equals(Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.ValueEquals(Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase,Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionId">
            <summary>
            	Gets or sets the TransactionId property. 
            	Primary key for TransactionHistoryArchive records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.OriginalTransactionId">
            <summary>
            	Get the original value of the TransactionID property.
            	Primary key for TransactionHistoryArchive records.
            </summary>
            <remarks>This is the original value of the TransactionID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Product identification number. Foreign key to Product.ProductID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.ReferenceOrderId">
            <summary>
            	Gets or sets the ReferenceOrderId property. 
            	Purchase order, sales order, or work order identification number.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.ReferenceOrderLineId">
            <summary>
            	Gets or sets the ReferenceOrderLineId property. 
            	Line number associated with the purchase order, sales order, or work order.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionDate">
            <summary>
            	Gets or sets the TransactionDate property. 
            	Date and time of the transaction.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionType">
            <summary>
            	Gets or sets the TransactionType property. 
            	W = Work Order, S = Sales Order, P = Purchase Order
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.Quantity">
            <summary>
            	Gets or sets the Quantity property. 
            	Product quantity.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.ActualCost">
            <summary>
            	Gets or sets the ActualCost property. 
            	Product cost.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionHistoryArchiveEntityData">
            <summary>
            	The data structure representation of the 'TransactionHistoryArchive' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionHistoryArchiveEntityData.TransactionId">
            <summary>			
            TransactionID : Primary key for TransactionHistoryArchive records.
            </summary>
            <remarks>Member of the primary key of the underlying table "TransactionHistoryArchive"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionHistoryArchiveEntityData.OriginalTransactionId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionHistoryArchiveEntityData.ProductId">
            <summary>
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionHistoryArchiveEntityData.ReferenceOrderId">
            <summary>
            ReferenceOrderID : Purchase order, sales order, or work order identification number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionHistoryArchiveEntityData.ReferenceOrderLineId">
            <summary>
            ReferenceOrderLineID : Line number associated with the purchase order, sales order, or work order.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionHistoryArchiveEntityData.TransactionDate">
            <summary>
            TransactionDate : Date and time of the transaction.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionHistoryArchiveEntityData.TransactionType">
            <summary>
            TransactionType : W = Work Order, S = Sales Order, P = Purchase Order
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionHistoryArchiveEntityData.Quantity">
            <summary>
            Quantity : Product quantity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionHistoryArchiveEntityData.ActualCost">
            <summary>
            ActualCost : Product cost.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionHistoryArchiveEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionHistoryArchiveEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionHistoryArchiveEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase.TransactionHistoryArchiveEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveEventArgs.#ctor(Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn)">
            <summary>
             Initalizes a new Instance of the TransactionHistoryArchiveEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveEventArgs.#ctor(Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the TransactionHistoryArchiveEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveEventArgs.Column">
            <summary>
             The TransactionHistoryArchiveColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveEventHandler">
            <summary>
             Define a delegate for all TransactionHistoryArchive related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TransactionHistoryArchiveComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveComparer.#ctor(Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:TransactionHistoryArchiveComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveComparer.Equals(Nettiers.AdventureWorks.Entities.TransactionHistoryArchive,Nettiers.AdventureWorks.Entities.TransactionHistoryArchive)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> to compare.</param>
            <param name="b">The second <c>TransactionHistoryArchive</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveComparer.GetHashCode(Nettiers.AdventureWorks.Entities.TransactionHistoryArchive)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveComparer.Compare(Nettiers.AdventureWorks.Entities.TransactionHistoryArchive,Nettiers.AdventureWorks.Entities.TransactionHistoryArchive)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveKey.#ctor">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveKey.#ctor(Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveBase)">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveKey.TransactionId">
            <summary>
            Gets or sets the TransactionId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn">
            <summary>
            Enumerate the TransactionHistoryArchive columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn.TransactionId">
            <summary>
            TransactionId : Primary key for TransactionHistoryArchive records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn.ProductId">
            <summary>
            ProductId : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn.ReferenceOrderId">
            <summary>
            ReferenceOrderId : Purchase order, sales order, or work order identification number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn.ReferenceOrderLineId">
            <summary>
            ReferenceOrderLineId : Line number associated with the purchase order, sales order, or work order.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn.TransactionDate">
            <summary>
            TransactionDate : Date and time of the transaction.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn.TransactionType">
            <summary>
            TransactionType : W = Work Order, S = Sales Order, P = Purchase Order
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn.Quantity">
            <summary>
            Quantity : Product quantity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn.ActualCost">
            <summary>
            ActualCost : Product cost.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StateProvinceEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceEventArgs.#ctor(Nettiers.AdventureWorks.Entities.StateProvinceColumn)">
            <summary>
             Initalizes a new Instance of the StateProvinceEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceEventArgs.#ctor(Nettiers.AdventureWorks.Entities.StateProvinceColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the StateProvinceEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceEventArgs.Column">
            <summary>
             The StateProvinceColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.StateProvinceColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StateProvinceEventHandler">
            <summary>
             Define a delegate for all StateProvince related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StateProvinceComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StateProvinceComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceComparer.#ctor(Nettiers.AdventureWorks.Entities.StateProvinceColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:StateProvinceComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceComparer.Equals(Nettiers.AdventureWorks.Entities.StateProvince,Nettiers.AdventureWorks.Entities.StateProvince)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> to compare.</param>
            <param name="b">The second <c>StateProvince</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceComparer.GetHashCode(Nettiers.AdventureWorks.Entities.StateProvince)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceComparer.Compare(Nettiers.AdventureWorks.Entities.StateProvince,Nettiers.AdventureWorks.Entities.StateProvince)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StateProvinceKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceKey.#ctor">
            <summary>
            Initializes a new instance of the StateProvinceKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceKey.#ctor(Nettiers.AdventureWorks.Entities.StateProvinceBase)">
            <summary>
            Initializes a new instance of the StateProvinceKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the StateProvinceKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StateProvinceKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StateProvinceKey.StateProvinceId">
            <summary>
            Gets or sets the StateProvinceId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StateProvinceColumn">
            <summary>
            Enumerate the StateProvince columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceColumn.StateProvinceId">
            <summary>
            StateProvinceId : Primary key for StateProvince records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceColumn.StateProvinceCode">
            <summary>
            StateProvinceCode : ISO standard state or province code.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceColumn.CountryRegionCode">
            <summary>
            CountryRegionCode : ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceColumn.IsOnlyStateProvinceFlag">
            <summary>
            IsOnlyStateProvinceFlag : 0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceColumn.Name">
            <summary>
            Name : State or province description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceColumn.TerritoryId">
            <summary>
            TerritoryId : ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StateProvinceColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonBase">
            <summary>
             Sales representative current information.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.#ctor(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonBase"/> instance.
            </summary>
            <param name="_salesPersonId">Primary key for SalesPerson records.</param>
            <param name="_territoryId">Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="_salesQuota">Projected yearly sales.</param>
            <param name="_bonus">Bonus due if quota is met.</param>
            <param name="_commissionPct">Commision percent received per sale.</param>
            <param name="_salesYtd">Sales total year to date.</param>
            <param name="_salesLastYear">Sales total of previous year.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.CreateSalesPerson(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> instance.
            </summary>
            <param name="_salesPersonId">Primary key for SalesPerson records.</param>
            <param name="_territoryId">Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="_salesQuota">Projected yearly sales.</param>
            <param name="_bonus">Bonus due if quota is met.</param>
            <param name="_commissionPct">Commision percent received per sale.</param>
            <param name="_salesYtd">Sales total year to date.</param>
            <param name="_salesLastYear">Sales total of previous year.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed SalesPerson Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.Copy">
            <summary>
              Returns a Typed SalesPerson Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.DeepCopy">
            <summary>
              Returns a Typed SalesPerson Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.SalesPersonColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.GetOriginalEntity">
            <summary>
              Returns a SalesPerson Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.Equals(Nettiers.AdventureWorks.Entities.SalesPersonBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.ValueEquals(Nettiers.AdventureWorks.Entities.SalesPersonBase,Nettiers.AdventureWorks.Entities.SalesPersonBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesPersonColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesPersonBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesPersonColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesPersonBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesPersonColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesPersonBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesPersonColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesPersonBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesPersonBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesPersonBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonId">
            <summary>
            	Gets or sets the SalesPersonId property. 
            	Primary key for SalesPerson records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.OriginalSalesPersonId">
            <summary>
            	Get the original value of the SalesPersonID property.
            	Primary key for SalesPerson records.
            </summary>
            <remarks>This is the original value of the SalesPersonID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.TerritoryId">
            <summary>
            	Gets or sets the TerritoryId property. 
            	Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsTerritoryIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesQuota">
            <summary>
            	Gets or sets the SalesQuota property. 
            	Projected yearly sales.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0. It is up to the developer
            to check the value of IsSalesQuotaNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.Bonus">
            <summary>
            	Gets or sets the Bonus property. 
            	Bonus due if quota is met.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.CommissionPct">
            <summary>
            	Gets or sets the CommissionPct property. 
            	Commision percent received per sale.
            </summary>
            <value>This type is smallmoney.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesYtd">
            <summary>
            	Gets or sets the SalesYtd property. 
            	Sales total year to date.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesLastYear">
            <summary>
            	Gets or sets the SalesLastYear property. 
            	Sales total of previous year.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/>.
            </summary>
            <value>The source Employee for SalesPersonId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.TerritoryIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/>.
            </summary>
            <value>The source SalesTerritory for TerritoryId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.StoreCollection">
            <summary>
            Holds a collection of Store objects
            which are related to this object through the relation FK_Store_SalesPerson_SalesPersonID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonQuotaHistoryCollection">
            <summary>
            Holds a collection of SalesPersonQuotaHistory objects
            which are related to this object through the relation FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of SalesOrderHeader objects
            which are related to this object through the relation FK_SalesOrderHeader_SalesPerson_SalesPersonID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesTerritoryHistoryCollection">
            <summary>
            Holds a collection of SalesTerritoryHistory objects
            which are related to this object through the relation FK_SalesTerritoryHistory_SalesPerson_SalesPersonID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesPersonBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesPersonBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData">
            <summary>
            	The data structure representation of the 'SalesPerson' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.SalesPersonId">
            <summary>			
            SalesPersonID : Primary key for SalesPerson records.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesPerson"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.OriginalSalesPersonId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.TerritoryId">
            <summary>
            TerritoryID : Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.SalesQuota">
            <summary>
            SalesQuota : Projected yearly sales.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.Bonus">
            <summary>
            Bonus : Bonus due if quota is met.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.CommissionPct">
            <summary>
            CommissionPct : Commision percent received per sale.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.SalesYtd">
            <summary>
            SalesYTD : Sales total year to date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.SalesLastYear">
            <summary>
            SalesLastYear : Sales total of previous year.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.SalesPersonIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/>.
            </summary>
            <value>The source Employee for SalesPersonId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.TerritoryIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/>.
            </summary>
            <value>The source SalesTerritory for TerritoryId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.StoreCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _storeSalesPersonId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.SalesPersonQuotaHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesPersonQuotaHistorySalesPersonId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.SalesOrderHeaderCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesOrderHeaderSalesPersonId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.SalesTerritoryHistoryCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _salesTerritoryHistorySalesPersonId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonBase.SalesPersonEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesPersonColumn)">
            <summary>
             Initalizes a new Instance of the SalesPersonEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesPersonColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the SalesPersonEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonEventArgs.Column">
            <summary>
             The SalesPersonColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.SalesPersonColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonEventHandler">
            <summary>
             Define a delegate for all SalesPerson related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SalesPersonComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonComparer.#ctor(Nettiers.AdventureWorks.Entities.SalesPersonColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:SalesPersonComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonComparer.Equals(Nettiers.AdventureWorks.Entities.SalesPerson,Nettiers.AdventureWorks.Entities.SalesPerson)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> to compare.</param>
            <param name="b">The second <c>SalesPerson</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonComparer.GetHashCode(Nettiers.AdventureWorks.Entities.SalesPerson)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonComparer.Compare(Nettiers.AdventureWorks.Entities.SalesPerson,Nettiers.AdventureWorks.Entities.SalesPerson)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonKey.#ctor">
            <summary>
            Initializes a new instance of the SalesPersonKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonKey.#ctor(Nettiers.AdventureWorks.Entities.SalesPersonBase)">
            <summary>
            Initializes a new instance of the SalesPersonKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the SalesPersonKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonKey.SalesPersonId">
            <summary>
            Gets or sets the SalesPersonId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonColumn">
            <summary>
            Enumerate the SalesPerson columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonColumn.SalesPersonId">
            <summary>
            SalesPersonId : Primary key for SalesPerson records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonColumn.TerritoryId">
            <summary>
            TerritoryId : Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonColumn.SalesQuota">
            <summary>
            SalesQuota : Projected yearly sales.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonColumn.Bonus">
            <summary>
            Bonus : Bonus due if quota is met.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonColumn.CommissionPct">
            <summary>
            CommissionPct : Commision percent received per sale.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonColumn.SalesYtd">
            <summary>
            SalesYtd : Sales total year to date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonColumn.SalesLastYear">
            <summary>
            SalesLastYear : Sales total of previous year.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductVendor">
            <summary>
             Cross-reference table mapping vendors with the products they supply.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductVendor.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto">
            <summary>
             Cross-reference table mapping products and product photos.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase">
            <summary>
             Cross-reference table mapping products and product photos.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.#ctor(System.Int32,System.Int32,System.Boolean,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <param name="_primary">0 = Photo is not the principal image. 1 = Photo is the principal image.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.CreateProductProductPhoto(System.Int32,System.Int32,System.Boolean,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> instance.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <param name="_primary">0 = Photo is not the principal image. 1 = Photo is the principal image.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ProductProductPhoto Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.Copy">
            <summary>
              Returns a Typed ProductProductPhoto Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.DeepCopy">
            <summary>
              Returns a Typed ProductProductPhoto Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.GetOriginalEntity">
            <summary>
              Returns a ProductProductPhoto Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.Equals(Nettiers.AdventureWorks.Entities.ProductProductPhotoBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ValueEquals(Nettiers.AdventureWorks.Entities.ProductProductPhotoBase,Nettiers.AdventureWorks.Entities.ProductProductPhotoBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductId">
            <summary>
            	Gets or sets the ProductId property. 
            	Product identification number. Foreign key to Product.ProductID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.OriginalProductId">
            <summary>
            	Get the original value of the ProductID property.
            	Product identification number. Foreign key to Product.ProductID.
            </summary>
            <remarks>This is the original value of the ProductID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductPhotoId">
            <summary>
            	Gets or sets the ProductPhotoId property. 
            	Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.OriginalProductPhotoId">
            <summary>
            	Get the original value of the ProductPhotoID property.
            	Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.
            </summary>
            <remarks>This is the original value of the ProductPhotoID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.Primary">
            <summary>
            	Gets or sets the Primary property. 
            	0 = Photo is not the principal image. 1 = Photo is the principal image.
            </summary>
            <value>This type is bit.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductPhotoIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/>.
            </summary>
            <value>The source ProductPhoto for ProductPhotoId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductProductPhotoEntityData">
            <summary>
            	The data structure representation of the 'ProductProductPhoto' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductProductPhotoEntityData.ProductId">
            <summary>			
            ProductID : Product identification number. Foreign key to Product.ProductID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductProductPhoto"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductProductPhotoEntityData.OriginalProductId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductProductPhotoEntityData.ProductPhotoId">
            <summary>			
            ProductPhotoID : Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductProductPhoto"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductProductPhotoEntityData.OriginalProductPhotoId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductProductPhotoEntityData.Primary">
            <summary>
            Primary : 0 = Photo is not the principal image. 1 = Photo is the principal image.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductProductPhotoEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductProductPhotoEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductProductPhotoEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductProductPhotoEntityData.ProductIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Product"/>.
            </summary>
            <value>The source Product for ProductId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductProductPhotoEntityData.ProductPhotoIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/>.
            </summary>
            <value>The source ProductPhoto for ProductPhotoId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoBase.ProductProductPhotoEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhoto.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductPhotoBase">
            <summary>
             Product images.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhotoBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.#ctor(System.Byte[],System.String,System.Byte[],System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhotoBase"/> instance.
            </summary>
            <param name="_thumbNailPhoto">Small image of the product.</param>
            <param name="_thumbnailPhotoFileName">Small image file name.</param>
            <param name="_largePhoto">Large image of the product.</param>
            <param name="_largePhotoFileName">Large image file name.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.CreateProductPhoto(System.Byte[],System.String,System.Byte[],System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> instance.
            </summary>
            <param name="_thumbNailPhoto">Small image of the product.</param>
            <param name="_thumbnailPhotoFileName">Small image file name.</param>
            <param name="_largePhoto">Large image of the product.</param>
            <param name="_largePhotoFileName">Large image file name.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ProductPhoto Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.Copy">
            <summary>
              Returns a Typed ProductPhoto Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.DeepCopy">
            <summary>
              Returns a Typed ProductPhoto Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ProductPhotoColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.GetOriginalEntity">
            <summary>
              Returns a ProductPhoto Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhotoBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhotoBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.Equals(Nettiers.AdventureWorks.Entities.ProductPhotoBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhotoBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ValueEquals(Nettiers.AdventureWorks.Entities.ProductPhotoBase,Nettiers.AdventureWorks.Entities.ProductPhotoBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhotoBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhotoBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhotoBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductPhotoColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhotoColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductPhotoColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhotoColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductPhotoColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhotoColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductPhotoColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhotoColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ProductPhotoId">
            <summary>
            	Gets or sets the ProductPhotoId property. 
            	Primary key for ProductPhoto records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ThumbNailPhoto">
            <summary>
            	Gets or sets the ThumbNailPhoto property. 
            	Small image of the product.
            </summary>
            <value>This type is varbinary.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ThumbnailPhotoFileName">
            <summary>
            	Gets or sets the ThumbnailPhotoFileName property. 
            	Small image file name.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.LargePhoto">
            <summary>
            	Gets or sets the LargePhoto property. 
            	Large image of the product.
            </summary>
            <value>This type is varbinary.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.LargePhotoFileName">
            <summary>
            	Gets or sets the LargePhotoFileName property. 
            	Large image file name.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ProductIdProductCollection_From_ProductProductPhoto">
            <summary>
            Holds a collection of ProductFromProductProductPhoto objects
            which are related to this object through the junction table ProductProductPhoto
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ProductProductPhotoCollection">
            <summary>
            Holds a collection of ProductProductPhoto objects
            which are related to this object through the relation FK_ProductProductPhoto_ProductPhoto_ProductPhotoID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductPhotoBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductPhotoBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductPhotoBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ProductPhotoEntityData">
            <summary>
            	The data structure representation of the 'ProductPhoto' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ProductPhotoEntityData.ProductPhotoId">
            <summary>			
            ProductPhotoID : Primary key for ProductPhoto records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductPhoto"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ProductPhotoEntityData.ThumbNailPhoto">
            <summary>
            ThumbNailPhoto : Small image of the product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ProductPhotoEntityData.ThumbnailPhotoFileName">
            <summary>
            ThumbnailPhotoFileName : Small image file name.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ProductPhotoEntityData.LargePhoto">
            <summary>
            LargePhoto : Large image of the product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ProductPhotoEntityData.LargePhotoFileName">
            <summary>
            LargePhotoFileName : Large image file name.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ProductPhotoEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ProductPhotoEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ProductPhotoEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ProductPhotoEntityData.ProductIdProductCollection_From_ProductProductPhoto">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productIdProductCollectionFromProductProductPhoto
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ProductPhotoEntityData.ProductProductPhotoCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productProductPhotoProductPhotoId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoBase.ProductPhotoEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductPhotoEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductPhotoColumn)">
            <summary>
             Initalizes a new Instance of the ProductPhotoEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductPhotoColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ProductPhotoEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoEventArgs.Column">
            <summary>
             The ProductPhotoColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ProductPhotoColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductPhotoEventHandler">
            <summary>
             Define a delegate for all ProductPhoto related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductPhotoComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ProductPhotoComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoComparer.#ctor(Nettiers.AdventureWorks.Entities.ProductPhotoColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductPhotoComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoComparer.Equals(Nettiers.AdventureWorks.Entities.ProductPhoto,Nettiers.AdventureWorks.Entities.ProductPhoto)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> to compare.</param>
            <param name="b">The second <c>ProductPhoto</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ProductPhoto)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoComparer.Compare(Nettiers.AdventureWorks.Entities.ProductPhoto,Nettiers.AdventureWorks.Entities.ProductPhoto)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductPhotoKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoKey.#ctor">
            <summary>
            Initializes a new instance of the ProductPhotoKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoKey.#ctor(Nettiers.AdventureWorks.Entities.ProductPhotoBase)">
            <summary>
            Initializes a new instance of the ProductPhotoKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ProductPhotoKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhotoKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductPhotoKey.ProductPhotoId">
            <summary>
            Gets or sets the ProductPhotoId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductPhotoColumn">
            <summary>
            Enumerate the ProductPhoto columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoColumn.ProductPhotoId">
            <summary>
            ProductPhotoId : Primary key for ProductPhoto records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoColumn.ThumbNailPhoto">
            <summary>
            ThumbNailPhoto : Small image of the product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoColumn.ThumbnailPhotoFileName">
            <summary>
            ThumbnailPhotoFileName : Small image file name.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoColumn.LargePhoto">
            <summary>
            LargePhoto : Large image of the product.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoColumn.LargePhotoFileName">
            <summary>
            LargePhotoFileName : Large image file name.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductPhotoColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.BillOfMaterials">
            <summary>
             Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.BillOfMaterials.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn">
            <summary>
            Enumerate the VProductModelCatalogDescription columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.ProductModelId">
            <summary>
            ProductModelID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.Name">
            <summary>
            Name : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.Summary">
            <summary>
            Summary : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.Manufacturer">
            <summary>
            Manufacturer : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.Copyright">
            <summary>
            Copyright : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.ProductUrl">
            <summary>
            ProductURL : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.WarrantyPeriod">
            <summary>
            WarrantyPeriod : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.WarrantyDescription">
            <summary>
            WarrantyDescription : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.NoOfYears">
            <summary>
            NoOfYears : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.MaintenanceDescription">
            <summary>
            MaintenanceDescription : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.Wheel">
            <summary>
            Wheel : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.Saddle">
            <summary>
            Saddle : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.Pedal">
            <summary>
            Pedal : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.BikeFrame">
            <summary>
            BikeFrame : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.Crankset">
            <summary>
            Crankset : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.PictureAngle">
            <summary>
            PictureAngle : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.PictureSize">
            <summary>
            PictureSize : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.ProductPhotoId">
            <summary>
            ProductPhotoID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.Material">
            <summary>
            Material : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.Color">
            <summary>
            Color : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.ProductLine">
            <summary>
            ProductLine : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.Style">
            <summary>
            Style : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.RiderExperience">
            <summary>
            RiderExperience : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.Rowguid">
            <summary>
            rowguid : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescriptionColumn.ModifiedDate">
            <summary>
            ModifiedDate : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityManager">
            <summary>
            Entity Manager provides the management of entity location and creation.
            This is responsible for providing the health and validity of entities as a whole.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityManager.LocateOrCreate``1(System.String,System.String,System.Type)">
            <summary>
            Locates an entity for retrieval from the <see cref="T:Microsoft.Practices.ObjectBuilder2.Locator"/>, or instatiates a new instance 
            of the entity if not currently being tracked.
            </summary>
            <typeparam name="Entity">Must implement <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> and is the default type to create, and will be the return type.</typeparam>
            <param name="key">primary key representation</param>
            <param name="typeString">type string to create</param>
            <param name="entityFactoryType">factory used to try to create this entity.</param>
            <returns>Created entity of T</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityManager.LocateOrCreate``1(System.String,System.String,System.Type,System.Boolean)">
            <summary>
            Locates an entity for retrieval from the <see cref="T:Microsoft.Practices.ObjectBuilder2.Locator"/>, or instatiates a new instance 
            of the entity if not currently being tracked.
            </summary>
            <typeparam name="Entity">Must implement <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> and is the default type to create, and will be the return type.</typeparam>
            <param name="key">primary key representation</param>
            <param name="typeString">type string to create</param>
            <param name="entityFactoryType">factory used to try to create this entity.</param>
            <param name="isLocatorEnabled">bool determining whether to use Entity Locating.</param>
            <returns>Created entity of T</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityManager.CreateViewEntity``1(System.String,System.Type)">
            <summary>
            instatiates a new instance of the entity for view entities that don't implement IEntity and can't be tracked
            </summary>
            <typeparam name="Entity">is the default type to create, and will be the return type.</typeparam>
            <param name="typeString">type string to create</param>
            <param name="entityFactoryType">factory used to try to create this entity.</param>
            <returns>Created entity of T</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityManager.LocateEntity``1(System.String,System.Boolean)">
            <summary>
            Locates an entity for retrieval from the <see cref="T:Microsoft.Practices.ObjectBuilder2.Locator"/> if tracking is enabled.
            </summary>
            <typeparam name="Entity">Must implement <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> and is the default type to create, and will be the return type.</typeparam>
            <param name="key">primary key representation</param>
            <param name="isLocatorEnabled">bool determining whether to use Entity Locating.</param>
            <returns>found entity of T, or null</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityManager.StopTracking(System.String)">
            <summary>
            Stops Tracking an Entity, it will be re-added in the next round.
            </summary>
            <param name="key">Entity Key used in the Locator's Bucket</param>
            <returns>true if found, false if not found</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityManager.StartTracking(System.String,Nettiers.AdventureWorks.Entities.IEntity,System.Boolean)">
            <summary>
            Starts Tracking an Entity, it will be tracked until modified or persisted.
            </summary>
            <param name="key">Entity Key used in the Locator's Bucket</param>
            <param name="entity">entity to be tracked</param>
            <param name="isTrackingEnabled">Determines whether tracking is enabled</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityManager.TryAddEntityFactory(System.Type)">
            <summary>
            Adds a factory to the EntityFactories property if the parameter type is valid.
            </summary>
            <param name="entityFactoryTypeToCreate">The entity factory type to create.</param>
            <returns>true if successful.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityManager.TrackChangedEntities">
            <summary>
            Get or set whether an entity should stop being tracked if it is modified or not.
            If true entities are tracked until saved even if modified. If false entities are
            stopped being tracked when they are modified.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityManager.EntityFactories">
            <summary>
            Exposes the current entity factory instance.
            </summary>
            <value>The entity factories.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityManager.EntityLocator">
            <summary>
            Expose the current entity locator for consumption by the API.
            </summary>
            <value>The entity locator.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityNotValidException">
            <summary>
            Exception used to pass information along to the UI when an entity is not valid. <see cref="T:Nettiers.AdventureWorks.Entities.EntityBase"/>.IsValid.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityNotValidException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EntityNotValidException"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityNotValidException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EntityNotValidException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityNotValidException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EntityNotValidException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityNotValidException.#ctor(Nettiers.AdventureWorks.Entities.EntityBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EntityNotValidException"/> class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="method">The method.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityNotValidException.#ctor(Nettiers.AdventureWorks.Entities.EntityBase,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EntityNotValidException"/> class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="method">The method.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityNotValidException.#ctor(System.Collections.IList,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EntityNotValidException"/> class.
            </summary>
            <param name="entityList">The entity list.</param>
            <param name="method">The method.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityNotValidException.#ctor(System.Collections.IList,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EntityNotValidException"/> class.
            </summary>
            <param name="entityList">The entity list.</param>
            <param name="method">The method.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityNotValidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EntityNotValidException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityNotValidException.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityNotValidException.EntityList">
            <summary>
            Gets or sets the entity list.
            </summary>
            <value>The entity list.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EntityNotValidException.ExecutingMethod">
            <summary>
            Gets or sets the executing method.
            </summary>
            <value>The executing method.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TrackingPolicy">
            <summary>
            Determines what entities are tracked with respect to Entity.EntityState.
            </summary>
            <remarks>TrackingPolicy is marked with Flags to allow future extensions, for example tracking of inserted items.</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TrackingPolicy.TrackingUnchanged">
            <summary>
            Track unchanged entities (default). 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TrackingPolicy.TrackingChanged">
            <summary>
            Track changed entities. 
            </summary>
            <remarks>Normally an entity stops being tracked when it is modified unless TrackingChanged is specified.</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityPropertyComparer">
            <summary>
            Provide a generic comparer for our entity objects.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityPropertyComparer.#ctor(System.String)">
            <summary>
            Provides Comparison opreations.
            </summary>
            <param name="propertyName">The property to compare</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityPropertyComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares 2 objects by their properties, given on the constructor
            </summary>
            <param name="x">First value to compare</param>
            <param name="y">Second value to compare</param>
            <returns></returns>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesReason">
            <summary>
             Lookup table of customer purchase reasons.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesReason.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductPhoto">
            <summary>
             Product images.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductPhoto.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture">
            <summary>
             Cross-reference table mapping product descriptions and the language the description is written in.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.JobCandidate">
            <summary>
             Résumés submitted to Human Resources by job applicants.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.JobCandidate.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeEventArgs.#ctor(Nettiers.AdventureWorks.Entities.EmployeeColumn)">
            <summary>
             Initalizes a new Instance of the EmployeeEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeEventArgs.#ctor(Nettiers.AdventureWorks.Entities.EmployeeColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the EmployeeEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeEventArgs.Column">
            <summary>
             The EmployeeColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.EmployeeColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeEventHandler">
            <summary>
             Define a delegate for all Employee related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmployeeComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeComparer.#ctor(Nettiers.AdventureWorks.Entities.EmployeeColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EmployeeComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeComparer.Equals(Nettiers.AdventureWorks.Entities.Employee,Nettiers.AdventureWorks.Entities.Employee)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> to compare.</param>
            <param name="b">The second <c>Employee</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeComparer.GetHashCode(Nettiers.AdventureWorks.Entities.Employee)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeComparer.Compare(Nettiers.AdventureWorks.Entities.Employee,Nettiers.AdventureWorks.Entities.Employee)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeKey.#ctor">
            <summary>
            Initializes a new instance of the EmployeeKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeKey.#ctor(Nettiers.AdventureWorks.Entities.EmployeeBase)">
            <summary>
            Initializes a new instance of the EmployeeKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the EmployeeKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeeKey.EmployeeId">
            <summary>
            Gets or sets the EmployeeId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeColumn">
            <summary>
            Enumerate the Employee columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.EmployeeId">
            <summary>
            EmployeeId : Primary key for Employee records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.NationalIdNumber">
            <summary>
            NationalIdNumber : Unique national identification number such as a social security number.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.ContactId">
            <summary>
            ContactId : Identifies the employee in the Contact table. Foreign key to Contact.ContactID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.LoginId">
            <summary>
            LoginId : Network login.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.ManagerId">
            <summary>
            ManagerId : Manager to whom the employee is assigned. Foreign Key to Employee.M
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.Title">
            <summary>
            Title : Work title such as Buyer or Sales Representative.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.BirthDate">
            <summary>
            BirthDate : Date of birth.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.MaritalStatus">
            <summary>
            MaritalStatus : M = Married, S = Single
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.Gender">
            <summary>
            Gender : M = Male, F = Female
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.HireDate">
            <summary>
            HireDate : Employee hired on this date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.SalariedFlag">
            <summary>
            SalariedFlag : Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.VacationHours">
            <summary>
            VacationHours : Number of available vacation hours.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.SickLeaveHours">
            <summary>
            SickLeaveHours : Number of available sick leave hours.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.CurrentFlag">
            <summary>
            CurrentFlag : 0 = Inactive, 1 = Active
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeeColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyRateEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CurrencyRateColumn)">
            <summary>
             Initalizes a new Instance of the CurrencyRateEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CurrencyRateColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the CurrencyRateEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateEventArgs.Column">
            <summary>
             The CurrencyRateColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.CurrencyRateColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyRateEventHandler">
            <summary>
             Define a delegate for all CurrencyRate related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyRateComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CurrencyRateComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateComparer.#ctor(Nettiers.AdventureWorks.Entities.CurrencyRateColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:CurrencyRateComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateComparer.Equals(Nettiers.AdventureWorks.Entities.CurrencyRate,Nettiers.AdventureWorks.Entities.CurrencyRate)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> to compare.</param>
            <param name="b">The second <c>CurrencyRate</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateComparer.GetHashCode(Nettiers.AdventureWorks.Entities.CurrencyRate)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateComparer.Compare(Nettiers.AdventureWorks.Entities.CurrencyRate,Nettiers.AdventureWorks.Entities.CurrencyRate)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyRateKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateKey.#ctor">
            <summary>
            Initializes a new instance of the CurrencyRateKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateKey.#ctor(Nettiers.AdventureWorks.Entities.CurrencyRateBase)">
            <summary>
            Initializes a new instance of the CurrencyRateKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the CurrencyRateKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CurrencyRateKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CurrencyRateKey.CurrencyRateId">
            <summary>
            Gets or sets the CurrencyRateId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CurrencyRateColumn">
            <summary>
            Enumerate the CurrencyRate columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateColumn.CurrencyRateId">
            <summary>
            CurrencyRateId : Primary key for CurrencyRate records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateColumn.CurrencyRateDate">
            <summary>
            CurrencyRateDate : Date and time the exchange rate was obtained.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateColumn.FromCurrencyCode">
            <summary>
            FromCurrencyCode : Exchange rate was converted from this currency code.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateColumn.ToCurrencyCode">
            <summary>
            ToCurrencyCode : Exchange rate was converted to this currency code.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateColumn.AverageRate">
            <summary>
            AverageRate : Average exchange rate for the day.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateColumn.EndOfDayRate">
            <summary>
            EndOfDayRate : Final exchange rate for the day.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CurrencyRateColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn)">
            <summary>
             Initalizes a new Instance of the CountryRegionCurrencyEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the CountryRegionCurrencyEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyEventArgs.Column">
            <summary>
             The CountryRegionCurrencyColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyEventHandler">
            <summary>
             Define a delegate for all CountryRegionCurrency related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CountryRegionCurrencyComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyComparer.#ctor(Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:CountryRegionCurrencyComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyComparer.Equals(Nettiers.AdventureWorks.Entities.CountryRegionCurrency,Nettiers.AdventureWorks.Entities.CountryRegionCurrency)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> to compare.</param>
            <param name="b">The second <c>CountryRegionCurrency</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyComparer.GetHashCode(Nettiers.AdventureWorks.Entities.CountryRegionCurrency)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyComparer.Compare(Nettiers.AdventureWorks.Entities.CountryRegionCurrency,Nettiers.AdventureWorks.Entities.CountryRegionCurrency)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyKey.#ctor">
            <summary>
            Initializes a new instance of the CountryRegionCurrencyKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyKey.#ctor(Nettiers.AdventureWorks.Entities.CountryRegionCurrencyBase)">
            <summary>
            Initializes a new instance of the CountryRegionCurrencyKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyKey.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the CountryRegionCurrencyKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyKey.CountryRegionCode">
            <summary>
            Gets or sets the CountryRegionCode property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyKey.CurrencyCode">
            <summary>
            Gets or sets the CurrencyCode property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn">
            <summary>
            Enumerate the CountryRegionCurrency columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn.CountryRegionCode">
            <summary>
            CountryRegionCode : ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn.CurrencyCode">
            <summary>
            CurrencyCode : ISO standard currency code. Foreign key to Currency.CurrencyCode.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionCurrencyColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VJobCandidateBase">
            <summary>
             Job candidate names and resumes.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._jobCandidateId">
            <summary>
            JobCandidateID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._employeeId">
            <summary>
            EmployeeID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._safeNameNamePrefix">
            <summary>
            Name.Prefix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._safeNameNameFirst">
            <summary>
            Name.First : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._safeNameNameMiddle">
            <summary>
            Name.Middle : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._safeNameNameLast">
            <summary>
            Name.Last : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._safeNameNameSuffix">
            <summary>
            Name.Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._skills">
            <summary>
            Skills : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._safeNameAddrType">
            <summary>
            Addr.Type : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._safeNameAddrLocCountryRegion">
            <summary>
            Addr.Loc.CountryRegion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._safeNameAddrLocState">
            <summary>
            Addr.Loc.State : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._safeNameAddrLocCity">
            <summary>
            Addr.Loc.City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._safeNameAddrPostalCode">
            <summary>
            Addr.PostalCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._email">
            <summary>
            EMail : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._webSite">
            <summary>
            WebSite : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._modifiedDate">
            <summary>
            ModifiedDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.#ctor(System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateBase"/> instance.
            </summary>
            <param name="_jobCandidateId"></param>
            <param name="_employeeId"></param>
            <param name="_safeNameNamePrefix"></param>
            <param name="_safeNameNameFirst"></param>
            <param name="_safeNameNameMiddle"></param>
            <param name="_safeNameNameLast"></param>
            <param name="_safeNameNameSuffix"></param>
            <param name="_skills"></param>
            <param name="_safeNameAddrType"></param>
            <param name="_safeNameAddrLocCountryRegion"></param>
            <param name="_safeNameAddrLocState"></param>
            <param name="_safeNameAddrLocCity"></param>
            <param name="_safeNameAddrPostalCode"></param>
            <param name="_email"></param>
            <param name="_webSite"></param>
            <param name="_modifiedDate"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.CreateVJobCandidate(System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidate"/> instance.
            </summary>
            <param name="_jobCandidateId"></param>
            <param name="_employeeId"></param>
            <param name="_safeNameNamePrefix"></param>
            <param name="_safeNameNameFirst"></param>
            <param name="_safeNameNameMiddle"></param>
            <param name="_safeNameNameLast"></param>
            <param name="_safeNameNameSuffix"></param>
            <param name="_skills"></param>
            <param name="_safeNameAddrType"></param>
            <param name="_safeNameAddrLocCountryRegion"></param>
            <param name="_safeNameAddrLocState"></param>
            <param name="_safeNameAddrLocCity"></param>
            <param name="_safeNameAddrPostalCode"></param>
            <param name="_email"></param>
            <param name="_webSite"></param>
            <param name="_modifiedDate"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.Copy">
            <summary>
              Returns a Typed VJobCandidateBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.Equals(Nettiers.AdventureWorks.Entities.VJobCandidateBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.Equals(Nettiers.AdventureWorks.Entities.VJobCandidateBase,Nettiers.AdventureWorks.Entities.VJobCandidateBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VJobCandidate,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.JobCandidateId">
            <summary>
            	Gets or Sets the JobCandidateID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.EmployeeId">
            <summary>
            	Gets or Sets the EmployeeID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsEmployeeIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.SafeNameNamePrefix">
            <summary>
            	Gets or Sets the Name.Prefix property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.SafeNameNameFirst">
            <summary>
            	Gets or Sets the Name.First property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.SafeNameNameMiddle">
            <summary>
            	Gets or Sets the Name.Middle property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.SafeNameNameLast">
            <summary>
            	Gets or Sets the Name.Last property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.SafeNameNameSuffix">
            <summary>
            	Gets or Sets the Name.Suffix property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.Skills">
            <summary>
            	Gets or Sets the Skills property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.SafeNameAddrType">
            <summary>
            	Gets or Sets the Addr.Type property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.SafeNameAddrLocCountryRegion">
            <summary>
            	Gets or Sets the Addr.Loc.CountryRegion property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.SafeNameAddrLocState">
            <summary>
            	Gets or Sets the Addr.Loc.State property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.SafeNameAddrLocCity">
            <summary>
            	Gets or Sets the Addr.Loc.City property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.SafeNameAddrPostalCode">
            <summary>
            	Gets or Sets the Addr.PostalCode property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.Email">
            <summary>
            	Gets or Sets the EMail property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.WebSite">
            <summary>
            	Gets or Sets the WebSite property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.ModifiedDate">
            <summary>
            	Gets or Sets the ModifiedDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VJobCandidateBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VJobCandidateBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VJobCandidateBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VJobCandidateColumn">
            <summary>
            Enumerate the VJobCandidate columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.JobCandidateId">
            <summary>
            JobCandidateID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.EmployeeId">
            <summary>
            EmployeeID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.SafeNameNamePrefix">
            <summary>
            Name.Prefix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.SafeNameNameFirst">
            <summary>
            Name.First : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.SafeNameNameMiddle">
            <summary>
            Name.Middle : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.SafeNameNameLast">
            <summary>
            Name.Last : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.SafeNameNameSuffix">
            <summary>
            Name.Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.Skills">
            <summary>
            Skills : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.SafeNameAddrType">
            <summary>
            Addr.Type : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.SafeNameAddrLocCountryRegion">
            <summary>
            Addr.Loc.CountryRegion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.SafeNameAddrLocState">
            <summary>
            Addr.Loc.State : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.SafeNameAddrLocCity">
            <summary>
            Addr.Loc.City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.SafeNameAddrPostalCode">
            <summary>
            Addr.PostalCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.Email">
            <summary>
            EMail : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.WebSite">
            <summary>
            WebSite : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VJobCandidateColumn.ModifiedDate">
            <summary>
            ModifiedDate : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VJobCandidate">
            <summary>
             Job candidate names and resumes.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidate.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidate"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VIndividualCustomer">
            <summary>
             Individual customers (names and addresses) that purchase Adventure Works Cycles products online.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualCustomer.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomer"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistory">
            <summary>
             Returns employee name and current and previous departments.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistory.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistory"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfo">
            <summary>
             Displays the contact name and content from each element in the xml column AdditionalContactInfo for that person.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VAdditionalContactInfo.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfo"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRules">
            <summary>
            Maintains the list of validation rules associated with an object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.Validation.ValidationRules._brokenRules">
            <summary>
            List of rules that have not passed validation
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.Validation.ValidationRules._target">
            <summary>
            Object associated with this list of rules.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.#ctor(System.Object)">
            <summary>
            Creates an instance of the class and associates the target.
            </summary>
            <param name="businessEntity">Target</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.GetPropertyRules(System.String)">
            <summary>
            Returns a list of <see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo"/> objects for a specified property.
            </summary>
            <param name="propertyName">The name of the property to get the rules for.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> containing all of the rules for the specified property.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.AddRule(Nettiers.AdventureWorks.Entities.Validation.ValidationRuleHandler,System.String)">
            <summary>
            Adds a rule to the list of validated rules.
            </summary>
            <remarks>
            <para>
            A rule is implemented by a method which conforms to the 
            method signature defined by the <see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleHandler"/> delegate.
            </para>
            </remarks>
            <param name="handler">The method that implements the rule.</param>
            <param name="propertyName">
            The name of the property on the target object where the rule implementation can retrieve
            the value to be validated.
            </param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.AddRule(Nettiers.AdventureWorks.Entities.Validation.ValidationRuleHandler,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)">
            <summary>
            Adds a rule to the list of validated rules.
            </summary>
            <remarks>
            <para>
            A rule is implemented by a method which conforms to the 
            method signature defined by the <see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleHandler"/> delegate.
            </para>
            </remarks>
            <param name="handler">The method that implements the rule.</param>
            <param name="args">
            A <see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs"/> object specifying the property name and other arguments
            passed to the rule method
            </param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.ValidateRuleList(System.Collections.Generic.List{Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo})">
            <summary>
            Validates a list of rules.
            </summary>
            <remarks>
            This method calls the Invoke method on each rule in the list.  If the rule fails, it 
            is added to the <see cref="P:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.BrokenRulesList"/>
            </remarks>
            <param name="ruleList">List of rules to validate.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.ValidateRules(System.String)">
            <summary>
            Validates all rules for a property
            </summary>
            <param name="propertyName">Name of the property to validate.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.ValidateRules">
            <summary>
            Validate all the rules for all properties.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.GetBrokenRules">
            <summary>
            Return a <see cref="P:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.BrokenRulesList"/> that contains all of the invalid rules.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.Clear">
            <summary>
            	Clear the rules list.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.Target">
            <summary>
            Object associated with this list of rules.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.BrokenRulesList">
            <summary>
            List of <see cref="T:Nettiers.AdventureWorks.Entities.Validation.BrokenRule"/> objects
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.RulesList">
            <summary>
            Read-only list of validation rules
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.IsValid">
            <summary>
            Returns a value indicateing whether the <see cref="P:Nettiers.AdventureWorks.Entities.Validation.ValidationRules.Target"/> object is valid.
            </summary>
            <remarks>If one or more rules are broken, the object is assumed to be invalid and 
            false is return.  Otherwise, True is returned.
            </remarks>
            <returns>A value indicating whether any rules are broken.</returns>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TimestampPkBase">
            <summary>
             An object representation of the 'TimestampPK' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TimestampPkBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TimestampPkBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TimestampPkBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TimestampPkBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TimestampPkBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPkBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.#ctor(System.String)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPkBase"/> instance.
            </summary>
            <param name="_someText"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.CreateTimestampPk(System.String)">
            <summary>
             A simple factory method to create a new <see cref="P:Nettiers.AdventureWorks.Entities.TimestampPkBase.TimestampPk"/> instance.
            </summary>
            <param name="_someText"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed TimestampPk Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.Copy">
            <summary>
              Returns a Typed TimestampPk Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.DeepCopy">
            <summary>
              Returns a Typed TimestampPk Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.TimestampPkColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.GetOriginalEntity">
            <summary>
              Returns a TimestampPk Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPkBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPkBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.Equals(Nettiers.AdventureWorks.Entities.TimestampPkBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPkBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.ValueEquals(Nettiers.AdventureWorks.Entities.TimestampPkBase,Nettiers.AdventureWorks.Entities.TimestampPkBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPkBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPkBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPkBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.TimestampPkColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TimestampPkBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPkColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.TimestampPkColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TimestampPkBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPkColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.TimestampPkColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TimestampPkBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPkColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.TimestampPkColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.TimestampPkBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPkColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TimestampPkBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TimestampPkBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TimestampPkBase.TimestampPk">
            <summary>
            	Gets or sets the TimestampPk property. 
            	
            </summary>
            <value>This type is timestamp.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TimestampPkBase.SomeText">
            <summary>
            	Gets or sets the SomeText property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TimestampPkBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TimestampPkBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TimestampPkBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TimestampPkBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TimestampPkBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.TimestampPkBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TimestampPkBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TimestampPkBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TimestampPkBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TimestampPkBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TimestampPkBase.TimestampPkEntityData">
            <summary>
            	The data structure representation of the 'TimestampPK' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TimestampPkBase.TimestampPkEntityData.TimestampPk">
            <summary>			
            TimestampPK : 
            </summary>
            <remarks>Member of the primary key of the underlying table "TimestampPK"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TimestampPkBase.TimestampPkEntityData.SomeText">
            <summary>
            SomeText : 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.TimestampPkEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkBase.TimestampPkEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TimestampPkBase.TimestampPkEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TimestampPkEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkEventArgs.#ctor(Nettiers.AdventureWorks.Entities.TimestampPkColumn)">
            <summary>
             Initalizes a new Instance of the TimestampPkEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkEventArgs.#ctor(Nettiers.AdventureWorks.Entities.TimestampPkColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the TimestampPkEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TimestampPkEventArgs.Column">
            <summary>
             The TimestampPkColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.TimestampPkColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TimestampPkEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TimestampPkEventHandler">
            <summary>
             Define a delegate for all TimestampPk related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TimestampPkComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TimestampPkComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkComparer.#ctor(Nettiers.AdventureWorks.Entities.TimestampPkColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:TimestampPkComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkComparer.Equals(Nettiers.AdventureWorks.Entities.TimestampPk,Nettiers.AdventureWorks.Entities.TimestampPk)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> to compare.</param>
            <param name="b">The second <c>TimestampPk</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkComparer.GetHashCode(Nettiers.AdventureWorks.Entities.TimestampPk)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkComparer.Compare(Nettiers.AdventureWorks.Entities.TimestampPk,Nettiers.AdventureWorks.Entities.TimestampPk)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TimestampPkComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TimestampPkKey">
            <summary>
            Wraps the unique identifier values for the <see cref="P:Nettiers.AdventureWorks.Entities.TimestampPkKey.TimestampPk"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkKey.#ctor">
            <summary>
            Initializes a new instance of the TimestampPkKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkKey.#ctor(Nettiers.AdventureWorks.Entities.TimestampPkBase)">
            <summary>
            Initializes a new instance of the TimestampPkKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkKey.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the TimestampPkKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPkKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TimestampPkKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.TimestampPkKey.TimestampPk">
            <summary>
            Gets or sets the TimestampPk property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TimestampPkColumn">
            <summary>
            Enumerate the TimestampPk columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TimestampPkColumn.TimestampPk">
            <summary>
            TimestampPk : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.TimestampPkColumn.SomeText">
            <summary>
            SomeText : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TimestampPk">
            <summary>
             An object representation of the 'TimestampPK' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TimestampPk.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreContact">
            <summary>
             Cross-reference table mapping stores and their employees.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreContact.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase">
            <summary>
             Sales performance tracking.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.#ctor(System.Int32,System.DateTime,System.Decimal,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase"/> instance.
            </summary>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="_quotaDate">Sales quota date.</param>
            <param name="_salesQuota">Sales quota amount.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.CreateSalesPersonQuotaHistory(System.Int32,System.DateTime,System.Decimal,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> instance.
            </summary>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="_quotaDate">Sales quota date.</param>
            <param name="_salesQuota">Sales quota amount.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed SalesPersonQuotaHistory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.Copy">
            <summary>
              Returns a Typed SalesPersonQuotaHistory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.DeepCopy">
            <summary>
              Returns a Typed SalesPersonQuotaHistory Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.GetOriginalEntity">
            <summary>
              Returns a SalesPersonQuotaHistory Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.Equals(Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.ValueEquals(Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase,Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.SalesPersonId">
            <summary>
            	Gets or sets the SalesPersonId property. 
            	Sales person identification number. Foreign key to SalesPerson.SalesPersonID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.OriginalSalesPersonId">
            <summary>
            	Get the original value of the SalesPersonID property.
            	Sales person identification number. Foreign key to SalesPerson.SalesPersonID.
            </summary>
            <remarks>This is the original value of the SalesPersonID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.QuotaDate">
            <summary>
            	Gets or sets the QuotaDate property. 
            	Sales quota date.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.OriginalQuotaDate">
            <summary>
            	Get the original value of the QuotaDate property.
            	Sales quota date.
            </summary>
            <remarks>This is the original value of the QuotaDate property.</remarks>
            <value>This type is datetime</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.SalesQuota">
            <summary>
            	Gets or sets the SalesQuota property. 
            	Sales quota amount.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.SalesPersonIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/>.
            </summary>
            <value>The source SalesPerson for SalesPersonId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.SalesPersonQuotaHistoryEntityData">
            <summary>
            	The data structure representation of the 'SalesPersonQuotaHistory' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.SalesPersonQuotaHistoryEntityData.SalesPersonId">
            <summary>			
            SalesPersonID : Sales person identification number. Foreign key to SalesPerson.SalesPersonID.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesPersonQuotaHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.SalesPersonQuotaHistoryEntityData.OriginalSalesPersonId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.SalesPersonQuotaHistoryEntityData.QuotaDate">
            <summary>			
            QuotaDate : Sales quota date.
            </summary>
            <remarks>Member of the primary key of the underlying table "SalesPersonQuotaHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.SalesPersonQuotaHistoryEntityData.OriginalQuotaDate">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.SalesPersonQuotaHistoryEntityData.SalesQuota">
            <summary>
            SalesQuota : Sales quota amount.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.SalesPersonQuotaHistoryEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.SalesPersonQuotaHistoryEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.SalesPersonQuotaHistoryEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.SalesPersonQuotaHistoryEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.SalesPersonQuotaHistoryEntityData.SalesPersonIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/>.
            </summary>
            <value>The source SalesPerson for SalesPersonId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase.SalesPersonQuotaHistoryEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn)">
            <summary>
             Initalizes a new Instance of the SalesPersonQuotaHistoryEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the SalesPersonQuotaHistoryEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryEventArgs.Column">
            <summary>
             The SalesPersonQuotaHistoryColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryEventHandler">
            <summary>
             Define a delegate for all SalesPersonQuotaHistory related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SalesPersonQuotaHistoryComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryComparer.#ctor(Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:SalesPersonQuotaHistoryComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryComparer.Equals(Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory,Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> to compare.</param>
            <param name="b">The second <c>SalesPersonQuotaHistory</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryComparer.GetHashCode(Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryComparer.Compare(Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory,Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryKey.#ctor">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryKey.#ctor(Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryBase)">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryKey.#ctor(System.Int32,System.DateTime)">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryKey.SalesPersonId">
            <summary>
            Gets or sets the SalesPersonId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryKey.QuotaDate">
            <summary>
            Gets or sets the QuotaDate property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn">
            <summary>
            Enumerate the SalesPersonQuotaHistory columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn.SalesPersonId">
            <summary>
            SalesPersonId : Sales person identification number. Foreign key to SalesPerson.SalesPersonID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn.QuotaDate">
            <summary>
            QuotaDate : Sales quota date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn.SalesQuota">
            <summary>
            SalesQuota : Sales quota amount.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn)">
            <summary>
             Initalizes a new Instance of the ProductSubcategoryEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ProductSubcategoryEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryEventArgs.Column">
            <summary>
             The ProductSubcategoryColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryEventHandler">
            <summary>
             Define a delegate for all ProductSubcategory related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ProductSubcategoryComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryComparer.#ctor(Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductSubcategoryComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryComparer.Equals(Nettiers.AdventureWorks.Entities.ProductSubcategory,Nettiers.AdventureWorks.Entities.ProductSubcategory)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> to compare.</param>
            <param name="b">The second <c>ProductSubcategory</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ProductSubcategory)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryComparer.Compare(Nettiers.AdventureWorks.Entities.ProductSubcategory,Nettiers.AdventureWorks.Entities.ProductSubcategory)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryKey.#ctor">
            <summary>
            Initializes a new instance of the ProductSubcategoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryKey.#ctor(Nettiers.AdventureWorks.Entities.ProductSubcategoryBase)">
            <summary>
            Initializes a new instance of the ProductSubcategoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ProductSubcategoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductSubcategoryKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductSubcategoryKey.ProductSubcategoryId">
            <summary>
            Gets or sets the ProductSubcategoryId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn">
            <summary>
            Enumerate the ProductSubcategory columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn.ProductSubcategoryId">
            <summary>
            ProductSubcategoryId : Primary key for ProductSubcategory records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn.ProductCategoryId">
            <summary>
            ProductCategoryId : Product category identification number. Foreign key to ProductCategory.ProductCategoryID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn.Name">
            <summary>
            Name : Subcategory description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductSubcategoryColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.NullFkeyChild">
            <summary>
             An object representation of the 'NullFKeyChild' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.NullFkeyChild.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase">
            <summary>
             Employee pay history.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.#ctor(System.Int32,System.DateTime,System.Decimal,System.Byte,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase"/> instance.
            </summary>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_rateChangeDate">Date the change in pay is effective</param>
            <param name="_rate">Salary hourly rate.</param>
            <param name="_payFrequency">1 = Salary received monthly, 2 = Salary received biweekly</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.CreateEmployeePayHistory(System.Int32,System.DateTime,System.Decimal,System.Byte,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> instance.
            </summary>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_rateChangeDate">Date the change in pay is effective</param>
            <param name="_rate">Salary hourly rate.</param>
            <param name="_payFrequency">1 = Salary received monthly, 2 = Salary received biweekly</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed EmployeePayHistory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.Copy">
            <summary>
              Returns a Typed EmployeePayHistory Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.DeepCopy">
            <summary>
              Returns a Typed EmployeePayHistory Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.GetOriginalEntity">
            <summary>
              Returns a EmployeePayHistory Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.Equals(Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.ValueEquals(Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase,Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EmployeeId">
            <summary>
            	Gets or sets the EmployeeId property. 
            	Employee identification number. Foreign key to Employee.EmployeeID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.OriginalEmployeeId">
            <summary>
            	Get the original value of the EmployeeID property.
            	Employee identification number. Foreign key to Employee.EmployeeID.
            </summary>
            <remarks>This is the original value of the EmployeeID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.RateChangeDate">
            <summary>
            	Gets or sets the RateChangeDate property. 
            	Date the change in pay is effective
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.OriginalRateChangeDate">
            <summary>
            	Get the original value of the RateChangeDate property.
            	Date the change in pay is effective
            </summary>
            <remarks>This is the original value of the RateChangeDate property.</remarks>
            <value>This type is datetime</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.Rate">
            <summary>
            	Gets or sets the Rate property. 
            	Salary hourly rate.
            </summary>
            <value>This type is money.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.PayFrequency">
            <summary>
            	Gets or sets the PayFrequency property. 
            	1 = Salary received monthly, 2 = Salary received biweekly
            </summary>
            <value>This type is tinyint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EmployeeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/>.
            </summary>
            <value>The source Employee for EmployeeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EmployeePayHistoryEntityData">
            <summary>
            	The data structure representation of the 'EmployeePayHistory' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EmployeePayHistoryEntityData.EmployeeId">
            <summary>			
            EmployeeID : Employee identification number. Foreign key to Employee.EmployeeID.
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeePayHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EmployeePayHistoryEntityData.OriginalEmployeeId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EmployeePayHistoryEntityData.RateChangeDate">
            <summary>			
            RateChangeDate : Date the change in pay is effective
            </summary>
            <remarks>Member of the primary key of the underlying table "EmployeePayHistory"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EmployeePayHistoryEntityData.OriginalRateChangeDate">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EmployeePayHistoryEntityData.Rate">
            <summary>
            Rate : Salary hourly rate.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EmployeePayHistoryEntityData.PayFrequency">
            <summary>
            PayFrequency : 1 = Salary received monthly, 2 = Salary received biweekly
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EmployeePayHistoryEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EmployeePayHistoryEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EmployeePayHistoryEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EmployeePayHistoryEntityData.EmployeeIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/>.
            </summary>
            <value>The source Employee for EmployeeId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase.EmployeePayHistoryEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn)">
            <summary>
             Initalizes a new Instance of the EmployeePayHistoryEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the EmployeePayHistoryEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryEventArgs.Column">
            <summary>
             The EmployeePayHistoryColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryEventHandler">
            <summary>
             Define a delegate for all EmployeePayHistory related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmployeePayHistoryComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryComparer.#ctor(Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EmployeePayHistoryComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryComparer.Equals(Nettiers.AdventureWorks.Entities.EmployeePayHistory,Nettiers.AdventureWorks.Entities.EmployeePayHistory)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> to compare.</param>
            <param name="b">The second <c>EmployeePayHistory</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryComparer.GetHashCode(Nettiers.AdventureWorks.Entities.EmployeePayHistory)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryComparer.Compare(Nettiers.AdventureWorks.Entities.EmployeePayHistory,Nettiers.AdventureWorks.Entities.EmployeePayHistory)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryKey.#ctor">
            <summary>
            Initializes a new instance of the EmployeePayHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryKey.#ctor(Nettiers.AdventureWorks.Entities.EmployeePayHistoryBase)">
            <summary>
            Initializes a new instance of the EmployeePayHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryKey.#ctor(System.Int32,System.DateTime)">
            <summary>
            Initializes a new instance of the EmployeePayHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistoryKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryKey.EmployeeId">
            <summary>
            Gets or sets the EmployeeId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.EmployeePayHistoryKey.RateChangeDate">
            <summary>
            Gets or sets the RateChangeDate property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn">
            <summary>
            Enumerate the EmployeePayHistory columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn.EmployeeId">
            <summary>
            EmployeeId : Employee identification number. Foreign key to Employee.EmployeeID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn.RateChangeDate">
            <summary>
            RateChangeDate : Date the change in pay is effective
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn.Rate">
            <summary>
            Rate : Salary hourly rate.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn.PayFrequency">
            <summary>
            PayFrequency : 1 = Salary received monthly, 2 = Salary received biweekly
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.EmployeePayHistoryColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeeAddress">
            <summary>
             Cross-reference table mapping employees to their address(es).	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeeAddress.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerAddressEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CustomerAddressColumn)">
            <summary>
             Initalizes a new Instance of the CustomerAddressEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CustomerAddressColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the CustomerAddressEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressEventArgs.Column">
            <summary>
             The CustomerAddressColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.CustomerAddressColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerAddressEventHandler">
            <summary>
             Define a delegate for all CustomerAddress related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerAddressComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CustomerAddressComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressComparer.#ctor(Nettiers.AdventureWorks.Entities.CustomerAddressColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomerAddressComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressComparer.Equals(Nettiers.AdventureWorks.Entities.CustomerAddress,Nettiers.AdventureWorks.Entities.CustomerAddress)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> to compare.</param>
            <param name="b">The second <c>CustomerAddress</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressComparer.GetHashCode(Nettiers.AdventureWorks.Entities.CustomerAddress)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressComparer.Compare(Nettiers.AdventureWorks.Entities.CustomerAddress,Nettiers.AdventureWorks.Entities.CustomerAddress)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerAddressKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressKey.#ctor">
            <summary>
            Initializes a new instance of the CustomerAddressKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressKey.#ctor(Nettiers.AdventureWorks.Entities.CustomerAddressBase)">
            <summary>
            Initializes a new instance of the CustomerAddressKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the CustomerAddressKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CustomerAddressKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressKey.CustomerId">
            <summary>
            Gets or sets the CustomerId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CustomerAddressKey.AddressId">
            <summary>
            Gets or sets the AddressId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CustomerAddressColumn">
            <summary>
            Enumerate the CustomerAddress columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressColumn.CustomerId">
            <summary>
            CustomerId : Primary key. Foreign key to Customer.CustomerID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressColumn.AddressId">
            <summary>
            AddressId : Primary key. Foreign key to Address.AddressID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressColumn.AddressTypeId">
            <summary>
            AddressTypeId : Address type. Foreign key to AddressType.AddressTypeID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CustomerAddressColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactCreditCardEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ContactCreditCardColumn)">
            <summary>
             Initalizes a new Instance of the ContactCreditCardEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ContactCreditCardColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ContactCreditCardEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardEventArgs.Column">
            <summary>
             The ContactCreditCardColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCardColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactCreditCardEventHandler">
            <summary>
             Define a delegate for all ContactCreditCard related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactCreditCardComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ContactCreditCardComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardComparer.#ctor(Nettiers.AdventureWorks.Entities.ContactCreditCardColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ContactCreditCardComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardComparer.Equals(Nettiers.AdventureWorks.Entities.ContactCreditCard,Nettiers.AdventureWorks.Entities.ContactCreditCard)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> to compare.</param>
            <param name="b">The second <c>ContactCreditCard</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ContactCreditCard)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardComparer.Compare(Nettiers.AdventureWorks.Entities.ContactCreditCard,Nettiers.AdventureWorks.Entities.ContactCreditCard)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactCreditCardKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardKey.#ctor">
            <summary>
            Initializes a new instance of the ContactCreditCardKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardKey.#ctor(Nettiers.AdventureWorks.Entities.ContactCreditCardBase)">
            <summary>
            Initializes a new instance of the ContactCreditCardKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ContactCreditCardKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactCreditCardKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardKey.ContactId">
            <summary>
            Gets or sets the ContactId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactCreditCardKey.CreditCardId">
            <summary>
            Gets or sets the CreditCardId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactCreditCardColumn">
            <summary>
            Enumerate the ContactCreditCard columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactCreditCardColumn.ContactId">
            <summary>
            ContactId : Customer identification number. Foreign key to Contact.ContactID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactCreditCardColumn.CreditCardId">
            <summary>
            CreditCardId : Credit card identification number. Foreign key to CreditCard.CreditCardID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactCreditCardColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo">
            <summary>
            Object representing a validation rule for an object
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo.ToString">
            <summary>
            Returns a text representation of the rule which is the <see cref="P:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo.RuleName"/>.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo.#ctor(System.Object,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleHandler,System.String)">
            <summary>
            Creates and initializes the rule.
            </summary>
            <param name="target">Object reference containing the data to validate.</param>
            <param name="handler">The address of the method implementing <see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleHandler"/>.</param>
            <param name="propertyName">The name of the property to which the rule applies.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo.#ctor(System.Object,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleHandler,Nettiers.AdventureWorks.Entities.Validation.ValidationRuleArgs)">
            <summary>
            Creates and initializes the rule.
            </summary>
            <param name="target">Object reference containing the data to validate.</param>
            <param name="handler">The address of the method implementing <see cref="T:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleHandler"/>.</param>
            <param name="args">A <see cref="P:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo.ValidationRuleArgs"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo.Invoke">
            <summary>
            Invokes the rule to validate the data.
            </summary>
            <returns>True if the data is valid, False if the data is invalid.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo.RuleName">
            <summary>
            Gets the name of the rule.
            </summary>
            <remarks>
            The rule's name must be unique and is used
            to identify a broken rule in the <see cref="T:Nettiers.AdventureWorks.Entities.Validation.BrokenRulesList"/>.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.Validation.ValidationRuleInfo.ValidationRuleArgs">
            <summary>
            Returns information about the property that is associated with the rule.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreBase">
            <summary>
             Customers (resellers) of Adventure Works products.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.StoreBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.#ctor(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.StoreBase"/> instance.
            </summary>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="_name">Name of the store.</param>
            <param name="_salesPersonId">ID of the sales person assigned to the customer. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="_demographics">Demographic informationg about the store such as the number of employees, annual sales and store type.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.CreateStore(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> instance.
            </summary>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="_name">Name of the store.</param>
            <param name="_salesPersonId">ID of the sales person assigned to the customer. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="_demographics">Demographic informationg about the store such as the number of employees, annual sales and store type.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Store Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.Copy">
            <summary>
              Returns a Typed Store Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.DeepCopy">
            <summary>
              Returns a Typed Store Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.StoreColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.GetOriginalEntity">
            <summary>
              Returns a Store Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.StoreBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.StoreBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.Equals(Nettiers.AdventureWorks.Entities.StoreBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.StoreBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.ValueEquals(Nettiers.AdventureWorks.Entities.StoreBase,Nettiers.AdventureWorks.Entities.StoreBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.StoreBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.StoreBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.StoreBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.StoreColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.StoreBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.StoreColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.StoreColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.StoreBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.StoreColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.StoreColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.StoreBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.StoreColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.StoreColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.StoreBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.StoreColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.StoreBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.StoreBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.CustomerId">
            <summary>
            	Gets or sets the CustomerId property. 
            	Primary key. Foreign key to Customer.CustomerID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.OriginalCustomerId">
            <summary>
            	Get the original value of the CustomerID property.
            	Primary key. Foreign key to Customer.CustomerID.
            </summary>
            <remarks>This is the original value of the CustomerID property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Name of the store.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.SalesPersonId">
            <summary>
            	Gets or sets the SalesPersonId property. 
            	ID of the sales person assigned to the customer. Foreign key to SalesPerson.SalesPersonID.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsSalesPersonIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.Demographics">
            <summary>
            	Gets or sets the Demographics property. 
            	Demographic informationg about the store such as the number of employees, annual sales and store type.
            </summary>
            <value>This type is xml.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.CustomerIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/>.
            </summary>
            <value>The source Customer for CustomerId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.SalesPersonIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/>.
            </summary>
            <value>The source SalesPerson for SalesPersonId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.StoreContactCollection">
            <summary>
            Holds a collection of StoreContact objects
            which are related to this object through the relation FK_StoreContact_Store_CustomerID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.ContactIdContactCollection_From_StoreContact">
            <summary>
            Holds a collection of ContactFromStoreContact objects
            which are related to this object through the junction table StoreContact
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.StoreBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.StoreBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreBase.StoreEntityData">
            <summary>
            	The data structure representation of the 'Store' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreBase.StoreEntityData.CustomerId">
            <summary>			
            CustomerID : Primary key. Foreign key to Customer.CustomerID.
            </summary>
            <remarks>Member of the primary key of the underlying table "Store"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreBase.StoreEntityData.OriginalCustomerId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreBase.StoreEntityData.Name">
            <summary>
            Name : Name of the store.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreBase.StoreEntityData.SalesPersonId">
            <summary>
            SalesPersonID : ID of the sales person assigned to the customer. Foreign key to SalesPerson.SalesPersonID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreBase.StoreEntityData.Demographics">
            <summary>
            Demographics : Demographic informationg about the store such as the number of employees, annual sales and store type.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreBase.StoreEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreBase.StoreEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.StoreEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreBase.StoreEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.StoreEntityData.CustomerIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/>.
            </summary>
            <value>The source Customer for CustomerId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.StoreEntityData.SalesPersonIdSource">
            <summary>
            Gets or sets the source <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/>.
            </summary>
            <value>The source SalesPerson for SalesPersonId.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.StoreEntityData.StoreContactCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _storeContactCustomerId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.StoreEntityData.ContactIdContactCollection_From_StoreContact">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table contactIdContactCollectionFromStoreContact
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreBase.StoreEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreEventArgs.#ctor(Nettiers.AdventureWorks.Entities.StoreColumn)">
            <summary>
             Initalizes a new Instance of the StoreEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreEventArgs.#ctor(Nettiers.AdventureWorks.Entities.StoreColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the StoreEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreEventArgs.Column">
            <summary>
             The StoreColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.StoreColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreEventHandler">
            <summary>
             Define a delegate for all Store related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StoreComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreComparer.#ctor(Nettiers.AdventureWorks.Entities.StoreColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:StoreComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreComparer.Equals(Nettiers.AdventureWorks.Entities.Store,Nettiers.AdventureWorks.Entities.Store)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> to compare.</param>
            <param name="b">The second <c>Store</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreComparer.GetHashCode(Nettiers.AdventureWorks.Entities.Store)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreComparer.Compare(Nettiers.AdventureWorks.Entities.Store,Nettiers.AdventureWorks.Entities.Store)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreKey.#ctor">
            <summary>
            Initializes a new instance of the StoreKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreKey.#ctor(Nettiers.AdventureWorks.Entities.StoreBase)">
            <summary>
            Initializes a new instance of the StoreKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the StoreKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.StoreKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.StoreKey.CustomerId">
            <summary>
            Gets or sets the CustomerId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.StoreColumn">
            <summary>
            Enumerate the Store columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreColumn.CustomerId">
            <summary>
            CustomerId : Primary key. Foreign key to Customer.CustomerID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreColumn.Name">
            <summary>
            Name : Name of the store.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreColumn.SalesPersonId">
            <summary>
            SalesPersonId : ID of the sales person assigned to the customer. Foreign key to SalesPerson.SalesPersonID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreColumn.Demographics">
            <summary>
            Demographics : Demographic informationg about the store such as the number of employees, annual sales and store type.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.StoreColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Store">
            <summary>
             Customers (resellers) of Adventure Works products.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Store.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn)">
            <summary>
             Initalizes a new Instance of the SalesTerritoryHistoryEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the SalesTerritoryHistoryEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryEventArgs.Column">
            <summary>
             The SalesTerritoryHistoryColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryEventHandler">
            <summary>
             Define a delegate for all SalesTerritoryHistory related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SalesTerritoryHistoryComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryComparer.#ctor(Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:SalesTerritoryHistoryComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryComparer.Equals(Nettiers.AdventureWorks.Entities.SalesTerritoryHistory,Nettiers.AdventureWorks.Entities.SalesTerritoryHistory)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> to compare.</param>
            <param name="b">The second <c>SalesTerritoryHistory</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryComparer.GetHashCode(Nettiers.AdventureWorks.Entities.SalesTerritoryHistory)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryComparer.Compare(Nettiers.AdventureWorks.Entities.SalesTerritoryHistory,Nettiers.AdventureWorks.Entities.SalesTerritoryHistory)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryKey.#ctor">
            <summary>
            Initializes a new instance of the SalesTerritoryHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryKey.#ctor(Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryBase)">
            <summary>
            Initializes a new instance of the SalesTerritoryHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryKey.#ctor(System.Int32,System.DateTime,System.Int32)">
            <summary>
            Initializes a new instance of the SalesTerritoryHistoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryKey.SalesPersonId">
            <summary>
            Gets or sets the SalesPersonId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryKey.StartDate">
            <summary>
            Gets or sets the StartDate property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryKey.TerritoryId">
            <summary>
            Gets or sets the TerritoryId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn">
            <summary>
            Enumerate the SalesTerritoryHistory columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn.SalesPersonId">
            <summary>
            SalesPersonId : Primary key for SalesTerritoryHistory records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn.TerritoryId">
            <summary>
            TerritoryId : Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn.StartDate">
            <summary>
            StartDate : Date the sales representive started work in the territory.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn.EndDate">
            <summary>
            EndDate : Date the sales representative left work in the territory.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPerson">
            <summary>
             Sales representative current information.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPerson.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader">
            <summary>
             General purchase order information. See PurchaseOrderDetail.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn)">
            <summary>
             Initalizes a new Instance of the ProductProductPhotoEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ProductProductPhotoEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoEventArgs.Column">
            <summary>
             The ProductProductPhotoColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoEventHandler">
            <summary>
             Define a delegate for all ProductProductPhoto related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ProductProductPhotoComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoComparer.#ctor(Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductProductPhotoComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoComparer.Equals(Nettiers.AdventureWorks.Entities.ProductProductPhoto,Nettiers.AdventureWorks.Entities.ProductProductPhoto)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> to compare.</param>
            <param name="b">The second <c>ProductProductPhoto</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ProductProductPhoto)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoComparer.Compare(Nettiers.AdventureWorks.Entities.ProductProductPhoto,Nettiers.AdventureWorks.Entities.ProductProductPhoto)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoKey.#ctor">
            <summary>
            Initializes a new instance of the ProductProductPhotoKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoKey.#ctor(Nettiers.AdventureWorks.Entities.ProductProductPhotoBase)">
            <summary>
            Initializes a new instance of the ProductProductPhotoKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ProductProductPhotoKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductProductPhotoKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoKey.ProductId">
            <summary>
            Gets or sets the ProductId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductProductPhotoKey.ProductPhotoId">
            <summary>
            Gets or sets the ProductPhotoId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn">
            <summary>
            Enumerate the ProductProductPhoto columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn.ProductId">
            <summary>
            ProductId : Product identification number. Foreign key to Product.ProductID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn.ProductPhotoId">
            <summary>
            ProductPhotoId : Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn.Primary">
            <summary>
            Primary : 0 = Photo is not the principal image. 1 = Photo is the principal image.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductProductPhotoColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelBase">
            <summary>
             Product model classification.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.#ctor(System.String,System.String,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelBase"/> instance.
            </summary>
            <param name="_name">Product model description.</param>
            <param name="_catalogDescription">Detailed product catalog information in xml format.</param>
            <param name="_instructions">Manufacturing instructions in xml format.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.CreateProductModel(System.String,System.String,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> instance.
            </summary>
            <param name="_name">Product model description.</param>
            <param name="_catalogDescription">Detailed product catalog information in xml format.</param>
            <param name="_instructions">Manufacturing instructions in xml format.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed ProductModel Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.Copy">
            <summary>
              Returns a Typed ProductModel Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.DeepCopy">
            <summary>
              Returns a Typed ProductModel Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.ProductModelColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.GetOriginalEntity">
            <summary>
              Returns a ProductModel Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.Equals(Nettiers.AdventureWorks.Entities.ProductModelBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.ValueEquals(Nettiers.AdventureWorks.Entities.ProductModelBase,Nettiers.AdventureWorks.Entities.ProductModelBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductModelColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductModelBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductModelColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductModelBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.ProductModelColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductModelBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.ProductModelColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.ProductModelBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductModelBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductModelBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelId">
            <summary>
            	Gets or sets the ProductModelId property. 
            	Primary key for ProductModel records.
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Product model description.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.CatalogDescription">
            <summary>
            	Gets or sets the CatalogDescription property. 
            	Detailed product catalog information in xml format.
            </summary>
            <value>This type is xml.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.Instructions">
            <summary>
            	Gets or sets the Instructions property. 
            	Manufacturing instructions in xml format.
            </summary>
            <value>This type is xml.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.Rowguid">
            <summary>
            	Gets or sets the Rowguid property. 
            	ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
            <value>This type is uniqueidentifier.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelProductDescriptionCultureCollection">
            <summary>
            Holds a collection of ProductModelProductDescriptionCulture objects
            which are related to this object through the relation FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.CultureIdCultureCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of CultureFromProductModelProductDescriptionCulture objects
            which are related to this object through the junction table ProductModelProductDescriptionCulture
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of ProductDescriptionFromProductModelProductDescriptionCulture objects
            which are related to this object through the junction table ProductModelProductDescriptionCulture
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.IllustrationIdIllustrationCollection_From_ProductModelIllustration">
            <summary>
            Holds a collection of IllustrationFromProductModelIllustration objects
            which are related to this object through the junction table ProductModelIllustration
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelIllustrationCollection">
            <summary>
            Holds a collection of ProductModelIllustration objects
            which are related to this object through the relation FK_ProductModelIllustration_ProductModel_ProductModelID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductCollection">
            <summary>
            Holds a collection of Product objects
            which are related to this object through the relation FK_Product_ProductModel_ProductModelID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductModelBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.ProductModelBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData">
            <summary>
            	The data structure representation of the 'ProductModel' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData.ProductModelId">
            <summary>			
            ProductModelID : Primary key for ProductModel records.
            </summary>
            <remarks>Member of the primary key of the underlying table "ProductModel"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData.Name">
            <summary>
            Name : Product model description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData.CatalogDescription">
            <summary>
            CatalogDescription : Detailed product catalog information in xml format.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData.Instructions">
            <summary>
            Instructions : Manufacturing instructions in xml format.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData.Rowguid">
            <summary>
            rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData.ProductModelProductDescriptionCultureCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productModelProductDescriptionCultureProductModelId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData.CultureIdCultureCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table cultureIdCultureCollectionFromProductModelProductDescriptionCulture
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData.ProductDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productDescriptionIdProductDescriptionCollectionFromProductModelProductDescriptionCulture
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData.IllustrationIdIllustrationCollection_From_ProductModelIllustration">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table illustrationIdIllustrationCollectionFromProductModelIllustration
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData.ProductModelIllustrationCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productModelIllustrationProductModelId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData.ProductCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productProductModelId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelBase.ProductModelEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductModelColumn)">
            <summary>
             Initalizes a new Instance of the ProductModelEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ProductModelColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ProductModelEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelEventArgs.Column">
            <summary>
             The ProductModelColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ProductModelColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelEventHandler">
            <summary>
             Define a delegate for all ProductModel related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ProductModelComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelComparer.#ctor(Nettiers.AdventureWorks.Entities.ProductModelColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductModelComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelComparer.Equals(Nettiers.AdventureWorks.Entities.ProductModel,Nettiers.AdventureWorks.Entities.ProductModel)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> to compare.</param>
            <param name="b">The second <c>ProductModel</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ProductModel)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelComparer.Compare(Nettiers.AdventureWorks.Entities.ProductModel,Nettiers.AdventureWorks.Entities.ProductModel)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelKey.#ctor">
            <summary>
            Initializes a new instance of the ProductModelKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelKey.#ctor(Nettiers.AdventureWorks.Entities.ProductModelBase)">
            <summary>
            Initializes a new instance of the ProductModelKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ProductModelKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModelKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ProductModelKey.ProductModelId">
            <summary>
            Gets or sets the ProductModelId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModelColumn">
            <summary>
            Enumerate the ProductModel columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelColumn.ProductModelId">
            <summary>
            ProductModelId : Primary key for ProductModel records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelColumn.Name">
            <summary>
            Name : Product model description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelColumn.CatalogDescription">
            <summary>
            CatalogDescription : Detailed product catalog information in xml format.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelColumn.Instructions">
            <summary>
            Instructions : Manufacturing instructions in xml format.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ProductModelColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ProductModel">
            <summary>
             Product model classification.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ProductModel.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IndividualEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualEventArgs.#ctor(Nettiers.AdventureWorks.Entities.IndividualColumn)">
            <summary>
             Initalizes a new Instance of the IndividualEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualEventArgs.#ctor(Nettiers.AdventureWorks.Entities.IndividualColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the IndividualEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualEventArgs.Column">
            <summary>
             The IndividualColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.IndividualColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IndividualEventHandler">
            <summary>
             Define a delegate for all Individual related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IndividualComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IndividualComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualComparer.#ctor(Nettiers.AdventureWorks.Entities.IndividualColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:IndividualComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualComparer.Equals(Nettiers.AdventureWorks.Entities.Individual,Nettiers.AdventureWorks.Entities.Individual)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> to compare.</param>
            <param name="b">The second <c>Individual</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualComparer.GetHashCode(Nettiers.AdventureWorks.Entities.Individual)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualComparer.Compare(Nettiers.AdventureWorks.Entities.Individual,Nettiers.AdventureWorks.Entities.Individual)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IndividualKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualKey.#ctor">
            <summary>
            Initializes a new instance of the IndividualKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualKey.#ctor(Nettiers.AdventureWorks.Entities.IndividualBase)">
            <summary>
            Initializes a new instance of the IndividualKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the IndividualKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IndividualKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IndividualKey.CustomerId">
            <summary>
            Gets or sets the CustomerId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IndividualColumn">
            <summary>
            Enumerate the Individual columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IndividualColumn.CustomerId">
            <summary>
            CustomerId : Unique customer identification number. Foreign key to Customer.CustomerID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IndividualColumn.ContactId">
            <summary>
            ContactId : Identifies the customer in the Contact table. Foreign key to Contact.ContactID.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IndividualColumn.Demographics">
            <summary>
            Demographics : Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IndividualColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ErrorLog">
            <summary>
             Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ErrorLog.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DatabaseLogEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogEventArgs.#ctor(Nettiers.AdventureWorks.Entities.DatabaseLogColumn)">
            <summary>
             Initalizes a new Instance of the DatabaseLogEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogEventArgs.#ctor(Nettiers.AdventureWorks.Entities.DatabaseLogColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the DatabaseLogEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogEventArgs.Column">
            <summary>
             The DatabaseLogColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.DatabaseLogColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DatabaseLogEventHandler">
            <summary>
             Define a delegate for all DatabaseLog related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DatabaseLogComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DatabaseLogComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogComparer.#ctor(Nettiers.AdventureWorks.Entities.DatabaseLogColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:DatabaseLogComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogComparer.Equals(Nettiers.AdventureWorks.Entities.DatabaseLog,Nettiers.AdventureWorks.Entities.DatabaseLog)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> to compare.</param>
            <param name="b">The second <c>DatabaseLog</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogComparer.GetHashCode(Nettiers.AdventureWorks.Entities.DatabaseLog)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogComparer.Compare(Nettiers.AdventureWorks.Entities.DatabaseLog,Nettiers.AdventureWorks.Entities.DatabaseLog)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DatabaseLogKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogKey.#ctor">
            <summary>
            Initializes a new instance of the DatabaseLogKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogKey.#ctor(Nettiers.AdventureWorks.Entities.DatabaseLogBase)">
            <summary>
            Initializes a new instance of the DatabaseLogKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the DatabaseLogKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.DatabaseLogKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.DatabaseLogKey.DatabaseLogId">
            <summary>
            Gets or sets the DatabaseLogId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.DatabaseLogColumn">
            <summary>
            Enumerate the DatabaseLog columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogColumn.DatabaseLogId">
            <summary>
            DatabaseLogId : Primary key for DatabaseLog records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogColumn.PostTime">
            <summary>
            PostTime : The date and time the DDL change occurred.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogColumn.DatabaseUser">
            <summary>
            DatabaseUser : The user who implemented the DDL change.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogColumn.SafeNameEvent">
            <summary>
            SafeNameEvent : The type of DDL statement that was executed.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogColumn.Schema">
            <summary>
            Schema : The schema to which the changed object belongs.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogColumn.SafeNameObject">
            <summary>
            SafeNameObject : The object that was changed by the DDL statment.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogColumn.Tsql">
            <summary>
            Tsql : The exact Transact-SQL statement that was executed.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.DatabaseLogColumn.XmlEvent">
            <summary>
            XmlEvent : The raw XML data generated by database trigger.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CountryRegionColumn)">
            <summary>
             Initalizes a new Instance of the CountryRegionEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CountryRegionColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the CountryRegionEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionEventArgs.Column">
            <summary>
             The CountryRegionColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.CountryRegionColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionEventHandler">
            <summary>
             Define a delegate for all CountryRegion related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CountryRegionComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionComparer.#ctor(Nettiers.AdventureWorks.Entities.CountryRegionColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:CountryRegionComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionComparer.Equals(Nettiers.AdventureWorks.Entities.CountryRegion,Nettiers.AdventureWorks.Entities.CountryRegion)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> to compare.</param>
            <param name="b">The second <c>CountryRegion</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionComparer.GetHashCode(Nettiers.AdventureWorks.Entities.CountryRegion)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionComparer.Compare(Nettiers.AdventureWorks.Entities.CountryRegion,Nettiers.AdventureWorks.Entities.CountryRegion)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionKey.#ctor">
            <summary>
            Initializes a new instance of the CountryRegionKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionKey.#ctor(Nettiers.AdventureWorks.Entities.CountryRegionBase)">
            <summary>
            Initializes a new instance of the CountryRegionKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CountryRegionKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CountryRegionKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CountryRegionKey.CountryRegionCode">
            <summary>
            Gets or sets the CountryRegionCode property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CountryRegionColumn">
            <summary>
            Enumerate the CountryRegion columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionColumn.CountryRegionCode">
            <summary>
            CountryRegionCode : ISO standard code for countries and regions.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionColumn.Name">
            <summary>
            Name : Country or region name.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CountryRegionColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VVendor">
            <summary>
             Vendor (company) names and addresses and the names of vendor employees to contact.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VVendor.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VVendor"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegion">
            <summary>
             Joins StateProvince table with CountryRegion table.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegion.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegion"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmployment">
            <summary>
             Displays the content from each employement history related element in the xml column Resume in the HumanResources.JobCandidate table. The content has been localized into French, Simplified Chinese and Thai. Some data may not display correctly unless supplemental language support is installed.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VJobCandidateEmployment.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmployment"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VIndividualDemographics">
            <summary>
             Displays the content from each element in the xml column Demographics for each customer in the Sales.Individual table.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VIndividualDemographics.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographics"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VEmployeeColumn">
            <summary>
            Enumerate the VEmployee columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.EmployeeId">
            <summary>
            EmployeeID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.Title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.FirstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.MiddleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.LastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.Suffix">
            <summary>
            Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.JobTitle">
            <summary>
            JobTitle : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.Phone">
            <summary>
            Phone : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.EmailAddress">
            <summary>
            EmailAddress : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.EmailPromotion">
            <summary>
            EmailPromotion : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.AddressLine1">
            <summary>
            AddressLine1 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.AddressLine2">
            <summary>
            AddressLine2 : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.City">
            <summary>
            City : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.StateProvinceName">
            <summary>
            StateProvinceName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.PostalCode">
            <summary>
            PostalCode : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.CountryRegionName">
            <summary>
            CountryRegionName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeColumn.AdditionalContactInfo">
            <summary>
            AdditionalContactInfo : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EntityUtil">
            <summary>
            Provides common utility methods for interacting with objects.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetNewEntity(System.Type)">
            <summary>
            Creates a new instance of the specified type.
            </summary>
            <param name="type">The runtime type to instantiate.</param>
            <returns>An instance of the specified type.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetNewEntity(System.Type,System.Object[])">
            <summary>
            Creates a new instance of the specified type using the supplied
            constructor parameters values.
            </summary>
            <param name="type">The runtime type to instantiate.</param>
            <param name="args">The constructor parameter values.</param>
            <returns>An instance of the specified type.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetConstructor(System.Type)">
            <summary>
            Gets the default constructor for the specified type.
            </summary>
            <param name="type">The runtime type.</param>
            <returns>A <see cref="T:System.Reflection.ConstructorInfo"/> object.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetConstructor(System.Type,System.Type[])">
            <summary>
            Gets the constructor for the specified type whose parameters
            match the supplied type array.
            </summary>
            <param name="type">The runtime type.</param>
            <param name="types">An array of constructor parameter types.</param>
            <returns>A <see cref="T:System.Reflection.ConstructorInfo"/> object.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetProperty(System.Object,System.String)">
            <summary>
            Gets a <see cref="T:System.Reflection.PropertyInfo"/> object representing the property
            belonging to the object having the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <returns>A <see cref="T:System.Reflection.PropertyInfo"/> object, or null if the object
            instance does not have a property with the specified name.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetProperty(System.Type,System.String)">
            <summary>
            Gets a <see cref="T:System.Reflection.PropertyInfo"/> object representing the property
            belonging to the runtime type having the specified name.
            </summary>
            <param name="type">The runtime type.</param>
            <param name="propertyName">The property name.</param>
            <returns>A <see cref="T:System.Reflection.PropertyInfo"/> object, or null if the runtime
            type does not have a property with the specified name.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetMethod(System.Object,System.String)">
            <summary>
            Gets a <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            belonging to the object having the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="methodName">The method name.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object, or null if the object
            instance does not have a method with the specified name.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetMethod(System.Object,System.String,System.Type[])">
            <summary>
            Gets a <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            belonging to the object having the specified name and whose
            parameters match the specified types.
            </summary>
            <param name="item">An object instance.</param>
            <param name="methodName">The method name.</param>
            <param name="types">The parameter types.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object, or null if the object
            instance does not have a method with the specified name.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetMethod(System.Type,System.String)">
            <summary>
            Gets a <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            belonging to the runtime type having the specified name.
            </summary>
            <param name="type">The runtime type.</param>
            <param name="methodName">The method name.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object, or null if the runtime
            type does not have a method with the specified name.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetMethod(System.Type,System.String,System.Type[])">
            <summary>
            Gets a <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            belonging to the runtime type having the specified name and whose
            parameters match the specified types.
            </summary>
            <param name="type">The runtime type.</param>
            <param name="methodName">The method name.</param>
            <param name="types">The parameter types.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object, or null if the runtime
            type does not have a method with the specified name.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.InvokeMethod(System.Object,System.String)">
            <summary>
            Invokes the specified method on the object using reflection.
            </summary>
            <param name="entity">An object instance.</param>
            <param name="methodName">The method name.</param>
            <returns>The result of the method invocation.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.InvokeMethod(System.Object,System.String,System.Object[])">
            <summary>
            Invokes the specified method on the object using reflection.
            Passes the supplied arguments as method parameters.
            </summary>
            <param name="entity">An object instance.</param>
            <param name="methodName">The method name.</param>
            <param name="args">The method parameters.</param>
            <returns>The result of the method invocation.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.InvokeMethod(System.Object,System.String,System.Object[],System.Type[])">
            <summary>
            Invokes the specified method on the object using reflection.
            Passes the supplied arguments as method parameters.
            </summary>
            <param name="entity">An object instance.</param>
            <param name="methodName">The method name.</param>
            <param name="args">The method parameters.</param>
            <param name="types">The method parameter types.</param>
            <returns>The result of the method invocation.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetType(System.String)">
            <summary>
            Gets the System.Type with the specified name.
            </summary>
            <param name="typeName">The name of the type to get.</param>
            <returns>The System.Type with the specified name, if found; otherwise, null.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetTypes(System.Object[])">
            <summary>
            Gets an array of System.Type objects which match the specified objects.
            NOTE: this method will throw an exception if any of the values held
            within the args array are null.
            </summary>
            <param name="args">An array of objects.</param>
            <returns>An array of System.Type objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetPropertyValue(System.Object,System.String)">
            <summary>
            Gets the value of the property with the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetPropertyValue(System.Object,System.String,System.Reflection.PropertyInfo@)">
            <summary>
            Gets the value of the property with the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <param name="property">A reference to the <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetStaticPropertyValue(System.Type,System.String)">
            <summary>
            Gets the value of the static property with the specified name.
            </summary>
            <param name="type">The runtime type.</param>
            <param name="propertyName">The property name.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetStaticPropertyValue(System.Type,System.String,System.Reflection.PropertyInfo@)">
            <summary>
            Gets the value of the static property with the specified name.
            </summary>
            <param name="type">The runtime type.</param>
            <param name="propertyName">The property name.</param>
            <param name="property">A reference to the <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.SetPropertyValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property with the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.SetPropertyValue(System.Object,System.String,System.Object,System.Boolean)">
            <summary>
            Sets the value of the property with the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <param name="convertBlankToNull">Boolean indicating whether empty strings should be converted to null values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.SetPropertyValue(System.Object,System.String,System.Object,System.Reflection.PropertyInfo@)">
            <summary>
            Sets the value of the property with the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <param name="property">A reference to the <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.SetPropertyValue(System.Object,System.String,System.Object,System.Reflection.PropertyInfo@,System.Boolean)">
            <summary>
            Sets the value of the property with the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <param name="property">A reference to the <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
            <param name="convertBlankToNull">Boolean indicating whether empty strings should be converted to null values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.SetEntityKeyValue(System.Object,System.String)">
            <summary>
            Sets the value of the property with the specified name to the value
            returned by the Guid.NewGuid() method.
            </summary>
            <param name="entity">An object instance.</param>
            <param name="entityKeyName">The property name.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.SetEntityValues(System.Object,System.Collections.IDictionary)">
            <summary>
            Sets the properties of the specified entity based on the
            name/value pairs found in the specified collection.
            </summary>
            <param name="entity">The instance of an object to set the properties on.</param>
            <param name="values">An instance of System.Collections.IDictionary containing the name/value pairs.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.InitEntityDateTimeValues(System.Object,System.String[])">
            <summary>
            Initializes the properties specified in propertyNames
            with the value of DateTime.Now for the specified entity.
            </summary>
            <param name="entity">The instance of an object to set the properties on.</param>
            <param name="propertyNames">The list of property names to initialize.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.IsPropertyValueEqual(System.Object,System.String,System.Object)">
            <summary>
            Determines if the property with the specified name equals the specified value.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <returns>True if the property value matches the specified value; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.ChangeType(System.Object,System.Type)">
            <summary>
            Converts the specified value to the specified type.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="conversionType">A System.Type to convert to.</param>
            <returns>The results of the conversion.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.ChangeType(System.Object,System.Type,System.Boolean)">
            <summary>
            Converts the specified value to the specified type.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="conversionType">A System.Type to convert to.</param>
            <param name="convertBlankToNull">A value indicating whether to treat
            empty string objects as null values.</param>
            <returns>The results of the conversion.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.ChangeGenericType(System.Object,System.Type)">
            <summary>
            Converts the specified value to the specified generic type.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="conversionType">A System.Type to convert to.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.ChangeGenericType(System.Object,System.Type,System.Boolean)">
            <summary>
            Converts the specified value to the specified generic type.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="conversionType">A System.Type to convert to.</param>
            <param name="convertBlankToNull">A value indicating whether to treat
            empty string objects as null values.</param>
            <returns>The results of the conversion.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.MakeGenericType(System.Type,System.Type[])">
            <summary>
            Creates a reference to a generic type using the specified type definition
            and the supplied type arguments.
            </summary>
            <param name="typeDefinition">A generic type definition.</param>
            <param name="typeArguments">An array of System.Type arguments.</param>
            <returns>A System.Type representing the generic type.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetNewGenericEntity(System.Type,System.Type[],System.Object[])">
            <summary>
            Creates a new instance of the specified generic type.
            </summary>
            <param name="typeDefinition">A generic type definition.</param>
            <param name="typeArguments">An array of System.Type arguments.</param>
            <param name="args">An array of constructor parameters values.</param>
            <returns>An instance of the generic type.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetNewGenericEntity(System.Type)">
            <summary>
            Creates a new instance of the specified generic type.
            </summary>
            <param name="genericType">The runtime type.</param>
            <returns>An instance of the generic type.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetNewGenericEntity(System.Type,System.Object[])">
            <summary>
            Creates a new instance of the specified generic type.
            </summary>
            <param name="genericType">The runtime type.</param>
            <param name="args">An array of constructor parameters values.</param>
            <returns>An instance of the generic type.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.HasEntities(System.Collections.IList)">
            <summary>
            Gets a value indicating whether the specified list contains any items.
            </summary>
            <param name="entities">A collection of objects.</param>
            <returns>True if the collection is not null and contains at least
            one item; otherwise false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetEntity(System.Collections.IList,System.String,System.Object)">
            <summary>
            Gets the item within entityList whose property value matches the specifed value.
            </summary>
            <param name="entities">A collection of objects.</param>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <returns>The object whose property value matches the specified value.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetEntity(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Gets the item within entityList at the position specified by index.
            </summary>
            <param name="entityList">The collection of business objects.</param>
            <param name="index">The position within entityList that contains the current item.</param>
            <returns>The current business object.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetEntityList(System.Object,System.String)">
            <summary>
            Gets the value of the property with the specified name and returns
            it as a collection of objects.
            </summary>
            <param name="entity">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <returns>A collection of objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetEntityList(System.Object)">
            <summary>
            Converts the specified object into a collection of objects.
            </summary>
            <param name="entityList">An object instance.</param>
            <returns>A collection of objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.Add(System.Collections.IList,System.Object)">
            <summary>
            Adds the specified object to the collection of objects.
            </summary>
            <param name="list">A collection of objects.</param>
            <param name="item">The obejct to add.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.Remove(System.Collections.IList,System.Object)">
            <summary>
            Removes the specified object from the collection of objects.
            </summary>
            <param name="list">A collection of objects.</param>
            <param name="item">The object to remove.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GuidTryParse(System.String,System.Guid@)">
            <summary>
            Converts the string representation of a Guid to its Guid 
            equivalent. A return value indicates whether the operation 
            succeeded. 
            </summary>
            <param name="s">A string containing a Guid to convert.</param>
            <param name="result">
            When this method returns, contains the Guid value equivalent to 
            the Guid contained in <paramref name="s"/>, if the conversion 
            succeeded, or <see cref="F:System.Guid.Empty"/> if the conversion failed. 
            The conversion fails if the <paramref name="s"/> parameter is a 
            <see langword="null"/> reference (<see langword="Nothing"/> in 
            Visual Basic), or is not of the correct format. 
            </param>
            <value>
            <see langword="true"/> if <paramref name="s"/> was converted 
            successfully; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:System.ArgumentNullException">
                   Thrown if <pararef name="s"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EntityUtil.GetTypeNames(System.Type[])">
            <summary>Outputs a string containing the type names, delimited by ", "</summary>
            <param name="types" type="System.Type[]">
                <para>The types to show.</para>
            </param>
            <returns>A string value...</returns>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SortComparer`1">
            <summary>
            Generic Sort comparer for the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.
            </summary>
            <typeparam name="T">Type of object to sort.</typeparam>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SortComparer`1.m_SortCollection">
            <summary>
            Collection of properties to sort by.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SortComparer`1.m_PropDesc">
            <summary>
            Property to sort by.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SortComparer`1.m_Direction">
            <summary>
            Direction to sort by
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SortComparer`1.m_PropertyDescriptors">
            <summary>
            Collection of properties for T.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SortComparer`1.#ctor(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Create a new instance of the SortComparer class.
            </summary>
            <param name="propDesc">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> to sort by.</param>
            <param name="direction">The <see cref="T:System.ComponentModel.ListSortDirection"/> to sort the list.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SortComparer`1.#ctor(System.ComponentModel.ListSortDescriptionCollection)">
            <summary>
            Create a new instance of the SortComparer class.
            </summary>
            <param name="sortCollection">A <see cref="T:System.ComponentModel.ListSortDescriptionCollection"/> containing the properties to sort the list by.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SortComparer`1.#ctor(System.String)">
            <summary>
            Create a new instance of the SortComparer class.
            </summary>
            <param name="orderBy">SQL-like string representing the properties to sort the list by.</param>
            <remarks><i>orderBy</i> should be in the following format: 
            <para>PropertyName[[ [[ASC]|DESC]][, PropertyName[ [[ASC]|DESC]][,...]]]</para></remarks>
            <example><c>list.Sort("Property1, Property2 DESC, Property3 ASC");</c></example>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SortComparer`1.Compare(`0,`0)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>Value is less than zero: <c>x</c> is less than <c>y</c>
            <para>Value is equal to zero: <c>x</c> equals <c>y</c></para>
            <para>Value is greater than zero: <c>x</c> is greater than <c>y</c></para>
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SortComparer`1.CompareValues(System.Object,System.Object,System.ComponentModel.ListSortDirection)">
            <summary>
            Compare two objects
            </summary>
            <param name="xValue">The first object to compare</param>
            <param name="yValue">The second object to compare</param>
            <param name="direction">The direction to sort the objects in</param>
            <returns>Returns an integer representing the order of the objects</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SortComparer`1.ParseOrderBy(System.String)">
            <summary>
            Parses a string into a <see cref="T:System.ComponentModel.ListSortDescriptionCollection"/>.
            </summary>
            <param name="orderBy">SQL-like string of sort properties</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SortComparer`1.Initialize">
            <summary>
            Initializes the SortComparer object
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive">
            <summary>
             Transactions for previous years.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShipMethodEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ShipMethodColumn)">
            <summary>
             Initalizes a new Instance of the ShipMethodEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ShipMethodColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ShipMethodEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodEventArgs.Column">
            <summary>
             The ShipMethodColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ShipMethodColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShipMethodEventHandler">
            <summary>
             Define a delegate for all ShipMethod related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShipMethodComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ShipMethodComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodComparer.#ctor(Nettiers.AdventureWorks.Entities.ShipMethodColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ShipMethodComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodComparer.Equals(Nettiers.AdventureWorks.Entities.ShipMethod,Nettiers.AdventureWorks.Entities.ShipMethod)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> to compare.</param>
            <param name="b">The second <c>ShipMethod</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ShipMethod)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodComparer.Compare(Nettiers.AdventureWorks.Entities.ShipMethod,Nettiers.AdventureWorks.Entities.ShipMethod)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShipMethodKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodKey.#ctor">
            <summary>
            Initializes a new instance of the ShipMethodKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodKey.#ctor(Nettiers.AdventureWorks.Entities.ShipMethodBase)">
            <summary>
            Initializes a new instance of the ShipMethodKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ShipMethodKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ShipMethodKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ShipMethodKey.ShipMethodId">
            <summary>
            Gets or sets the ShipMethodId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ShipMethodColumn">
            <summary>
            Enumerate the ShipMethod columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodColumn.ShipMethodId">
            <summary>
            ShipMethodId : Primary key for ShipMethod records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodColumn.Name">
            <summary>
            Name : Shipping company name.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodColumn.ShipBase">
            <summary>
            ShipBase : Minimum shipping charge.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodColumn.ShipRate">
            <summary>
            ShipRate : Shipping charge per pound.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ShipMethodColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesTerritoryColumn)">
            <summary>
             Initalizes a new Instance of the SalesTerritoryEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryEventArgs.#ctor(Nettiers.AdventureWorks.Entities.SalesTerritoryColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the SalesTerritoryEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryEventArgs.Column">
            <summary>
             The SalesTerritoryColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryEventHandler">
            <summary>
             Define a delegate for all SalesTerritory related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SalesTerritoryComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryComparer.#ctor(Nettiers.AdventureWorks.Entities.SalesTerritoryColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:SalesTerritoryComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryComparer.Equals(Nettiers.AdventureWorks.Entities.SalesTerritory,Nettiers.AdventureWorks.Entities.SalesTerritory)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> to compare.</param>
            <param name="b">The second <c>SalesTerritory</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryComparer.GetHashCode(Nettiers.AdventureWorks.Entities.SalesTerritory)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryComparer.Compare(Nettiers.AdventureWorks.Entities.SalesTerritory,Nettiers.AdventureWorks.Entities.SalesTerritory)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryKey.#ctor">
            <summary>
            Initializes a new instance of the SalesTerritoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryKey.#ctor(Nettiers.AdventureWorks.Entities.SalesTerritoryBase)">
            <summary>
            Initializes a new instance of the SalesTerritoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the SalesTerritoryKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTerritoryKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.SalesTerritoryKey.TerritoryId">
            <summary>
            Gets or sets the TerritoryId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn">
            <summary>
            Enumerate the SalesTerritory columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn.TerritoryId">
            <summary>
            TerritoryId : Primary key for SalesTerritory records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn.Name">
            <summary>
            Name : Sales territory description
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn.CountryRegionCode">
            <summary>
            CountryRegionCode : ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn.Group">
            <summary>
            Group : Geographic area to which the sales territory belong.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn.SalesYtd">
            <summary>
            SalesYtd : Sales in the territory year to date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn.SalesLastYear">
            <summary>
            SalesLastYear : Sales in the territory the previous year.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn.CostYtd">
            <summary>
            CostYtd : Business costs in the territory year to date.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn.CostLastYear">
            <summary>
            CostLastYear : Business costs in the territory the previous year.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn.Rowguid">
            <summary>
            Rowguid : ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.SalesTerritoryColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesTaxRate">
            <summary>
             Tax rate lookup table.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesTaxRate.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory">
            <summary>
             Sales performance tracking.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IllustrationEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationEventArgs.#ctor(Nettiers.AdventureWorks.Entities.IllustrationColumn)">
            <summary>
             Initalizes a new Instance of the IllustrationEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationEventArgs.#ctor(Nettiers.AdventureWorks.Entities.IllustrationColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the IllustrationEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationEventArgs.Column">
            <summary>
             The IllustrationColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.IllustrationColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IllustrationEventHandler">
            <summary>
             Define a delegate for all Illustration related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IllustrationComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IllustrationComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationComparer.#ctor(Nettiers.AdventureWorks.Entities.IllustrationColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:IllustrationComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationComparer.Equals(Nettiers.AdventureWorks.Entities.Illustration,Nettiers.AdventureWorks.Entities.Illustration)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> to compare.</param>
            <param name="b">The second <c>Illustration</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationComparer.GetHashCode(Nettiers.AdventureWorks.Entities.Illustration)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationComparer.Compare(Nettiers.AdventureWorks.Entities.Illustration,Nettiers.AdventureWorks.Entities.Illustration)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IllustrationKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationKey.#ctor">
            <summary>
            Initializes a new instance of the IllustrationKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationKey.#ctor(Nettiers.AdventureWorks.Entities.IllustrationBase)">
            <summary>
            Initializes a new instance of the IllustrationKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the IllustrationKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.IllustrationKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.IllustrationKey.IllustrationId">
            <summary>
            Gets or sets the IllustrationId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.IllustrationColumn">
            <summary>
            Enumerate the Illustration columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IllustrationColumn.IllustrationId">
            <summary>
            IllustrationId : Primary key for Illustration records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IllustrationColumn.Diagram">
            <summary>
            Diagram : Illustrations used in manufacturing instructions. Stored as XML.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.IllustrationColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory">
            <summary>
             Employee pay history.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.EmployeePayHistory.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Document">
            <summary>
             Product maintenance documents.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Document.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CultureBase">
            <summary>
             Lookup table containing the languages in which some AdventureWorks data is stored.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CultureBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CultureBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CultureBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CultureBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CultureBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CultureBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.#ctor(System.String,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.CultureBase"/> instance.
            </summary>
            <param name="_cultureId">Primary key for Culture records.</param>
            <param name="_name">Culture description.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.CreateCulture(System.String,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> instance.
            </summary>
            <param name="_cultureId">Primary key for Culture records.</param>
            <param name="_name">Culture description.</param>
            <param name="_modifiedDate">Date and time the record was last updated.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.AddValidationRules">
            <summary>
            Assigns validation rules to this object based on model definition.
            </summary>
            <remarks>This method overrides the base class to add schema related validation.</remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Culture Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.Copy">
            <summary>
              Returns a Typed Culture Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.DeepCopy">
            <summary>
              Returns a Typed Culture Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.IsPropertyChanged(Nettiers.AdventureWorks.Entities.CultureColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.GetOriginalEntity">
            <summary>
              Returns a Culture Entity with the original data.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:Nettiers.AdventureWorks.Entities.CultureBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:Nettiers.AdventureWorks.Entities.CultureBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.Equals(Nettiers.AdventureWorks.Entities.CultureBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.CultureBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.ValueEquals(Nettiers.AdventureWorks.Entities.CultureBase,Nettiers.AdventureWorks.Entities.CultureBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.CultureBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.CultureBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.CultureBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CultureColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CultureBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CultureColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CultureColumn)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CultureBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CultureColumn"/> which has raised the event.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.OnColumnChanging(Nettiers.AdventureWorks.Entities.CultureColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CultureBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CultureColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.OnColumnChanged(Nettiers.AdventureWorks.Entities.CultureColumn,System.Object)">
            <summary>
            Raises the <see cref="E:Nettiers.AdventureWorks.Entities.CultureBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:Nettiers.AdventureWorks.Entities.CultureColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CultureBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CultureBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.CultureId">
            <summary>
            	Gets or sets the CultureId property. 
            	Primary key for Culture records.
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.OriginalCultureId">
            <summary>
            	Get the original value of the CultureID property.
            	Primary key for Culture records.
            </summary>
            <remarks>This is the original value of the CultureID property.</remarks>
            <value>This type is nchar</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	Culture description.
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.ModifiedDate">
            <summary>
            	Gets or sets the ModifiedDate property. 
            	Date and time the record was last updated.
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.ProductModelProductDescriptionCultureCollection">
            <summary>
            Holds a collection of ProductModelProductDescriptionCulture objects
            which are related to this object through the relation FK_ProductModelProductDescriptionCulture_Culture_CultureID
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.ProductModelIdProductModelCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of ProductModelFromProductModelProductDescriptionCulture objects
            which are related to this object through the junction table ProductModelProductDescriptionCulture
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.ProductDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of ProductDescriptionFromProductModelProductDescriptionCulture objects
            which are related to this object through the junction table ProductModelProductDescriptionCulture
            </summary>	
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CultureBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.CultureBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:Nettiers.AdventureWorks.Entities.EntityLocator"/>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CultureBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CultureBase.CultureEntityData">
            <summary>
            	The data structure representation of the 'Culture' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CultureBase.CultureEntityData.CultureId">
            <summary>			
            CultureID : Primary key for Culture records.
            </summary>
            <remarks>Member of the primary key of the underlying table "Culture"</remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CultureBase.CultureEntityData.OriginalCultureId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CultureBase.CultureEntityData.Name">
            <summary>
            Name : Culture description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CultureBase.CultureEntityData.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.CultureEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureBase.CultureEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.CultureEntityData.ProductModelProductDescriptionCultureCollection">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the relation _productModelProductDescriptionCultureCultureId
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.CultureEntityData.ProductModelIdProductModelCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productModelIdProductModelCollectionFromProductModelProductDescriptionCulture
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.CultureEntityData.ProductDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCulture">
            <summary>
            Holds a collection of entity objects
            which are related to this object through the junction table productDescriptionIdProductDescriptionCollectionFromProductModelProductDescriptionCulture
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureBase.CultureEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CultureEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CultureColumn)">
            <summary>
             Initalizes a new Instance of the CultureEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureEventArgs.#ctor(Nettiers.AdventureWorks.Entities.CultureColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the CultureEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureEventArgs.Column">
            <summary>
             The CultureColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.CultureColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CultureEventHandler">
            <summary>
             Define a delegate for all Culture related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CultureComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CultureComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureComparer.#ctor(Nettiers.AdventureWorks.Entities.CultureColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:CultureComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureComparer.Equals(Nettiers.AdventureWorks.Entities.Culture,Nettiers.AdventureWorks.Entities.Culture)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> to compare.</param>
            <param name="b">The second <c>Culture</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureComparer.GetHashCode(Nettiers.AdventureWorks.Entities.Culture)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureComparer.Compare(Nettiers.AdventureWorks.Entities.Culture,Nettiers.AdventureWorks.Entities.Culture)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CultureKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureKey.#ctor">
            <summary>
            Initializes a new instance of the CultureKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureKey.#ctor(Nettiers.AdventureWorks.Entities.CultureBase)">
            <summary>
            Initializes a new instance of the CultureKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CultureKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.CultureKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.CultureKey.CultureId">
            <summary>
            Gets or sets the CultureId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.CultureColumn">
            <summary>
            Enumerate the Culture columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CultureColumn.CultureId">
            <summary>
            CultureId : Primary key for Culture records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CultureColumn.Name">
            <summary>
            Name : Culture description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.CultureColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.Culture">
            <summary>
             Lookup table containing the languages in which some AdventureWorks data is stored.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.Culture.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactTypeEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> object.
            </remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ContactTypeColumn)">
            <summary>
             Initalizes a new Instance of the ContactTypeEventArgs class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeEventArgs.#ctor(Nettiers.AdventureWorks.Entities.ContactTypeColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the ContactTypeEventArgs class.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeEventArgs.Column">
            <summary>
             The ContactTypeColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:Nettiers.AdventureWorks.Entities.ContactTypeColumn"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactTypeEventHandler">
            <summary>
             Define a delegate for all ContactType related events.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactTypeComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ContactTypeComparer"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeComparer.#ctor(Nettiers.AdventureWorks.Entities.ContactTypeColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:ContactTypeComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeComparer.Equals(Nettiers.AdventureWorks.Entities.ContactType,Nettiers.AdventureWorks.Entities.ContactType)">
            <summary>
            Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> instances are considered equal.
            </summary>
            <param name="a">The first <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> to compare.</param>
            <param name="b">The second <c>ContactType</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeComparer.GetHashCode(Nettiers.AdventureWorks.Entities.ContactType)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeComparer.Compare(Nettiers.AdventureWorks.Entities.ContactType,Nettiers.AdventureWorks.Entities.ContactType)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactTypeKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeKey.#ctor">
            <summary>
            Initializes a new instance of the ContactTypeKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeKey.#ctor(Nettiers.AdventureWorks.Entities.ContactTypeBase)">
            <summary>
            Initializes a new instance of the ContactTypeKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ContactTypeKey class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.ContactTypeKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.ContactTypeKey.ContactTypeId">
            <summary>
            Gets or sets the ContactTypeId property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.ContactTypeColumn">
            <summary>
            Enumerate the ContactType columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactTypeColumn.ContactTypeId">
            <summary>
            ContactTypeId : Primary key for ContactType records.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactTypeColumn.Name">
            <summary>
            Name : Contact type description.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.ContactTypeColumn.ModifiedDate">
            <summary>
            ModifiedDate : Date and time the record was last updated.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VSalesPerson">
            <summary>
             Sales representiatives (names and addresses) and their sales-related information.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VSalesPerson.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPerson"/> instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase">
            <summary>
             Returns employee name, title, and current department.	
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase._employeeId">
            <summary>
            EmployeeID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase._title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase._firstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase._middleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase._lastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase._suffix">
            <summary>
            Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase._jobTitle">
            <summary>
            JobTitle : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase._department">
            <summary>
            Department : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase._groupName">
            <summary>
            GroupName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase._startDate">
            <summary>
            StartDate : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase"/> instance.
            </summary>
            <param name="_employeeId"></param>
            <param name="_title"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_suffix"></param>
            <param name="_jobTitle"></param>
            <param name="_department"></param>
            <param name="_groupName"></param>
            <param name="_startDate"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.CreateVEmployeeDepartment(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
             A simple factory method to create a new <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartment"/> instance.
            </summary>
            <param name="_employeeId"></param>
            <param name="_title"></param>
            <param name="_firstName"></param>
            <param name="_middleName"></param>
            <param name="_lastName"></param>
            <param name="_suffix"></param>
            <param name="_jobTitle"></param>
            <param name="_department"></param>
            <param name="_groupName"></param>
            <param name="_startDate"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.Copy">
            <summary>
              Returns a Typed VEmployeeDepartmentBase Entity 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.Equals(Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.Equals(Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase,Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase)">
            <summary>
             Determines whether the specified <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.GetPropertyValueByName(Nettiers.AdventureWorks.Entities.VEmployeeDepartment,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.EmployeeId">
            <summary>
            	Gets or Sets the EmployeeID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.Title">
            <summary>
            	Gets or Sets the Title property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.FirstName">
            <summary>
            	Gets or Sets the FirstName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.MiddleName">
            <summary>
            	Gets or Sets the MiddleName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.LastName">
            <summary>
            	Gets or Sets the LastName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.Suffix">
            <summary>
            	Gets or Sets the Suffix property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.JobTitle">
            <summary>
            	Gets or Sets the JobTitle property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.Department">
            <summary>
            	Gets or Sets the Department property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.GroupName">
            <summary>
            	Gets or Sets the GroupName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.StartDate">
            <summary>
            	Gets or Sets the StartDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentColumn">
            <summary>
            Enumerate the VEmployeeDepartment columns.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentColumn.EmployeeId">
            <summary>
            EmployeeID : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentColumn.Title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentColumn.FirstName">
            <summary>
            FirstName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentColumn.MiddleName">
            <summary>
            MiddleName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentColumn.LastName">
            <summary>
            LastName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentColumn.Suffix">
            <summary>
            Suffix : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentColumn.JobTitle">
            <summary>
            JobTitle : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentColumn.Department">
            <summary>
            Department : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentColumn.GroupName">
            <summary>
            GroupName : 
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentColumn.StartDate">
            <summary>
            StartDate : 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartment">
            <summary>
             Returns employee name, title, and current department.	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:Nettiers.AdventureWorks.Entities.VEmployeeDepartment.#ctor">
            <summary>
             Creates a new <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartment"/> instance.
            </summary>
        </member>
    </members>
</doc>
