<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nettiers.AdventureWorks.Data</name>
    </assembly>
    <members>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NetTiersServiceSection">
            <summary>
            The class that hold the configuration section for the NetTiers Service.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersServiceSection.Providers">
            <summary>
            Gets the providers.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersServiceSection.DefaultProvider">
            <summary>
            Gets or sets the default provider.
            </summary>
            <value>The default provider.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EntityProviderBase`2">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityProvider&lt;Entity, EntityKey&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <typeparam name="EntityKey">The class of the EntityId
            property of the specified business object class.</typeparam>
            <remarks>
            This file is generated once and will never be overwritten.
            </remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityProvider&lt;Entity, EntityKey&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <typeparam name="EntityKey">The class of the EntityId
            property of the specified business object class.</typeparam>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.IEntityProvider`2">
            <summary>
            Defines the common data access methods that can be used by the
            ProviderDataSource control to interact with the underlying data store.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <typeparam name="EntityKey">The class of the EntityId
            property of the specified business object class.</typeparam>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IEntityProvider`2.Get(`1)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IEntityProvider`2.GetAll">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IEntityProvider`2.GetPaged(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IEntityProvider`2.Insert(`0)">
            <summary>
            Inserts a row into the DataSource.
            </summary>
            <param name="entity">The Entity object to insert.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IEntityProvider`2.Update(`0)">
            <summary>
            Updates an existing row in the DataSource.
            </summary>
            <param name="entity">The Entity object to update.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IEntityProvider`2.Delete(`0)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="entity">The Entity object to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IEntityProvider`2.Save(`0)">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IEntityProvider`2.DeepSave(`0)">
            <summary>
            Deep Save the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Get(`1)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Get(Nettiers.AdventureWorks.Data.TransactionManager,`1)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Get(`1,System.Int32,System.Int32)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Get(Nettiers.AdventureWorks.Data.TransactionManager,`1,System.Int32,System.Int32)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.GetAll">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.GetAll(Nettiers.AdventureWorks.Data.TransactionManager)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.GetAll(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.GetAll(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.GetAll(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.GetPaged(System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.GetPaged(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.GetPaged(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.GetPaged(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.GetPaged(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.GetPaged(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.GetTotalItems(System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.GetTotalItems(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Find(System.String)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Find(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Find(System.String,System.Int32,System.Int32)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Find(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32@)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Find(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Find(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Find(Nettiers.AdventureWorks.Data.IFilterParameterCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> or <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Find(Nettiers.AdventureWorks.Data.IFilterParameterCollection,Nettiers.AdventureWorks.Data.ISortColumnCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter and sortColumn conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> or <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlSortColumn"/> or <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> objects</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Find(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Data.IFilterParameterCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> or <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Find(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Data.IFilterParameterCollection,Nettiers.AdventureWorks.Data.ISortColumnCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter and sortColumn conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> or <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlSortColumn"/> or <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> objects</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Find(Nettiers.AdventureWorks.Data.IFilterParameterCollection,System.String)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> or <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Find(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Data.IFilterParameterCollection,System.String)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> or <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Find(Nettiers.AdventureWorks.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> or <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Find(Nettiers.AdventureWorks.Data.IFilterParameterCollection,Nettiers.AdventureWorks.Data.ISortColumnCollection,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter and sortColumn conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> or <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlSortColumn"/> or <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> objects</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Find(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> or <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Insert(`0)">
            <summary>
            Inserts a row into the DataSource.
            </summary>
            <param name="entity">The Entity object to insert.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Insert(Nettiers.AdventureWorks.Data.TransactionManager,`0)">
            <summary>
            Inserts a row into the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to insert.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Insert(Nettiers.AdventureWorks.Entities.TList{`0})">
            <summary>
            Inserts rows into the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to insert.</param>
            <returns>Returns the number of rows successfully inserted.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Insert(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TList{`0})">
            <summary>
            Inserts rows into the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to insert.</param>
            <returns>Returns the number of rows successfully inserted.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.BulkInsert(Nettiers.AdventureWorks.Entities.TList{`0})">
            <summary>
            Efficiently inserts multiple rows into the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to insert.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.BulkInsert(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TList{`0})">
            <summary>
            Efficiently inserts multiple rows into the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to insert.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Update(`0)">
            <summary>
            Updates an existing row in the DataSource.
            </summary>
            <param name="entity">The Entity object to update.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Update(Nettiers.AdventureWorks.Data.TransactionManager,`0)">
            <summary>
            Updates an existing row in the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to update.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Update(Nettiers.AdventureWorks.Entities.TList{`0})">
            <summary>
            Updates existing rows in the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to update.</param>
            <returns>Returns the number of rows successfully updated.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Update(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TList{`0})">
            <summary>
            Updates existing rows in the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to update.</param>
            <returns>Returns the number of rows successfully updated.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Save(`0)">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Save(Nettiers.AdventureWorks.Data.TransactionManager,`0)">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Save(Nettiers.AdventureWorks.Entities.TList{`0})">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Save(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TList{`0})">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Delete(`0)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="entity">The Entity object to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Delete(Nettiers.AdventureWorks.Data.TransactionManager,`0)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Delete(`1)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Delete(Nettiers.AdventureWorks.Data.TransactionManager,`1)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Delete(Nettiers.AdventureWorks.Entities.TList{`0})">
            <summary>
            Deletes rows from the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to delete.</param>
            <returns>Returns the number of rows successfully deleted.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TList{`0})">
            <summary>
            Deletes rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to delete.</param>
            <returns>Returns the number of rows successfully deleted.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoad(`0)">
            <summary>
            Deep Load the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="entity">The Entity object to load.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,`0)">
            <summary>
            Deep Load the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoad(`0,System.Boolean)">
            <summary>
            Deep Load the Entity object with all of the child property collections N levels deep.
            </summary>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,`0,System.Boolean)">
            <summary>
            Deep Load the Entity object with all of the child property collections N levels deep.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoad(`0,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,`0,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,`0,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            This method should be implemented by sub-classes to provide specific deep load functionality.
            </remarks>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
            <param name="innerList">A collection of child types for easy access.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TList{`0},System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            This method should be implemented by sub-classes to provide specific deep load functionality.
            </remarks>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entities">The Entity List object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
            <param name="innerList">A collection of child types for easy access.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoad(Nettiers.AdventureWorks.Entities.TList{`0})">
            <summary>
            Deep Load the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="entities">TList of Entity objects to load.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TList{`0})">
            <summary>
            Deep Load the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to load.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoad(Nettiers.AdventureWorks.Entities.TList{`0},System.Boolean)">
            <summary>
            Deep Load the Entity objects with all of the child property collections N levels deep.
            </summary>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TList{`0},System.Boolean)">
            <summary>
            Deep Load the Entity objects with all of the child property collections N levels deep.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoad(Nettiers.AdventureWorks.Entities.TList{`0},System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the Entity objects with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TList{`0},System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the Entity objects with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepSave(`0)">
            <summary>
            Deep Save the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,`0)">
            <summary>
            Deep Save the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepSave(`0,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the entire Entity object with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="entity">The Entity object to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,`0,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the entire Entity object with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,`0,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire Entity object with criteria based on the child types array and the DeepSaveType.
            </summary>
            <remarks>
            This method should be implemented by sub-classes to provide specific deep save functionality.
            </remarks>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
            <param name="innerList">A <c>DeepSession</c> of child types for easy access.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepSave(Nettiers.AdventureWorks.Entities.TList{`0})">
            <summary>
            Deep Save the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TList{`0})">
            <summary>
            Deep Save the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepSave(Nettiers.AdventureWorks.Entities.TList{`0},Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the Entity objects with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="entities">TList of Entity objects to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TList{`0},Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the Entity objects with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TList{`0},Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the Entity objects with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="mgr">The transaction manager.</param>
            <param name="entities">TList of Entity objects to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.CanDeepLoad(Nettiers.AdventureWorks.Entities.IEntity,System.String,Nettiers.AdventureWorks.Data.DeepLoadType,Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
             Enforces the rules set in order to load this property for a given type.
            </summary>
             <param name="entity">The entity.</param>
             <param name="key">The key.</param>
             <param name="deepLoadType">Type of the deep load.</param>
             <param name="innerList">The inner list.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.CanDeepSave(System.Object,System.String,Nettiers.AdventureWorks.Data.DeepSaveType,Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Enforces the rules set in order to save this property for a given type.
            </summary>
            <param name="entity">The entity.</param>
            <param name="key">The key.</param>
            <param name="deepSaveType">Type of the deep save.</param>
            <param name="innerList">The inner list.</param>
            <returns>
            	<c>true</c> if this instance [can deep save] the specified entity; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.GetDeepSessionArgs(Nettiers.AdventureWorks.Data.Bases.DeepSession,System.Enum,System.Object,System.String)">
            <summary>
            Gets the DeepSession Arguments for an event.
            </summary>
            <param name="deepSession">the current DeepSession.</param>
            <param name="deepTypeValue"> The Deep Type Value</param>
            <param name="obj">The current entity or list.</param>
            <param name="key">The key.</param>
            <returns>
            	<c>DeepSessionEventArgs</c> if the item being run is a valid entity or list.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.OnDataRequesting(Nettiers.AdventureWorks.Data.Bases.CommandEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just before accessing the 
                data provider.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.OnDataRequested(Nettiers.AdventureWorks.Data.Bases.CommandEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just after accessing the 
                data provider.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.OnDeepLoading(Nettiers.AdventureWorks.Data.Bases.DeepSessionEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just after accessing the 
                data provider.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.OnDeepSaving(Nettiers.AdventureWorks.Data.Bases.DeepSessionEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just after accessing the 
                data provider.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DataRequesting">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DataRequested">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoading">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="E:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepSaving">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DataRequestingEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DataRequestedEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepLoadingEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement 
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EntityProviderBaseCore`2.DeepSavingEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement 
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.WorkOrderRoutingKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.Delete(System.Int32,System.Int32,System.Int16)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.. Primary Key.</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.. Primary Key.</param>
            <param name="_operationSequence">Primary key. Indicates the manufacturing process sequence.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int16)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.. Primary Key.</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.. Primary Key.</param>
            <param name="_operationSequence">Primary key. Indicates the manufacturing process sequence.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByLocationId(System.Int16)">
            <summary>
            	Gets rows from the datasource based on the FK_WorkOrderRouting_Location_LocationID key.
            	FK_WorkOrderRouting_Location_LocationID Description: Foreign key constraint referencing Location.LocationID.
            </summary>
            <param name="_locationId">Manufacturing location where the part is processed. Foreign key to Location.LocationID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.WorkOrderRouting objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByLocationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16)">
            <summary>
            	Gets rows from the datasource based on the FK_WorkOrderRouting_Location_LocationID key.
            	FK_WorkOrderRouting_Location_LocationID Description: Foreign key constraint referencing Location.LocationID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_locationId">Manufacturing location where the part is processed. Foreign key to Location.LocationID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.WorkOrderRouting objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByLocationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_WorkOrderRouting_Location_LocationID key.
            	FK_WorkOrderRouting_Location_LocationID Description: Foreign key constraint referencing Location.LocationID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_locationId">Manufacturing location where the part is processed. Foreign key to Location.LocationID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.WorkOrderRouting objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByLocationId(System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_WorkOrderRouting_Location_LocationID key.
            	fkWorkOrderRoutingLocationLocationId Description: Foreign key constraint referencing Location.LocationID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_locationId">Manufacturing location where the part is processed. Foreign key to Location.LocationID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.WorkOrderRouting objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByLocationId(System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_WorkOrderRouting_Location_LocationID key.
            	fkWorkOrderRoutingLocationLocationId Description: Foreign key constraint referencing Location.LocationID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_locationId">Manufacturing location where the part is processed. Foreign key to Location.LocationID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.WorkOrderRouting objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByLocationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_WorkOrderRouting_Location_LocationID key.
            	FK_WorkOrderRouting_Location_LocationID Description: Foreign key constraint referencing Location.LocationID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_locationId">Manufacturing location where the part is processed. Foreign key to Location.LocationID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.WorkOrderRouting objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByWorkOrderId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_WorkOrderRouting_WorkOrder_WorkOrderID key.
            	FK_WorkOrderRouting_WorkOrder_WorkOrderID Description: Foreign key constraint referencing WorkOrder.WorkOrderID.
            </summary>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.WorkOrderRouting objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByWorkOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_WorkOrderRouting_WorkOrder_WorkOrderID key.
            	FK_WorkOrderRouting_WorkOrder_WorkOrderID Description: Foreign key constraint referencing WorkOrder.WorkOrderID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.WorkOrderRouting objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByWorkOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_WorkOrderRouting_WorkOrder_WorkOrderID key.
            	FK_WorkOrderRouting_WorkOrder_WorkOrderID Description: Foreign key constraint referencing WorkOrder.WorkOrderID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.WorkOrderRouting objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByWorkOrderId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_WorkOrderRouting_WorkOrder_WorkOrderID key.
            	fkWorkOrderRoutingWorkOrderWorkOrderId Description: Foreign key constraint referencing WorkOrder.WorkOrderID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.WorkOrderRouting objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByWorkOrderId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_WorkOrderRouting_WorkOrder_WorkOrderID key.
            	fkWorkOrderRoutingWorkOrderWorkOrderId Description: Foreign key constraint referencing WorkOrder.WorkOrderID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.WorkOrderRouting objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByWorkOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_WorkOrderRouting_WorkOrder_WorkOrderID key.
            	FK_WorkOrderRouting_WorkOrder_WorkOrderID Description: Foreign key constraint referencing WorkOrder.WorkOrderID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.WorkOrderRouting objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.WorkOrderRoutingKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_WorkOrderRouting_ProductID index.
            </summary>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_WorkOrderRouting_ProductID index.
            </summary>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_WorkOrderRouting_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_WorkOrderRouting_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_WorkOrderRouting_ProductID index.
            </summary>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_WorkOrderRouting_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByWorkOrderIdProductIdOperationSequence(System.Int32,System.Int32,System.Int16)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence index.
            </summary>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_operationSequence">Primary key. Indicates the manufacturing process sequence.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByWorkOrderIdProductIdOperationSequence(System.Int32,System.Int32,System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence index.
            </summary>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_operationSequence">Primary key. Indicates the manufacturing process sequence.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByWorkOrderIdProductIdOperationSequence(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int16)">
            <summary>
            	Gets rows from the datasource based on the PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_operationSequence">Primary key. Indicates the manufacturing process sequence.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByWorkOrderIdProductIdOperationSequence(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_operationSequence">Primary key. Indicates the manufacturing process sequence.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByWorkOrderIdProductIdOperationSequence(System.Int32,System.Int32,System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence index.
            </summary>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_operationSequence">Primary key. Indicates the manufacturing process sequence.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.GetByWorkOrderIdProductIdOperationSequence(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_workOrderId">Primary key. Foreign key to WorkOrder.WorkOrderID.</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_operationSequence">Primary key. Indicates the manufacturing process sequence.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.WorkOrderRouting},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;WorkOrderRouting&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.WorkOrderRouting)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.WorkOrderRouting)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.WorkOrderRouting,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.WorkOrderRouting Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.WorkOrderRouting,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.WorkOrderRouting object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.WorkOrderRouting instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.WorkOrderRouting Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.VendorContactKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_vendorId">Primary key.. Primary Key.</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key.. Primary Key.</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByVendorId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorContact_Vendor_VendorID key.
            	FK_VendorContact_Vendor_VendorID Description: Foreign key constraint referencing Vendor.VendorID.
            </summary>
            <param name="_vendorId">Primary key.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorContact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorContact_Vendor_VendorID key.
            	FK_VendorContact_Vendor_VendorID Description: Foreign key constraint referencing Vendor.VendorID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorContact objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorContact_Vendor_VendorID key.
            	FK_VendorContact_Vendor_VendorID Description: Foreign key constraint referencing Vendor.VendorID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorContact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByVendorId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorContact_Vendor_VendorID key.
            	fkVendorContactVendorVendorId Description: Foreign key constraint referencing Vendor.VendorID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_vendorId">Primary key.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorContact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByVendorId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorContact_Vendor_VendorID key.
            	fkVendorContactVendorVendorId Description: Foreign key constraint referencing Vendor.VendorID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_vendorId">Primary key.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorContact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorContact_Vendor_VendorID key.
            	FK_VendorContact_Vendor_VendorID Description: Foreign key constraint referencing Vendor.VendorID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorContact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.VendorContactKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByContactId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_VendorContact_ContactID index.
            </summary>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByContactId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_VendorContact_ContactID index.
            </summary>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_VendorContact_ContactID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_VendorContact_ContactID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByContactId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_VendorContact_ContactID index.
            </summary>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_VendorContact_ContactID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByContactTypeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_VendorContact_ContactTypeID index.
            </summary>
            <param name="_contactTypeId">Contact type such as sales manager, or sales agent.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByContactTypeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_VendorContact_ContactTypeID index.
            </summary>
            <param name="_contactTypeId">Contact type such as sales manager, or sales agent.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByContactTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_VendorContact_ContactTypeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactTypeId">Contact type such as sales manager, or sales agent.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByContactTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_VendorContact_ContactTypeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactTypeId">Contact type such as sales manager, or sales agent.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByContactTypeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_VendorContact_ContactTypeID index.
            </summary>
            <param name="_contactTypeId">Contact type such as sales manager, or sales agent.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByContactTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_VendorContact_ContactTypeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactTypeId">Contact type such as sales manager, or sales agent.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByVendorIdContactId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_VendorContact_VendorID_ContactID index.
            </summary>
            <param name="_vendorId">Primary key.</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByVendorIdContactId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VendorContact_VendorID_ContactID index.
            </summary>
            <param name="_vendorId">Primary key.</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByVendorIdContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VendorContact_VendorID_ContactID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key.</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByVendorIdContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VendorContact_VendorID_ContactID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key.</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByVendorIdContactId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VendorContact_VendorID_ContactID index.
            </summary>
            <param name="_vendorId">Primary key.</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.GetByVendorIdContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VendorContact_VendorID_ContactID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key.</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.VendorContact},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;VendorContact&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VendorContact)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.VendorContact)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.VendorContact,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.VendorContact Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.VendorContact,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.VendorContact object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.VendorContact instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.VendorContact Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorContactChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.VendorContact</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.VendorContactChildEntityTypes.Contact">
            <summary>
             Composite Property for <c>Contact</c> at ContactIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.VendorContactChildEntityTypes.ContactType">
            <summary>
             Composite Property for <c>ContactType</c> at ContactTypeIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.VendorContactChildEntityTypes.Vendor">
            <summary>
             Composite Property for <c>Vendor</c> at VendorIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorContactFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1">
            <summary>
            Allows for building SQL filter expressions using strongly-typed
            column enumeration values.
            </summary>
            <typeparam name="EntityColumn">An enumeration of entity column names.</typeparam>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SqlStringBuilder">
            <summary>
            Represents a SQL filter expression.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.#ctor">
            <summary>
            Initializes a new instance of the SqlStringBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SqlStringBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlStringBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.Append(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.Append(System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.Append(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendEquals(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendNotEquals(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            as a NOT EQUALS expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendNotEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendIn(System.String,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendIn(System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendIn(System.String,System.String,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendIn(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendNotIn(System.String,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendNotIn(System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendNotIn(System.String,System.String,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendNotIn(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendInQuery(System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendInQuery(System.String,System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendNotInQuery(System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendNotInQuery(System.String,System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendRange(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendRange(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendNotRange(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendNotRange(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendIsNull(System.String)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendIsNull(System.String,System.String)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendIsNotNull(System.String)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendIsNotNull(System.String,System.String)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendGreaterThan(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendGreaterThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendGreaterThanOrEqual(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendGreaterThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendLessThan(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendLessThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendLessThanOrEqual(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendLessThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendStartsWith(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendStartsWith(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendEndsWith(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendEndsWith(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendContains(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendContains(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendNotContains(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendNotContains(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendLike(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendLike(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendNotLike(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendNotLike(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the SQL expression to the internal <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="junction">The junction.</param>
            <param name="column">The column.</param>
            <param name="compare">The compare.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.AppendInternal(System.String,System.String)">
            <summary>
            Appends the SQL expression to the internal <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="junction">The junction.</param>
            <param name="query">The query.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.Clear">
            <summary>
            Clears the internal string buffer.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.ToString">
            <summary>
            Converts the value of this instance to a System.String.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.ToString(System.String)">
            <summary>
            Converts the value of this instance to a System.String and
            prepends the specified junction if the expression is not empty.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.Parse(System.String,System.String,System.Boolean)">
            <summary>
            Parses the specified searchText to create a SQL filter expression.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.GetInQueryValues(System.String,System.Boolean)">
            <summary>
            Gets an encoded list of values for use with an IN clause.
            </summary>
            <param name="values">Comma string with the in parameters already in one string</param>
            <param name="encode">tells whether or not to enclose the parameters with ' and to replace ' with '' within the parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.GetInQueryValues(System.String[],System.Boolean)">
            <summary>
            Gets an encoded list of values for use with an IN clause.
            </summary>
            <param name="values">String Array with the in parameters</param>
            <param name="encode">tells whether or not to enclose the parameters with ' and to replace ' with '' within the parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.BeginGroup">
            <summary>
            Begins a new group of parameters by adding an open parenthesis "("
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.BeginGroup(System.String)">
            <summary>
            Begins a new groups of parameters using the specified junction operator
            </summary>
            <param name="junction">The junction operator to be used</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.EndGroup">
            <summary>
            Ends a group of parameters by add a closing parenthesis ")"
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlStringBuilder.EnsureGroups">
            <summary>
            Makes sure that all groups have been ended (each call to BeginGroup has a corresponding EndGroup)
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlStringBuilder.junction">
            <summary>
            The Junction member variable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlStringBuilder.ignoreCase">
            <summary>
            The IgnoreCase member variable.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlStringBuilder.Junction">
            <summary>
            Gets or sets the Junction property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlStringBuilder.IgnoreCase">
            <summary>
            Gets or sets the IgnoreCase property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlStringBuilder.Length">
            <summary>
            Gets or sets the length of the internal StringBuilder object.
            </summary>
            <value>The length.</value>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the SqlFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SqlFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.Append(`0,System.String)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.Append(`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.Append(System.String,`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendEquals(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendNotEquals(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter
            as a NOT EQUALS expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendNotEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendIn(`0,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendIn(`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendIn(System.String,`0,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendIn(System.String,`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendNotIn(`0,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendNotIn(`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendNotIn(System.String,`0,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendNotIn(System.String,`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendInQuery(`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendNotInQuery(`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendNotInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendIsNull(`0)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendIsNull(System.String,`0)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendIsNotNull(`0)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendIsNotNull(System.String,`0)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendRange(`0,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendRange(System.String,`0,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendNotRange(`0,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendNotRange(System.String,`0,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendGreaterThan(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendGreaterThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendGreaterThanOrEqual(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendGreaterThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendLessThan(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendLessThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendLessThanOrEqual(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendLessThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendStartsWith(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendStartsWith(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendEndsWith(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendEndsWith(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendContains(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendContains(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendNotContains(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendNotContains(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendLike(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendLike(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendNotLike(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.AppendNotLike(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1.GetColumnName(`0)">
            <summary>
            Gets the column name from the specified column enumeration value.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VendorContactFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VendorContactFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VendorContactFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorContactParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1">
            <summary>
            Allows for building parameterized SQL filter expressions using strongly-typed
            column enumeration values.
            </summary>
            <typeparam name="EntityColumn">An enumeration of entity column names.</typeparam>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.IFilterParameterCollection">
            <summary>
              Represents a type which will contain a method to 
              retrieve the A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameterCollection"/> 
              objects to use dynamic and parameterized filters.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IFilterParameterCollection.GetParameters">
            <summary>
            Gets a collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects
            </summary>
            <returns><see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameterCollection"/> object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the ParameterizedSqlFilterBuilder&lt;EntityColumn&gt; class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlFilterBuilder&lt;EntityColumn&gt; class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlFilterBuilder&lt;EntityColumn&gt; class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.Append(System.String,`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendNotEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendNotEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendIn(System.String,`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendIn(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendNotIn(System.String,`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendNotIn(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendNotInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendRange(System.String,`0,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendRange(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendNotRange(System.String,`0,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendNotRange(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendGreaterThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendGreaterThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendGreaterThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendGreaterThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendLessThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendLessThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendLessThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendLessThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendStartsWith(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendStartsWith(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendEndsWith(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendEndsWith(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendContains(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendContains(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendNotContains(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendNotContains(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendLike(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.AppendLike(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.Parse(System.String,System.String,System.Boolean)">
            <summary>
            Parses the specified searchText to create a SQL filter expression.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.GetInQueryValues(System.String,System.Boolean)">
            <summary>
            Gets an encoded list of values for use with an IN clause.
            </summary>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.GetParameters">
            <summary>
            Gets the current collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects and
            also sets the collection's FilterExpression property.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.parameters">
            <summary>
            The Parameters member variable.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.Nettiers#AdventureWorks#Data#IFilterParameterCollection#GetParameters">
            <summary>
            Gets a collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1.Parameters">
            <summary>
            Gets or sets the Parameters property.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VendorContactParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VendorContactParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VendorContactParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorContactSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1">
            <summary>
            Allows for building SQL OrderBy expressions using strongly-typed column enumeration values.
            </summary>
            <typeparam name="EntityColumn">An enumeration of entity column names.</typeparam>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ISortColumnCollection">
            <summary>
              Represents a type which will contain a method to 
              retrieve the A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlSortColumnCollection"/> 
              objects to generate an OrderBy clause.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ISortColumnCollection.GetSortColumns">
            <summary>
            Gets a collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlSortColumn"/> objects
            </summary>
            <returns><see cref="T:Nettiers.AdventureWorks.Data.SqlSortColumnCollection"/> object</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlSortBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the SqlFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlSortBuilder`1.Append(System.Enum,Nettiers.AdventureWorks.Data.SqlSortDirection)">
            <summary>
            Appends the specified column and sorts it by the specified SqlSortDirection 
            </summary>
            <param name="column">The column to sort</param>
            <param name="sortDirection">The specified column's sort direction</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlSortBuilder`1.AppendASC(System.Enum)">
            <summary>
            Appends the specified column and sorts it Ascending
            </summary>
            <param name="column">The column to sort</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlSortBuilder`1.AppendDESC(System.Enum)">
            <summary>
            Appends the specified column and sorts it Descending
            </summary>
            <param name="column">The column to sort</param>
            <returns></returns>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlSortBuilder`1.sortColumns">
            <summary>
            The Sort Columns member variable.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlSortBuilder`1.AddColumn(System.Enum,Nettiers.AdventureWorks.Data.SqlSortDirection)">
            <summary>
            Adds a column to the sort builder
            </summary>
            <param name="column">The entity's column to sort by</param>
            <param name="sortDirection">The sort direction</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlSortBuilder`1.ToString">
            <summary>
            Provides the actual SQL sort string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlSortBuilder`1.GetColumnName(`0)">
            <summary>
            Gets the column name from the specified column enumeration value.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlSortBuilder`1.GetSortColumns">
            <summary>
            Gets the current collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects and
            also sets the collection's FilterExpression property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlSortBuilder`1.Nettiers#AdventureWorks#Data#ISortColumnCollection#GetSortColumns">
            <summary>
            Gets a collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlSortBuilder`1.SortColumns">
            <summary>
            Gets or sets the SortColumns property.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorContactSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VendorContactSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TransactionHistoryKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_transactionId">Primary key for TransactionHistory records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_transactionId">Primary key for TransactionHistory records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TransactionHistoryKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_TransactionHistory_ProductID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistory_ProductID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistory_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistory_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistory_ProductID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistory_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByReferenceOrderIdReferenceOrderLineId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID index.
            </summary>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByReferenceOrderIdReferenceOrderLineId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID index.
            </summary>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByReferenceOrderIdReferenceOrderLineId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByReferenceOrderIdReferenceOrderLineId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByReferenceOrderIdReferenceOrderLineId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID index.
            </summary>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByReferenceOrderIdReferenceOrderLineId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByTransactionId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_TransactionHistory_TransactionID index.
            </summary>
            <param name="_transactionId">Primary key for TransactionHistory records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByTransactionId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TransactionHistory_TransactionID index.
            </summary>
            <param name="_transactionId">Primary key for TransactionHistory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByTransactionId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TransactionHistory_TransactionID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_transactionId">Primary key for TransactionHistory records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByTransactionId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TransactionHistory_TransactionID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_transactionId">Primary key for TransactionHistory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByTransactionId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_TransactionHistory_TransactionID index.
            </summary>
            <param name="_transactionId">Primary key for TransactionHistory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.GetByTransactionId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_TransactionHistory_TransactionID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_transactionId">Primary key for TransactionHistory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.TransactionHistory},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;TransactionHistory&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TransactionHistory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.TransactionHistory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TransactionHistory,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.TransactionHistory Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TransactionHistory,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.TransactionHistory object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.TransactionHistory instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.TransactionHistory Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.TransactionHistory</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryChildEntityTypes.Product">
            <summary>
             Composite Property for <c>Product</c> at ProductIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TransactionHistoryFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TransactionHistoryParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistorySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistorySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the TransactionHistorySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesPersonKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_salesPersonId">Primary key for SalesPerson records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Primary key for SalesPerson records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetByTerritoryId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_SalesPerson_SalesTerritory_TerritoryID key.
            	FK_SalesPerson_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="_territoryId">Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesPerson objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_SalesPerson_SalesTerritory_TerritoryID key.
            	FK_SalesPerson_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesPerson objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesPerson_SalesTerritory_TerritoryID key.
            	FK_SalesPerson_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesPerson objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetByTerritoryId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesPerson_SalesTerritory_TerritoryID key.
            	fkSalesPersonSalesTerritoryTerritoryId Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_territoryId">Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesPerson objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetByTerritoryId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesPerson_SalesTerritory_TerritoryID key.
            	fkSalesPersonSalesTerritoryTerritoryId Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_territoryId">Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesPerson objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesPerson_SalesTerritory_TerritoryID key.
            	FK_SalesPerson_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesPerson objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesPersonKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_SalesPerson_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesPerson_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesPerson_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesPerson_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesPerson_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesPerson_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetBySalesPersonId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_SalesPerson_SalesPersonID index.
            </summary>
            <param name="_salesPersonId">Primary key for SalesPerson records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetBySalesPersonId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesPerson_SalesPersonID index.
            </summary>
            <param name="_salesPersonId">Primary key for SalesPerson records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetBySalesPersonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesPerson_SalesPersonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Primary key for SalesPerson records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetBySalesPersonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesPerson_SalesPersonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Primary key for SalesPerson records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetBySalesPersonId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesPerson_SalesPersonID index.
            </summary>
            <param name="_salesPersonId">Primary key for SalesPerson records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.GetBySalesPersonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesPerson_SalesPersonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Primary key for SalesPerson records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.SalesPerson},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;SalesPerson&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.SalesPerson)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.SalesPerson)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesPerson,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesPerson Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesPerson,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.SalesPerson object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.SalesPerson instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesPerson Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductVendorKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.. Primary Key.</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.. Primary Key.</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductVendor_Product_ProductID key.
            	FK_ProductVendor_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductVendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductVendor_Product_ProductID key.
            	FK_ProductVendor_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductVendor objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductVendor_Product_ProductID key.
            	FK_ProductVendor_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductVendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductVendor_Product_ProductID key.
            	fkProductVendorProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductVendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductVendor_Product_ProductID key.
            	fkProductVendorProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductVendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductVendor_Product_ProductID key.
            	FK_ProductVendor_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductVendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductVendorKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByUnitMeasureCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_ProductVendor_UnitMeasureCode index.
            </summary>
            <param name="_unitMeasureCode">The product's unit of measure.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByUnitMeasureCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_ProductVendor_UnitMeasureCode index.
            </summary>
            <param name="_unitMeasureCode">The product's unit of measure.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByUnitMeasureCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_ProductVendor_UnitMeasureCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_unitMeasureCode">The product's unit of measure.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByUnitMeasureCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_ProductVendor_UnitMeasureCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_unitMeasureCode">The product's unit of measure.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByUnitMeasureCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_ProductVendor_UnitMeasureCode index.
            </summary>
            <param name="_unitMeasureCode">The product's unit of measure.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByUnitMeasureCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_ProductVendor_UnitMeasureCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_unitMeasureCode">The product's unit of measure.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByVendorId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_ProductVendor_VendorID index.
            </summary>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByVendorId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_ProductVendor_VendorID index.
            </summary>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_ProductVendor_VendorID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_ProductVendor_VendorID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByVendorId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_ProductVendor_VendorID index.
            </summary>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_ProductVendor_VendorID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByProductIdVendorId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ProductVendor_ProductID_VendorID index.
            </summary>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByProductIdVendorId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductVendor_ProductID_VendorID index.
            </summary>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByProductIdVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductVendor_ProductID_VendorID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByProductIdVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductVendor_ProductID_VendorID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByProductIdVendorId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductVendor_ProductID_VendorID index.
            </summary>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.GetByProductIdVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductVendor_ProductID_VendorID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ProductVendor},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ProductVendor&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ProductVendor)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ProductVendor)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductVendor,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductVendor Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductVendor,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ProductVendor object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ProductVendor instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductVendor Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductVendorChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ProductVendor</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductVendorChildEntityTypes.Product">
            <summary>
             Composite Property for <c>Product</c> at ProductIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductVendorChildEntityTypes.UnitMeasure">
            <summary>
             Composite Property for <c>UnitMeasure</c> at UnitMeasureCodeSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductVendorChildEntityTypes.Vendor">
            <summary>
             Composite Property for <c>Vendor</c> at VendorIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductVendorFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductVendorFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductVendorFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductVendorFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductVendorParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductVendorParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductVendorParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductVendorParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductVendorSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductVendorSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductVendorSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.IndividualKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_customerId">Unique customer identification number. Foreign key to Customer.CustomerID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Unique customer identification number. Foreign key to Customer.CustomerID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByContactId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Individual_Contact_ContactID key.
            	FK_Individual_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="_contactId">Identifies the customer in the Contact table. Foreign key to Contact.ContactID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Individual objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Individual_Contact_ContactID key.
            	FK_Individual_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Identifies the customer in the Contact table. Foreign key to Contact.ContactID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Individual objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Individual_Contact_ContactID key.
            	FK_Individual_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Identifies the customer in the Contact table. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Individual objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByContactId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Individual_Contact_ContactID key.
            	fkIndividualContactContactId Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_contactId">Identifies the customer in the Contact table. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Individual objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByContactId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Individual_Contact_ContactID key.
            	fkIndividualContactContactId Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_contactId">Identifies the customer in the Contact table. Foreign key to Contact.ContactID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Individual objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Individual_Contact_ContactID key.
            	FK_Individual_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Identifies the customer in the Contact table. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Individual objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.IndividualKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByCustomerId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Individual_CustomerID index.
            </summary>
            <param name="_customerId">Unique customer identification number. Foreign key to Customer.CustomerID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByCustomerId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Individual_CustomerID index.
            </summary>
            <param name="_customerId">Unique customer identification number. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Individual_CustomerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Unique customer identification number. Foreign key to Customer.CustomerID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Individual_CustomerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Unique customer identification number. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByCustomerId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Individual_CustomerID index.
            </summary>
            <param name="_customerId">Unique customer identification number. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Individual_CustomerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Unique customer identification number. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByDemographics(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PXML_Individual_Demographics index.
            </summary>
            <param name="_demographics">Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByDemographics(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PXML_Individual_Demographics index.
            </summary>
            <param name="_demographics">Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByDemographics(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PXML_Individual_Demographics index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_demographics">Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByDemographics(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PXML_Individual_Demographics index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_demographics">Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByDemographics(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PXML_Individual_Demographics index.
            </summary>
            <param name="_demographics">Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.GetByDemographics(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PXML_Individual_Demographics index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_demographics">Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.Individual},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Individual&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.Individual)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.Individual)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Individual,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Individual Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Individual,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.Individual object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.Individual instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Individual Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.Delete(System.Int32,System.DateTime,System.Int16,System.Byte)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.. Primary Key.</param>
            <param name="_startDate">Date the employee started work in the department.. Primary Key.</param>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.. Primary Key.</param>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int16,System.Byte)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.. Primary Key.</param>
            <param name="_startDate">Date the employee started work in the department.. Primary Key.</param>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.. Primary Key.</param>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByEmployeeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeDepartmentHistory_Employee_EmployeeID key.
            	FK_EmployeeDepartmentHistory_Employee_EmployeeID Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeDepartmentHistory_Employee_EmployeeID key.
            	FK_EmployeeDepartmentHistory_Employee_EmployeeID Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeDepartmentHistory_Employee_EmployeeID key.
            	FK_EmployeeDepartmentHistory_Employee_EmployeeID Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByEmployeeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeDepartmentHistory_Employee_EmployeeID key.
            	fkEmployeeDepartmentHistoryEmployeeEmployeeId Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByEmployeeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeDepartmentHistory_Employee_EmployeeID key.
            	fkEmployeeDepartmentHistoryEmployeeEmployeeId Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeDepartmentHistory_Employee_EmployeeID key.
            	FK_EmployeeDepartmentHistory_Employee_EmployeeID Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistoryKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByDepartmentId(System.Int16)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_EmployeeDepartmentHistory_DepartmentID index.
            </summary>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByDepartmentId(System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_EmployeeDepartmentHistory_DepartmentID index.
            </summary>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByDepartmentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16)">
            <summary>
            	Gets rows from the datasource based on the IX_EmployeeDepartmentHistory_DepartmentID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByDepartmentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_EmployeeDepartmentHistory_DepartmentID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByDepartmentId(System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_EmployeeDepartmentHistory_DepartmentID index.
            </summary>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByDepartmentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_EmployeeDepartmentHistory_DepartmentID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByShiftId(System.Byte)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_EmployeeDepartmentHistory_ShiftID index.
            </summary>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByShiftId(System.Byte,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_EmployeeDepartmentHistory_ShiftID index.
            </summary>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByShiftId(Nettiers.AdventureWorks.Data.TransactionManager,System.Byte)">
            <summary>
            	Gets rows from the datasource based on the IX_EmployeeDepartmentHistory_ShiftID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByShiftId(Nettiers.AdventureWorks.Data.TransactionManager,System.Byte,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_EmployeeDepartmentHistory_ShiftID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByShiftId(System.Byte,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_EmployeeDepartmentHistory_ShiftID index.
            </summary>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByShiftId(Nettiers.AdventureWorks.Data.TransactionManager,System.Byte,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_EmployeeDepartmentHistory_ShiftID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByEmployeeIdStartDateDepartmentIdShiftId(System.Int32,System.DateTime,System.Int16,System.Byte)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_EmployeeDepartmentHistory_EmployeeID_StartDate_DepartmentID index.
            </summary>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_startDate">Date the employee started work in the department.</param>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.</param>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByEmployeeIdStartDateDepartmentIdShiftId(System.Int32,System.DateTime,System.Int16,System.Byte,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeeDepartmentHistory_EmployeeID_StartDate_DepartmentID index.
            </summary>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_startDate">Date the employee started work in the department.</param>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.</param>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByEmployeeIdStartDateDepartmentIdShiftId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int16,System.Byte)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeeDepartmentHistory_EmployeeID_StartDate_DepartmentID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_startDate">Date the employee started work in the department.</param>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.</param>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByEmployeeIdStartDateDepartmentIdShiftId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int16,System.Byte,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeeDepartmentHistory_EmployeeID_StartDate_DepartmentID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_startDate">Date the employee started work in the department.</param>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.</param>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByEmployeeIdStartDateDepartmentIdShiftId(System.Int32,System.DateTime,System.Int16,System.Byte,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeeDepartmentHistory_EmployeeID_StartDate_DepartmentID index.
            </summary>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_startDate">Date the employee started work in the department.</param>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.</param>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.GetByEmployeeIdStartDateDepartmentIdShiftId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int16,System.Byte,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeeDepartmentHistory_EmployeeID_StartDate_DepartmentID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_startDate">Date the employee started work in the department.</param>
            <param name="_departmentId">Department in which the employee worked including currently. Foreign key to Department.DepartmentID.</param>
            <param name="_shiftId">Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;EmployeeDepartmentHistory&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByCountryRegionCodeFromCountryRegionCurrency(System.String)">
            <summary>
            	Gets Currency objects from the datasource by CountryRegionCode in the
            	CountryRegionCurrency table. Table Currency is related to table CountryRegion
            	through the (M:N) relationship defined in the CountryRegionCurrency table.
            </summary>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <returns>Returns a typed collection of Currency objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByCountryRegionCodeFromCountryRegionCurrency(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Currency objects from the datasource by CountryRegionCode in the
            	CountryRegionCurrency table. Table Currency is related to table CountryRegion
            	through the (M:N) relationship defined in the CountryRegionCurrency table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <remarks></remarks>
            <returns>Returns a TList of Currency objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByCountryRegionCodeFromCountryRegionCurrency(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets Currency objects from the datasource by CountryRegionCode in the
            	CountryRegionCurrency table. Table Currency is related to table CountryRegion
            	through the (M:N) relationship defined in the CountryRegionCurrency table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Currency objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByCountryRegionCodeFromCountryRegionCurrency(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets Currency objects from the datasource by CountryRegionCode in the
            	CountryRegionCurrency table. Table Currency is related to table CountryRegion
            	through the (M:N) relationship defined in the CountryRegionCurrency table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Currency objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByCountryRegionCodeFromCountryRegionCurrency(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Currency objects from the datasource by CountryRegionCode in the
            	CountryRegionCurrency table. Table Currency is related to table CountryRegion
            	through the (M:N) relationship defined in the CountryRegionCurrency table.
            </summary>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Currency objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByCountryRegionCodeFromCountryRegionCurrency(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Currency objects from the datasource by CountryRegionCode in the
            	CountryRegionCurrency table. Table Currency is related to table CountryRegion
            	through the (M:N) relationship defined in the CountryRegionCurrency table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <remarks></remarks>
            <returns>Returns a TList of Currency objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CurrencyKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_currencyCode">The ISO code for the Currency.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyCode">The ISO code for the Currency.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CurrencyKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Currency_Name index.
            </summary>
            <param name="_name">Currency name.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Currency_Name index.
            </summary>
            <param name="_name">Currency name.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_Currency_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Currency name.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Currency_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Currency name.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Currency_Name index.
            </summary>
            <param name="_name">Currency name.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Currency_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Currency name.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByCurrencyCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Currency_CurrencyCode index.
            </summary>
            <param name="_currencyCode">The ISO code for the Currency.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByCurrencyCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Currency_CurrencyCode index.
            </summary>
            <param name="_currencyCode">The ISO code for the Currency.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PK_Currency_CurrencyCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyCode">The ISO code for the Currency.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Currency_CurrencyCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyCode">The ISO code for the Currency.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByCurrencyCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Currency_CurrencyCode index.
            </summary>
            <param name="_currencyCode">The ISO code for the Currency.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.GetByCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Currency_CurrencyCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyCode">The ISO code for the Currency.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.Currency},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Currency&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.Currency)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.Currency)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Currency,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Currency Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Currency,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.Currency object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.Currency instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Currency Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.StateProvinceKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_stateProvinceId">Primary key for StateProvince records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceId">Primary key for StateProvince records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByCountryRegionCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_StateProvince_CountryRegion_CountryRegionCode key.
            	FK_StateProvince_CountryRegion_CountryRegionCode Description: Foreign key constraint referencing CountryRegion.CountryRegionCode.
            </summary>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StateProvince objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByCountryRegionCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_StateProvince_CountryRegion_CountryRegionCode key.
            	FK_StateProvince_CountryRegion_CountryRegionCode Description: Foreign key constraint referencing CountryRegion.CountryRegionCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StateProvince objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByCountryRegionCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_StateProvince_CountryRegion_CountryRegionCode key.
            	FK_StateProvince_CountryRegion_CountryRegionCode Description: Foreign key constraint referencing CountryRegion.CountryRegionCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StateProvince objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByCountryRegionCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_StateProvince_CountryRegion_CountryRegionCode key.
            	fkStateProvinceCountryRegionCountryRegionCode Description: Foreign key constraint referencing CountryRegion.CountryRegionCode.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StateProvince objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByCountryRegionCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_StateProvince_CountryRegion_CountryRegionCode key.
            	fkStateProvinceCountryRegionCountryRegionCode Description: Foreign key constraint referencing CountryRegion.CountryRegionCode.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StateProvince objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByCountryRegionCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_StateProvince_CountryRegion_CountryRegionCode key.
            	FK_StateProvince_CountryRegion_CountryRegionCode Description: Foreign key constraint referencing CountryRegion.CountryRegionCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StateProvince objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByTerritoryId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_StateProvince_SalesTerritory_TerritoryID key.
            	FK_StateProvince_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="_territoryId">ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StateProvince objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_StateProvince_SalesTerritory_TerritoryID key.
            	FK_StateProvince_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StateProvince objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_StateProvince_SalesTerritory_TerritoryID key.
            	FK_StateProvince_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StateProvince objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByTerritoryId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_StateProvince_SalesTerritory_TerritoryID key.
            	fkStateProvinceSalesTerritoryTerritoryId Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_territoryId">ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StateProvince objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByTerritoryId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_StateProvince_SalesTerritory_TerritoryID key.
            	fkStateProvinceSalesTerritoryTerritoryId Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_territoryId">ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StateProvince objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_StateProvince_SalesTerritory_TerritoryID key.
            	FK_StateProvince_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StateProvince objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.StateProvinceKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_StateProvince_Name index.
            </summary>
            <param name="_name">State or province description.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_StateProvince_Name index.
            </summary>
            <param name="_name">State or province description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_StateProvince_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">State or province description.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_StateProvince_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">State or province description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_StateProvince_Name index.
            </summary>
            <param name="_name">State or province description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_StateProvince_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">State or province description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_StateProvince_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_StateProvince_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_StateProvince_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_StateProvince_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_StateProvince_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_StateProvince_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByStateProvinceCodeCountryRegionCode(System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_StateProvince_StateProvinceCode_CountryRegionCode index.
            </summary>
            <param name="_stateProvinceCode">ISO standard state or province code.</param>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByStateProvinceCodeCountryRegionCode(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_StateProvince_StateProvinceCode_CountryRegionCode index.
            </summary>
            <param name="_stateProvinceCode">ISO standard state or province code.</param>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByStateProvinceCodeCountryRegionCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_StateProvince_StateProvinceCode_CountryRegionCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceCode">ISO standard state or province code.</param>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByStateProvinceCodeCountryRegionCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_StateProvince_StateProvinceCode_CountryRegionCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceCode">ISO standard state or province code.</param>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByStateProvinceCodeCountryRegionCode(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_StateProvince_StateProvinceCode_CountryRegionCode index.
            </summary>
            <param name="_stateProvinceCode">ISO standard state or province code.</param>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByStateProvinceCodeCountryRegionCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_StateProvince_StateProvinceCode_CountryRegionCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceCode">ISO standard state or province code.</param>
            <param name="_countryRegionCode">ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByStateProvinceId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_StateProvince_StateProvinceID index.
            </summary>
            <param name="_stateProvinceId">Primary key for StateProvince records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByStateProvinceId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_StateProvince_StateProvinceID index.
            </summary>
            <param name="_stateProvinceId">Primary key for StateProvince records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByStateProvinceId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_StateProvince_StateProvinceID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceId">Primary key for StateProvince records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByStateProvinceId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_StateProvince_StateProvinceID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceId">Primary key for StateProvince records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByStateProvinceId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_StateProvince_StateProvinceID index.
            </summary>
            <param name="_stateProvinceId">Primary key for StateProvince records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.GetByStateProvinceId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_StateProvince_StateProvinceID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceId">Primary key for StateProvince records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.StateProvince},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;StateProvince&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.StateProvince)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.StateProvince)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.StateProvince,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.StateProvince Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.StateProvince,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.StateProvince object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.StateProvince instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.StateProvince Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesTaxRateKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_salesTaxRateId">Primary key for SalesTaxRate records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesTaxRateId">Primary key for SalesTaxRate records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByStateProvinceId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTaxRate_StateProvince_StateProvinceID key.
            	FK_SalesTaxRate_StateProvince_StateProvinceID Description: Foreign key constraint referencing StateProvince.StateProvinceID.
            </summary>
            <param name="_stateProvinceId">State, province, or country/region the sales tax applies to.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTaxRate objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByStateProvinceId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTaxRate_StateProvince_StateProvinceID key.
            	FK_SalesTaxRate_StateProvince_StateProvinceID Description: Foreign key constraint referencing StateProvince.StateProvinceID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceId">State, province, or country/region the sales tax applies to.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTaxRate objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByStateProvinceId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTaxRate_StateProvince_StateProvinceID key.
            	FK_SalesTaxRate_StateProvince_StateProvinceID Description: Foreign key constraint referencing StateProvince.StateProvinceID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceId">State, province, or country/region the sales tax applies to.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTaxRate objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByStateProvinceId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTaxRate_StateProvince_StateProvinceID key.
            	fkSalesTaxRateStateProvinceStateProvinceId Description: Foreign key constraint referencing StateProvince.StateProvinceID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_stateProvinceId">State, province, or country/region the sales tax applies to.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTaxRate objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByStateProvinceId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTaxRate_StateProvince_StateProvinceID key.
            	fkSalesTaxRateStateProvinceStateProvinceId Description: Foreign key constraint referencing StateProvince.StateProvinceID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_stateProvinceId">State, province, or country/region the sales tax applies to.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTaxRate objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByStateProvinceId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTaxRate_StateProvince_StateProvinceID key.
            	FK_SalesTaxRate_StateProvince_StateProvinceID Description: Foreign key constraint referencing StateProvince.StateProvinceID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceId">State, province, or country/region the sales tax applies to.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTaxRate objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesTaxRateKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_SalesTaxRate_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTaxRate_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTaxRate_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTaxRate_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTaxRate_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTaxRate_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByStateProvinceIdTaxType(System.Int32,System.Byte)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_SalesTaxRate_StateProvinceID_TaxType index.
            </summary>
            <param name="_stateProvinceId">State, province, or country/region the sales tax applies to.</param>
            <param name="_taxType">1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByStateProvinceIdTaxType(System.Int32,System.Byte,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTaxRate_StateProvinceID_TaxType index.
            </summary>
            <param name="_stateProvinceId">State, province, or country/region the sales tax applies to.</param>
            <param name="_taxType">1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByStateProvinceIdTaxType(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Byte)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTaxRate_StateProvinceID_TaxType index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceId">State, province, or country/region the sales tax applies to.</param>
            <param name="_taxType">1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByStateProvinceIdTaxType(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Byte,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTaxRate_StateProvinceID_TaxType index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceId">State, province, or country/region the sales tax applies to.</param>
            <param name="_taxType">1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByStateProvinceIdTaxType(System.Int32,System.Byte,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTaxRate_StateProvinceID_TaxType index.
            </summary>
            <param name="_stateProvinceId">State, province, or country/region the sales tax applies to.</param>
            <param name="_taxType">1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetByStateProvinceIdTaxType(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Byte,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTaxRate_StateProvinceID_TaxType index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceId">State, province, or country/region the sales tax applies to.</param>
            <param name="_taxType">1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetBySalesTaxRateId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_SalesTaxRate_SalesTaxRateID index.
            </summary>
            <param name="_salesTaxRateId">Primary key for SalesTaxRate records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetBySalesTaxRateId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesTaxRate_SalesTaxRateID index.
            </summary>
            <param name="_salesTaxRateId">Primary key for SalesTaxRate records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetBySalesTaxRateId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesTaxRate_SalesTaxRateID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesTaxRateId">Primary key for SalesTaxRate records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetBySalesTaxRateId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesTaxRate_SalesTaxRateID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesTaxRateId">Primary key for SalesTaxRate records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetBySalesTaxRateId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesTaxRate_SalesTaxRateID index.
            </summary>
            <param name="_salesTaxRateId">Primary key for SalesTaxRate records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.GetBySalesTaxRateId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesTaxRate_SalesTaxRateID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesTaxRateId">Primary key for SalesTaxRate records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.SalesTaxRate},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;SalesTaxRate&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.SalesTaxRate)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.SalesTaxRate)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesTaxRate,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesTaxRate Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesTaxRate,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.SalesTaxRate object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.SalesTaxRate instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesTaxRate Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.SalesTaxRate</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateChildEntityTypes.StateProvince">
            <summary>
             Composite Property for <c>StateProvince</c> at StateProvinceIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesTaxRateFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTaxRateFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTaxRateFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesTaxRateParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTaxRateParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTaxRateParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesTaxRateSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductDocumentKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.. Primary Key.</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.. Primary Key.</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByDocumentId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductDocument_Document_DocumentID key.
            	FK_ProductDocument_Document_DocumentID Description: Foreign key constraint referencing Document.DocumentID.
            </summary>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductDocument objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByDocumentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductDocument_Document_DocumentID key.
            	FK_ProductDocument_Document_DocumentID Description: Foreign key constraint referencing Document.DocumentID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductDocument objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByDocumentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductDocument_Document_DocumentID key.
            	FK_ProductDocument_Document_DocumentID Description: Foreign key constraint referencing Document.DocumentID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductDocument objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByDocumentId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductDocument_Document_DocumentID key.
            	fkProductDocumentDocumentDocumentId Description: Foreign key constraint referencing Document.DocumentID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductDocument objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByDocumentId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductDocument_Document_DocumentID key.
            	fkProductDocumentDocumentDocumentId Description: Foreign key constraint referencing Document.DocumentID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductDocument objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByDocumentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductDocument_Document_DocumentID key.
            	FK_ProductDocument_Document_DocumentID Description: Foreign key constraint referencing Document.DocumentID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductDocument objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductDocument_Product_ProductID key.
            	FK_ProductDocument_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductDocument objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductDocument_Product_ProductID key.
            	FK_ProductDocument_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductDocument objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductDocument_Product_ProductID key.
            	FK_ProductDocument_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductDocument objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductDocument_Product_ProductID key.
            	fkProductDocumentProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductDocument objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductDocument_Product_ProductID key.
            	fkProductDocumentProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductDocument objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductDocument_Product_ProductID key.
            	FK_ProductDocument_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductDocument objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductDocumentKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByProductIdDocumentId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ProductDocument_ProductID_DocumentID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByProductIdDocumentId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductDocument_ProductID_DocumentID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByProductIdDocumentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductDocument_ProductID_DocumentID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByProductIdDocumentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductDocument_ProductID_DocumentID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByProductIdDocumentId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductDocument_ProductID_DocumentID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.GetByProductIdDocumentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductDocument_ProductID_DocumentID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ProductDocument},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ProductDocument&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ProductDocument)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ProductDocument)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductDocument,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductDocument Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductDocument,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ProductDocument object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ProductDocument instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductDocument Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.NullFkeyParentKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_nullFkeyParentId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_nullFkeyParentId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.NullFkeyParentKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore.GetByNullFkeyParentId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_NullKeyParent index.
            </summary>
            <param name="_nullFkeyParentId"></param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore.GetByNullFkeyParentId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_NullKeyParent index.
            </summary>
            <param name="_nullFkeyParentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore.GetByNullFkeyParentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_NullKeyParent index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_nullFkeyParentId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore.GetByNullFkeyParentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_NullKeyParent index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_nullFkeyParentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore.GetByNullFkeyParentId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_NullKeyParent index.
            </summary>
            <param name="_nullFkeyParentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore.GetByNullFkeyParentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_NullKeyParent index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_nullFkeyParentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.NullFkeyParent},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;NullFkeyParent&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.NullFkeyParent)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.NullFkeyParent)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.NullFkeyParent,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.NullFkeyParent Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.NullFkeyParent,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.NullFkeyParent object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.NullFkeyParent instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.NullFkeyParent Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CountryRegionCurrencyKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.Delete(System.String,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.. Primary Key.</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.. Primary Key.</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCountryRegionCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_CountryRegionCurrency_CountryRegion_CountryRegionCode key.
            	FK_CountryRegionCurrency_CountryRegion_CountryRegionCode Description: Foreign key constraint referencing CountryRegion.CountryRegionCode.
            </summary>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CountryRegionCurrency objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCountryRegionCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_CountryRegionCurrency_CountryRegion_CountryRegionCode key.
            	FK_CountryRegionCurrency_CountryRegion_CountryRegionCode Description: Foreign key constraint referencing CountryRegion.CountryRegionCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CountryRegionCurrency objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCountryRegionCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CountryRegionCurrency_CountryRegion_CountryRegionCode key.
            	FK_CountryRegionCurrency_CountryRegion_CountryRegionCode Description: Foreign key constraint referencing CountryRegion.CountryRegionCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CountryRegionCurrency objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCountryRegionCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CountryRegionCurrency_CountryRegion_CountryRegionCode key.
            	fkCountryRegionCurrencyCountryRegionCountryRegionCode Description: Foreign key constraint referencing CountryRegion.CountryRegionCode.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CountryRegionCurrency objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCountryRegionCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CountryRegionCurrency_CountryRegion_CountryRegionCode key.
            	fkCountryRegionCurrencyCountryRegionCountryRegionCode Description: Foreign key constraint referencing CountryRegion.CountryRegionCode.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CountryRegionCurrency objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCountryRegionCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CountryRegionCurrency_CountryRegion_CountryRegionCode key.
            	FK_CountryRegionCurrency_CountryRegion_CountryRegionCode Description: Foreign key constraint referencing CountryRegion.CountryRegionCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CountryRegionCurrency objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CountryRegionCurrencyKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCurrencyCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_CountryRegionCurrency_CurrencyCode index.
            </summary>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCurrencyCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_CountryRegionCurrency_CurrencyCode index.
            </summary>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_CountryRegionCurrency_CurrencyCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_CountryRegionCurrency_CurrencyCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCurrencyCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_CountryRegionCurrency_CurrencyCode index.
            </summary>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_CountryRegionCurrency_CurrencyCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCountryRegionCodeCurrencyCode(System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_CountryRegionCurrency_CountryRegionCode_CurrencyCode index.
            </summary>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCountryRegionCodeCurrencyCode(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CountryRegionCurrency_CountryRegionCode_CurrencyCode index.
            </summary>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCountryRegionCodeCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the PK_CountryRegionCurrency_CountryRegionCode_CurrencyCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCountryRegionCodeCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CountryRegionCurrency_CountryRegionCode_CurrencyCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCountryRegionCodeCurrencyCode(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CountryRegionCurrency_CountryRegionCode_CurrencyCode index.
            </summary>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.GetByCountryRegionCodeCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CountryRegionCurrency_CountryRegionCode_CurrencyCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.CountryRegionCurrency},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;CountryRegionCurrency&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.CountryRegionCurrency)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.CountryRegionCurrency)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CountryRegionCurrency,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.CountryRegionCurrency Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CountryRegionCurrency,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.CountryRegionCurrency object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.CountryRegionCurrency instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.CountryRegionCurrency Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBase`1">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityViewProvider&lt;Entity&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <remarks>
            This file is generated once and will never be overwritten.
            </remarks>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityViewProvider&lt;Entity&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.IEntityViewProvider`1">
            <summary>
            Defines the common data access methods that can be used by the
            ReadOnlyDataSource control to interact with the underlying data store.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IEntityViewProvider`1.Get(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IEntityViewProvider`1.GetPaged(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IEntityViewProvider`1.GetAll(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IEntityViewProvider`1.Find(Nettiers.AdventureWorks.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.GetAll">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks>Uses connection string object was created with.</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.GetAll(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks>Uses connection string object was created with.</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.GetAll(Nettiers.AdventureWorks.Data.TransactionManager)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.GetAll(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.GetAll(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Get">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Get(Nettiers.AdventureWorks.Data.TransactionManager)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Get(System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Get(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Get(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Get(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Get(System.String,System.String)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Get(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Get(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Get(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Get(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Get(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.GetPaged(System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.GetPaged(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.GetPaged(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.GetPaged(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.GetPaged(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.GetPaged(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.GetTotalItems(System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.GetTotalItems(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="mgr">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Find(Nettiers.AdventureWorks.Data.IFilterParameterCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Find(Nettiers.AdventureWorks.Data.IFilterParameterCollection,Nettiers.AdventureWorks.Data.ISortColumnCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlSortColumn"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Find(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Data.IFilterParameterCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Find(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Data.IFilterParameterCollection,Nettiers.AdventureWorks.Data.ISortColumnCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlSortColumn"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Find(Nettiers.AdventureWorks.Data.IFilterParameterCollection,System.String)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Find(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Data.IFilterParameterCollection,System.String)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Find(Nettiers.AdventureWorks.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Find(Nettiers.AdventureWorks.Data.IFilterParameterCollection,Nettiers.AdventureWorks.Data.ISortColumnCollection,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter and sort conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlSortColumn"/> objects.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EntityViewProviderBaseCore`1.Find(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VStoreWithDemographics},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VStoreWithDemographics)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographics"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographics"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographics"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VStoreWithDemographicsFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VStoreWithDemographicsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VStoreWithDemographicsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographics"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VStoreWithDemographicsParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VStoreWithDemographicsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VStoreWithDemographicsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographics"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VStoreWithDemographicsSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYears},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYears)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYears"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYears"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYears"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VSalesPersonSalesByFiscalYearsFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonSalesByFiscalYearsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonSalesByFiscalYearsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYears"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VSalesPersonSalesByFiscalYearsParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonSalesByFiscalYearsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonSalesByFiscalYearsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYears"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VSalesPersonSalesByFiscalYearsSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VEmployeeDepartment},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VEmployeeDepartment)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartment"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartment"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartment"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartment"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartment"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase">
            <summary>
             The base class to implements to create a .NetTiers provider.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider">
            <summary>
            Interface for NetTiersProvider
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.CreateTransaction">
            <summary>
            Creates the transaction.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteDataSet(System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteDataSet(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteDataSet(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteDataSet(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteNonQuery(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteNonQuery(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteNonQuery(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteReader(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteReader(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteReader(System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteReader(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteScalar(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteScalar(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteScalar(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.ExecuteScalar(System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="config">The config.</param>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.CurrentLoadPolicy">
            <summary>
            Gets or sets the current load policy.
            </summary>
            <value>The current load policy.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.DefaultCommandTimeout">
            <summary>
            Gets or sets the default command timeout.
            </summary>
            <value>The default command timeout.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.EnableEntityTracking">
            <summary>
            Gets or sets a value indicating whether [enable entity tracking].
            </summary>
            <value>
            	<c>true</c> if [enable entity tracking]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.EnableListTracking">
            <summary>
            Gets or sets a value indicating whether [enable list tracking].
            </summary>
            <value><c>true</c> if [enable list tracking]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.EnableMethodAuthorization">
            <summary>
            Gets or sets a value indicating whether [enable method authorization].
            </summary>
            <value>
            	<c>true</c> if [enable method authorization]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.EntityCreationalFactoryType">
            <summary>
            Gets or sets the type of the entity creational factory.
            </summary>
            <value>The type of the entity creational factory.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.IsTransactionSupported">
            <summary>
            Gets a value indicating whether this instance is transaction supported.
            </summary>
            <value>
            	<c>true</c> if this instance is transaction supported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.INetTiersProvider.UseEntityFactory">
            <summary>
            Gets or sets a value indicating whether [use entity factory].
            </summary>
            <value><c>true</c> if [use entity factory]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.CreateTransaction">
            <summary>
            Creates a new <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> instance from the current datasource.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteNonQuery(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteNonQuery(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteNonQuery(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteReader(System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteReader(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteReader(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteReader(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteDataSet(System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteDataSet(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteDataSet(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteDataSet(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteScalar(System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteScalar(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteScalar(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.ExecuteScalar(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.EntityCreationalFactoryType">
            <summary>
            Gets or sets the Creational Entity Factory Type.
            </summary>
            <value>The entity factory type.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.EnableEntityTracking">
            <summary>
            Gets or sets the ability to track entities.
            </summary>
            <value>true/false.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.EnableListTracking">
            <summary>
            Gets or sets the Entity Factory Type.
            </summary>
            <value>The entity factory type.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.UseEntityFactory">
            <summary>
            Gets or sets the use entity factory property to enable the usage of the EntityFactory and it's type cache.
            </summary>
            <value>bool value</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.EnableMethodAuthorization">
            <summary>
            Gets or sets the use Enable Method Authorization to enable the usage of the Microsoft Patterns and Practices 
            IAuthorizationRuleProvider for code level authorization.
            </summary>
            <value>A bool value.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.DefaultCommandTimeout">
            <summary>
            Gets or sets the default timeout for every command
            </summary>
            <value>integer value in seconds.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.CurrentLoadPolicy">
            <summary>
            Get or set the current LoadPolicy in effect
            </summary>
            <value>A <see cref="T:Nettiers.AdventureWorks.Data.Bases.LoadPolicy"/> enumeration member.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderBase.IsTransactionSupported">
            <summary>
             Indicates if the current <see cref="T:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider"/> implementation is supporting Transactions.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.LoadPolicy">
            <summary>
            Possibel load policies that can be applied when a provider Load method is called. Determines 
            how entities with EntityState.Unchanged and EntityState.Changed are treated during a Load
            when entity tracking is enabled.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.LoadPolicy.PreserveChanges">
            <summary>
            Refresh entities with EntityState.Unchanged if entity tracking is enabled. Entities with 
            EntityState.Changed will not be refreshed with information from the database.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.LoadPolicy.DiscardChanges">
            <summary>
            Refresh entities with EntityState.Changed as well as EntityState.Unchanged i.e. discard any
            unsaved changes.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.UnitMeasureKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_unitMeasureCode">Primary key.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_unitMeasureCode">Primary key.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.UnitMeasureKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_UnitMeasure_Name index.
            </summary>
            <param name="_name">Unit of measure description.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_UnitMeasure_Name index.
            </summary>
            <param name="_name">Unit of measure description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_UnitMeasure_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Unit of measure description.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_UnitMeasure_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Unit of measure description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_UnitMeasure_Name index.
            </summary>
            <param name="_name">Unit of measure description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_UnitMeasure_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Unit of measure description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.GetByUnitMeasureCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_UnitMeasure_UnitMeasureCode index.
            </summary>
            <param name="_unitMeasureCode">Primary key.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.GetByUnitMeasureCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UnitMeasure_UnitMeasureCode index.
            </summary>
            <param name="_unitMeasureCode">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.GetByUnitMeasureCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PK_UnitMeasure_UnitMeasureCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_unitMeasureCode">Primary key.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.GetByUnitMeasureCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UnitMeasure_UnitMeasureCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_unitMeasureCode">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.GetByUnitMeasureCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UnitMeasure_UnitMeasureCode index.
            </summary>
            <param name="_unitMeasureCode">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.GetByUnitMeasureCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UnitMeasure_UnitMeasureCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_unitMeasureCode">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.UnitMeasure},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;UnitMeasure&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.UnitMeasure)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.UnitMeasure)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.UnitMeasure,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.UnitMeasure Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.UnitMeasure,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.UnitMeasure object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.UnitMeasure instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.UnitMeasure Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ShiftKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.Delete(System.Byte)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_shiftId">Primary key for Shift records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Byte)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shiftId">Primary key for Shift records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ShiftKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Shift_Name index.
            </summary>
            <param name="_name">Shift description.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Shift_Name index.
            </summary>
            <param name="_name">Shift description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_Shift_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Shift description.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Shift_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Shift description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Shift_Name index.
            </summary>
            <param name="_name">Shift description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Shift_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Shift description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByStartTimeEndTime(System.DateTime,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Shift_StartTime_EndTime index.
            </summary>
            <param name="_startTime">Shift start time.</param>
            <param name="_endTime">Shift end time.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByStartTimeEndTime(System.DateTime,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Shift_StartTime_EndTime index.
            </summary>
            <param name="_startTime">Shift start time.</param>
            <param name="_endTime">Shift end time.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByStartTimeEndTime(Nettiers.AdventureWorks.Data.TransactionManager,System.DateTime,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the AK_Shift_StartTime_EndTime index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_startTime">Shift start time.</param>
            <param name="_endTime">Shift end time.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByStartTimeEndTime(Nettiers.AdventureWorks.Data.TransactionManager,System.DateTime,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Shift_StartTime_EndTime index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_startTime">Shift start time.</param>
            <param name="_endTime">Shift end time.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByStartTimeEndTime(System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Shift_StartTime_EndTime index.
            </summary>
            <param name="_startTime">Shift start time.</param>
            <param name="_endTime">Shift end time.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByStartTimeEndTime(Nettiers.AdventureWorks.Data.TransactionManager,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Shift_StartTime_EndTime index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_startTime">Shift start time.</param>
            <param name="_endTime">Shift end time.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByShiftId(System.Byte)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Shift_ShiftID index.
            </summary>
            <param name="_shiftId">Primary key for Shift records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByShiftId(System.Byte,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Shift_ShiftID index.
            </summary>
            <param name="_shiftId">Primary key for Shift records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByShiftId(Nettiers.AdventureWorks.Data.TransactionManager,System.Byte)">
            <summary>
            	Gets rows from the datasource based on the PK_Shift_ShiftID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shiftId">Primary key for Shift records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByShiftId(Nettiers.AdventureWorks.Data.TransactionManager,System.Byte,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Shift_ShiftID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shiftId">Primary key for Shift records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByShiftId(System.Byte,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Shift_ShiftID index.
            </summary>
            <param name="_shiftId">Primary key for Shift records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.GetByShiftId(Nettiers.AdventureWorks.Data.TransactionManager,System.Byte,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Shift_ShiftID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shiftId">Primary key for Shift records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.Shift},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Shift&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.Shift)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.Shift)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Shift,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Shift Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Shift,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.Shift object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.Shift instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Shift Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByIllustrationIdFromProductModelIllustration(System.Int32)">
            <summary>
            	Gets ProductModel objects from the datasource by IllustrationID in the
            	ProductModelIllustration table. Table ProductModel is related to table Illustration
            	through the (M:N) relationship defined in the ProductModelIllustration table.
            </summary>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <returns>Returns a typed collection of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByIllustrationIdFromProductModelIllustration(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.ProductModel objects from the datasource by IllustrationID in the
            	ProductModelIllustration table. Table ProductModel is related to table Illustration
            	through the (M:N) relationship defined in the ProductModelIllustration table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <remarks></remarks>
            <returns>Returns a TList of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByIllustrationIdFromProductModelIllustration(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets ProductModel objects from the datasource by IllustrationID in the
            	ProductModelIllustration table. Table ProductModel is related to table Illustration
            	through the (M:N) relationship defined in the ProductModelIllustration table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByIllustrationIdFromProductModelIllustration(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets ProductModel objects from the datasource by IllustrationID in the
            	ProductModelIllustration table. Table ProductModel is related to table Illustration
            	through the (M:N) relationship defined in the ProductModelIllustration table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByIllustrationIdFromProductModelIllustration(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ProductModel objects from the datasource by IllustrationID in the
            	ProductModelIllustration table. Table ProductModel is related to table Illustration
            	through the (M:N) relationship defined in the ProductModelIllustration table.
            </summary>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByIllustrationIdFromProductModelIllustration(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ProductModel objects from the datasource by IllustrationID in the
            	ProductModelIllustration table. Table ProductModel is related to table Illustration
            	through the (M:N) relationship defined in the ProductModelIllustration table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <remarks></remarks>
            <returns>Returns a TList of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByCultureIdFromProductModelProductDescriptionCulture(System.String)">
            <summary>
            	Gets ProductModel objects from the datasource by CultureID in the
            	ProductModelProductDescriptionCulture table. Table ProductModel is related to table Culture
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <returns>Returns a typed collection of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByCultureIdFromProductModelProductDescriptionCulture(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.ProductModel objects from the datasource by CultureID in the
            	ProductModelProductDescriptionCulture table. Table ProductModel is related to table Culture
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <remarks></remarks>
            <returns>Returns a TList of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByCultureIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets ProductModel objects from the datasource by CultureID in the
            	ProductModelProductDescriptionCulture table. Table ProductModel is related to table Culture
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByCultureIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets ProductModel objects from the datasource by CultureID in the
            	ProductModelProductDescriptionCulture table. Table ProductModel is related to table Culture
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByCultureIdFromProductModelProductDescriptionCulture(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ProductModel objects from the datasource by CultureID in the
            	ProductModelProductDescriptionCulture table. Table ProductModel is related to table Culture
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByCultureIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ProductModel objects from the datasource by CultureID in the
            	ProductModelProductDescriptionCulture table. Table ProductModel is related to table Culture
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <remarks></remarks>
            <returns>Returns a TList of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByProductDescriptionIdFromProductModelProductDescriptionCulture(System.Int32)">
            <summary>
            	Gets ProductModel objects from the datasource by ProductDescriptionID in the
            	ProductModelProductDescriptionCulture table. Table ProductModel is related to table ProductDescription
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <returns>Returns a typed collection of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByProductDescriptionIdFromProductModelProductDescriptionCulture(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.ProductModel objects from the datasource by ProductDescriptionID in the
            	ProductModelProductDescriptionCulture table. Table ProductModel is related to table ProductDescription
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <remarks></remarks>
            <returns>Returns a TList of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByProductDescriptionIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets ProductModel objects from the datasource by ProductDescriptionID in the
            	ProductModelProductDescriptionCulture table. Table ProductModel is related to table ProductDescription
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByProductDescriptionIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets ProductModel objects from the datasource by ProductDescriptionID in the
            	ProductModelProductDescriptionCulture table. Table ProductModel is related to table ProductDescription
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByProductDescriptionIdFromProductModelProductDescriptionCulture(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ProductModel objects from the datasource by ProductDescriptionID in the
            	ProductModelProductDescriptionCulture table. Table ProductModel is related to table ProductDescription
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByProductDescriptionIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ProductModel objects from the datasource by ProductDescriptionID in the
            	ProductModelProductDescriptionCulture table. Table ProductModel is related to table ProductDescription
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <remarks></remarks>
            <returns>Returns a TList of ProductModel objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductModelKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productModelId">Primary key for ProductModel records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key for ProductModel records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductModelKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_ProductModel_Name index.
            </summary>
            <param name="_name">Product model description.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductModel_Name index.
            </summary>
            <param name="_name">Product model description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductModel_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Product model description.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductModel_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Product model description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductModel_Name index.
            </summary>
            <param name="_name">Product model description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductModel_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Product model description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_ProductModel_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductModel_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductModel_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductModel_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductModel_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductModel_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByProductModelId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ProductModel_ProductModelID index.
            </summary>
            <param name="_productModelId">Primary key for ProductModel records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByProductModelId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductModel_ProductModelID index.
            </summary>
            <param name="_productModelId">Primary key for ProductModel records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByProductModelId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductModel_ProductModelID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key for ProductModel records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByProductModelId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductModel_ProductModelID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key for ProductModel records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByProductModelId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductModel_ProductModelID index.
            </summary>
            <param name="_productModelId">Primary key for ProductModel records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByProductModelId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductModel_ProductModelID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key for ProductModel records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByCatalogDescription(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PXML_ProductModel_CatalogDescription index.
            </summary>
            <param name="_catalogDescription">Detailed product catalog information in xml format.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByCatalogDescription(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PXML_ProductModel_CatalogDescription index.
            </summary>
            <param name="_catalogDescription">Detailed product catalog information in xml format.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByCatalogDescription(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PXML_ProductModel_CatalogDescription index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_catalogDescription">Detailed product catalog information in xml format.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByCatalogDescription(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PXML_ProductModel_CatalogDescription index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_catalogDescription">Detailed product catalog information in xml format.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByCatalogDescription(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PXML_ProductModel_CatalogDescription index.
            </summary>
            <param name="_catalogDescription">Detailed product catalog information in xml format.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByCatalogDescription(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PXML_ProductModel_CatalogDescription index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_catalogDescription">Detailed product catalog information in xml format.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByInstructions(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PXML_ProductModel_Instructions index.
            </summary>
            <param name="_instructions">Manufacturing instructions in xml format.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByInstructions(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PXML_ProductModel_Instructions index.
            </summary>
            <param name="_instructions">Manufacturing instructions in xml format.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByInstructions(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PXML_ProductModel_Instructions index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_instructions">Manufacturing instructions in xml format.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByInstructions(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PXML_ProductModel_Instructions index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_instructions">Manufacturing instructions in xml format.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByInstructions(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PXML_ProductModel_Instructions index.
            </summary>
            <param name="_instructions">Manufacturing instructions in xml format.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.GetByInstructions(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PXML_ProductModel_Instructions index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_instructions">Manufacturing instructions in xml format.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ProductModel},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ProductModel&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ProductModel)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ProductModel)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductModel,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductModel Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductModel,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ProductModel object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ProductModel instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductModel Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ProductModel</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductModelChildEntityTypes.ProductModelProductDescriptionCultureCollection">
            <summary>
             Collection of <c>ProductModel</c> as OneToMany for ProductModelProductDescriptionCultureCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductModelChildEntityTypes.CultureIdCultureCollection_From_ProductModelProductDescriptionCulture">
            <summary>
             Collection of <c>ProductModel</c> as ManyToMany for CultureCollection_From_ProductModelProductDescriptionCulture
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductModelChildEntityTypes.ProductDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCulture">
            <summary>
             Collection of <c>ProductModel</c> as ManyToMany for ProductDescriptionCollection_From_ProductModelProductDescriptionCulture
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductModelChildEntityTypes.IllustrationIdIllustrationCollection_From_ProductModelIllustration">
            <summary>
             Collection of <c>ProductModel</c> as ManyToMany for IllustrationCollection_From_ProductModelIllustration
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductModelChildEntityTypes.ProductModelIllustrationCollection">
            <summary>
             Collection of <c>ProductModel</c> as OneToMany for ProductModelIllustrationCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductModelChildEntityTypes.ProductCollection">
            <summary>
             Collection of <c>ProductModel</c> as OneToMany for ProductCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductModelFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductModelParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductModelSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ErrorLogKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_errorLogId">Primary key for ErrorLog records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_errorLogId">Primary key for ErrorLog records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ErrorLogKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore.GetByErrorLogId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ErrorLog_ErrorLogID index.
            </summary>
            <param name="_errorLogId">Primary key for ErrorLog records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore.GetByErrorLogId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ErrorLog_ErrorLogID index.
            </summary>
            <param name="_errorLogId">Primary key for ErrorLog records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore.GetByErrorLogId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ErrorLog_ErrorLogID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_errorLogId">Primary key for ErrorLog records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore.GetByErrorLogId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ErrorLog_ErrorLogID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_errorLogId">Primary key for ErrorLog records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore.GetByErrorLogId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ErrorLog_ErrorLogID index.
            </summary>
            <param name="_errorLogId">Primary key for ErrorLog records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore.GetByErrorLogId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ErrorLog_ErrorLogID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_errorLogId">Primary key for ErrorLog records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ErrorLog},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ErrorLog&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ErrorLog)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ErrorLog)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ErrorLog,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ErrorLog Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ErrorLog,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ErrorLog object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ErrorLog instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ErrorLog Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.DatabaseLogKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_databaseLogId">Primary key for DatabaseLog records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_databaseLogId">Primary key for DatabaseLog records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.DatabaseLogKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore.GetByDatabaseLogId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_DatabaseLog_DatabaseLogID index.
            </summary>
            <param name="_databaseLogId">Primary key for DatabaseLog records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore.GetByDatabaseLogId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_DatabaseLog_DatabaseLogID index.
            </summary>
            <param name="_databaseLogId">Primary key for DatabaseLog records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore.GetByDatabaseLogId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_DatabaseLog_DatabaseLogID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_databaseLogId">Primary key for DatabaseLog records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore.GetByDatabaseLogId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_DatabaseLog_DatabaseLogID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_databaseLogId">Primary key for DatabaseLog records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore.GetByDatabaseLogId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_DatabaseLog_DatabaseLogID index.
            </summary>
            <param name="_databaseLogId">Primary key for DatabaseLog records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore.GetByDatabaseLogId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_DatabaseLog_DatabaseLogID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_databaseLogId">Primary key for DatabaseLog records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.DatabaseLog},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;DatabaseLog&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.DatabaseLog)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.DatabaseLog)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.DatabaseLog,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.DatabaseLog Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.DatabaseLog,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.DatabaseLog object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.DatabaseLog instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.DatabaseLog Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DatabaseLogChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.DatabaseLog</c>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DatabaseLogFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DatabaseLogFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DatabaseLogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DatabaseLogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DatabaseLogParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DatabaseLogParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DatabaseLogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DatabaseLogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DatabaseLogSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DatabaseLogSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the DatabaseLogSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegion},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegion)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegion"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegion"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegion"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VStateProvinceCountryRegionFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VStateProvinceCountryRegionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VStateProvinceCountryRegionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegion"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VStateProvinceCountryRegionParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VStateProvinceCountryRegionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VStateProvinceCountryRegionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegion"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VStateProvinceCountryRegionSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VProductModelCatalogDescription},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VProductModelCatalogDescription)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescription"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescription"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescription"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VProductModelCatalogDescriptionFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelCatalogDescriptionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelCatalogDescriptionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescription"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VProductModelCatalogDescriptionParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelCatalogDescriptionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelCatalogDescriptionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescription"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VProductModelCatalogDescriptionSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ExpressionParserBase">
            <summary>
            Provides the base functionality required to parse search terms.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ExpressionParserBase.#ctor(System.String,Nettiers.AdventureWorks.Data.SqlComparisonType,System.Boolean)">
            <summary>
            Initializes a new instance of the ExpressionParserBase class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ExpressionParserBase.ParseCore(System.String)">
            <summary>
            Appends the specified search text to the current expression.
            </summary>
            <param name="searchText">The search text to append.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ExpressionParserBase.ParseQuotes(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Parses quoted search terms.
            </summary>
            <param name="searchText"></param>
            <param name="quotedValues"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ExpressionParserBase.IsKeyWord(System.String)">
            <summary>
            Determines whether the specified word is a reserved keyword.
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ExpressionParserBase.AppendOr">
            <summary>
            Appends an OR expression.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ExpressionParserBase.AppendAnd">
            <summary>
            Appends an AND expression.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ExpressionParserBase.AppendSpace">
            <summary>
            Appends an expression separator.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ExpressionParserBase.OpenGrouping">
            <summary>
            Appends a group opened expression.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ExpressionParserBase.CloseGrouping">
            <summary>
            Appends a group closed expression.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ExpressionParserBase.AppendSearchText(System.String)">
            <summary>
            Appends the specified search text to the expression.
            </summary>
            <param name="searchText">The search text to append.</param>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.ExpressionParserBase.ignoreCase">
            <summary>
            The IgnoreCase member variable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.ExpressionParserBase.propertyName">
            <summary>
            The PropertyName member variable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.ExpressionParserBase.comparisonType">
            <summary>
            The ComparisonType member variable.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.ExpressionParserBase.IgnoreCase">
            <summary>
            Gets or sets the IgnoreCase property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.ExpressionParserBase.PropertyName">
            <summary>
            Gets or sets the PropertyName property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.ExpressionParserBase.ComparisonType">
            <summary>
            Gets or sets the ComparisonType property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.WorkOrderRouting</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingChildEntityTypes.Location">
            <summary>
             Composite Property for <c>Location</c> at LocationIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingChildEntityTypes.WorkOrder">
            <summary>
             Composite Property for <c>WorkOrder</c> at WorkOrderIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the WorkOrderRoutingFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderRoutingFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderRoutingFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the WorkOrderRoutingParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderRoutingParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderRoutingParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the WorkOrderRoutingSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.VendorAddressKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.. Primary Key.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.. Primary Key.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByAddressTypeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorAddress_AddressType_AddressTypeID key.
            	FK_VendorAddress_AddressType_AddressTypeID Description: Foreign key constraint referencing AddressType.AddressTypeID.
            </summary>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByAddressTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorAddress_AddressType_AddressTypeID key.
            	FK_VendorAddress_AddressType_AddressTypeID Description: Foreign key constraint referencing AddressType.AddressTypeID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorAddress objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByAddressTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorAddress_AddressType_AddressTypeID key.
            	FK_VendorAddress_AddressType_AddressTypeID Description: Foreign key constraint referencing AddressType.AddressTypeID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByAddressTypeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorAddress_AddressType_AddressTypeID key.
            	fkVendorAddressAddressTypeAddressTypeId Description: Foreign key constraint referencing AddressType.AddressTypeID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByAddressTypeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorAddress_AddressType_AddressTypeID key.
            	fkVendorAddressAddressTypeAddressTypeId Description: Foreign key constraint referencing AddressType.AddressTypeID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByAddressTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorAddress_AddressType_AddressTypeID key.
            	FK_VendorAddress_AddressType_AddressTypeID Description: Foreign key constraint referencing AddressType.AddressTypeID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByVendorId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorAddress_Vendor_VendorID key.
            	FK_VendorAddress_Vendor_VendorID Description: Foreign key constraint referencing Vendor.VendorID.
            </summary>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorAddress_Vendor_VendorID key.
            	FK_VendorAddress_Vendor_VendorID Description: Foreign key constraint referencing Vendor.VendorID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorAddress objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorAddress_Vendor_VendorID key.
            	FK_VendorAddress_Vendor_VendorID Description: Foreign key constraint referencing Vendor.VendorID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByVendorId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorAddress_Vendor_VendorID key.
            	fkVendorAddressVendorVendorId Description: Foreign key constraint referencing Vendor.VendorID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByVendorId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorAddress_Vendor_VendorID key.
            	fkVendorAddressVendorVendorId Description: Foreign key constraint referencing Vendor.VendorID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_VendorAddress_Vendor_VendorID key.
            	FK_VendorAddress_Vendor_VendorID Description: Foreign key constraint referencing Vendor.VendorID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.VendorAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.VendorAddressKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByAddressId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_VendorAddress_AddressID index.
            </summary>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByAddressId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_VendorAddress_AddressID index.
            </summary>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_VendorAddress_AddressID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_VendorAddress_AddressID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByAddressId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_VendorAddress_AddressID index.
            </summary>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_VendorAddress_AddressID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByVendorIdAddressId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_VendorAddress_VendorID_AddressID index.
            </summary>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByVendorIdAddressId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VendorAddress_VendorID_AddressID index.
            </summary>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByVendorIdAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VendorAddress_VendorID_AddressID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByVendorIdAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VendorAddress_VendorID_AddressID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByVendorIdAddressId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VendorAddress_VendorID_AddressID index.
            </summary>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.GetByVendorIdAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VendorAddress_VendorID_AddressID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.VendorAddress},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;VendorAddress&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VendorAddress)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.VendorAddress)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.VendorAddress,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.VendorAddress Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.VendorAddress,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.VendorAddress object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.VendorAddress instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.VendorAddress Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorAddressChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.VendorAddress</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.VendorAddressChildEntityTypes.Address">
            <summary>
             Composite Property for <c>Address</c> at AddressIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.VendorAddressChildEntityTypes.AddressType">
            <summary>
             Composite Property for <c>AddressType</c> at AddressTypeIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.VendorAddressChildEntityTypes.Vendor">
            <summary>
             Composite Property for <c>Vendor</c> at VendorIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorAddressFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VendorAddressFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VendorAddressFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VendorAddressFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorAddressParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VendorAddressParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VendorAddressParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VendorAddressParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorAddressSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorAddressSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VendorAddressSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VendorAddressProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ShoppingCartItemKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_shoppingCartItemId">Primary key for ShoppingCartItem records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shoppingCartItemId">Primary key for ShoppingCartItem records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ShoppingCartItem_Product_ProductID key.
            	FK_ShoppingCartItem_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="_productId">Product ordered. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ShoppingCartItem objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ShoppingCartItem_Product_ProductID key.
            	FK_ShoppingCartItem_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product ordered. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ShoppingCartItem objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ShoppingCartItem_Product_ProductID key.
            	FK_ShoppingCartItem_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product ordered. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ShoppingCartItem objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ShoppingCartItem_Product_ProductID key.
            	fkShoppingCartItemProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product ordered. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ShoppingCartItem objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ShoppingCartItem_Product_ProductID key.
            	fkShoppingCartItemProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product ordered. Foreign key to Product.ProductID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ShoppingCartItem objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ShoppingCartItem_Product_ProductID key.
            	FK_ShoppingCartItem_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product ordered. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ShoppingCartItem objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ShoppingCartItemKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByShoppingCartIdProductId(System.String,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_ShoppingCartItem_ShoppingCartID_ProductID index.
            </summary>
            <param name="_shoppingCartId">Shopping cart identification number.</param>
            <param name="_productId">Product ordered. Foreign key to Product.ProductID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByShoppingCartIdProductId(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_ShoppingCartItem_ShoppingCartID_ProductID index.
            </summary>
            <param name="_shoppingCartId">Shopping cart identification number.</param>
            <param name="_productId">Product ordered. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByShoppingCartIdProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_ShoppingCartItem_ShoppingCartID_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shoppingCartId">Shopping cart identification number.</param>
            <param name="_productId">Product ordered. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByShoppingCartIdProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_ShoppingCartItem_ShoppingCartID_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shoppingCartId">Shopping cart identification number.</param>
            <param name="_productId">Product ordered. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByShoppingCartIdProductId(System.String,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_ShoppingCartItem_ShoppingCartID_ProductID index.
            </summary>
            <param name="_shoppingCartId">Shopping cart identification number.</param>
            <param name="_productId">Product ordered. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByShoppingCartIdProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_ShoppingCartItem_ShoppingCartID_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shoppingCartId">Shopping cart identification number.</param>
            <param name="_productId">Product ordered. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByShoppingCartItemId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ShoppingCartItem_ShoppingCartItemID index.
            </summary>
            <param name="_shoppingCartItemId">Primary key for ShoppingCartItem records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByShoppingCartItemId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ShoppingCartItem_ShoppingCartItemID index.
            </summary>
            <param name="_shoppingCartItemId">Primary key for ShoppingCartItem records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByShoppingCartItemId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ShoppingCartItem_ShoppingCartItemID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shoppingCartItemId">Primary key for ShoppingCartItem records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByShoppingCartItemId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ShoppingCartItem_ShoppingCartItemID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shoppingCartItemId">Primary key for ShoppingCartItem records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByShoppingCartItemId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ShoppingCartItem_ShoppingCartItemID index.
            </summary>
            <param name="_shoppingCartItemId">Primary key for ShoppingCartItem records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.GetByShoppingCartItemId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ShoppingCartItem_ShoppingCartItemID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shoppingCartItemId">Primary key for ShoppingCartItem records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ShoppingCartItem},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ShoppingCartItem&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ShoppingCartItem)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ShoppingCartItem)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ShoppingCartItem,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ShoppingCartItem Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ShoppingCartItem,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ShoppingCartItem object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ShoppingCartItem instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ShoppingCartItem Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ShoppingCartItem</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemChildEntityTypes.Product">
            <summary>
             Composite Property for <c>Product</c> at ProductIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ShoppingCartItemFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ShoppingCartItemFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ShoppingCartItemFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ShoppingCartItemParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ShoppingCartItemParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ShoppingCartItemParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ShoppingCartItemSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ScrapReasonKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.Delete(System.Int16)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_scrapReasonId">Primary key for ScrapReason records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_scrapReasonId">Primary key for ScrapReason records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ScrapReasonKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_ScrapReason_Name index.
            </summary>
            <param name="_name">Failure description.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ScrapReason_Name index.
            </summary>
            <param name="_name">Failure description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_ScrapReason_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Failure description.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ScrapReason_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Failure description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ScrapReason_Name index.
            </summary>
            <param name="_name">Failure description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ScrapReason_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Failure description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.GetByScrapReasonId(System.Int16)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ScrapReason_ScrapReasonID index.
            </summary>
            <param name="_scrapReasonId">Primary key for ScrapReason records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.GetByScrapReasonId(System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ScrapReason_ScrapReasonID index.
            </summary>
            <param name="_scrapReasonId">Primary key for ScrapReason records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.GetByScrapReasonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16)">
            <summary>
            	Gets rows from the datasource based on the PK_ScrapReason_ScrapReasonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_scrapReasonId">Primary key for ScrapReason records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.GetByScrapReasonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ScrapReason_ScrapReasonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_scrapReasonId">Primary key for ScrapReason records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.GetByScrapReasonId(System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ScrapReason_ScrapReasonID index.
            </summary>
            <param name="_scrapReasonId">Primary key for ScrapReason records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.GetByScrapReasonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ScrapReason_ScrapReasonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_scrapReasonId">Primary key for ScrapReason records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ScrapReason},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ScrapReason&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ScrapReason)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ScrapReason)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ScrapReason,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ScrapReason Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ScrapReason,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ScrapReason object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ScrapReason instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ScrapReason Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ScrapReasonChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ScrapReason</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ScrapReasonChildEntityTypes.WorkOrderCollection">
            <summary>
             Collection of <c>ScrapReason</c> as OneToMany for WorkOrderCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ScrapReasonFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ScrapReasonFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ScrapReasonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ScrapReasonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ScrapReasonParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ScrapReasonParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ScrapReasonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ScrapReasonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ScrapReasonSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ScrapReasonSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ScrapReasonSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.GetBySalesOrderIdFromSalesOrderHeaderSalesReason(System.Int32)">
            <summary>
            	Gets SalesReason objects from the datasource by SalesOrderID in the
            	SalesOrderHeaderSalesReason table. Table SalesReason is related to table SalesOrderHeader
            	through the (M:N) relationship defined in the SalesOrderHeaderSalesReason table.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <returns>Returns a typed collection of SalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.GetBySalesOrderIdFromSalesOrderHeaderSalesReason(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.SalesReason objects from the datasource by SalesOrderID in the
            	SalesOrderHeaderSalesReason table. Table SalesReason is related to table SalesOrderHeader
            	through the (M:N) relationship defined in the SalesOrderHeaderSalesReason table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <remarks></remarks>
            <returns>Returns a TList of SalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.GetBySalesOrderIdFromSalesOrderHeaderSalesReason(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets SalesReason objects from the datasource by SalesOrderID in the
            	SalesOrderHeaderSalesReason table. Table SalesReason is related to table SalesOrderHeader
            	through the (M:N) relationship defined in the SalesOrderHeaderSalesReason table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.GetBySalesOrderIdFromSalesOrderHeaderSalesReason(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets SalesReason objects from the datasource by SalesOrderID in the
            	SalesOrderHeaderSalesReason table. Table SalesReason is related to table SalesOrderHeader
            	through the (M:N) relationship defined in the SalesOrderHeaderSalesReason table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.GetBySalesOrderIdFromSalesOrderHeaderSalesReason(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets SalesReason objects from the datasource by SalesOrderID in the
            	SalesOrderHeaderSalesReason table. Table SalesReason is related to table SalesOrderHeader
            	through the (M:N) relationship defined in the SalesOrderHeaderSalesReason table.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.GetBySalesOrderIdFromSalesOrderHeaderSalesReason(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets SalesReason objects from the datasource by SalesOrderID in the
            	SalesOrderHeaderSalesReason table. Table SalesReason is related to table SalesOrderHeader
            	through the (M:N) relationship defined in the SalesOrderHeaderSalesReason table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <remarks></remarks>
            <returns>Returns a TList of SalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesReasonKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_salesReasonId">Primary key for SalesReason records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesReasonId">Primary key for SalesReason records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesReasonKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.GetBySalesReasonId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_SalesReason_SalesReasonID index.
            </summary>
            <param name="_salesReasonId">Primary key for SalesReason records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.GetBySalesReasonId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesReason_SalesReasonID index.
            </summary>
            <param name="_salesReasonId">Primary key for SalesReason records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.GetBySalesReasonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesReason_SalesReasonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesReasonId">Primary key for SalesReason records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.GetBySalesReasonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesReason_SalesReasonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesReasonId">Primary key for SalesReason records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.GetBySalesReasonId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesReason_SalesReasonID index.
            </summary>
            <param name="_salesReasonId">Primary key for SalesReason records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.GetBySalesReasonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesReason_SalesReasonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesReasonId">Primary key for SalesReason records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.SalesReason},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;SalesReason&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.SalesReason)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.SalesReason)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesReason,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesReason Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesReason,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.SalesReason object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.SalesReason instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesReason Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.PurchaseOrderDetailKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.. Primary Key.</param>
            <param name="_purchaseOrderDetailId">Primary key. One line number per purchased product.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.. Primary Key.</param>
            <param name="_purchaseOrderDetailId">Primary key. One line number per purchased product.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByPurchaseOrderId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID key.
            	FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID Description: Foreign key constraint referencing PurchaseOrderHeader.PurchaseOrderID.
            </summary>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.PurchaseOrderDetail objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByPurchaseOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID key.
            	FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID Description: Foreign key constraint referencing PurchaseOrderHeader.PurchaseOrderID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.PurchaseOrderDetail objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByPurchaseOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID key.
            	FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID Description: Foreign key constraint referencing PurchaseOrderHeader.PurchaseOrderID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.PurchaseOrderDetail objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByPurchaseOrderId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID key.
            	fkPurchaseOrderDetailPurchaseOrderHeaderPurchaseOrderId Description: Foreign key constraint referencing PurchaseOrderHeader.PurchaseOrderID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.PurchaseOrderDetail objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByPurchaseOrderId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID key.
            	fkPurchaseOrderDetailPurchaseOrderHeaderPurchaseOrderId Description: Foreign key constraint referencing PurchaseOrderHeader.PurchaseOrderID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.PurchaseOrderDetail objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByPurchaseOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID key.
            	FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID Description: Foreign key constraint referencing PurchaseOrderHeader.PurchaseOrderID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.PurchaseOrderDetail objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.PurchaseOrderDetailKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_PurchaseOrderDetail_ProductID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_PurchaseOrderDetail_ProductID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_PurchaseOrderDetail_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_PurchaseOrderDetail_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_PurchaseOrderDetail_ProductID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_PurchaseOrderDetail_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByPurchaseOrderIdPurchaseOrderDetailId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID index.
            </summary>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.</param>
            <param name="_purchaseOrderDetailId">Primary key. One line number per purchased product.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByPurchaseOrderIdPurchaseOrderDetailId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID index.
            </summary>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.</param>
            <param name="_purchaseOrderDetailId">Primary key. One line number per purchased product.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByPurchaseOrderIdPurchaseOrderDetailId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.</param>
            <param name="_purchaseOrderDetailId">Primary key. One line number per purchased product.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByPurchaseOrderIdPurchaseOrderDetailId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.</param>
            <param name="_purchaseOrderDetailId">Primary key. One line number per purchased product.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByPurchaseOrderIdPurchaseOrderDetailId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID index.
            </summary>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.</param>
            <param name="_purchaseOrderDetailId">Primary key. One line number per purchased product.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.GetByPurchaseOrderIdPurchaseOrderDetailId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_purchaseOrderId">Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.</param>
            <param name="_purchaseOrderDetailId">Primary key. One line number per purchased product.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.PurchaseOrderDetail},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;PurchaseOrderDetail&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.PurchaseOrderDetail)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.PurchaseOrderDetail)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.PurchaseOrderDetail,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.PurchaseOrderDetail Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.PurchaseOrderDetail,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.PurchaseOrderDetail object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.PurchaseOrderDetail instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.PurchaseOrderDetail Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.PurchaseOrderDetail</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailChildEntityTypes.Product">
            <summary>
             Composite Property for <c>Product</c> at ProductIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailChildEntityTypes.PurchaseOrderHeader">
            <summary>
             Composite Property for <c>PurchaseOrderHeader</c> at PurchaseOrderIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ErrorLogChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ErrorLog</c>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ErrorLogFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ErrorLogFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ErrorLogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ErrorLogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ErrorLogParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ErrorLogParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ErrorLogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ErrorLogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ErrorLogSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ErrorLogSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ErrorLogSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByProductIdFromProductDocument(System.Int32)">
            <summary>
            	Gets Document objects from the datasource by ProductID in the
            	ProductDocument table. Table Document is related to table Product
            	through the (M:N) relationship defined in the ProductDocument table.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Document objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByProductIdFromProductDocument(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Document objects from the datasource by ProductID in the
            	ProductDocument table. Table Document is related to table Product
            	through the (M:N) relationship defined in the ProductDocument table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Document objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByProductIdFromProductDocument(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Document objects from the datasource by ProductID in the
            	ProductDocument table. Table Document is related to table Product
            	through the (M:N) relationship defined in the ProductDocument table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Document objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByProductIdFromProductDocument(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Document objects from the datasource by ProductID in the
            	ProductDocument table. Table Document is related to table Product
            	through the (M:N) relationship defined in the ProductDocument table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Document objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByProductIdFromProductDocument(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Document objects from the datasource by ProductID in the
            	ProductDocument table. Table Document is related to table Product
            	through the (M:N) relationship defined in the ProductDocument table.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Document objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByProductIdFromProductDocument(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Document objects from the datasource by ProductID in the
            	ProductDocument table. Table Document is related to table Product
            	through the (M:N) relationship defined in the ProductDocument table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Document objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.DocumentKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_documentId">Primary key for Document records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_documentId">Primary key for Document records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.DocumentKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByFileNameRevision(System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Document_FileName_Revision index.
            </summary>
            <param name="_fileName">Directory path and file name of the document</param>
            <param name="_revision">Revision number of the document. </param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByFileNameRevision(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Document_FileName_Revision index.
            </summary>
            <param name="_fileName">Directory path and file name of the document</param>
            <param name="_revision">Revision number of the document. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByFileNameRevision(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_Document_FileName_Revision index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_fileName">Directory path and file name of the document</param>
            <param name="_revision">Revision number of the document. </param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByFileNameRevision(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Document_FileName_Revision index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_fileName">Directory path and file name of the document</param>
            <param name="_revision">Revision number of the document. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByFileNameRevision(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Document_FileName_Revision index.
            </summary>
            <param name="_fileName">Directory path and file name of the document</param>
            <param name="_revision">Revision number of the document. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByFileNameRevision(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Document_FileName_Revision index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_fileName">Directory path and file name of the document</param>
            <param name="_revision">Revision number of the document. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByDocumentId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Document_DocumentID index.
            </summary>
            <param name="_documentId">Primary key for Document records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByDocumentId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Document_DocumentID index.
            </summary>
            <param name="_documentId">Primary key for Document records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByDocumentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Document_DocumentID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_documentId">Primary key for Document records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByDocumentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Document_DocumentID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_documentId">Primary key for Document records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByDocumentId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Document_DocumentID index.
            </summary>
            <param name="_documentId">Primary key for Document records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.GetByDocumentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Document_DocumentID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_documentId">Primary key for Document records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.Document},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Document&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.Document)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.Document)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Document,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Document Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Document,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.Document object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.Document instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Document Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DocumentChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.Document</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.DocumentChildEntityTypes.ProductDocumentCollection">
            <summary>
             Collection of <c>Document</c> as OneToMany for ProductDocumentCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.DocumentChildEntityTypes.ProductIdProductCollection_From_ProductDocument">
            <summary>
             Collection of <c>Document</c> as ManyToMany for ProductCollection_From_ProductDocument
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DocumentFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DocumentFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DocumentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DocumentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DocumentParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DocumentParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DocumentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DocumentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DocumentSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DocumentSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the DocumentSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.DepartmentKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.Delete(System.Int16)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_departmentId">Primary key for Department records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_departmentId">Primary key for Department records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.DepartmentKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Department_Name index.
            </summary>
            <param name="_name">Name of the department.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Department_Name index.
            </summary>
            <param name="_name">Name of the department.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_Department_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Name of the department.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Department_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Name of the department.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Department_Name index.
            </summary>
            <param name="_name">Name of the department.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Department_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Name of the department.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.GetByDepartmentId(System.Int16)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Department_DepartmentID index.
            </summary>
            <param name="_departmentId">Primary key for Department records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.GetByDepartmentId(System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Department_DepartmentID index.
            </summary>
            <param name="_departmentId">Primary key for Department records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.GetByDepartmentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16)">
            <summary>
            	Gets rows from the datasource based on the PK_Department_DepartmentID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_departmentId">Primary key for Department records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.GetByDepartmentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Department_DepartmentID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_departmentId">Primary key for Department records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.GetByDepartmentId(System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Department_DepartmentID index.
            </summary>
            <param name="_departmentId">Primary key for Department records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.GetByDepartmentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Department_DepartmentID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_departmentId">Primary key for Department records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.Department},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Department&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.Department)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.Department)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Department,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Department Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Department,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.Department object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.Department instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Department Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DepartmentChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.Department</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.DepartmentChildEntityTypes.EmployeeDepartmentHistoryCollection">
            <summary>
             Collection of <c>Department</c> as OneToMany for EmployeeDepartmentHistoryCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DepartmentFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DepartmentFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DepartmentParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DepartmentParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DepartmentSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DepartmentSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the DepartmentSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByContactIdFromContactCreditCard(System.Int32)">
            <summary>
            	Gets CreditCard objects from the datasource by ContactID in the
            	ContactCreditCard table. Table CreditCard is related to table Contact
            	through the (M:N) relationship defined in the ContactCreditCard table.
            </summary>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <returns>Returns a typed collection of CreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByContactIdFromContactCreditCard(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.CreditCard objects from the datasource by ContactID in the
            	ContactCreditCard table. Table CreditCard is related to table Contact
            	through the (M:N) relationship defined in the ContactCreditCard table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns a TList of CreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByContactIdFromContactCreditCard(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets CreditCard objects from the datasource by ContactID in the
            	ContactCreditCard table. Table CreditCard is related to table Contact
            	through the (M:N) relationship defined in the ContactCreditCard table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of CreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByContactIdFromContactCreditCard(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets CreditCard objects from the datasource by ContactID in the
            	ContactCreditCard table. Table CreditCard is related to table Contact
            	through the (M:N) relationship defined in the ContactCreditCard table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of CreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByContactIdFromContactCreditCard(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets CreditCard objects from the datasource by ContactID in the
            	ContactCreditCard table. Table CreditCard is related to table Contact
            	through the (M:N) relationship defined in the ContactCreditCard table.
            </summary>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of CreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByContactIdFromContactCreditCard(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets CreditCard objects from the datasource by ContactID in the
            	ContactCreditCard table. Table CreditCard is related to table Contact
            	through the (M:N) relationship defined in the ContactCreditCard table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns a TList of CreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CreditCardKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_creditCardId">Primary key for CreditCard records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_creditCardId">Primary key for CreditCard records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CreditCardKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByCardNumber(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_CreditCard_CardNumber index.
            </summary>
            <param name="_cardNumber">Credit card number.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByCardNumber(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_CreditCard_CardNumber index.
            </summary>
            <param name="_cardNumber">Credit card number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByCardNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_CreditCard_CardNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_cardNumber">Credit card number.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByCardNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_CreditCard_CardNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_cardNumber">Credit card number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByCardNumber(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_CreditCard_CardNumber index.
            </summary>
            <param name="_cardNumber">Credit card number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByCardNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_CreditCard_CardNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_cardNumber">Credit card number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByCreditCardId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_CreditCard_CreditCardID index.
            </summary>
            <param name="_creditCardId">Primary key for CreditCard records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByCreditCardId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CreditCard_CreditCardID index.
            </summary>
            <param name="_creditCardId">Primary key for CreditCard records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByCreditCardId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CreditCard_CreditCardID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_creditCardId">Primary key for CreditCard records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByCreditCardId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CreditCard_CreditCardID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_creditCardId">Primary key for CreditCard records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByCreditCardId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CreditCard_CreditCardID index.
            </summary>
            <param name="_creditCardId">Primary key for CreditCard records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.GetByCreditCardId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CreditCard_CreditCardID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_creditCardId">Primary key for CreditCard records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.CreditCard},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;CreditCard&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.CreditCard)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.CreditCard)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CreditCard,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.CreditCard Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CreditCard,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.CreditCard object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.CreditCard instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.CreditCard Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ContactTypeKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_contactTypeId">Primary key for ContactType records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactTypeId">Primary key for ContactType records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ContactTypeKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_ContactType_Name index.
            </summary>
            <param name="_name">Contact type description.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ContactType_Name index.
            </summary>
            <param name="_name">Contact type description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_ContactType_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Contact type description.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ContactType_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Contact type description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ContactType_Name index.
            </summary>
            <param name="_name">Contact type description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ContactType_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Contact type description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.GetByContactTypeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ContactType_ContactTypeID index.
            </summary>
            <param name="_contactTypeId">Primary key for ContactType records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.GetByContactTypeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ContactType_ContactTypeID index.
            </summary>
            <param name="_contactTypeId">Primary key for ContactType records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.GetByContactTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ContactType_ContactTypeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactTypeId">Primary key for ContactType records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.GetByContactTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ContactType_ContactTypeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactTypeId">Primary key for ContactType records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.GetByContactTypeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ContactType_ContactTypeID index.
            </summary>
            <param name="_contactTypeId">Primary key for ContactType records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.GetByContactTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ContactType_ContactTypeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactTypeId">Primary key for ContactType records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ContactType},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ContactType&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ContactType)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ContactType)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ContactType,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ContactType Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ContactType,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ContactType object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ContactType instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ContactType Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ContactProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByCreditCardIdFromContactCreditCard(System.Int32)">
            <summary>
            	Gets Contact objects from the datasource by CreditCardID in the
            	ContactCreditCard table. Table Contact is related to table CreditCard
            	through the (M:N) relationship defined in the ContactCreditCard table.
            </summary>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <returns>Returns a typed collection of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByCreditCardIdFromContactCreditCard(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Contact objects from the datasource by CreditCardID in the
            	ContactCreditCard table. Table Contact is related to table CreditCard
            	through the (M:N) relationship defined in the ContactCreditCard table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByCreditCardIdFromContactCreditCard(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Contact objects from the datasource by CreditCardID in the
            	ContactCreditCard table. Table Contact is related to table CreditCard
            	through the (M:N) relationship defined in the ContactCreditCard table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByCreditCardIdFromContactCreditCard(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Contact objects from the datasource by CreditCardID in the
            	ContactCreditCard table. Table Contact is related to table CreditCard
            	through the (M:N) relationship defined in the ContactCreditCard table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByCreditCardIdFromContactCreditCard(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Contact objects from the datasource by CreditCardID in the
            	ContactCreditCard table. Table Contact is related to table CreditCard
            	through the (M:N) relationship defined in the ContactCreditCard table.
            </summary>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByCreditCardIdFromContactCreditCard(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Contact objects from the datasource by CreditCardID in the
            	ContactCreditCard table. Table Contact is related to table CreditCard
            	through the (M:N) relationship defined in the ContactCreditCard table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByCustomerIdFromStoreContact(System.Int32)">
            <summary>
            	Gets Contact objects from the datasource by CustomerID in the
            	StoreContact table. Table Contact is related to table Store
            	through the (M:N) relationship defined in the StoreContact table.
            </summary>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <returns>Returns a typed collection of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByCustomerIdFromStoreContact(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Contact objects from the datasource by CustomerID in the
            	StoreContact table. Table Contact is related to table Store
            	through the (M:N) relationship defined in the StoreContact table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByCustomerIdFromStoreContact(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Contact objects from the datasource by CustomerID in the
            	StoreContact table. Table Contact is related to table Store
            	through the (M:N) relationship defined in the StoreContact table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByCustomerIdFromStoreContact(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Contact objects from the datasource by CustomerID in the
            	StoreContact table. Table Contact is related to table Store
            	through the (M:N) relationship defined in the StoreContact table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByCustomerIdFromStoreContact(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Contact objects from the datasource by CustomerID in the
            	StoreContact table. Table Contact is related to table Store
            	through the (M:N) relationship defined in the StoreContact table.
            </summary>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByCustomerIdFromStoreContact(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Contact objects from the datasource by CustomerID in the
            	StoreContact table. Table Contact is related to table Store
            	through the (M:N) relationship defined in the StoreContact table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByVendorIdFromVendorContact(System.Int32)">
            <summary>
            	Gets Contact objects from the datasource by VendorID in the
            	VendorContact table. Table Contact is related to table Vendor
            	through the (M:N) relationship defined in the VendorContact table.
            </summary>
            <param name="_vendorId">Primary key.</param>
            <returns>Returns a typed collection of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByVendorIdFromVendorContact(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Contact objects from the datasource by VendorID in the
            	VendorContact table. Table Contact is related to table Vendor
            	through the (M:N) relationship defined in the VendorContact table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_vendorId">Primary key.</param>
            <remarks></remarks>
            <returns>Returns a TList of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByVendorIdFromVendorContact(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Contact objects from the datasource by VendorID in the
            	VendorContact table. Table Contact is related to table Vendor
            	through the (M:N) relationship defined in the VendorContact table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByVendorIdFromVendorContact(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Contact objects from the datasource by VendorID in the
            	VendorContact table. Table Contact is related to table Vendor
            	through the (M:N) relationship defined in the VendorContact table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByVendorIdFromVendorContact(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Contact objects from the datasource by VendorID in the
            	VendorContact table. Table Contact is related to table Vendor
            	through the (M:N) relationship defined in the VendorContact table.
            </summary>
            <param name="_vendorId">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByVendorIdFromVendorContact(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Contact objects from the datasource by VendorID in the
            	VendorContact table. Table Contact is related to table Vendor
            	through the (M:N) relationship defined in the VendorContact table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_vendorId">Primary key.</param>
            <remarks></remarks>
            <returns>Returns a TList of Contact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ContactKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_contactId">Primary key for Contact records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Primary key for Contact records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ContactKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Contact_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Contact_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_Contact_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Contact_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Contact_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Contact_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByEmailAddress(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_Contact_EmailAddress index.
            </summary>
            <param name="_emailAddress">E-mail address for the person.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByEmailAddress(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Contact_EmailAddress index.
            </summary>
            <param name="_emailAddress">E-mail address for the person.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByEmailAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_Contact_EmailAddress index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_emailAddress">E-mail address for the person.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByEmailAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Contact_EmailAddress index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_emailAddress">E-mail address for the person.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByEmailAddress(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Contact_EmailAddress index.
            </summary>
            <param name="_emailAddress">E-mail address for the person.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByEmailAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Contact_EmailAddress index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_emailAddress">E-mail address for the person.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByContactId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Contact_ContactID index.
            </summary>
            <param name="_contactId">Primary key for Contact records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByContactId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Contact_ContactID index.
            </summary>
            <param name="_contactId">Primary key for Contact records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Contact_ContactID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Primary key for Contact records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Contact_ContactID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Primary key for Contact records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByContactId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Contact_ContactID index.
            </summary>
            <param name="_contactId">Primary key for Contact records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Contact_ContactID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Primary key for Contact records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByAdditionalContactInfo(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PXML_Contact_AddContact index.
            </summary>
            <param name="_additionalContactInfo">Additional contact information about the person stored in xml format. </param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByAdditionalContactInfo(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PXML_Contact_AddContact index.
            </summary>
            <param name="_additionalContactInfo">Additional contact information about the person stored in xml format. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByAdditionalContactInfo(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PXML_Contact_AddContact index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_additionalContactInfo">Additional contact information about the person stored in xml format. </param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByAdditionalContactInfo(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PXML_Contact_AddContact index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_additionalContactInfo">Additional contact information about the person stored in xml format. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByAdditionalContactInfo(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PXML_Contact_AddContact index.
            </summary>
            <param name="_additionalContactInfo">Additional contact information about the person stored in xml format. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.GetByAdditionalContactInfo(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PXML_Contact_AddContact index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_additionalContactInfo">Additional contact information about the person stored in xml format. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.Contact},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Contact&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.Contact)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.Contact)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Contact,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Contact Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Contact,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.Contact object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.Contact instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Contact Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.Contact</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ContactChildEntityTypes.EmployeeCollection">
            <summary>
             Collection of <c>Contact</c> as OneToMany for EmployeeCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ContactChildEntityTypes.SalesOrderHeaderCollection">
            <summary>
             Collection of <c>Contact</c> as OneToMany for SalesOrderHeaderCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ContactChildEntityTypes.IndividualCollection">
            <summary>
             Collection of <c>Contact</c> as OneToMany for IndividualCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ContactChildEntityTypes.StoreContactCollection">
            <summary>
             Collection of <c>Contact</c> as OneToMany for StoreContactCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ContactChildEntityTypes.ContactCreditCardCollection">
            <summary>
             Collection of <c>Contact</c> as OneToMany for ContactCreditCardCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ContactChildEntityTypes.VendorContactCollection">
            <summary>
             Collection of <c>Contact</c> as OneToMany for VendorContactCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ContactChildEntityTypes.CreditCardIdCreditCardCollection_From_ContactCreditCard">
            <summary>
             Collection of <c>Contact</c> as ManyToMany for CreditCardCollection_From_ContactCreditCard
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ContactChildEntityTypes.CustomerIdStoreCollection_From_StoreContact">
            <summary>
             Collection of <c>Contact</c> as ManyToMany for StoreCollection_From_StoreContact
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ContactChildEntityTypes.VendorIdVendorCollection_From_VendorContact">
            <summary>
             Collection of <c>Contact</c> as ManyToMany for VendorCollection_From_VendorContact
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ContactFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ContactFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ContactFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ContactParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ContactParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ContactParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ContactSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.AwBuildVersionKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore.Delete(System.Byte)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_systemInformationId">Primary key for AWBuildVersion records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Byte)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_systemInformationId">Primary key for AWBuildVersion records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.AwBuildVersionKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore.GetBySystemInformationId(System.Byte)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_AWBuildVersion_SystemInformationID index.
            </summary>
            <param name="_systemInformationId">Primary key for AWBuildVersion records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore.GetBySystemInformationId(System.Byte,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AWBuildVersion_SystemInformationID index.
            </summary>
            <param name="_systemInformationId">Primary key for AWBuildVersion records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore.GetBySystemInformationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Byte)">
            <summary>
            	Gets rows from the datasource based on the PK_AWBuildVersion_SystemInformationID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_systemInformationId">Primary key for AWBuildVersion records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore.GetBySystemInformationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Byte,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AWBuildVersion_SystemInformationID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_systemInformationId">Primary key for AWBuildVersion records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore.GetBySystemInformationId(System.Byte,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AWBuildVersion_SystemInformationID index.
            </summary>
            <param name="_systemInformationId">Primary key for AWBuildVersion records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore.GetBySystemInformationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Byte,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AWBuildVersion_SystemInformationID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_systemInformationId">Primary key for AWBuildVersion records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.AwBuildVersion},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;AwBuildVersion&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.AwBuildVersion)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.AwBuildVersion)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.AwBuildVersion,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.AwBuildVersion Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.AwBuildVersion,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.AwBuildVersion object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.AwBuildVersion instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.AwBuildVersion Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.AwBuildVersion</c>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AwBuildVersionFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AwBuildVersionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AwBuildVersionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AwBuildVersionParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AwBuildVersionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AwBuildVersionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the AwBuildVersionSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VProductAndDescription},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VProductAndDescription)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescription"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescription"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ITransactionManager">
            <summary>
            TransactionManager interface
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ITransactionManager.BeginTransaction">
            <summary>
            Begins the transaction.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ITransactionManager.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="isolationLevel">The isolation level.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ITransactionManager.Commit">
            <summary>
            Commits this instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ITransactionManager.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ITransactionManager.Rollback">
            <summary>
            Rollbacks this instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.ITransactionManager.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.ITransactionManager.Database">
            <summary>
            Gets the database.
            </summary>
            <value>The database.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.ITransactionManager.InvariantProviderName">
            <summary>
            Gets or sets the name of the invariant provider.
            </summary>
            <value>The name of the invariant provider.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.ITransactionManager.IsOpen">
            <summary>
            Gets a value indicating whether this instance is open.
            </summary>
            <value><c>true</c> if this instance is open; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.ITransactionManager.TransactionObject">
            <summary>
            Gets the transaction object.
            </summary>
            <value>The transaction object.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetByProductIdFromSpecialOfferProduct(System.Int32)">
            <summary>
            	Gets SpecialOffer objects from the datasource by ProductID in the
            	SpecialOfferProduct table. Table SpecialOffer is related to table Product
            	through the (M:N) relationship defined in the SpecialOfferProduct table.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of SpecialOffer objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetByProductIdFromSpecialOfferProduct(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.SpecialOffer objects from the datasource by ProductID in the
            	SpecialOfferProduct table. Table SpecialOffer is related to table Product
            	through the (M:N) relationship defined in the SpecialOfferProduct table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a TList of SpecialOffer objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetByProductIdFromSpecialOfferProduct(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets SpecialOffer objects from the datasource by ProductID in the
            	SpecialOfferProduct table. Table SpecialOffer is related to table Product
            	through the (M:N) relationship defined in the SpecialOfferProduct table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SpecialOffer objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetByProductIdFromSpecialOfferProduct(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets SpecialOffer objects from the datasource by ProductID in the
            	SpecialOfferProduct table. Table SpecialOffer is related to table Product
            	through the (M:N) relationship defined in the SpecialOfferProduct table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SpecialOffer objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetByProductIdFromSpecialOfferProduct(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets SpecialOffer objects from the datasource by ProductID in the
            	SpecialOfferProduct table. Table SpecialOffer is related to table Product
            	through the (M:N) relationship defined in the SpecialOfferProduct table.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SpecialOffer objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetByProductIdFromSpecialOfferProduct(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets SpecialOffer objects from the datasource by ProductID in the
            	SpecialOfferProduct table. Table SpecialOffer is related to table Product
            	through the (M:N) relationship defined in the SpecialOfferProduct table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a TList of SpecialOffer objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SpecialOfferKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_specialOfferId">Primary key for SpecialOffer records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Primary key for SpecialOffer records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SpecialOfferKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_SpecialOffer_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SpecialOffer_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_SpecialOffer_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SpecialOffer_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SpecialOffer_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SpecialOffer_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetBySpecialOfferId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_SpecialOffer_SpecialOfferID index.
            </summary>
            <param name="_specialOfferId">Primary key for SpecialOffer records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetBySpecialOfferId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SpecialOffer_SpecialOfferID index.
            </summary>
            <param name="_specialOfferId">Primary key for SpecialOffer records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetBySpecialOfferId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SpecialOffer_SpecialOfferID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Primary key for SpecialOffer records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetBySpecialOfferId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SpecialOffer_SpecialOfferID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Primary key for SpecialOffer records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetBySpecialOfferId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SpecialOffer_SpecialOfferID index.
            </summary>
            <param name="_specialOfferId">Primary key for SpecialOffer records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.GetBySpecialOfferId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SpecialOffer_SpecialOfferID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Primary key for SpecialOffer records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.SpecialOffer},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;SpecialOffer&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.SpecialOffer)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.SpecialOffer)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SpecialOffer,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SpecialOffer Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SpecialOffer,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.SpecialOffer object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.SpecialOffer instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SpecialOffer Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.SpecialOffer</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SpecialOfferChildEntityTypes.SpecialOfferProductCollection">
            <summary>
             Collection of <c>SpecialOffer</c> as OneToMany for SpecialOfferProductCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SpecialOfferChildEntityTypes.ProductIdProductCollection_From_SpecialOfferProduct">
            <summary>
             Collection of <c>SpecialOffer</c> as ManyToMany for ProductCollection_From_SpecialOfferProduct
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SpecialOfferFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SpecialOfferParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the SpecialOfferSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_purchaseOrderId">Primary key.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_purchaseOrderId">Primary key.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByShipMethodId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_PurchaseOrderHeader_ShipMethod_ShipMethodID key.
            	FK_PurchaseOrderHeader_ShipMethod_ShipMethodID Description: Foreign key constraint referencing ShipMethod.ShipMethodID.
            </summary>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.PurchaseOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByShipMethodId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_PurchaseOrderHeader_ShipMethod_ShipMethodID key.
            	FK_PurchaseOrderHeader_ShipMethod_ShipMethodID Description: Foreign key constraint referencing ShipMethod.ShipMethodID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.PurchaseOrderHeader objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByShipMethodId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_PurchaseOrderHeader_ShipMethod_ShipMethodID key.
            	FK_PurchaseOrderHeader_ShipMethod_ShipMethodID Description: Foreign key constraint referencing ShipMethod.ShipMethodID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.PurchaseOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByShipMethodId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_PurchaseOrderHeader_ShipMethod_ShipMethodID key.
            	fkPurchaseOrderHeaderShipMethodShipMethodId Description: Foreign key constraint referencing ShipMethod.ShipMethodID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.PurchaseOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByShipMethodId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_PurchaseOrderHeader_ShipMethod_ShipMethodID key.
            	fkPurchaseOrderHeaderShipMethodShipMethodId Description: Foreign key constraint referencing ShipMethod.ShipMethodID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.PurchaseOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByShipMethodId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_PurchaseOrderHeader_ShipMethod_ShipMethodID key.
            	FK_PurchaseOrderHeader_ShipMethod_ShipMethodID Description: Foreign key constraint referencing ShipMethod.ShipMethodID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.PurchaseOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.PurchaseOrderHeaderKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByEmployeeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_PurchaseOrderHeader_EmployeeID index.
            </summary>
            <param name="_employeeId">Employee who created the purchase order. Foreign key to Employee.EmployeeID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByEmployeeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_PurchaseOrderHeader_EmployeeID index.
            </summary>
            <param name="_employeeId">Employee who created the purchase order. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_PurchaseOrderHeader_EmployeeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee who created the purchase order. Foreign key to Employee.EmployeeID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_PurchaseOrderHeader_EmployeeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee who created the purchase order. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByEmployeeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_PurchaseOrderHeader_EmployeeID index.
            </summary>
            <param name="_employeeId">Employee who created the purchase order. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_PurchaseOrderHeader_EmployeeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee who created the purchase order. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByVendorId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_PurchaseOrderHeader_VendorID index.
            </summary>
            <param name="_vendorId">Vendor with whom the purchase order is placed. Foreign key to Vendor.VendorID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByVendorId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_PurchaseOrderHeader_VendorID index.
            </summary>
            <param name="_vendorId">Vendor with whom the purchase order is placed. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_PurchaseOrderHeader_VendorID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Vendor with whom the purchase order is placed. Foreign key to Vendor.VendorID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_PurchaseOrderHeader_VendorID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Vendor with whom the purchase order is placed. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByVendorId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_PurchaseOrderHeader_VendorID index.
            </summary>
            <param name="_vendorId">Vendor with whom the purchase order is placed. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_PurchaseOrderHeader_VendorID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Vendor with whom the purchase order is placed. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByPurchaseOrderId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_PurchaseOrderHeader_PurchaseOrderID index.
            </summary>
            <param name="_purchaseOrderId">Primary key.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByPurchaseOrderId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_PurchaseOrderHeader_PurchaseOrderID index.
            </summary>
            <param name="_purchaseOrderId">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByPurchaseOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_PurchaseOrderHeader_PurchaseOrderID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_purchaseOrderId">Primary key.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByPurchaseOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_PurchaseOrderHeader_PurchaseOrderID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_purchaseOrderId">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByPurchaseOrderId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_PurchaseOrderHeader_PurchaseOrderID index.
            </summary>
            <param name="_purchaseOrderId">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.GetByPurchaseOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_PurchaseOrderHeader_PurchaseOrderID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_purchaseOrderId">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.PurchaseOrderHeader},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;PurchaseOrderHeader&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.PurchaseOrderHeader)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.PurchaseOrderHeader)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.PurchaseOrderHeader,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.PurchaseOrderHeader Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.PurchaseOrderHeader,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.PurchaseOrderHeader object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.PurchaseOrderHeader instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.PurchaseOrderHeader Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.NullFkeyParent</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentChildEntityTypes.NullFkeyChildCollection">
            <summary>
             Collection of <c>NullFkeyParent</c> as OneToMany for NullFkeyChildCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the NullFkeyParentFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyParentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyParentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the NullFkeyParentParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyParentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyParentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the NullFkeyParentSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.LocationProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.LocationProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.LocationProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByProductIdFromProductInventory(System.Int32)">
            <summary>
            	Gets Location objects from the datasource by ProductID in the
            	ProductInventory table. Table Location is related to table Product
            	through the (M:N) relationship defined in the ProductInventory table.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Location objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByProductIdFromProductInventory(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Location objects from the datasource by ProductID in the
            	ProductInventory table. Table Location is related to table Product
            	through the (M:N) relationship defined in the ProductInventory table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Location objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByProductIdFromProductInventory(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Location objects from the datasource by ProductID in the
            	ProductInventory table. Table Location is related to table Product
            	through the (M:N) relationship defined in the ProductInventory table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Location objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByProductIdFromProductInventory(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Location objects from the datasource by ProductID in the
            	ProductInventory table. Table Location is related to table Product
            	through the (M:N) relationship defined in the ProductInventory table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Location objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByProductIdFromProductInventory(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Location objects from the datasource by ProductID in the
            	ProductInventory table. Table Location is related to table Product
            	through the (M:N) relationship defined in the ProductInventory table.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Location objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByProductIdFromProductInventory(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Location objects from the datasource by ProductID in the
            	ProductInventory table. Table Location is related to table Product
            	through the (M:N) relationship defined in the ProductInventory table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Location objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.LocationKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.Delete(System.Int16)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_locationId">Primary key for Location records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_locationId">Primary key for Location records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.LocationKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Location_Name index.
            </summary>
            <param name="_name">Location description.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Location_Name index.
            </summary>
            <param name="_name">Location description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_Location_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Location description.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Location_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Location description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Location_Name index.
            </summary>
            <param name="_name">Location description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Location_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Location description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByLocationId(System.Int16)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Location_LocationID index.
            </summary>
            <param name="_locationId">Primary key for Location records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByLocationId(System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Location_LocationID index.
            </summary>
            <param name="_locationId">Primary key for Location records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByLocationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16)">
            <summary>
            	Gets rows from the datasource based on the PK_Location_LocationID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_locationId">Primary key for Location records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByLocationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Location_LocationID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_locationId">Primary key for Location records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByLocationId(System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Location_LocationID index.
            </summary>
            <param name="_locationId">Primary key for Location records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.GetByLocationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Location_LocationID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_locationId">Primary key for Location records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.Location},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Location&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.Location)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.Location)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Location,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Location Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Location,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.Location object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.Location instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Location Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CustomerAddressKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.. Primary Key.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.. Primary Key.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByAddressId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_Address_AddressID key.
            	FK_CustomerAddress_Address_AddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_Address_AddressID key.
            	FK_CustomerAddress_Address_AddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_Address_AddressID key.
            	FK_CustomerAddress_Address_AddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByAddressId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_Address_AddressID key.
            	fkCustomerAddressAddressAddressId Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByAddressId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_Address_AddressID key.
            	fkCustomerAddressAddressAddressId Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_Address_AddressID key.
            	FK_CustomerAddress_Address_AddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByAddressTypeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_AddressType_AddressTypeID key.
            	FK_CustomerAddress_AddressType_AddressTypeID Description: Foreign key constraint referencing AddressType.AddressTypeID.
            </summary>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByAddressTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_AddressType_AddressTypeID key.
            	FK_CustomerAddress_AddressType_AddressTypeID Description: Foreign key constraint referencing AddressType.AddressTypeID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByAddressTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_AddressType_AddressTypeID key.
            	FK_CustomerAddress_AddressType_AddressTypeID Description: Foreign key constraint referencing AddressType.AddressTypeID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByAddressTypeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_AddressType_AddressTypeID key.
            	fkCustomerAddressAddressTypeAddressTypeId Description: Foreign key constraint referencing AddressType.AddressTypeID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByAddressTypeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_AddressType_AddressTypeID key.
            	fkCustomerAddressAddressTypeAddressTypeId Description: Foreign key constraint referencing AddressType.AddressTypeID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByAddressTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_AddressType_AddressTypeID key.
            	FK_CustomerAddress_AddressType_AddressTypeID Description: Foreign key constraint referencing AddressType.AddressTypeID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressTypeId">Address type. Foreign key to AddressType.AddressTypeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByCustomerId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_Customer_CustomerID key.
            	FK_CustomerAddress_Customer_CustomerID Description: Foreign key constraint referencing Customer.CustomerID.
            </summary>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_Customer_CustomerID key.
            	FK_CustomerAddress_Customer_CustomerID Description: Foreign key constraint referencing Customer.CustomerID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_Customer_CustomerID key.
            	FK_CustomerAddress_Customer_CustomerID Description: Foreign key constraint referencing Customer.CustomerID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByCustomerId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_Customer_CustomerID key.
            	fkCustomerAddressCustomerCustomerId Description: Foreign key constraint referencing Customer.CustomerID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByCustomerId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_Customer_CustomerID key.
            	fkCustomerAddressCustomerCustomerId Description: Foreign key constraint referencing Customer.CustomerID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerAddress_Customer_CustomerID key.
            	FK_CustomerAddress_Customer_CustomerID Description: Foreign key constraint referencing Customer.CustomerID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CustomerAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CustomerAddressKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_CustomerAddress_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_CustomerAddress_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_CustomerAddress_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_CustomerAddress_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_CustomerAddress_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_CustomerAddress_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByCustomerIdAddressId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_CustomerAddress_CustomerID_AddressID index.
            </summary>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByCustomerIdAddressId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CustomerAddress_CustomerID_AddressID index.
            </summary>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByCustomerIdAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CustomerAddress_CustomerID_AddressID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByCustomerIdAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CustomerAddress_CustomerID_AddressID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByCustomerIdAddressId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CustomerAddress_CustomerID_AddressID index.
            </summary>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.GetByCustomerIdAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CustomerAddress_CustomerID_AddressID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.CustomerAddress},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;CustomerAddress&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.CustomerAddress)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.CustomerAddress)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CustomerAddress,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.CustomerAddress Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CustomerAddress,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.CustomerAddress object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.CustomerAddress instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.CustomerAddress Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CustomerAddressChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.CustomerAddress</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CustomerAddressChildEntityTypes.Address">
            <summary>
             Composite Property for <c>Address</c> at AddressIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CustomerAddressChildEntityTypes.AddressType">
            <summary>
             Composite Property for <c>AddressType</c> at AddressTypeIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CustomerAddressChildEntityTypes.Customer">
            <summary>
             Composite Property for <c>Customer</c> at CustomerIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CustomerAddressFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CustomerAddressFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerAddressFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerAddressFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CustomerAddressParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CustomerAddressParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerAddressParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerAddressParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CustomerAddressSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerAddressSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the CustomerAddressSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByAddressIdFromCustomerAddress(System.Int32)">
            <summary>
            	Gets Customer objects from the datasource by AddressID in the
            	CustomerAddress table. Table Customer is related to table Address
            	through the (M:N) relationship defined in the CustomerAddress table.
            </summary>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <returns>Returns a typed collection of Customer objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByAddressIdFromCustomerAddress(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Customer objects from the datasource by AddressID in the
            	CustomerAddress table. Table Customer is related to table Address
            	through the (M:N) relationship defined in the CustomerAddress table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Customer objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByAddressIdFromCustomerAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Customer objects from the datasource by AddressID in the
            	CustomerAddress table. Table Customer is related to table Address
            	through the (M:N) relationship defined in the CustomerAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Customer objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByAddressIdFromCustomerAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Customer objects from the datasource by AddressID in the
            	CustomerAddress table. Table Customer is related to table Address
            	through the (M:N) relationship defined in the CustomerAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Customer objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByAddressIdFromCustomerAddress(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Customer objects from the datasource by AddressID in the
            	CustomerAddress table. Table Customer is related to table Address
            	through the (M:N) relationship defined in the CustomerAddress table.
            </summary>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Customer objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByAddressIdFromCustomerAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Customer objects from the datasource by AddressID in the
            	CustomerAddress table. Table Customer is related to table Address
            	through the (M:N) relationship defined in the CustomerAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Customer objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CustomerKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_customerId">Primary key for Customer records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key for Customer records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CustomerKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByAccountNumber(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Customer_AccountNumber index.
            </summary>
            <param name="_accountNumber">Unique number identifying the customer assigned by the accounting system.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByAccountNumber(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Customer_AccountNumber index.
            </summary>
            <param name="_accountNumber">Unique number identifying the customer assigned by the accounting system.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByAccountNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_Customer_AccountNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_accountNumber">Unique number identifying the customer assigned by the accounting system.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByAccountNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Customer_AccountNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_accountNumber">Unique number identifying the customer assigned by the accounting system.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByAccountNumber(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Customer_AccountNumber index.
            </summary>
            <param name="_accountNumber">Unique number identifying the customer assigned by the accounting system.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByAccountNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Customer_AccountNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_accountNumber">Unique number identifying the customer assigned by the accounting system.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Customer_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Customer_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_Customer_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Customer_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Customer_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Customer_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByTerritoryId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the primary key IX_Customer_TerritoryID index.
            </summary>
            <param name="_territoryId">ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByTerritoryId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Customer_TerritoryID index.
            </summary>
            <param name="_territoryId">ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the IX_Customer_TerritoryID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Customer_TerritoryID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByTerritoryId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Customer_TerritoryID index.
            </summary>
            <param name="_territoryId">ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Customer_TerritoryID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByCustomerId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Customer_CustomerID index.
            </summary>
            <param name="_customerId">Primary key for Customer records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByCustomerId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Customer_CustomerID index.
            </summary>
            <param name="_customerId">Primary key for Customer records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Customer_CustomerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key for Customer records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Customer_CustomerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key for Customer records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByCustomerId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Customer_CustomerID index.
            </summary>
            <param name="_customerId">Primary key for Customer records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Customer_CustomerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key for Customer records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.Customer},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Customer&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.Customer)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.Customer)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Customer,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Customer Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Customer,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.Customer object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.Customer instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Customer Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.AddressTypeKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_addressTypeId">Primary key for AddressType records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressTypeId">Primary key for AddressType records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.AddressTypeKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_AddressType_Name index.
            </summary>
            <param name="_name">Address type description. For example, Billing, Home, or Shipping.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_AddressType_Name index.
            </summary>
            <param name="_name">Address type description. For example, Billing, Home, or Shipping.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_AddressType_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Address type description. For example, Billing, Home, or Shipping.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_AddressType_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Address type description. For example, Billing, Home, or Shipping.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_AddressType_Name index.
            </summary>
            <param name="_name">Address type description. For example, Billing, Home, or Shipping.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_AddressType_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Address type description. For example, Billing, Home, or Shipping.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_AddressType_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_AddressType_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_AddressType_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_AddressType_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_AddressType_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_AddressType_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByAddressTypeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_AddressType_AddressTypeID index.
            </summary>
            <param name="_addressTypeId">Primary key for AddressType records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByAddressTypeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AddressType_AddressTypeID index.
            </summary>
            <param name="_addressTypeId">Primary key for AddressType records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByAddressTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AddressType_AddressTypeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressTypeId">Primary key for AddressType records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByAddressTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AddressType_AddressTypeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressTypeId">Primary key for AddressType records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByAddressTypeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AddressType_AddressTypeID index.
            </summary>
            <param name="_addressTypeId">Primary key for AddressType records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.GetByAddressTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AddressType_AddressTypeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressTypeId">Primary key for AddressType records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.AddressType},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;AddressType&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.AddressType)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.AddressType)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.AddressType,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.AddressType Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.AddressType,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.AddressType object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.AddressType instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.AddressType Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VSalesPerson},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VSalesPerson)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPerson"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPerson"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VEmployee},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VEmployee)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VEmployee"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VEmployee"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployee"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VEmployeeFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployee"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VEmployeeParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployee"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VEmployeeSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VAdditionalContactInfo},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VAdditionalContactInfo)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfo"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfo"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfo"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VAdditionalContactInfoFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VAdditionalContactInfoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VAdditionalContactInfoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfo"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VAdditionalContactInfoParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VAdditionalContactInfoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VAdditionalContactInfoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfo"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VAdditionalContactInfoSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.WorkOrderKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_workOrderId">Primary key for WorkOrder records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_workOrderId">Primary key for WorkOrder records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.WorkOrderKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_WorkOrder_ProductID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_WorkOrder_ProductID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_WorkOrder_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_WorkOrder_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_WorkOrder_ProductID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_WorkOrder_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByScrapReasonId(System.Nullable{System.Int16})">
            <summary>
            	Gets rows from the datasource based on the primary key IX_WorkOrder_ScrapReasonID index.
            </summary>
            <param name="_scrapReasonId">Reason for inspection failure.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByScrapReasonId(System.Nullable{System.Int16},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_WorkOrder_ScrapReasonID index.
            </summary>
            <param name="_scrapReasonId">Reason for inspection failure.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByScrapReasonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int16})">
            <summary>
            	Gets rows from the datasource based on the IX_WorkOrder_ScrapReasonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_scrapReasonId">Reason for inspection failure.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByScrapReasonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int16},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_WorkOrder_ScrapReasonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_scrapReasonId">Reason for inspection failure.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByScrapReasonId(System.Nullable{System.Int16},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_WorkOrder_ScrapReasonID index.
            </summary>
            <param name="_scrapReasonId">Reason for inspection failure.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByScrapReasonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int16},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_WorkOrder_ScrapReasonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_scrapReasonId">Reason for inspection failure.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByWorkOrderId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_WorkOrder_WorkOrderID index.
            </summary>
            <param name="_workOrderId">Primary key for WorkOrder records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByWorkOrderId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_WorkOrder_WorkOrderID index.
            </summary>
            <param name="_workOrderId">Primary key for WorkOrder records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByWorkOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_WorkOrder_WorkOrderID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_workOrderId">Primary key for WorkOrder records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByWorkOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_WorkOrder_WorkOrderID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_workOrderId">Primary key for WorkOrder records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByWorkOrderId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_WorkOrder_WorkOrderID index.
            </summary>
            <param name="_workOrderId">Primary key for WorkOrder records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.GetByWorkOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_WorkOrder_WorkOrderID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_workOrderId">Primary key for WorkOrder records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.WorkOrder},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;WorkOrder&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.WorkOrder)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.WorkOrder)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.WorkOrder,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.WorkOrder Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.WorkOrder,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.WorkOrder object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.WorkOrder instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.WorkOrder Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StoreProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.StoreProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.StoreProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByContactIdFromStoreContact(System.Int32)">
            <summary>
            	Gets Store objects from the datasource by ContactID in the
            	StoreContact table. Table Store is related to table Contact
            	through the (M:N) relationship defined in the StoreContact table.
            </summary>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <returns>Returns a typed collection of Store objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByContactIdFromStoreContact(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Store objects from the datasource by ContactID in the
            	StoreContact table. Table Store is related to table Contact
            	through the (M:N) relationship defined in the StoreContact table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Store objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByContactIdFromStoreContact(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Store objects from the datasource by ContactID in the
            	StoreContact table. Table Store is related to table Contact
            	through the (M:N) relationship defined in the StoreContact table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Store objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByContactIdFromStoreContact(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Store objects from the datasource by ContactID in the
            	StoreContact table. Table Store is related to table Contact
            	through the (M:N) relationship defined in the StoreContact table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Store objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByContactIdFromStoreContact(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Store objects from the datasource by ContactID in the
            	StoreContact table. Table Store is related to table Contact
            	through the (M:N) relationship defined in the StoreContact table.
            </summary>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Store objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByContactIdFromStoreContact(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Store objects from the datasource by ContactID in the
            	StoreContact table. Table Store is related to table Contact
            	through the (M:N) relationship defined in the StoreContact table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Store objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.StoreKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.StoreKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Store_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Store_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_Store_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Store_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Store_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Store_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetBySalesPersonId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the primary key IX_Store_SalesPersonID index.
            </summary>
            <param name="_salesPersonId">ID of the sales person assigned to the customer. Foreign key to SalesPerson.SalesPersonID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetBySalesPersonId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Store_SalesPersonID index.
            </summary>
            <param name="_salesPersonId">ID of the sales person assigned to the customer. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetBySalesPersonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the IX_Store_SalesPersonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">ID of the sales person assigned to the customer. Foreign key to SalesPerson.SalesPersonID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetBySalesPersonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Store_SalesPersonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">ID of the sales person assigned to the customer. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetBySalesPersonId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Store_SalesPersonID index.
            </summary>
            <param name="_salesPersonId">ID of the sales person assigned to the customer. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetBySalesPersonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Store_SalesPersonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">ID of the sales person assigned to the customer. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByCustomerId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Store_CustomerID index.
            </summary>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByCustomerId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Store_CustomerID index.
            </summary>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Store_CustomerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Store_CustomerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByCustomerId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Store_CustomerID index.
            </summary>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Store_CustomerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByDemographics(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PXML_Store_Demographics index.
            </summary>
            <param name="_demographics">Demographic informationg about the store such as the number of employees, annual sales and store type.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByDemographics(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PXML_Store_Demographics index.
            </summary>
            <param name="_demographics">Demographic informationg about the store such as the number of employees, annual sales and store type.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByDemographics(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PXML_Store_Demographics index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_demographics">Demographic informationg about the store such as the number of employees, annual sales and store type.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByDemographics(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PXML_Store_Demographics index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_demographics">Demographic informationg about the store such as the number of employees, annual sales and store type.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByDemographics(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PXML_Store_Demographics index.
            </summary>
            <param name="_demographics">Demographic informationg about the store such as the number of employees, annual sales and store type.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.GetByDemographics(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PXML_Store_Demographics index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_demographics">Demographic informationg about the store such as the number of employees, annual sales and store type.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.Store},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Store&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.Store)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.Store)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Store,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Store Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Store,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.Store object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.Store instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Store Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShiftChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.Shift</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ShiftChildEntityTypes.EmployeeDepartmentHistoryCollection">
            <summary>
             Collection of <c>Shift</c> as OneToMany for EmployeeDepartmentHistoryCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShiftFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ShiftFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ShiftFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ShiftFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShiftParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ShiftParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ShiftParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ShiftParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShiftSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShiftSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ShiftSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductReviewKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productReviewId">Primary key for ProductReview records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productReviewId">Primary key for ProductReview records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductReview_Product_ProductID key.
            	FK_ProductReview_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductReview objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductReview_Product_ProductID key.
            	FK_ProductReview_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductReview objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductReview_Product_ProductID key.
            	FK_ProductReview_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductReview objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductReview_Product_ProductID key.
            	fkProductReviewProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductReview objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductReview_Product_ProductID key.
            	fkProductReviewProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductReview objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductReview_Product_ProductID key.
            	FK_ProductReview_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductReview objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductReviewKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductIdReviewerName(System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_ProductReview_ProductID_Name index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_reviewerName">Name of the reviewer.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductIdReviewerName(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_ProductReview_ProductID_Name index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_reviewerName">Name of the reviewer.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductIdReviewerName(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_ProductReview_ProductID_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_reviewerName">Name of the reviewer.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductIdReviewerName(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_ProductReview_ProductID_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_reviewerName">Name of the reviewer.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductIdReviewerName(System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_ProductReview_ProductID_Name index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_reviewerName">Name of the reviewer.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductIdReviewerName(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_ProductReview_ProductID_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_reviewerName">Name of the reviewer.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductReviewId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ProductReview_ProductReviewID index.
            </summary>
            <param name="_productReviewId">Primary key for ProductReview records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductReviewId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductReview_ProductReviewID index.
            </summary>
            <param name="_productReviewId">Primary key for ProductReview records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductReviewId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductReview_ProductReviewID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productReviewId">Primary key for ProductReview records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductReviewId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductReview_ProductReviewID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productReviewId">Primary key for ProductReview records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductReviewId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductReview_ProductReviewID index.
            </summary>
            <param name="_productReviewId">Primary key for ProductReview records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.GetByProductReviewId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductReview_ProductReviewID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productReviewId">Primary key for ProductReview records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ProductReview},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ProductReview&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ProductReview)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ProductReview)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductReview,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductReview Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductReview,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ProductReview object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ProductReview instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductReview Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductReviewChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ProductReview</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductReviewChildEntityTypes.Product">
            <summary>
             Composite Property for <c>Product</c> at ProductIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductReviewFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductReviewFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductReviewFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductReviewFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductReviewParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductReviewParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductReviewParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductReviewParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductReviewSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductReviewSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductReviewSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CultureProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByProductDescriptionIdFromProductModelProductDescriptionCulture(System.Int32)">
            <summary>
            	Gets Culture objects from the datasource by ProductDescriptionID in the
            	ProductModelProductDescriptionCulture table. Table Culture is related to table ProductDescription
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <returns>Returns a typed collection of Culture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByProductDescriptionIdFromProductModelProductDescriptionCulture(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Culture objects from the datasource by ProductDescriptionID in the
            	ProductModelProductDescriptionCulture table. Table Culture is related to table ProductDescription
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Culture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByProductDescriptionIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Culture objects from the datasource by ProductDescriptionID in the
            	ProductModelProductDescriptionCulture table. Table Culture is related to table ProductDescription
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Culture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByProductDescriptionIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Culture objects from the datasource by ProductDescriptionID in the
            	ProductModelProductDescriptionCulture table. Table Culture is related to table ProductDescription
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Culture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByProductDescriptionIdFromProductModelProductDescriptionCulture(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Culture objects from the datasource by ProductDescriptionID in the
            	ProductModelProductDescriptionCulture table. Table Culture is related to table ProductDescription
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Culture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByProductDescriptionIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Culture objects from the datasource by ProductDescriptionID in the
            	ProductModelProductDescriptionCulture table. Table Culture is related to table ProductDescription
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Culture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByProductModelIdFromProductModelProductDescriptionCulture(System.Int32)">
            <summary>
            	Gets Culture objects from the datasource by ProductModelID in the
            	ProductModelProductDescriptionCulture table. Table Culture is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <returns>Returns a typed collection of Culture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByProductModelIdFromProductModelProductDescriptionCulture(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Culture objects from the datasource by ProductModelID in the
            	ProductModelProductDescriptionCulture table. Table Culture is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Culture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByProductModelIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Culture objects from the datasource by ProductModelID in the
            	ProductModelProductDescriptionCulture table. Table Culture is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Culture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByProductModelIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Culture objects from the datasource by ProductModelID in the
            	ProductModelProductDescriptionCulture table. Table Culture is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Culture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByProductModelIdFromProductModelProductDescriptionCulture(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Culture objects from the datasource by ProductModelID in the
            	ProductModelProductDescriptionCulture table. Table Culture is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Culture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByProductModelIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Culture objects from the datasource by ProductModelID in the
            	ProductModelProductDescriptionCulture table. Table Culture is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Culture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CultureKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_cultureId">Primary key for Culture records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_cultureId">Primary key for Culture records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CultureKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Culture_Name index.
            </summary>
            <param name="_name">Culture description.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Culture_Name index.
            </summary>
            <param name="_name">Culture description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_Culture_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Culture description.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Culture_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Culture description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Culture_Name index.
            </summary>
            <param name="_name">Culture description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Culture_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Culture description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByCultureId(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Culture_CultureID index.
            </summary>
            <param name="_cultureId">Primary key for Culture records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByCultureId(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Culture_CultureID index.
            </summary>
            <param name="_cultureId">Primary key for Culture records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByCultureId(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PK_Culture_CultureID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_cultureId">Primary key for Culture records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByCultureId(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Culture_CultureID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_cultureId">Primary key for Culture records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByCultureId(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Culture_CultureID index.
            </summary>
            <param name="_cultureId">Primary key for Culture records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.GetByCultureId(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Culture_CultureID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_cultureId">Primary key for Culture records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.Culture},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Culture&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.Culture)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.Culture)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Culture,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Culture Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Culture,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.Culture object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.Culture instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Culture Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CultureChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.Culture</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CultureChildEntityTypes.ProductModelProductDescriptionCultureCollection">
            <summary>
             Collection of <c>Culture</c> as OneToMany for ProductModelProductDescriptionCultureCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CultureChildEntityTypes.ProductModelIdProductModelCollection_From_ProductModelProductDescriptionCulture">
            <summary>
             Collection of <c>Culture</c> as ManyToMany for ProductModelCollection_From_ProductModelProductDescriptionCulture
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CultureChildEntityTypes.ProductDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCulture">
            <summary>
             Collection of <c>Culture</c> as ManyToMany for ProductDescriptionCollection_From_ProductModelProductDescriptionCulture
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CultureFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CultureFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CultureFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CultureFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CultureParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CultureParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CultureParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CultureParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CultureSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CultureSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the CultureSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CreditCardChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.CreditCard</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CreditCardChildEntityTypes.ContactCreditCardCollection">
            <summary>
             Collection of <c>CreditCard</c> as OneToMany for ContactCreditCardCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CreditCardChildEntityTypes.SalesOrderHeaderCollection">
            <summary>
             Collection of <c>CreditCard</c> as OneToMany for SalesOrderHeaderCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CreditCardChildEntityTypes.ContactIdContactCollection_From_ContactCreditCard">
            <summary>
             Collection of <c>CreditCard</c> as ManyToMany for ContactCollection_From_ContactCreditCard
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CreditCardFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CreditCardFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CreditCardFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CreditCardFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CreditCardParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CreditCardParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CreditCardParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CreditCardParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CreditCardSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CreditCardSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the CreditCardSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ContactCreditCardKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.. Primary Key.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.. Primary Key.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByContactId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ContactCreditCard_Contact_ContactID key.
            	FK_ContactCreditCard_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ContactCreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ContactCreditCard_Contact_ContactID key.
            	FK_ContactCreditCard_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ContactCreditCard objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ContactCreditCard_Contact_ContactID key.
            	FK_ContactCreditCard_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ContactCreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByContactId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ContactCreditCard_Contact_ContactID key.
            	fkContactCreditCardContactContactId Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ContactCreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByContactId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ContactCreditCard_Contact_ContactID key.
            	fkContactCreditCardContactContactId Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ContactCreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ContactCreditCard_Contact_ContactID key.
            	FK_ContactCreditCard_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ContactCreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByCreditCardId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ContactCreditCard_CreditCard_CreditCardID key.
            	FK_ContactCreditCard_CreditCard_CreditCardID Description: Foreign key constraint referencing CreditCard.CreditCardID.
            </summary>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ContactCreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByCreditCardId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ContactCreditCard_CreditCard_CreditCardID key.
            	FK_ContactCreditCard_CreditCard_CreditCardID Description: Foreign key constraint referencing CreditCard.CreditCardID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ContactCreditCard objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByCreditCardId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ContactCreditCard_CreditCard_CreditCardID key.
            	FK_ContactCreditCard_CreditCard_CreditCardID Description: Foreign key constraint referencing CreditCard.CreditCardID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ContactCreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByCreditCardId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ContactCreditCard_CreditCard_CreditCardID key.
            	fkContactCreditCardCreditCardCreditCardId Description: Foreign key constraint referencing CreditCard.CreditCardID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ContactCreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByCreditCardId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ContactCreditCard_CreditCard_CreditCardID key.
            	fkContactCreditCardCreditCardCreditCardId Description: Foreign key constraint referencing CreditCard.CreditCardID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ContactCreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByCreditCardId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ContactCreditCard_CreditCard_CreditCardID key.
            	FK_ContactCreditCard_CreditCard_CreditCardID Description: Foreign key constraint referencing CreditCard.CreditCardID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ContactCreditCard objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ContactCreditCardKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByContactIdCreditCardId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ContactCreditCard_ContactID_CreditCardID index.
            </summary>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByContactIdCreditCardId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ContactCreditCard_ContactID_CreditCardID index.
            </summary>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByContactIdCreditCardId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ContactCreditCard_ContactID_CreditCardID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByContactIdCreditCardId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ContactCreditCard_ContactID_CreditCardID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByContactIdCreditCardId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ContactCreditCard_ContactID_CreditCardID index.
            </summary>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.GetByContactIdCreditCardId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ContactCreditCard_ContactID_CreditCardID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Customer identification number. Foreign key to Contact.ContactID.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ContactCreditCard},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ContactCreditCard&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ContactCreditCard)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ContactCreditCard)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ContactCreditCard,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ContactCreditCard Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ContactCreditCard,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ContactCreditCard object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ContactCreditCard instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ContactCreditCard Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ContactCreditCard</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardChildEntityTypes.Contact">
            <summary>
             Composite Property for <c>Contact</c> at ContactIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardChildEntityTypes.CreditCard">
            <summary>
             Composite Property for <c>CreditCard</c> at CreditCardIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ContactCreditCardFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ContactCreditCardFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ContactCreditCardFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ContactCreditCardParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ContactCreditCardParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ContactCreditCardParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ContactCreditCardSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.BillOfMaterialsKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_billOfMaterialsId">Primary key for BillOfMaterials records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_billOfMaterialsId">Primary key for BillOfMaterials records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByComponentId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_BillOfMaterials_Product_ComponentID key.
            	FK_BillOfMaterials_Product_ComponentID Description: Foreign key constraint referencing Product.ComponentID.
            </summary>
            <param name="_componentId">Component identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.BillOfMaterials objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByComponentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_BillOfMaterials_Product_ComponentID key.
            	FK_BillOfMaterials_Product_ComponentID Description: Foreign key constraint referencing Product.ComponentID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_componentId">Component identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.BillOfMaterials objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByComponentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_BillOfMaterials_Product_ComponentID key.
            	FK_BillOfMaterials_Product_ComponentID Description: Foreign key constraint referencing Product.ComponentID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_componentId">Component identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.BillOfMaterials objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByComponentId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_BillOfMaterials_Product_ComponentID key.
            	fkBillOfMaterialsProductComponentId Description: Foreign key constraint referencing Product.ComponentID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_componentId">Component identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.BillOfMaterials objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByComponentId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_BillOfMaterials_Product_ComponentID key.
            	fkBillOfMaterialsProductComponentId Description: Foreign key constraint referencing Product.ComponentID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_componentId">Component identification number. Foreign key to Product.ProductID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.BillOfMaterials objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByComponentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_BillOfMaterials_Product_ComponentID key.
            	FK_BillOfMaterials_Product_ComponentID Description: Foreign key constraint referencing Product.ComponentID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_componentId">Component identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.BillOfMaterials objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByProductAssemblyId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_BillOfMaterials_Product_ProductAssemblyID key.
            	FK_BillOfMaterials_Product_ProductAssemblyID Description: Foreign key constraint referencing Product.ProductAssemblyID.
            </summary>
            <param name="_productAssemblyId">Parent product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.BillOfMaterials objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByProductAssemblyId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_BillOfMaterials_Product_ProductAssemblyID key.
            	FK_BillOfMaterials_Product_ProductAssemblyID Description: Foreign key constraint referencing Product.ProductAssemblyID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productAssemblyId">Parent product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.BillOfMaterials objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByProductAssemblyId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_BillOfMaterials_Product_ProductAssemblyID key.
            	FK_BillOfMaterials_Product_ProductAssemblyID Description: Foreign key constraint referencing Product.ProductAssemblyID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productAssemblyId">Parent product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.BillOfMaterials objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByProductAssemblyId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_BillOfMaterials_Product_ProductAssemblyID key.
            	fkBillOfMaterialsProductProductAssemblyId Description: Foreign key constraint referencing Product.ProductAssemblyID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productAssemblyId">Parent product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.BillOfMaterials objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByProductAssemblyId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_BillOfMaterials_Product_ProductAssemblyID key.
            	fkBillOfMaterialsProductProductAssemblyId Description: Foreign key constraint referencing Product.ProductAssemblyID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productAssemblyId">Parent product identification number. Foreign key to Product.ProductID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.BillOfMaterials objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByProductAssemblyId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_BillOfMaterials_Product_ProductAssemblyID key.
            	FK_BillOfMaterials_Product_ProductAssemblyID Description: Foreign key constraint referencing Product.ProductAssemblyID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productAssemblyId">Parent product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.BillOfMaterials objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.BillOfMaterialsKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByProductAssemblyIdComponentIdStartDate(System.Nullable{System.Int32},System.Int32,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate index.
            </summary>
            <param name="_productAssemblyId">Parent product identification number. Foreign key to Product.ProductID.</param>
            <param name="_componentId">Component identification number. Foreign key to Product.ProductID.</param>
            <param name="_startDate">Date the component started being used in the assembly item.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByProductAssemblyIdComponentIdStartDate(System.Nullable{System.Int32},System.Int32,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate index.
            </summary>
            <param name="_productAssemblyId">Parent product identification number. Foreign key to Product.ProductID.</param>
            <param name="_componentId">Component identification number. Foreign key to Product.ProductID.</param>
            <param name="_startDate">Date the component started being used in the assembly item.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByProductAssemblyIdComponentIdStartDate(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productAssemblyId">Parent product identification number. Foreign key to Product.ProductID.</param>
            <param name="_componentId">Component identification number. Foreign key to Product.ProductID.</param>
            <param name="_startDate">Date the component started being used in the assembly item.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByProductAssemblyIdComponentIdStartDate(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productAssemblyId">Parent product identification number. Foreign key to Product.ProductID.</param>
            <param name="_componentId">Component identification number. Foreign key to Product.ProductID.</param>
            <param name="_startDate">Date the component started being used in the assembly item.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByProductAssemblyIdComponentIdStartDate(System.Nullable{System.Int32},System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate index.
            </summary>
            <param name="_productAssemblyId">Parent product identification number. Foreign key to Product.ProductID.</param>
            <param name="_componentId">Component identification number. Foreign key to Product.ProductID.</param>
            <param name="_startDate">Date the component started being used in the assembly item.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByProductAssemblyIdComponentIdStartDate(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productAssemblyId">Parent product identification number. Foreign key to Product.ProductID.</param>
            <param name="_componentId">Component identification number. Foreign key to Product.ProductID.</param>
            <param name="_startDate">Date the component started being used in the assembly item.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByUnitMeasureCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_BillOfMaterials_UnitMeasureCode index.
            </summary>
            <param name="_unitMeasureCode">Standard code identifying the unit of measure for the quantity.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByUnitMeasureCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_BillOfMaterials_UnitMeasureCode index.
            </summary>
            <param name="_unitMeasureCode">Standard code identifying the unit of measure for the quantity.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByUnitMeasureCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_BillOfMaterials_UnitMeasureCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_unitMeasureCode">Standard code identifying the unit of measure for the quantity.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByUnitMeasureCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_BillOfMaterials_UnitMeasureCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_unitMeasureCode">Standard code identifying the unit of measure for the quantity.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByUnitMeasureCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_BillOfMaterials_UnitMeasureCode index.
            </summary>
            <param name="_unitMeasureCode">Standard code identifying the unit of measure for the quantity.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByUnitMeasureCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_BillOfMaterials_UnitMeasureCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_unitMeasureCode">Standard code identifying the unit of measure for the quantity.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByBillOfMaterialsId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_BillOfMaterials_BillOfMaterialsID index.
            </summary>
            <param name="_billOfMaterialsId">Primary key for BillOfMaterials records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByBillOfMaterialsId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_BillOfMaterials_BillOfMaterialsID index.
            </summary>
            <param name="_billOfMaterialsId">Primary key for BillOfMaterials records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByBillOfMaterialsId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_BillOfMaterials_BillOfMaterialsID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_billOfMaterialsId">Primary key for BillOfMaterials records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByBillOfMaterialsId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_BillOfMaterials_BillOfMaterialsID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_billOfMaterialsId">Primary key for BillOfMaterials records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByBillOfMaterialsId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_BillOfMaterials_BillOfMaterialsID index.
            </summary>
            <param name="_billOfMaterialsId">Primary key for BillOfMaterials records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.GetByBillOfMaterialsId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_BillOfMaterials_BillOfMaterialsID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_billOfMaterialsId">Primary key for BillOfMaterials records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.BillOfMaterials},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;BillOfMaterials&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.BillOfMaterials)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.BillOfMaterials)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.BillOfMaterials,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.BillOfMaterials Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.BillOfMaterials,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.BillOfMaterials object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.BillOfMaterials instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.BillOfMaterials Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.BillOfMaterials</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsChildEntityTypes.Product">
            <summary>
             Composite Property for <c>Product</c> at ComponentIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsChildEntityTypes.UnitMeasure">
            <summary>
             Composite Property for <c>UnitMeasure</c> at UnitMeasureCodeSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the BillOfMaterialsFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BillOfMaterialsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the BillOfMaterialsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the BillOfMaterialsParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BillOfMaterialsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the BillOfMaterialsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the BillOfMaterialsSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VJobCandidateEducation},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VJobCandidateEducation)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducation"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducation"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducation"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VJobCandidateEducationFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEducationFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEducationFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducation"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VJobCandidateEducationParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEducationParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEducationParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducation"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VJobCandidateEducationSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VJobCandidate},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VJobCandidate)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidate"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidate"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VJobCandidateFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VJobCandidateParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VJobCandidateSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SqlUtil">
            <summary>
            Provides utility methods for generating SQL expressions.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlUtil.AND">
            <summary>
            SQL AND keyword.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlUtil.OR">
            <summary>
            SQL OR keyword.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlUtil.ASC">
            <summary>
            SQL ASC keyword.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlUtil.DESC">
            <summary>
            SQL DESC keyword.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlUtil.NULL">
            <summary>
            SQL NULL keyword.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlUtil.TOKEN">
            <summary>
            Used to represent quoted search terms.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlUtil.QUOTE">
            <summary>
            Delimiter for quoted search terms.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlUtil.STAR">
            <summary>
            Used as wildcard character within search text.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlUtil.WILD">
            <summary>
            SQL wildcard character.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlUtil.LEFT">
            <summary>
            SQL grouping open character.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlUtil.RIGHT">
            <summary>
            SQL grouping close character.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlUtil.COMMA">
            <summary>
            Delimiter for optional search terms.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlUtil.PAGE_INDEX">
            <summary>
            PageIndex Temp Table
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Equals(System.String,System.String)">
            <summary>
            Creates an <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Equals(System.String,System.String,System.Boolean)">
            <summary>
            Creates an <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Equals(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates an <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Equals(System.String)">
            <summary>
            Encodes the value for a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Contains(System.String,System.String)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Contains(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Contains(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Contains(System.String)">
            <summary>
            Encodes the value for a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.NotContains(System.String,System.String)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.NotContains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.NotContains(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.NotContains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.NotContains(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.NotContains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.NotContains(System.String)">
            <summary>
            Encodes the value for a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.NotContains"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.StartsWith(System.String,System.String)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.StartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.StartsWith(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.StartsWith(System.String)">
            <summary>
            Encodes the value for a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.EndsWith(System.String,System.String)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.EndsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.EndsWith(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.EndsWith(System.String)">
            <summary>
            Encodes the value for a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Like(System.String,System.String)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Like(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Like(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Like(System.String)">
            <summary>
            Encodes the value for a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.NotLike(System.String,System.String)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.NotLike"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.NotLike(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.NotLike"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.NotLike(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.NotLike"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.NotLike(System.String)">
            <summary>
            Encodes the value for a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.NotLike"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.IsNull(System.String)">
            <summary>
            Creates an IS NULL expression.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.IsNotNull(System.String)">
            <summary>
            Creates an IS NOT NULL expression.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Encode(System.String)">
            <summary>
            Encodes the specified value for use in SQL expressions.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Encode(System.String,System.Boolean)">
            <summary>
            Encodes the specified value for use in SQL expressions and
            optionally surrounds the value with single-quotes.
            </summary>
            <param name="value"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Encode(System.String[])">
            <summary>
            Encodes the specified values for use in SQL expressions.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.Encode(System.String[],System.Boolean)">
            <summary>
            Encodes the specified values for use in SQL expressions and
            optionally surrounds the value with single-quotes.
            </summary>
            <param name="values"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.GetLikeFormat(System.Boolean)">
            <summary>
            Gets the like format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.GetLikeFormat(System.Boolean,System.Boolean)">
            <summary>
            Gets the like format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.GetNotLikeFormat(System.Boolean)">
            <summary>
            Gets the not like format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.GetNotLikeFormat(System.Boolean,System.Boolean)">
            <summary>
            Gets the not like format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.GetEqualFormat(System.Boolean)">
            <summary>
            Gets the equal format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlUtil.GetEqualFormat(System.Boolean,System.Boolean)">
            <summary>
            Gets the equal format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SqlComparisonType">
            <summary>
            Enumeration of SQL expression comparison types.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Equals">
            <summary>
            Represents = value.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlComparisonType.StartsWith">
            <summary>
            Represents LIKE value%.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlComparisonType.EndsWith">
            <summary>
            Represents LIKE %value.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Contains">
            <summary>
            Represents LIKE %value%.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlComparisonType.NotContains">
            <summary>
            Represents NOT LIKE %value%.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Like">
            <summary>
            Represents LIKE value.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlComparisonType.NotLike">
            <summary>
            Represents NOT LIKE value.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SqlFilterType">
            <summary>
            Enumeration of SQL Filter Types.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlFilterType.Word">
            <summary>
            Represents an Individual Word filter
            </summary>
            <example>(if using <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Contains"/>) CompanyName LIKE "%Acme" AND CompanyName LIKE "Company%"</example>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlFilterType.Phrase">
            <summary>
            Represents a Phrase filter
            </summary>
            <example>(if using <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Contains"/>) CompanyName LIKE "%Acme Company%"</example>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SqlSortDirection">
            <summary>
            Enumeration of SQL expression Sort Directions
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlSortDirection.ASC">
            <summary>
            Database Ascending
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlSortDirection.DESC">
            <summary>
            Database Descending
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SqlExpressionParser">
            <summary>
            Parses search text into an expression that can
            be used in a SQL WHERE clause.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.#ctor(System.String,Nettiers.AdventureWorks.Data.SqlComparisonType)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.#ctor(System.String,Nettiers.AdventureWorks.Data.SqlComparisonType,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.AppendOr">
            <summary>
            Appends "OR" to the SQL statement.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.AppendAnd">
            <summary>
            Appends "AND" to the SQL statement.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.AppendSpace">
            <summary>
            Appends a space to the SQL statement.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.OpenGrouping">
            <summary>
            Appends a left parentheses to the SQL statement.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.CloseGrouping">
            <summary>
            Appends a right parentheses to the SQL statement.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.AppendSearchText(System.String)">
            <summary>
            Appends the specified search text to the SQL statement.
            </summary>
            <param name="searchText">The search text to append.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.WrapWithSQL(System.String,System.String,System.Boolean)">
            <summary>
            Converts the search text into a valid search expression.
            </summary>
            <param name="propertyName"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.Contains(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.StartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.EndsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.Like(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.Equals(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlExpressionParser.Parse(System.String)">
            <summary>
            Parses the specified value into separate search terms.
            </summary>
            <param name="value">The search text.</param>
            <returns>Returns a parsed search phrase.</returns>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ParameterizedSqlExpressionParser">
            <summary>
            Parses search text into an expression that can
            be used in a parameterized SQL WHERE clause.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlExpressionParser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlExpressionParser.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlExpressionParser.#ctor(System.String,Nettiers.AdventureWorks.Data.SqlComparisonType)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlExpressionParser.#ctor(System.String,Nettiers.AdventureWorks.Data.SqlComparisonType,System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlExpressionParser.Contains(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlExpressionParser.StartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlExpressionParser.EndsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlExpressionParser.Like(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ParameterizedSqlExpressionParser.Equals(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:Nettiers.AdventureWorks.Data.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.ParameterizedSqlExpressionParser.parameters">
            <summary>
            The Parameters member variable.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.ParameterizedSqlExpressionParser.Parameters">
            <summary>
            Gets or sets the Parameters property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SpecialOfferProductKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.. Primary Key.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.. Primary Key.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetBySpecialOfferId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID key.
            	FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID Description: Foreign key constraint referencing SpecialOffer.SpecialOfferID.
            </summary>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SpecialOfferProduct objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetBySpecialOfferId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID key.
            	FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID Description: Foreign key constraint referencing SpecialOffer.SpecialOfferID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SpecialOfferProduct objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetBySpecialOfferId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID key.
            	FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID Description: Foreign key constraint referencing SpecialOffer.SpecialOfferID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SpecialOfferProduct objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetBySpecialOfferId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID key.
            	fkSpecialOfferProductSpecialOfferSpecialOfferId Description: Foreign key constraint referencing SpecialOffer.SpecialOfferID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SpecialOfferProduct objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetBySpecialOfferId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID key.
            	fkSpecialOfferProductSpecialOfferSpecialOfferId Description: Foreign key constraint referencing SpecialOffer.SpecialOfferID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SpecialOfferProduct objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetBySpecialOfferId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID key.
            	FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID Description: Foreign key constraint referencing SpecialOffer.SpecialOfferID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SpecialOfferProduct objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SpecialOfferProductKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_SpecialOfferProduct_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SpecialOfferProduct_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_SpecialOfferProduct_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SpecialOfferProduct_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SpecialOfferProduct_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SpecialOfferProduct_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_SpecialOfferProduct_ProductID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SpecialOfferProduct_ProductID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SpecialOfferProduct_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SpecialOfferProduct_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SpecialOfferProduct_ProductID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SpecialOfferProduct_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetBySpecialOfferIdProductId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_SpecialOfferProduct_SpecialOfferID_ProductID index.
            </summary>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetBySpecialOfferIdProductId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SpecialOfferProduct_SpecialOfferID_ProductID index.
            </summary>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetBySpecialOfferIdProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SpecialOfferProduct_SpecialOfferID_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetBySpecialOfferIdProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SpecialOfferProduct_SpecialOfferID_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetBySpecialOfferIdProductId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SpecialOfferProduct_SpecialOfferID_ProductID index.
            </summary>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.GetBySpecialOfferIdProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SpecialOfferProduct_SpecialOfferID_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.SpecialOfferProduct},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;SpecialOfferProduct&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.SpecialOfferProduct)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.SpecialOfferProduct)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SpecialOfferProduct,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SpecialOfferProduct Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SpecialOfferProduct,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.SpecialOfferProduct object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.SpecialOfferProduct instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SpecialOfferProduct Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.SpecialOfferProduct</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductChildEntityTypes.Product">
            <summary>
             Composite Property for <c>Product</c> at ProductIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductChildEntityTypes.SpecialOffer">
            <summary>
             Composite Property for <c>SpecialOffer</c> at SpecialOfferIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductChildEntityTypes.SalesOrderDetailCollection">
            <summary>
             Collection of <c>SpecialOfferProduct</c> as OneToMany for SalesOrderDetailCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SpecialOfferProductFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferProductFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferProductFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SpecialOfferProductParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferProductParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferProductParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the SpecialOfferProductSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.Delete(System.Int32,System.DateTime,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.. Primary Key.</param>
            <param name="_startDate">Date the sales representive started work in the territory.. Primary Key.</param>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.. Primary Key.</param>
            <param name="_startDate">Date the sales representive started work in the territory.. Primary Key.</param>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetBySalesPersonId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTerritoryHistory_SalesPerson_SalesPersonID key.
            	FK_SalesTerritoryHistory_SalesPerson_SalesPersonID Description: Foreign key constraint referencing SalesPerson.SalesPersonID.
            </summary>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTerritoryHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetBySalesPersonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTerritoryHistory_SalesPerson_SalesPersonID key.
            	FK_SalesTerritoryHistory_SalesPerson_SalesPersonID Description: Foreign key constraint referencing SalesPerson.SalesPersonID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTerritoryHistory objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetBySalesPersonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTerritoryHistory_SalesPerson_SalesPersonID key.
            	FK_SalesTerritoryHistory_SalesPerson_SalesPersonID Description: Foreign key constraint referencing SalesPerson.SalesPersonID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTerritoryHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetBySalesPersonId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTerritoryHistory_SalesPerson_SalesPersonID key.
            	fkSalesTerritoryHistorySalesPersonSalesPersonId Description: Foreign key constraint referencing SalesPerson.SalesPersonID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTerritoryHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetBySalesPersonId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTerritoryHistory_SalesPerson_SalesPersonID key.
            	fkSalesTerritoryHistorySalesPersonSalesPersonId Description: Foreign key constraint referencing SalesPerson.SalesPersonID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTerritoryHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetBySalesPersonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTerritoryHistory_SalesPerson_SalesPersonID key.
            	FK_SalesTerritoryHistory_SalesPerson_SalesPersonID Description: Foreign key constraint referencing SalesPerson.SalesPersonID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTerritoryHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetByTerritoryId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTerritoryHistory_SalesTerritory_TerritoryID key.
            	FK_SalesTerritoryHistory_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTerritoryHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTerritoryHistory_SalesTerritory_TerritoryID key.
            	FK_SalesTerritoryHistory_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTerritoryHistory objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTerritoryHistory_SalesTerritory_TerritoryID key.
            	FK_SalesTerritoryHistory_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTerritoryHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetByTerritoryId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTerritoryHistory_SalesTerritory_TerritoryID key.
            	fkSalesTerritoryHistorySalesTerritoryTerritoryId Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTerritoryHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetByTerritoryId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTerritoryHistory_SalesTerritory_TerritoryID key.
            	fkSalesTerritoryHistorySalesTerritoryTerritoryId Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTerritoryHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesTerritoryHistory_SalesTerritory_TerritoryID key.
            	FK_SalesTerritoryHistory_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesTerritoryHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesTerritoryHistoryKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_SalesTerritoryHistory_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTerritoryHistory_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTerritoryHistory_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTerritoryHistory_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTerritoryHistory_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTerritoryHistory_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetBySalesPersonIdStartDateTerritoryId(System.Int32,System.DateTime,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_SalesTerritoryHistory_SalesPersonID_StartDate_TerritoryID index.
            </summary>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.</param>
            <param name="_startDate">Date the sales representive started work in the territory.</param>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetBySalesPersonIdStartDateTerritoryId(System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesTerritoryHistory_SalesPersonID_StartDate_TerritoryID index.
            </summary>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.</param>
            <param name="_startDate">Date the sales representive started work in the territory.</param>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetBySalesPersonIdStartDateTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesTerritoryHistory_SalesPersonID_StartDate_TerritoryID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.</param>
            <param name="_startDate">Date the sales representive started work in the territory.</param>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetBySalesPersonIdStartDateTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesTerritoryHistory_SalesPersonID_StartDate_TerritoryID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.</param>
            <param name="_startDate">Date the sales representive started work in the territory.</param>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetBySalesPersonIdStartDateTerritoryId(System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesTerritoryHistory_SalesPersonID_StartDate_TerritoryID index.
            </summary>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.</param>
            <param name="_startDate">Date the sales representive started work in the territory.</param>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.GetBySalesPersonIdStartDateTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesTerritoryHistory_SalesPersonID_StartDate_TerritoryID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Primary key for SalesTerritoryHistory records.</param>
            <param name="_startDate">Date the sales representive started work in the territory.</param>
            <param name="_territoryId">Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.SalesTerritoryHistory},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;SalesTerritoryHistory&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.SalesTerritoryHistory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.SalesTerritoryHistory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesTerritoryHistory,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesTerritoryHistory Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesTerritoryHistory,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.SalesTerritoryHistory object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.SalesTerritoryHistory instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesTerritoryHistory Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.SalesTerritoryHistory</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryChildEntityTypes.SalesPerson">
            <summary>
             Composite Property for <c>SalesPerson</c> at SalesPersonIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryChildEntityTypes.SalesTerritory">
            <summary>
             Composite Property for <c>SalesTerritory</c> at TerritoryIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesTerritoryHistoryFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesTerritoryHistoryParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistorySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistorySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesTerritoryHistorySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.Delete(System.Int32,System.DateTime)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.. Primary Key.</param>
            <param name="_quotaDate">Sales quota date.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.. Primary Key.</param>
            <param name="_quotaDate">Sales quota date.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetBySalesPersonId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID key.
            	FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID Description: Foreign key constraint referencing SalesPerson.SalesPersonID.
            </summary>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetBySalesPersonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID key.
            	FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID Description: Foreign key constraint referencing SalesPerson.SalesPersonID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetBySalesPersonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID key.
            	FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID Description: Foreign key constraint referencing SalesPerson.SalesPersonID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetBySalesPersonId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID key.
            	fkSalesPersonQuotaHistorySalesPersonSalesPersonId Description: Foreign key constraint referencing SalesPerson.SalesPersonID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetBySalesPersonId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID key.
            	fkSalesPersonQuotaHistorySalesPersonSalesPersonId Description: Foreign key constraint referencing SalesPerson.SalesPersonID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetBySalesPersonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID key.
            	FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID Description: Foreign key constraint referencing SalesPerson.SalesPersonID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistoryKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_SalesPersonQuotaHistory_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesPersonQuotaHistory_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesPersonQuotaHistory_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesPersonQuotaHistory_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesPersonQuotaHistory_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesPersonQuotaHistory_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetBySalesPersonIdQuotaDate(System.Int32,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_SalesPersonQuotaHistory_SalesPersonID_QuotaDate index.
            </summary>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="_quotaDate">Sales quota date.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetBySalesPersonIdQuotaDate(System.Int32,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesPersonQuotaHistory_SalesPersonID_QuotaDate index.
            </summary>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="_quotaDate">Sales quota date.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetBySalesPersonIdQuotaDate(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesPersonQuotaHistory_SalesPersonID_QuotaDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="_quotaDate">Sales quota date.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetBySalesPersonIdQuotaDate(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesPersonQuotaHistory_SalesPersonID_QuotaDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="_quotaDate">Sales quota date.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetBySalesPersonIdQuotaDate(System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesPersonQuotaHistory_SalesPersonID_QuotaDate index.
            </summary>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="_quotaDate">Sales quota date.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.GetBySalesPersonIdQuotaDate(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesPersonQuotaHistory_SalesPersonID_QuotaDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Sales person identification number. Foreign key to SalesPerson.SalesPersonID.</param>
            <param name="_quotaDate">Sales quota date.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;SalesPersonQuotaHistory&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryChildEntityTypes.SalesPerson">
            <summary>
             Composite Property for <c>SalesPerson</c> at SalesPersonIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistoryFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistoryParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistorySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistorySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistorySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesOrderDetailKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.. Primary Key.</param>
            <param name="_salesOrderDetailId">Primary key. One incremental unique number per product sold.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.. Primary Key.</param>
            <param name="_salesOrderDetailId">Primary key. One incremental unique number per product sold.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySalesOrderId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID key.
            	FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID Description: Foreign key constraint referencing SalesOrderHeader.PurchaseOrderID.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderDetail objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySalesOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID key.
            	FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID Description: Foreign key constraint referencing SalesOrderHeader.PurchaseOrderID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderDetail objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySalesOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID key.
            	FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID Description: Foreign key constraint referencing SalesOrderHeader.PurchaseOrderID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderDetail objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySalesOrderId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID key.
            	fkSalesOrderDetailSalesOrderHeaderSalesOrderId Description: Foreign key constraint referencing SalesOrderHeader.PurchaseOrderID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderDetail objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySalesOrderId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID key.
            	fkSalesOrderDetailSalesOrderHeaderSalesOrderId Description: Foreign key constraint referencing SalesOrderHeader.PurchaseOrderID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderDetail objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySalesOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID key.
            	FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID Description: Foreign key constraint referencing SalesOrderHeader.PurchaseOrderID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderDetail objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySpecialOfferIdProductId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID key.
            	FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID Description: Foreign key constraint referencing SpecialOfferProduct.SpecialOfferIDProductID.
            </summary>
            <param name="_specialOfferId">Promotional code. Foreign key to SpecialOffer.SpecialOfferID.</param>
            <param name="_productId">Product sold to customer. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderDetail objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySpecialOfferIdProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID key.
            	FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID Description: Foreign key constraint referencing SpecialOfferProduct.SpecialOfferIDProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Promotional code. Foreign key to SpecialOffer.SpecialOfferID.</param>
            <param name="_productId">Product sold to customer. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderDetail objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySpecialOfferIdProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID key.
            	FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID Description: Foreign key constraint referencing SpecialOfferProduct.SpecialOfferIDProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Promotional code. Foreign key to SpecialOffer.SpecialOfferID.</param>
            <param name="_productId">Product sold to customer. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderDetail objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySpecialOfferIdProductId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID key.
            	fkSalesOrderDetailSpecialOfferProductSpecialOfferIdProductId Description: Foreign key constraint referencing SpecialOfferProduct.SpecialOfferIDProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_specialOfferId">Promotional code. Foreign key to SpecialOffer.SpecialOfferID.</param>
            <param name="_productId">Product sold to customer. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderDetail objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySpecialOfferIdProductId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID key.
            	fkSalesOrderDetailSpecialOfferProductSpecialOfferIdProductId Description: Foreign key constraint referencing SpecialOfferProduct.SpecialOfferIDProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_specialOfferId">Promotional code. Foreign key to SpecialOffer.SpecialOfferID.</param>
            <param name="_productId">Product sold to customer. Foreign key to Product.ProductID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderDetail objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySpecialOfferIdProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID key.
            	FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID Description: Foreign key constraint referencing SpecialOfferProduct.SpecialOfferIDProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Promotional code. Foreign key to SpecialOffer.SpecialOfferID.</param>
            <param name="_productId">Product sold to customer. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderDetail objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesOrderDetailKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_SalesOrderDetail_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesOrderDetail_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesOrderDetail_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesOrderDetail_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesOrderDetail_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesOrderDetail_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_SalesOrderDetail_ProductID index.
            </summary>
            <param name="_productId">Product sold to customer. Foreign key to Product.ProductID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SalesOrderDetail_ProductID index.
            </summary>
            <param name="_productId">Product sold to customer. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SalesOrderDetail_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product sold to customer. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SalesOrderDetail_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product sold to customer. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SalesOrderDetail_ProductID index.
            </summary>
            <param name="_productId">Product sold to customer. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SalesOrderDetail_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product sold to customer. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySalesOrderIdSalesOrderDetailId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID index.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_salesOrderDetailId">Primary key. One incremental unique number per product sold.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySalesOrderIdSalesOrderDetailId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID index.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_salesOrderDetailId">Primary key. One incremental unique number per product sold.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySalesOrderIdSalesOrderDetailId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_salesOrderDetailId">Primary key. One incremental unique number per product sold.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySalesOrderIdSalesOrderDetailId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_salesOrderDetailId">Primary key. One incremental unique number per product sold.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySalesOrderIdSalesOrderDetailId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID index.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_salesOrderDetailId">Primary key. One incremental unique number per product sold.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.GetBySalesOrderIdSalesOrderDetailId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_salesOrderDetailId">Primary key. One incremental unique number per product sold.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.SalesOrderDetail},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;SalesOrderDetail&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.SalesOrderDetail)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.SalesOrderDetail)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesOrderDetail,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesOrderDetail Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesOrderDetail,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.SalesOrderDetail object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.SalesOrderDetail instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesOrderDetail Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.SalesOrderDetail</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailChildEntityTypes.SalesOrderHeader">
            <summary>
             Composite Property for <c>SalesOrderHeader</c> at SalesOrderIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailChildEntityTypes.SpecialOfferProduct">
            <summary>
             Composite Property for <c>SpecialOfferProduct</c> at SpecialOfferIdProductIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderDetailFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderDetailFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderDetailFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderDetailParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderDetailParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderDetailParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderDetailSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.GetByProductIdFromProductProductPhoto(System.Int32)">
            <summary>
            	Gets ProductPhoto objects from the datasource by ProductID in the
            	ProductProductPhoto table. Table ProductPhoto is related to table Product
            	through the (M:N) relationship defined in the ProductProductPhoto table.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of ProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.GetByProductIdFromProductProductPhoto(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.ProductPhoto objects from the datasource by ProductID in the
            	ProductProductPhoto table. Table ProductPhoto is related to table Product
            	through the (M:N) relationship defined in the ProductProductPhoto table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a TList of ProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.GetByProductIdFromProductProductPhoto(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets ProductPhoto objects from the datasource by ProductID in the
            	ProductProductPhoto table. Table ProductPhoto is related to table Product
            	through the (M:N) relationship defined in the ProductProductPhoto table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.GetByProductIdFromProductProductPhoto(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets ProductPhoto objects from the datasource by ProductID in the
            	ProductProductPhoto table. Table ProductPhoto is related to table Product
            	through the (M:N) relationship defined in the ProductProductPhoto table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.GetByProductIdFromProductProductPhoto(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ProductPhoto objects from the datasource by ProductID in the
            	ProductProductPhoto table. Table ProductPhoto is related to table Product
            	through the (M:N) relationship defined in the ProductProductPhoto table.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.GetByProductIdFromProductProductPhoto(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ProductPhoto objects from the datasource by ProductID in the
            	ProductProductPhoto table. Table ProductPhoto is related to table Product
            	through the (M:N) relationship defined in the ProductProductPhoto table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a TList of ProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductPhotoKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productPhotoId">Primary key for ProductPhoto records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productPhotoId">Primary key for ProductPhoto records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductPhotoKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.GetByProductPhotoId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ProductPhoto_ProductPhotoID index.
            </summary>
            <param name="_productPhotoId">Primary key for ProductPhoto records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.GetByProductPhotoId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductPhoto_ProductPhotoID index.
            </summary>
            <param name="_productPhotoId">Primary key for ProductPhoto records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.GetByProductPhotoId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductPhoto_ProductPhotoID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productPhotoId">Primary key for ProductPhoto records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.GetByProductPhotoId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductPhoto_ProductPhotoID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productPhotoId">Primary key for ProductPhoto records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.GetByProductPhotoId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductPhoto_ProductPhotoID index.
            </summary>
            <param name="_productPhotoId">Primary key for ProductPhoto records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.GetByProductPhotoId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductPhoto_ProductPhotoID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productPhotoId">Primary key for ProductPhoto records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ProductPhoto},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ProductPhoto&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ProductPhoto)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ProductPhoto)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductPhoto,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductPhoto Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductPhoto,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ProductPhoto object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ProductPhoto instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductPhoto Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductPhotoChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ProductPhoto</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductPhotoChildEntityTypes.ProductIdProductCollection_From_ProductProductPhoto">
            <summary>
             Collection of <c>ProductPhoto</c> as ManyToMany for ProductCollection_From_ProductProductPhoto
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductPhotoChildEntityTypes.ProductProductPhotoCollection">
            <summary>
             Collection of <c>ProductPhoto</c> as OneToMany for ProductProductPhotoCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductPhotoFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductPhotoFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductPhotoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductPhotoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductPhotoParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductPhotoParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductPhotoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductPhotoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductPhotoSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductPhotoSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductPhotoSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.EmployeeAddressKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.. Primary Key.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.. Primary Key.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByAddressId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeAddress_Address_AddressID key.
            	FK_EmployeeAddress_Address_AddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeAddress_Address_AddressID key.
            	FK_EmployeeAddress_Address_AddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeAddress objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeAddress_Address_AddressID key.
            	FK_EmployeeAddress_Address_AddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByAddressId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeAddress_Address_AddressID key.
            	fkEmployeeAddressAddressAddressId Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByAddressId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeAddress_Address_AddressID key.
            	fkEmployeeAddressAddressAddressId Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeAddress_Address_AddressID key.
            	FK_EmployeeAddress_Address_AddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByEmployeeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeAddress_Employee_EmployeeID key.
            	FK_EmployeeAddress_Employee_EmployeeID Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeAddress_Employee_EmployeeID key.
            	FK_EmployeeAddress_Employee_EmployeeID Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeAddress objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeAddress_Employee_EmployeeID key.
            	FK_EmployeeAddress_Employee_EmployeeID Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByEmployeeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeAddress_Employee_EmployeeID key.
            	fkEmployeeAddressEmployeeEmployeeId Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByEmployeeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeAddress_Employee_EmployeeID key.
            	fkEmployeeAddressEmployeeEmployeeId Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeAddress_Employee_EmployeeID key.
            	FK_EmployeeAddress_Employee_EmployeeID Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeeAddress objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.EmployeeAddressKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_EmployeeAddress_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_EmployeeAddress_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_EmployeeAddress_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_EmployeeAddress_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_EmployeeAddress_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_EmployeeAddress_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByEmployeeIdAddressId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_EmployeeAddress_EmployeeID_AddressID index.
            </summary>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByEmployeeIdAddressId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeeAddress_EmployeeID_AddressID index.
            </summary>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByEmployeeIdAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeeAddress_EmployeeID_AddressID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByEmployeeIdAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeeAddress_EmployeeID_AddressID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByEmployeeIdAddressId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeeAddress_EmployeeID_AddressID index.
            </summary>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.GetByEmployeeIdAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeeAddress_EmployeeID_AddressID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.EmployeeAddress},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;EmployeeAddress&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.EmployeeAddress)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.EmployeeAddress)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.EmployeeAddress,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.EmployeeAddress Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.EmployeeAddress,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.EmployeeAddress object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.EmployeeAddress instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.EmployeeAddress Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.EmployeeAddress</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressChildEntityTypes.Address">
            <summary>
             Composite Property for <c>Address</c> at AddressIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressChildEntityTypes.Employee">
            <summary>
             Composite Property for <c>Employee</c> at EmployeeIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EmployeeAddressFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeAddressFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeAddressFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EmployeeAddressParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeAddressParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeAddressParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EmployeeAddressSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ContactProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VVendorProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VVendorProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VVendorProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VVendorProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VVendorProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VVendor},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VVendorProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VVendor)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VVendor"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VVendor"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VIndividualDemographics},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VIndividualDemographics)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographics"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographics"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.DataRepository">
            <summary>
            This class represents the Data source repository and gives access to all the underlying providers.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DataRepository.LoadProvider(Nettiers.AdventureWorks.Data.Bases.NetTiersProvider)">
            <summary>
            Enables the DataRepository to programatically create and 
            pass in a <c>NetTiersProvider</c> during runtime.
            </summary>
            <param name="provider">An instatiated NetTiersProvider.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DataRepository.LoadProvider(Nettiers.AdventureWorks.Data.Bases.NetTiersProvider,System.Boolean)">
            <summary>
            Enables the DataRepository to programatically create and 
            pass in a <c>NetTiersProvider</c> during runtime.
            </summary>
            <param name="provider">An instatiated NetTiersProvider.</param>
            <param name="setAsDefault">ability to set any valid provider as the default provider for the DataRepository.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DataRepository.LoadProviders">
            <summary>
             Configuration based provider loading, will load the providers on first call.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DataRepository.CreateTransaction">
            <summary>
            Creates a new <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> instance from the current datasource.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DataRepository.AddConnection(System.String,System.String)">
            <summary>
            Adds the specified connection string to the map of connection strings.
            </summary>
            <param name="connectionStringName">The connection string name.</param>
            <param name="connectionString">The provider specific connection information.</param>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.Provider">
            <summary>
            Gets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.Providers">
            <summary>
            Gets the provider collection.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.NetTiersSection">
            <summary>
            Gets a reference to the configured NetTiersServiceSection object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.Configuration">
            <summary>
            Gets a reference to the application configuration object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ConnectionStrings">
            <summary>
            Gets a reference to the ConnectionStringSettings collection.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.Connections">
            <summary>
            Gets the dictionary of connection providers.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.SalesTerritoryProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.LocationProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.SalesReasonProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.SalesPersonQuotaHistoryProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.SalesOrderHeaderProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.SalesOrderHeaderSalesReasonProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ProductModelProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.SalesTaxRateProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.SalesPersonProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ProductCategoryProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ProductSubcategoryProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ProductProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.SalesTerritoryHistoryProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.PurchaseOrderDetailProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.SalesOrderDetailProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ProductProductPhotoProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ProductReviewProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.PurchaseOrderHeaderProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ProductVendorProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ScrapReasonProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.UnitMeasureProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ShiftProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.TransactionHistoryArchiveProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VendorProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.AddressProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.WorkOrderProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VendorAddressProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.TransactionHistoryProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VendorContactProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.TimestampPkProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ShoppingCartItemProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.TestVariantProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.SpecialOfferProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ShipMethodProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.SpecialOfferProductProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.StateProvinceProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.StoreProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ProductPhotoProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.StoreContactProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ProductModelProductDescriptionCultureProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.CurrencyProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.CustomerProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.CurrencyRateProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.DepartmentProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.CustomerAddressProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.CultureProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.DatabaseLogProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.CreditCardProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.BillOfMaterialsProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.CountryRegionCurrencyProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ContactProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.AwBuildVersionProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.CountryRegionProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ContactCreditCardProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.DocumentProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ContactTypeProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.EmployeeProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ProductDocumentProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.EmployeeAddressProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ProductInventoryProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ProductDescriptionProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ProductModelIllustrationProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ProductListPriceHistoryProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ProductCostHistoryProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.WorkOrderRoutingProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.NullFkeyParentProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.EmployeePayHistoryProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.NullFkeyChildProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ErrorLogProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.EmployeeDepartmentHistoryProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.JobCandidateProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.IllustrationProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.AddressTypeProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.IndividualProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VAdditionalContactInfoProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfo"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VEmployeeProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VEmployee"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VEmployeeDepartmentProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartment"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VEmployeeDepartmentHistoryProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VIndividualCustomerProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomer"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VIndividualDemographicsProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographics"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VJobCandidateProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidate"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VJobCandidateEducationProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducation"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VJobCandidateEmploymentProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmployment"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VProductAndDescriptionProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescription"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VProductModelCatalogDescriptionProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescription"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VProductModelInstructionsProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructions"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VSalesPersonProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPerson"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VSalesPersonSalesByFiscalYearsProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYears"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VStateProvinceCountryRegionProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegion"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VStoreWithDemographicsProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographics"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.VVendorProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:Nettiers.AdventureWorks.Entities.VVendor"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.DataRepository.ConnectionProvider">
            <summary>
            Provides ability to switch connection string at runtime.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DataRepository.ConnectionProvider.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ConnectionProvider class.
            </summary>
            <param name="connectionStringName">The connection string name.</param>
            <param name="connectionString">The provider specific connection information.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DataRepository.ConnectionProvider.LoadProviders">
            <summary>
            Instantiates the configured providers based on the supplied connection string.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ConnectionProvider.Provider">
            <summary>
            Gets the provider.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.DataRepository.ConnectionProvider.Providers">
            <summary>
            Gets the provider collection.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesTerritoryFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesTerritoryFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTerritoryFilters.#ctor">
            <summary>
            Initializes a new instance of the SalesTerritoryFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTerritoryFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTerritoryFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesTerritoryQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesTerritoryParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTerritoryQuery.#ctor">
            <summary>
            Initializes a new instance of the SalesTerritoryQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTerritoryQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTerritoryQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.LocationFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.LocationFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the LocationFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LocationFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LocationFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.LocationFilters.#ctor">
            <summary>
            Initializes a new instance of the LocationFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.LocationFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LocationFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.LocationFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LocationFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.LocationQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.LocationParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.LocationParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the LocationParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LocationParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LocationParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.LocationQuery.#ctor">
            <summary>
            Initializes a new instance of the LocationQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.LocationQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LocationQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.LocationQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LocationQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesReasonFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesReasonFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesReasonFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesReasonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesReasonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesReasonFilters.#ctor">
            <summary>
            Initializes a new instance of the SalesReasonFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesReasonFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesReasonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesReasonFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesReasonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesReasonQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesReasonParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesReasonParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesReasonParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesReasonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesReasonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesReasonQuery.#ctor">
            <summary>
            Initializes a new instance of the SalesReasonQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesReasonQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesReasonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesReasonQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesReasonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesPersonQuotaHistoryFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesPersonQuotaHistoryFilters.#ctor">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistoryFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesPersonQuotaHistoryFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesPersonQuotaHistoryFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesPersonQuotaHistoryQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPersonQuotaHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesPersonQuotaHistoryQuery.#ctor">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistoryQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesPersonQuotaHistoryQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesPersonQuotaHistoryQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonQuotaHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesOrderHeaderFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderHeaderFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderHeaderFilters.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderHeaderFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderHeaderFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderHeaderFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesOrderHeaderQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderHeaderParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderHeaderQuery.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderHeaderQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderHeaderQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderHeaderQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesOrderHeaderSalesReasonFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderHeaderSalesReasonFilters.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderHeaderSalesReasonFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderHeaderSalesReasonFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesOrderHeaderSalesReasonQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderHeaderSalesReasonQuery.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderHeaderSalesReasonQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderHeaderSalesReasonQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductModelFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelFilters.#ctor">
            <summary>
            Initializes a new instance of the ProductModelFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductModelQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductModelParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModel"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelQuery.#ctor">
            <summary>
            Initializes a new instance of the ProductModelQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesTaxRateFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTaxRateFilters.#ctor">
            <summary>
            Initializes a new instance of the SalesTaxRateFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTaxRateFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTaxRateFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTaxRateFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTaxRateFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesTaxRateQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesTaxRateParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTaxRate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTaxRateQuery.#ctor">
            <summary>
            Initializes a new instance of the SalesTaxRateQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTaxRateQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTaxRateQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTaxRateQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTaxRateQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesPersonFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesPersonFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesPersonFilters.#ctor">
            <summary>
            Initializes a new instance of the SalesPersonFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesPersonFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesPersonFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesPersonQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesPersonParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesPersonQuery.#ctor">
            <summary>
            Initializes a new instance of the SalesPersonQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesPersonQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesPersonQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesPersonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductCategoryFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductCategoryFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductCategoryFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCategoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCategoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductCategoryFilters.#ctor">
            <summary>
            Initializes a new instance of the ProductCategoryFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductCategoryFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCategoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductCategoryFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCategoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductCategoryQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductCategoryParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductCategoryParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductCategoryParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCategoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCategoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductCategoryQuery.#ctor">
            <summary>
            Initializes a new instance of the ProductCategoryQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductCategoryQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCategoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductCategoryQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCategoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductSubcategoryFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductSubcategoryFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductSubcategoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductSubcategoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductSubcategoryFilters.#ctor">
            <summary>
            Initializes a new instance of the ProductSubcategoryFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductSubcategoryFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductSubcategoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductSubcategoryFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductSubcategoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductSubcategoryQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductSubcategoryParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductSubcategoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductSubcategoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductSubcategoryQuery.#ctor">
            <summary>
            Initializes a new instance of the ProductSubcategoryQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductSubcategoryQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductSubcategoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductSubcategoryQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductSubcategoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductFilters.#ctor">
            <summary>
            Initializes a new instance of the ProductFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductQuery.#ctor">
            <summary>
            Initializes a new instance of the ProductQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesTerritoryHistoryFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTerritoryHistoryFilters.#ctor">
            <summary>
            Initializes a new instance of the SalesTerritoryHistoryFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTerritoryHistoryFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTerritoryHistoryFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesTerritoryHistoryQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritoryHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTerritoryHistoryQuery.#ctor">
            <summary>
            Initializes a new instance of the SalesTerritoryHistoryQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTerritoryHistoryQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesTerritoryHistoryQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesTerritoryHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.PurchaseOrderDetailFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.PurchaseOrderDetailFilters.#ctor">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.PurchaseOrderDetailFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.PurchaseOrderDetailFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.PurchaseOrderDetailQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderDetailParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderDetail"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.PurchaseOrderDetailQuery.#ctor">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.PurchaseOrderDetailQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.PurchaseOrderDetailQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderDetailQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesOrderDetailFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderDetailFilters.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderDetailFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderDetailFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderDetailFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderDetailFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderDetailFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SalesOrderDetailQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderDetail"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderDetailQuery.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderDetailQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderDetailQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderDetailQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SalesOrderDetailQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SalesOrderDetailQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductProductPhotoFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductProductPhotoFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductProductPhotoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductProductPhotoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductProductPhotoFilters.#ctor">
            <summary>
            Initializes a new instance of the ProductProductPhotoFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductProductPhotoFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductProductPhotoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductProductPhotoFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductProductPhotoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductProductPhotoQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductProductPhotoParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductProductPhotoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductProductPhotoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductProductPhotoQuery.#ctor">
            <summary>
            Initializes a new instance of the ProductProductPhotoQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductProductPhotoQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductProductPhotoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductProductPhotoQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductProductPhotoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductReviewFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductReviewFilters.#ctor">
            <summary>
            Initializes a new instance of the ProductReviewFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductReviewFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductReviewFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductReviewFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductReviewFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductReviewQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductReviewParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductReview"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductReviewQuery.#ctor">
            <summary>
            Initializes a new instance of the ProductReviewQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductReviewQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductReviewQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductReviewQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductReviewQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.PurchaseOrderHeaderFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.PurchaseOrderHeaderFilters.#ctor">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.PurchaseOrderHeaderFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.PurchaseOrderHeaderFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.PurchaseOrderHeaderQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.PurchaseOrderHeaderQuery.#ctor">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.PurchaseOrderHeaderQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.PurchaseOrderHeaderQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductVendorFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductVendorFilters.#ctor">
            <summary>
            Initializes a new instance of the ProductVendorFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductVendorFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductVendorFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductVendorFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductVendorFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductVendorQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductVendorParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductVendor"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductVendorQuery.#ctor">
            <summary>
            Initializes a new instance of the ProductVendorQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductVendorQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductVendorQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductVendorQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductVendorQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ScrapReasonFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ScrapReasonFilters.#ctor">
            <summary>
            Initializes a new instance of the ScrapReasonFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ScrapReasonFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ScrapReasonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ScrapReasonFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ScrapReasonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ScrapReasonQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ScrapReasonParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ScrapReason"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ScrapReasonQuery.#ctor">
            <summary>
            Initializes a new instance of the ScrapReasonQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ScrapReasonQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ScrapReasonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ScrapReasonQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ScrapReasonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.UnitMeasureFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.UnitMeasureFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UnitMeasureFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UnitMeasureFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UnitMeasureFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.UnitMeasureFilters.#ctor">
            <summary>
            Initializes a new instance of the UnitMeasureFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.UnitMeasureFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UnitMeasureFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.UnitMeasureFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UnitMeasureFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.UnitMeasureQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.UnitMeasureParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.UnitMeasureParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UnitMeasureParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UnitMeasureParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UnitMeasureParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.UnitMeasureQuery.#ctor">
            <summary>
            Initializes a new instance of the UnitMeasureQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.UnitMeasureQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UnitMeasureQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.UnitMeasureQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UnitMeasureQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ShiftFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShiftFilters.#ctor">
            <summary>
            Initializes a new instance of the ShiftFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShiftFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ShiftFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShiftFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ShiftFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ShiftQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ShiftParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Shift"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShiftQuery.#ctor">
            <summary>
            Initializes a new instance of the ShiftQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShiftQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ShiftQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShiftQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ShiftQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.TransactionHistoryArchiveFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionHistoryArchiveFilters.#ctor">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionHistoryArchiveFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionHistoryArchiveFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.TransactionHistoryArchiveQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionHistoryArchiveQuery.#ctor">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionHistoryArchiveQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionHistoryArchiveQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VendorFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VendorFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VendorFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VendorFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorFilters.#ctor">
            <summary>
            Initializes a new instance of the VendorFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VendorFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VendorFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VendorQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VendorParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VendorParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VendorParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VendorParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorQuery.#ctor">
            <summary>
            Initializes a new instance of the VendorQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VendorQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VendorQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.AddressFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AddressFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AddressFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AddressFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AddressFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AddressFilters.#ctor">
            <summary>
            Initializes a new instance of the AddressFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AddressFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AddressFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AddressFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AddressFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.AddressQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.AddressParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AddressParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AddressParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AddressParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AddressParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AddressQuery.#ctor">
            <summary>
            Initializes a new instance of the AddressQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AddressQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AddressQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AddressQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AddressQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.WorkOrderFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the WorkOrderFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.WorkOrderFilters.#ctor">
            <summary>
            Initializes a new instance of the WorkOrderFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.WorkOrderFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.WorkOrderFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.WorkOrderQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the WorkOrderParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.WorkOrderQuery.#ctor">
            <summary>
            Initializes a new instance of the WorkOrderQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.WorkOrderQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.WorkOrderQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VendorAddressFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorAddressFilters.#ctor">
            <summary>
            Initializes a new instance of the VendorAddressFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorAddressFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VendorAddressFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorAddressFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VendorAddressFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VendorAddressQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VendorAddressParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VendorAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorAddressQuery.#ctor">
            <summary>
            Initializes a new instance of the VendorAddressQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorAddressQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VendorAddressQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorAddressQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VendorAddressQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.TransactionHistoryFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionHistoryFilters.#ctor">
            <summary>
            Initializes a new instance of the TransactionHistoryFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionHistoryFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionHistoryFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.TransactionHistoryQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionHistoryQuery.#ctor">
            <summary>
            Initializes a new instance of the TransactionHistoryQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionHistoryQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionHistoryQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TransactionHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VendorContactFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorContactFilters.#ctor">
            <summary>
            Initializes a new instance of the VendorContactFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorContactFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VendorContactFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorContactFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VendorContactFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VendorContactQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VendorContactParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VendorContact"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorContactQuery.#ctor">
            <summary>
            Initializes a new instance of the VendorContactQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorContactQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VendorContactQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VendorContactQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VendorContactQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.TimestampPkFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TimestampPkFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TimestampPkFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TimestampPkFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TimestampPkFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TimestampPkFilters.#ctor">
            <summary>
            Initializes a new instance of the TimestampPkFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TimestampPkFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TimestampPkFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TimestampPkFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TimestampPkFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.TimestampPkQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.TimestampPkParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TimestampPkParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TimestampPkParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TimestampPkParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TimestampPkParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TimestampPkQuery.#ctor">
            <summary>
            Initializes a new instance of the TimestampPkQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TimestampPkQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TimestampPkQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TimestampPkQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TimestampPkQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ShoppingCartItemFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShoppingCartItemFilters.#ctor">
            <summary>
            Initializes a new instance of the ShoppingCartItemFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShoppingCartItemFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ShoppingCartItemFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShoppingCartItemFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ShoppingCartItemFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ShoppingCartItemQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ShoppingCartItemParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ShoppingCartItem"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShoppingCartItemQuery.#ctor">
            <summary>
            Initializes a new instance of the ShoppingCartItemQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShoppingCartItemQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ShoppingCartItemQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShoppingCartItemQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ShoppingCartItemQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.TestVariantFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TestVariantFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TestVariantFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TestVariantFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TestVariantFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TestVariantFilters.#ctor">
            <summary>
            Initializes a new instance of the TestVariantFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TestVariantFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TestVariantFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TestVariantFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TestVariantFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.TestVariantQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.TestVariantParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TestVariantParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TestVariantParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TestVariantParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TestVariantParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TestVariantQuery.#ctor">
            <summary>
            Initializes a new instance of the TestVariantQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TestVariantQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TestVariantQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TestVariantQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TestVariantQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SpecialOfferFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SpecialOfferFilters.#ctor">
            <summary>
            Initializes a new instance of the SpecialOfferFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SpecialOfferFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SpecialOfferFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SpecialOfferQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOffer"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SpecialOfferQuery.#ctor">
            <summary>
            Initializes a new instance of the SpecialOfferQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SpecialOfferQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SpecialOfferQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ShipMethodFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShipMethodFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ShipMethodFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ShipMethodFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ShipMethodFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShipMethodFilters.#ctor">
            <summary>
            Initializes a new instance of the ShipMethodFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShipMethodFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ShipMethodFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShipMethodFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ShipMethodFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ShipMethodQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ShipMethodParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShipMethodParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ShipMethodParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ShipMethodParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ShipMethodParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShipMethodQuery.#ctor">
            <summary>
            Initializes a new instance of the ShipMethodQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShipMethodQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ShipMethodQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ShipMethodQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ShipMethodQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SpecialOfferProductFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SpecialOfferProductFilters.#ctor">
            <summary>
            Initializes a new instance of the SpecialOfferProductFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SpecialOfferProductFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferProductFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SpecialOfferProductFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferProductFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SpecialOfferProductQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SpecialOfferProduct"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SpecialOfferProductQuery.#ctor">
            <summary>
            Initializes a new instance of the SpecialOfferProductQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SpecialOfferProductQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferProductQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SpecialOfferProductQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SpecialOfferProductQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.StateProvinceFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StateProvinceFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the StateProvinceFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StateProvinceFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StateProvinceFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StateProvinceFilters.#ctor">
            <summary>
            Initializes a new instance of the StateProvinceFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StateProvinceFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StateProvinceFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StateProvinceFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StateProvinceFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.StateProvinceQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.StateProvinceParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StateProvinceParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the StateProvinceParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StateProvinceParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StateProvinceParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StateProvinceQuery.#ctor">
            <summary>
            Initializes a new instance of the StateProvinceQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StateProvinceQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StateProvinceQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StateProvinceQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StateProvinceQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.StoreFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StoreFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the StoreFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StoreFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StoreFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StoreFilters.#ctor">
            <summary>
            Initializes a new instance of the StoreFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StoreFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StoreFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StoreFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StoreFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.StoreQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.StoreParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StoreParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the StoreParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StoreParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StoreParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StoreQuery.#ctor">
            <summary>
            Initializes a new instance of the StoreQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StoreQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StoreQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StoreQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StoreQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductPhotoFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductPhotoFilters.#ctor">
            <summary>
            Initializes a new instance of the ProductPhotoFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductPhotoFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductPhotoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductPhotoFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductPhotoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductPhotoQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductPhotoParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductPhoto"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductPhotoQuery.#ctor">
            <summary>
            Initializes a new instance of the ProductPhotoQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductPhotoQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductPhotoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductPhotoQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductPhotoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.StoreContactFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StoreContactFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the StoreContactFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StoreContactFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StoreContactFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StoreContactFilters.#ctor">
            <summary>
            Initializes a new instance of the StoreContactFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StoreContactFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StoreContactFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StoreContactFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StoreContactFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.StoreContactQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.StoreContactParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StoreContactParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the StoreContactParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StoreContactParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StoreContactParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StoreContactQuery.#ctor">
            <summary>
            Initializes a new instance of the StoreContactQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StoreContactQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StoreContactQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StoreContactQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StoreContactQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductModelProductDescriptionCultureFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelProductDescriptionCultureFilters.#ctor">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelProductDescriptionCultureFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelProductDescriptionCultureFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductModelProductDescriptionCultureQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelProductDescriptionCultureQuery.#ctor">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelProductDescriptionCultureQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelProductDescriptionCultureQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CurrencyFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CurrencyFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CurrencyFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CurrencyFilters.#ctor">
            <summary>
            Initializes a new instance of the CurrencyFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CurrencyFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CurrencyFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CurrencyQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.CurrencyParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CurrencyParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CurrencyParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CurrencyQuery.#ctor">
            <summary>
            Initializes a new instance of the CurrencyQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CurrencyQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CurrencyQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CustomerFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CustomerFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CustomerFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CustomerFilters.#ctor">
            <summary>
            Initializes a new instance of the CustomerFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CustomerFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CustomerFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CustomerQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.CustomerParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CustomerParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CustomerParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CustomerQuery.#ctor">
            <summary>
            Initializes a new instance of the CustomerQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CustomerQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CustomerQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CurrencyRateFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CurrencyRateFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CurrencyRateFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyRateFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyRateFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CurrencyRateFilters.#ctor">
            <summary>
            Initializes a new instance of the CurrencyRateFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CurrencyRateFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyRateFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CurrencyRateFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyRateFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CurrencyRateQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.CurrencyRateParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CurrencyRateParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CurrencyRateParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyRateParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyRateParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CurrencyRateQuery.#ctor">
            <summary>
            Initializes a new instance of the CurrencyRateQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CurrencyRateQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyRateQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CurrencyRateQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CurrencyRateQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.DepartmentFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DepartmentFilters.#ctor">
            <summary>
            Initializes a new instance of the DepartmentFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DepartmentFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DepartmentFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.DepartmentQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.DepartmentParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Department"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DepartmentQuery.#ctor">
            <summary>
            Initializes a new instance of the DepartmentQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DepartmentQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DepartmentQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CustomerAddressFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CustomerAddressFilters.#ctor">
            <summary>
            Initializes a new instance of the CustomerAddressFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CustomerAddressFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerAddressFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CustomerAddressFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerAddressFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CustomerAddressQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.CustomerAddressParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CustomerAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CustomerAddressQuery.#ctor">
            <summary>
            Initializes a new instance of the CustomerAddressQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CustomerAddressQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerAddressQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CustomerAddressQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CustomerAddressQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CultureFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CultureFilters.#ctor">
            <summary>
            Initializes a new instance of the CultureFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CultureFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CultureFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CultureFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CultureFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CultureQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.CultureParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Culture"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CultureQuery.#ctor">
            <summary>
            Initializes a new instance of the CultureQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CultureQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CultureQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CultureQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CultureQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.DatabaseLogFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DatabaseLogFilters.#ctor">
            <summary>
            Initializes a new instance of the DatabaseLogFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DatabaseLogFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DatabaseLogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DatabaseLogFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DatabaseLogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.DatabaseLogQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.DatabaseLogParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.DatabaseLog"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DatabaseLogQuery.#ctor">
            <summary>
            Initializes a new instance of the DatabaseLogQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DatabaseLogQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DatabaseLogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DatabaseLogQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DatabaseLogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CreditCardFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CreditCardFilters.#ctor">
            <summary>
            Initializes a new instance of the CreditCardFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CreditCardFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CreditCardFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CreditCardFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CreditCardFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CreditCardQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.CreditCardParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CreditCard"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CreditCardQuery.#ctor">
            <summary>
            Initializes a new instance of the CreditCardQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CreditCardQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CreditCardQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CreditCardQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CreditCardQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.BillOfMaterialsFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.BillOfMaterialsFilters.#ctor">
            <summary>
            Initializes a new instance of the BillOfMaterialsFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.BillOfMaterialsFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BillOfMaterialsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.BillOfMaterialsFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the BillOfMaterialsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.BillOfMaterialsQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.BillOfMaterials"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.BillOfMaterialsQuery.#ctor">
            <summary>
            Initializes a new instance of the BillOfMaterialsQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.BillOfMaterialsQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BillOfMaterialsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.BillOfMaterialsQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the BillOfMaterialsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CountryRegionCurrencyFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CountryRegionCurrencyFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionCurrencyFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionCurrencyFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CountryRegionCurrencyFilters.#ctor">
            <summary>
            Initializes a new instance of the CountryRegionCurrencyFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CountryRegionCurrencyFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionCurrencyFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CountryRegionCurrencyFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionCurrencyFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CountryRegionCurrencyQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CountryRegionCurrencyParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionCurrencyParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionCurrencyParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CountryRegionCurrencyQuery.#ctor">
            <summary>
            Initializes a new instance of the CountryRegionCurrencyQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CountryRegionCurrencyQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionCurrencyQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CountryRegionCurrencyQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionCurrencyQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ContactFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactFilters.#ctor">
            <summary>
            Initializes a new instance of the ContactFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ContactFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ContactFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ContactQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ContactParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Contact"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactQuery.#ctor">
            <summary>
            Initializes a new instance of the ContactQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ContactQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ContactQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.AwBuildVersionFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AwBuildVersionFilters.#ctor">
            <summary>
            Initializes a new instance of the AwBuildVersionFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AwBuildVersionFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AwBuildVersionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AwBuildVersionFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AwBuildVersionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.AwBuildVersionQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.AwBuildVersion"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AwBuildVersionQuery.#ctor">
            <summary>
            Initializes a new instance of the AwBuildVersionQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AwBuildVersionQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AwBuildVersionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AwBuildVersionQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AwBuildVersionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CountryRegionFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CountryRegionFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CountryRegionFilters.#ctor">
            <summary>
            Initializes a new instance of the CountryRegionFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CountryRegionFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CountryRegionFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.CountryRegionQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CountryRegionParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CountryRegionQuery.#ctor">
            <summary>
            Initializes a new instance of the CountryRegionQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CountryRegionQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.CountryRegionQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CountryRegionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ContactCreditCardFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactCreditCardFilters.#ctor">
            <summary>
            Initializes a new instance of the ContactCreditCardFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactCreditCardFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ContactCreditCardFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactCreditCardFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ContactCreditCardFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ContactCreditCardQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ContactCreditCard"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactCreditCardQuery.#ctor">
            <summary>
            Initializes a new instance of the ContactCreditCardQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactCreditCardQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ContactCreditCardQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactCreditCardQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ContactCreditCardQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.DocumentFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DocumentFilters.#ctor">
            <summary>
            Initializes a new instance of the DocumentFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DocumentFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DocumentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DocumentFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DocumentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.DocumentQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.DocumentParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Document"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DocumentQuery.#ctor">
            <summary>
            Initializes a new instance of the DocumentQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DocumentQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DocumentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.DocumentQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DocumentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ContactTypeFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactTypeFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ContactTypeFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ContactTypeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ContactTypeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactTypeFilters.#ctor">
            <summary>
            Initializes a new instance of the ContactTypeFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactTypeFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ContactTypeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactTypeFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ContactTypeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ContactTypeQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ContactTypeParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactTypeParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ContactTypeParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ContactTypeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ContactTypeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactTypeQuery.#ctor">
            <summary>
            Initializes a new instance of the ContactTypeQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactTypeQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ContactTypeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ContactTypeQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ContactTypeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.EmployeeFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EmployeeFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeFilters.#ctor">
            <summary>
            Initializes a new instance of the EmployeeFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.EmployeeQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.EmployeeParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EmployeeParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeQuery.#ctor">
            <summary>
            Initializes a new instance of the EmployeeQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductDocumentFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductDocumentFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductDocumentFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDocumentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDocumentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductDocumentFilters.#ctor">
            <summary>
            Initializes a new instance of the ProductDocumentFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductDocumentFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDocumentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductDocumentFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDocumentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductDocumentQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductDocumentParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductDocumentParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductDocumentParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDocumentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDocumentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductDocumentQuery.#ctor">
            <summary>
            Initializes a new instance of the ProductDocumentQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductDocumentQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDocumentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductDocumentQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDocumentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.EmployeeAddressFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeAddressFilters.#ctor">
            <summary>
            Initializes a new instance of the EmployeeAddressFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeAddressFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeAddressFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeAddressFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeAddressFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.EmployeeAddressQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeAddress"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeAddressQuery.#ctor">
            <summary>
            Initializes a new instance of the EmployeeAddressQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeAddressQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeAddressQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeAddressQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeAddressQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductInventoryFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductInventoryFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductInventoryFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductInventoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductInventoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductInventoryFilters.#ctor">
            <summary>
            Initializes a new instance of the ProductInventoryFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductInventoryFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductInventoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductInventoryFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductInventoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductInventoryQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductInventoryParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductInventoryParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductInventoryParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductInventoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductInventoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductInventoryQuery.#ctor">
            <summary>
            Initializes a new instance of the ProductInventoryQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductInventoryQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductInventoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductInventoryQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductInventoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductDescriptionFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductDescriptionFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDescriptionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDescriptionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductDescriptionFilters.#ctor">
            <summary>
            Initializes a new instance of the ProductDescriptionFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductDescriptionFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDescriptionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductDescriptionFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDescriptionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductDescriptionQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductDescriptionParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDescriptionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDescriptionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductDescriptionQuery.#ctor">
            <summary>
            Initializes a new instance of the ProductDescriptionQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductDescriptionQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDescriptionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductDescriptionQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductDescriptionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductModelIllustrationFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductModelIllustrationFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelIllustrationFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelIllustrationFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelIllustrationFilters.#ctor">
            <summary>
            Initializes a new instance of the ProductModelIllustrationFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelIllustrationFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelIllustrationFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelIllustrationFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelIllustrationFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductModelIllustrationQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductModelIllustrationParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelIllustrationParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelIllustrationParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelIllustrationQuery.#ctor">
            <summary>
            Initializes a new instance of the ProductModelIllustrationQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelIllustrationQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelIllustrationQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductModelIllustrationQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductModelIllustrationQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductListPriceHistoryFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductListPriceHistoryFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductListPriceHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductListPriceHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductListPriceHistoryFilters.#ctor">
            <summary>
            Initializes a new instance of the ProductListPriceHistoryFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductListPriceHistoryFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductListPriceHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductListPriceHistoryFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductListPriceHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductListPriceHistoryQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductListPriceHistoryParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductListPriceHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductListPriceHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductListPriceHistoryQuery.#ctor">
            <summary>
            Initializes a new instance of the ProductListPriceHistoryQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductListPriceHistoryQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductListPriceHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductListPriceHistoryQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductListPriceHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductCostHistoryFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductCostHistoryFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCostHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCostHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductCostHistoryFilters.#ctor">
            <summary>
            Initializes a new instance of the ProductCostHistoryFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductCostHistoryFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCostHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductCostHistoryFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCostHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ProductCostHistoryQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductCostHistoryParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCostHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCostHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductCostHistoryQuery.#ctor">
            <summary>
            Initializes a new instance of the ProductCostHistoryQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductCostHistoryQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCostHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ProductCostHistoryQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ProductCostHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.WorkOrderRoutingFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.WorkOrderRoutingFilters.#ctor">
            <summary>
            Initializes a new instance of the WorkOrderRoutingFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.WorkOrderRoutingFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderRoutingFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.WorkOrderRoutingFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderRoutingFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.WorkOrderRoutingQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderRoutingParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrderRouting"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.WorkOrderRoutingQuery.#ctor">
            <summary>
            Initializes a new instance of the WorkOrderRoutingQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.WorkOrderRoutingQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderRoutingQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.WorkOrderRoutingQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the WorkOrderRoutingQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.NullFkeyParentFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.NullFkeyParentFilters.#ctor">
            <summary>
            Initializes a new instance of the NullFkeyParentFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.NullFkeyParentFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyParentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.NullFkeyParentFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyParentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.NullFkeyParentQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyParentParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyParent"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.NullFkeyParentQuery.#ctor">
            <summary>
            Initializes a new instance of the NullFkeyParentQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.NullFkeyParentQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyParentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.NullFkeyParentQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyParentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.EmployeePayHistoryFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EmployeePayHistoryFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeePayHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeePayHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeePayHistoryFilters.#ctor">
            <summary>
            Initializes a new instance of the EmployeePayHistoryFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeePayHistoryFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeePayHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeePayHistoryFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeePayHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.EmployeePayHistoryQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EmployeePayHistoryParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeePayHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeePayHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeePayHistoryQuery.#ctor">
            <summary>
            Initializes a new instance of the EmployeePayHistoryQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeePayHistoryQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeePayHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeePayHistoryQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeePayHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.NullFkeyChildFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the NullFkeyChildFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyChildFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyChildFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.NullFkeyChildFilters.#ctor">
            <summary>
            Initializes a new instance of the NullFkeyChildFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.NullFkeyChildFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyChildFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.NullFkeyChildFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyChildFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.NullFkeyChildQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the NullFkeyChildParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyChildParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyChildParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.NullFkeyChildQuery.#ctor">
            <summary>
            Initializes a new instance of the NullFkeyChildQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.NullFkeyChildQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyChildQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.NullFkeyChildQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NullFkeyChildQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ErrorLogFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ErrorLogFilters.#ctor">
            <summary>
            Initializes a new instance of the ErrorLogFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ErrorLogFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ErrorLogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ErrorLogFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ErrorLogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.ErrorLogQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.ErrorLogParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ErrorLog"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ErrorLogQuery.#ctor">
            <summary>
            Initializes a new instance of the ErrorLogQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ErrorLogQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ErrorLogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.ErrorLogQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ErrorLogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.EmployeeDepartmentHistoryFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistoryFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeDepartmentHistoryFilters.#ctor">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistoryFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeDepartmentHistoryFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeDepartmentHistoryFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.EmployeeDepartmentHistoryQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistoryParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeDepartmentHistoryQuery.#ctor">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistoryQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeDepartmentHistoryQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.EmployeeDepartmentHistoryQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.JobCandidateFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.JobCandidateFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the JobCandidateFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the JobCandidateFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the JobCandidateFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.JobCandidateFilters.#ctor">
            <summary>
            Initializes a new instance of the JobCandidateFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.JobCandidateFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the JobCandidateFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.JobCandidateFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the JobCandidateFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.JobCandidateQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.JobCandidateParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.JobCandidateParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the JobCandidateParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the JobCandidateParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the JobCandidateParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.JobCandidateQuery.#ctor">
            <summary>
            Initializes a new instance of the JobCandidateQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.JobCandidateQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the JobCandidateQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.JobCandidateQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the JobCandidateQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.IllustrationFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.IllustrationFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the IllustrationFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the IllustrationFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the IllustrationFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IllustrationFilters.#ctor">
            <summary>
            Initializes a new instance of the IllustrationFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IllustrationFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the IllustrationFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IllustrationFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the IllustrationFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.IllustrationQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.IllustrationParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.IllustrationParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the IllustrationParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the IllustrationParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the IllustrationParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IllustrationQuery.#ctor">
            <summary>
            Initializes a new instance of the IllustrationQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IllustrationQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the IllustrationQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IllustrationQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the IllustrationQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.AddressTypeFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AddressTypeFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AddressTypeFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AddressTypeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AddressTypeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AddressTypeFilters.#ctor">
            <summary>
            Initializes a new instance of the AddressTypeFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AddressTypeFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AddressTypeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AddressTypeFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AddressTypeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.AddressTypeQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.AddressTypeParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AddressTypeParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AddressTypeParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AddressTypeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AddressTypeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AddressTypeQuery.#ctor">
            <summary>
            Initializes a new instance of the AddressTypeQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AddressTypeQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AddressTypeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.AddressTypeQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AddressTypeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.IndividualFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.IndividualFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the IndividualFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the IndividualFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the IndividualFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IndividualFilters.#ctor">
            <summary>
            Initializes a new instance of the IndividualFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IndividualFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the IndividualFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IndividualFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the IndividualFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.IndividualQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.IndividualParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.IndividualParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the IndividualParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the IndividualParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the IndividualParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IndividualQuery.#ctor">
            <summary>
            Initializes a new instance of the IndividualQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IndividualQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the IndividualQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.IndividualQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the IndividualQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VAdditionalContactInfoFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfo"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VAdditionalContactInfoFilters.#ctor">
            <summary>
            Initializes a new instance of the VAdditionalContactInfoFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VAdditionalContactInfoFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VAdditionalContactInfoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VAdditionalContactInfoFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VAdditionalContactInfoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VAdditionalContactInfoQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VAdditionalContactInfo"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VAdditionalContactInfoQuery.#ctor">
            <summary>
            Initializes a new instance of the VAdditionalContactInfoQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VAdditionalContactInfoQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VAdditionalContactInfoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VAdditionalContactInfoQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VAdditionalContactInfoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VEmployeeFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployee"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeFilters.#ctor">
            <summary>
            Initializes a new instance of the VEmployeeFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VEmployeeQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployee"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeQuery.#ctor">
            <summary>
            Initializes a new instance of the VEmployeeQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VEmployeeDepartmentFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartment"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeDepartmentFilters.#ctor">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeDepartmentFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeDepartmentFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VEmployeeDepartmentQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartment"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeDepartmentQuery.#ctor">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeDepartmentQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeDepartmentQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VEmployeeDepartmentHistoryFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistoryFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistoryFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentHistoryFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistoryFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistoryFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentHistoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeDepartmentHistoryFilters.#ctor">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentHistoryFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeDepartmentHistoryFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeDepartmentHistoryFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentHistoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VEmployeeDepartmentHistoryQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistoryParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistory"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistoryParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistoryParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentHistoryParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistoryParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistoryParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentHistoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeDepartmentHistoryQuery.#ctor">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentHistoryQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeDepartmentHistoryQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VEmployeeDepartmentHistoryQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentHistoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VIndividualCustomerFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomer"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomer"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VIndividualCustomerFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualCustomerFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualCustomerFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VIndividualCustomerFilters.#ctor">
            <summary>
            Initializes a new instance of the VIndividualCustomerFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VIndividualCustomerFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualCustomerFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VIndividualCustomerFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualCustomerFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VIndividualCustomerQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomer"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomer"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VIndividualCustomerParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualCustomerParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualCustomerParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VIndividualCustomerQuery.#ctor">
            <summary>
            Initializes a new instance of the VIndividualCustomerQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VIndividualCustomerQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualCustomerQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VIndividualCustomerQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualCustomerQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VIndividualDemographicsFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographics"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographics"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VIndividualDemographicsFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualDemographicsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualDemographicsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VIndividualDemographicsFilters.#ctor">
            <summary>
            Initializes a new instance of the VIndividualDemographicsFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VIndividualDemographicsFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualDemographicsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VIndividualDemographicsFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualDemographicsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VIndividualDemographicsQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographics"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographics"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VIndividualDemographicsParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualDemographicsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualDemographicsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VIndividualDemographicsQuery.#ctor">
            <summary>
            Initializes a new instance of the VIndividualDemographicsQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VIndividualDemographicsQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualDemographicsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VIndividualDemographicsQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VIndividualDemographicsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VJobCandidateFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateFilters.#ctor">
            <summary>
            Initializes a new instance of the VJobCandidateFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VJobCandidateQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateQuery.#ctor">
            <summary>
            Initializes a new instance of the VJobCandidateQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VJobCandidateEducationFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducation"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateEducationFilters.#ctor">
            <summary>
            Initializes a new instance of the VJobCandidateEducationFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateEducationFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEducationFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateEducationFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEducationFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VJobCandidateEducationQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEducation"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateEducationQuery.#ctor">
            <summary>
            Initializes a new instance of the VJobCandidateEducationQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateEducationQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEducationQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateEducationQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEducationQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VJobCandidateEmploymentFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmployment"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmployment"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VJobCandidateEmploymentFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEmploymentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEmploymentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateEmploymentFilters.#ctor">
            <summary>
            Initializes a new instance of the VJobCandidateEmploymentFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateEmploymentFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEmploymentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateEmploymentFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEmploymentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VJobCandidateEmploymentQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmployment"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmployment"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VJobCandidateEmploymentParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEmploymentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEmploymentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateEmploymentQuery.#ctor">
            <summary>
            Initializes a new instance of the VJobCandidateEmploymentQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateEmploymentQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEmploymentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VJobCandidateEmploymentQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VJobCandidateEmploymentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VProductAndDescriptionFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescription"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescription"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VProductAndDescriptionFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VProductAndDescriptionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VProductAndDescriptionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductAndDescriptionFilters.#ctor">
            <summary>
            Initializes a new instance of the VProductAndDescriptionFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductAndDescriptionFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VProductAndDescriptionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductAndDescriptionFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VProductAndDescriptionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VProductAndDescriptionQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescription"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescription"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VProductAndDescriptionParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VProductAndDescriptionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VProductAndDescriptionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductAndDescriptionQuery.#ctor">
            <summary>
            Initializes a new instance of the VProductAndDescriptionQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductAndDescriptionQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VProductAndDescriptionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductAndDescriptionQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VProductAndDescriptionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VProductModelCatalogDescriptionFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescription"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductModelCatalogDescriptionFilters.#ctor">
            <summary>
            Initializes a new instance of the VProductModelCatalogDescriptionFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductModelCatalogDescriptionFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelCatalogDescriptionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductModelCatalogDescriptionFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelCatalogDescriptionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VProductModelCatalogDescriptionQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelCatalogDescription"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductModelCatalogDescriptionQuery.#ctor">
            <summary>
            Initializes a new instance of the VProductModelCatalogDescriptionQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductModelCatalogDescriptionQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelCatalogDescriptionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductModelCatalogDescriptionQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelCatalogDescriptionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VProductModelInstructionsFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructions"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructions"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VProductModelInstructionsFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelInstructionsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelInstructionsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductModelInstructionsFilters.#ctor">
            <summary>
            Initializes a new instance of the VProductModelInstructionsFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductModelInstructionsFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelInstructionsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductModelInstructionsFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelInstructionsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VProductModelInstructionsQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructions"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructions"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VProductModelInstructionsParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelInstructionsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelInstructionsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductModelInstructionsQuery.#ctor">
            <summary>
            Initializes a new instance of the VProductModelInstructionsQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductModelInstructionsQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelInstructionsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VProductModelInstructionsQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VProductModelInstructionsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VSalesPersonFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPerson"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPerson"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VSalesPersonFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VSalesPersonFilters.#ctor">
            <summary>
            Initializes a new instance of the VSalesPersonFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VSalesPersonFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VSalesPersonFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VSalesPersonQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPerson"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPerson"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VSalesPersonParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VSalesPersonQuery.#ctor">
            <summary>
            Initializes a new instance of the VSalesPersonQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VSalesPersonQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VSalesPersonQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VSalesPersonSalesByFiscalYearsFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYears"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VSalesPersonSalesByFiscalYearsFilters.#ctor">
            <summary>
            Initializes a new instance of the VSalesPersonSalesByFiscalYearsFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VSalesPersonSalesByFiscalYearsFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonSalesByFiscalYearsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VSalesPersonSalesByFiscalYearsFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonSalesByFiscalYearsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VSalesPersonSalesByFiscalYearsQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSalesByFiscalYearsParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPersonSalesByFiscalYears"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VSalesPersonSalesByFiscalYearsQuery.#ctor">
            <summary>
            Initializes a new instance of the VSalesPersonSalesByFiscalYearsQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VSalesPersonSalesByFiscalYearsQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonSalesByFiscalYearsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VSalesPersonSalesByFiscalYearsQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VSalesPersonSalesByFiscalYearsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VStateProvinceCountryRegionFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegion"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VStateProvinceCountryRegionFilters.#ctor">
            <summary>
            Initializes a new instance of the VStateProvinceCountryRegionFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VStateProvinceCountryRegionFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VStateProvinceCountryRegionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VStateProvinceCountryRegionFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VStateProvinceCountryRegionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VStateProvinceCountryRegionQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VStateProvinceCountryRegion"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VStateProvinceCountryRegionQuery.#ctor">
            <summary>
            Initializes a new instance of the VStateProvinceCountryRegionQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VStateProvinceCountryRegionQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VStateProvinceCountryRegionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VStateProvinceCountryRegionQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VStateProvinceCountryRegionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VStoreWithDemographicsFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographics"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VStoreWithDemographicsFilters.#ctor">
            <summary>
            Initializes a new instance of the VStoreWithDemographicsFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VStoreWithDemographicsFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VStoreWithDemographicsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VStoreWithDemographicsFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VStoreWithDemographicsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VStoreWithDemographicsQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VStoreWithDemographicsParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VStoreWithDemographics"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VStoreWithDemographicsQuery.#ctor">
            <summary>
            Initializes a new instance of the VStoreWithDemographicsQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VStoreWithDemographicsQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VStoreWithDemographicsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VStoreWithDemographicsQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VStoreWithDemographicsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VVendorFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VVendor"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VVendorFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VVendor"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VVendorFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VVendorFilterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VVendorFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VVendorFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VVendorFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VVendorFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VVendorFilters.#ctor">
            <summary>
            Initializes a new instance of the VVendorFilters class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VVendorFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VVendorFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VVendorFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VVendorFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.VVendorQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.Bases.VVendorParameterBuilder"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VVendor"/> object.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VVendorParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VVendor"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VVendorParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VVendorParameterBuilder class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VVendorParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VVendorParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VVendorParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VVendorParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VVendorQuery.#ctor">
            <summary>
            Initializes a new instance of the VVendorQuery class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VVendorQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VVendorQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.VVendorQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VVendorQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.WorkOrder</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.WorkOrderChildEntityTypes.Product">
            <summary>
             Composite Property for <c>Product</c> at ProductIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.WorkOrderChildEntityTypes.ScrapReason">
            <summary>
             Composite Property for <c>ScrapReason</c> at ScrapReasonIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.WorkOrderChildEntityTypes.WorkOrderRoutingCollection">
            <summary>
             Collection of <c>WorkOrder</c> as OneToMany for WorkOrderRoutingCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.WorkOrderSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.WorkOrder"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.WorkOrderSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the WorkOrderSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.StoreContactKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.. Primary Key.</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.. Primary Key.</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByCustomerId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_StoreContact_Store_CustomerID key.
            	FK_StoreContact_Store_CustomerID Description: Foreign key constraint referencing Store.CustomerID.
            </summary>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StoreContact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_StoreContact_Store_CustomerID key.
            	FK_StoreContact_Store_CustomerID Description: Foreign key constraint referencing Store.CustomerID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StoreContact objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_StoreContact_Store_CustomerID key.
            	FK_StoreContact_Store_CustomerID Description: Foreign key constraint referencing Store.CustomerID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StoreContact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByCustomerId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_StoreContact_Store_CustomerID key.
            	fkStoreContactStoreCustomerId Description: Foreign key constraint referencing Store.CustomerID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StoreContact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByCustomerId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_StoreContact_Store_CustomerID key.
            	fkStoreContactStoreCustomerId Description: Foreign key constraint referencing Store.CustomerID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StoreContact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_StoreContact_Store_CustomerID key.
            	FK_StoreContact_Store_CustomerID Description: Foreign key constraint referencing Store.CustomerID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.StoreContact objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.StoreContactKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_StoreContact_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_StoreContact_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_StoreContact_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_StoreContact_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_StoreContact_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_StoreContact_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByContactId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_StoreContact_ContactID index.
            </summary>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByContactId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_StoreContact_ContactID index.
            </summary>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_StoreContact_ContactID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_StoreContact_ContactID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByContactId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_StoreContact_ContactID index.
            </summary>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_StoreContact_ContactID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByContactTypeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_StoreContact_ContactTypeID index.
            </summary>
            <param name="_contactTypeId">Contact type such as owner or purchasing agent. Foreign key to ContactType.ContactTypeID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByContactTypeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_StoreContact_ContactTypeID index.
            </summary>
            <param name="_contactTypeId">Contact type such as owner or purchasing agent. Foreign key to ContactType.ContactTypeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByContactTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_StoreContact_ContactTypeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactTypeId">Contact type such as owner or purchasing agent. Foreign key to ContactType.ContactTypeID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByContactTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_StoreContact_ContactTypeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactTypeId">Contact type such as owner or purchasing agent. Foreign key to ContactType.ContactTypeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByContactTypeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_StoreContact_ContactTypeID index.
            </summary>
            <param name="_contactTypeId">Contact type such as owner or purchasing agent. Foreign key to ContactType.ContactTypeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByContactTypeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_StoreContact_ContactTypeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactTypeId">Contact type such as owner or purchasing agent. Foreign key to ContactType.ContactTypeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByCustomerIdContactId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_StoreContact_CustomerID_ContactID index.
            </summary>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByCustomerIdContactId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_StoreContact_CustomerID_ContactID index.
            </summary>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByCustomerIdContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_StoreContact_CustomerID_ContactID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByCustomerIdContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_StoreContact_CustomerID_ContactID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByCustomerIdContactId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_StoreContact_CustomerID_ContactID index.
            </summary>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.GetByCustomerIdContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_StoreContact_CustomerID_ContactID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Store identification number. Foreign key to Customer.CustomerID.</param>
            <param name="_contactId">Contact (store employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.StoreContact},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;StoreContact&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.StoreContact)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.StoreContact)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.StoreContact,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.StoreContact Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.StoreContact,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.StoreContact object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.StoreContact instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.StoreContact Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StoreContactChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.StoreContact</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.StoreContactChildEntityTypes.Contact">
            <summary>
             Composite Property for <c>Contact</c> at ContactIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.StoreContactChildEntityTypes.ContactType">
            <summary>
             Composite Property for <c>ContactType</c> at ContactTypeIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.StoreContactChildEntityTypes.Store">
            <summary>
             Composite Property for <c>Store</c> at CustomerIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StoreContactSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.StoreContact"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreContactSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the StoreContactSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesReasonIdFromSalesOrderHeaderSalesReason(System.Int32)">
            <summary>
            	Gets SalesOrderHeader objects from the datasource by SalesReasonID in the
            	SalesOrderHeaderSalesReason table. Table SalesOrderHeader is related to table SalesReason
            	through the (M:N) relationship defined in the SalesOrderHeaderSalesReason table.
            </summary>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <returns>Returns a typed collection of SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesReasonIdFromSalesOrderHeaderSalesReason(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.SalesOrderHeader objects from the datasource by SalesReasonID in the
            	SalesOrderHeaderSalesReason table. Table SalesOrderHeader is related to table SalesReason
            	through the (M:N) relationship defined in the SalesOrderHeaderSalesReason table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <remarks></remarks>
            <returns>Returns a TList of SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesReasonIdFromSalesOrderHeaderSalesReason(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets SalesOrderHeader objects from the datasource by SalesReasonID in the
            	SalesOrderHeaderSalesReason table. Table SalesOrderHeader is related to table SalesReason
            	through the (M:N) relationship defined in the SalesOrderHeaderSalesReason table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesReasonIdFromSalesOrderHeaderSalesReason(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets SalesOrderHeader objects from the datasource by SalesReasonID in the
            	SalesOrderHeaderSalesReason table. Table SalesOrderHeader is related to table SalesReason
            	through the (M:N) relationship defined in the SalesOrderHeaderSalesReason table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesReasonIdFromSalesOrderHeaderSalesReason(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets SalesOrderHeader objects from the datasource by SalesReasonID in the
            	SalesOrderHeaderSalesReason table. Table SalesOrderHeader is related to table SalesReason
            	through the (M:N) relationship defined in the SalesOrderHeaderSalesReason table.
            </summary>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesReasonIdFromSalesOrderHeaderSalesReason(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets SalesOrderHeader objects from the datasource by SalesReasonID in the
            	SalesOrderHeaderSalesReason table. Table SalesOrderHeader is related to table SalesReason
            	through the (M:N) relationship defined in the SalesOrderHeaderSalesReason table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <remarks></remarks>
            <returns>Returns a TList of SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesOrderHeaderKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_salesOrderId">Primary key.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByBillToAddressId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Address_BillToAddressID key.
            	FK_SalesOrderHeader_Address_BillToAddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="_billToAddressId">Customer billing address. Foreign key to Address.AddressID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByBillToAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Address_BillToAddressID key.
            	FK_SalesOrderHeader_Address_BillToAddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_billToAddressId">Customer billing address. Foreign key to Address.AddressID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByBillToAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Address_BillToAddressID key.
            	FK_SalesOrderHeader_Address_BillToAddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_billToAddressId">Customer billing address. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByBillToAddressId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Address_BillToAddressID key.
            	fkSalesOrderHeaderAddressBillToAddressId Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_billToAddressId">Customer billing address. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByBillToAddressId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Address_BillToAddressID key.
            	fkSalesOrderHeaderAddressBillToAddressId Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_billToAddressId">Customer billing address. Foreign key to Address.AddressID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByBillToAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Address_BillToAddressID key.
            	FK_SalesOrderHeader_Address_BillToAddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_billToAddressId">Customer billing address. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByShipToAddressId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Address_ShipToAddressID key.
            	FK_SalesOrderHeader_Address_ShipToAddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="_shipToAddressId">Customer shipping address. Foreign key to Address.AddressID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByShipToAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Address_ShipToAddressID key.
            	FK_SalesOrderHeader_Address_ShipToAddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shipToAddressId">Customer shipping address. Foreign key to Address.AddressID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByShipToAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Address_ShipToAddressID key.
            	FK_SalesOrderHeader_Address_ShipToAddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shipToAddressId">Customer shipping address. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByShipToAddressId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Address_ShipToAddressID key.
            	fkSalesOrderHeaderAddressShipToAddressId Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_shipToAddressId">Customer shipping address. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByShipToAddressId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Address_ShipToAddressID key.
            	fkSalesOrderHeaderAddressShipToAddressId Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_shipToAddressId">Customer shipping address. Foreign key to Address.AddressID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByShipToAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Address_ShipToAddressID key.
            	FK_SalesOrderHeader_Address_ShipToAddressID Description: Foreign key constraint referencing Address.AddressID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shipToAddressId">Customer shipping address. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByContactId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Contact_ContactID key.
            	FK_SalesOrderHeader_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="_contactId">Customer contact identification number. Foreign key to Contact.ContactID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Contact_ContactID key.
            	FK_SalesOrderHeader_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Customer contact identification number. Foreign key to Contact.ContactID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Contact_ContactID key.
            	FK_SalesOrderHeader_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Customer contact identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByContactId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Contact_ContactID key.
            	fkSalesOrderHeaderContactContactId Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_contactId">Customer contact identification number. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByContactId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Contact_ContactID key.
            	fkSalesOrderHeaderContactContactId Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_contactId">Customer contact identification number. Foreign key to Contact.ContactID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_Contact_ContactID key.
            	FK_SalesOrderHeader_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Customer contact identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCreditCardId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_CreditCard_CreditCardID key.
            	FK_SalesOrderHeader_CreditCard_CreditCardID Description: Foreign key constraint referencing CreditCard.CreditCardID.
            </summary>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCreditCardId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_CreditCard_CreditCardID key.
            	FK_SalesOrderHeader_CreditCard_CreditCardID Description: Foreign key constraint referencing CreditCard.CreditCardID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCreditCardId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_CreditCard_CreditCardID key.
            	FK_SalesOrderHeader_CreditCard_CreditCardID Description: Foreign key constraint referencing CreditCard.CreditCardID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCreditCardId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_CreditCard_CreditCardID key.
            	fkSalesOrderHeaderCreditCardCreditCardId Description: Foreign key constraint referencing CreditCard.CreditCardID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCreditCardId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_CreditCard_CreditCardID key.
            	fkSalesOrderHeaderCreditCardCreditCardId Description: Foreign key constraint referencing CreditCard.CreditCardID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCreditCardId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_CreditCard_CreditCardID key.
            	FK_SalesOrderHeader_CreditCard_CreditCardID Description: Foreign key constraint referencing CreditCard.CreditCardID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_creditCardId">Credit card identification number. Foreign key to CreditCard.CreditCardID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCurrencyRateId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_CurrencyRate_CurrencyRateID key.
            	FK_SalesOrderHeader_CurrencyRate_CurrencyRateID Description: Foreign key constraint referencing CurrencyRate.CurrencyRateID.
            </summary>
            <param name="_currencyRateId">Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCurrencyRateId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_CurrencyRate_CurrencyRateID key.
            	FK_SalesOrderHeader_CurrencyRate_CurrencyRateID Description: Foreign key constraint referencing CurrencyRate.CurrencyRateID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyRateId">Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCurrencyRateId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_CurrencyRate_CurrencyRateID key.
            	FK_SalesOrderHeader_CurrencyRate_CurrencyRateID Description: Foreign key constraint referencing CurrencyRate.CurrencyRateID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyRateId">Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCurrencyRateId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_CurrencyRate_CurrencyRateID key.
            	fkSalesOrderHeaderCurrencyRateCurrencyRateId Description: Foreign key constraint referencing CurrencyRate.CurrencyRateID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_currencyRateId">Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCurrencyRateId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_CurrencyRate_CurrencyRateID key.
            	fkSalesOrderHeaderCurrencyRateCurrencyRateId Description: Foreign key constraint referencing CurrencyRate.CurrencyRateID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_currencyRateId">Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCurrencyRateId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_CurrencyRate_CurrencyRateID key.
            	FK_SalesOrderHeader_CurrencyRate_CurrencyRateID Description: Foreign key constraint referencing CurrencyRate.CurrencyRateID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyRateId">Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByTerritoryId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_SalesTerritory_TerritoryID key.
            	FK_SalesOrderHeader_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="_territoryId">Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_SalesTerritory_TerritoryID key.
            	FK_SalesOrderHeader_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_SalesTerritory_TerritoryID key.
            	FK_SalesOrderHeader_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByTerritoryId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_SalesTerritory_TerritoryID key.
            	fkSalesOrderHeaderSalesTerritoryTerritoryId Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_territoryId">Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByTerritoryId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_SalesTerritory_TerritoryID key.
            	fkSalesOrderHeaderSalesTerritoryTerritoryId Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_territoryId">Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_SalesTerritory_TerritoryID key.
            	FK_SalesOrderHeader_SalesTerritory_TerritoryID Description: Foreign key constraint referencing SalesTerritory.TerritoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByShipMethodId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_ShipMethod_ShipMethodID key.
            	FK_SalesOrderHeader_ShipMethod_ShipMethodID Description: Foreign key constraint referencing ShipMethod.ShipMethodID.
            </summary>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByShipMethodId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_ShipMethod_ShipMethodID key.
            	FK_SalesOrderHeader_ShipMethod_ShipMethodID Description: Foreign key constraint referencing ShipMethod.ShipMethodID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByShipMethodId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_ShipMethod_ShipMethodID key.
            	FK_SalesOrderHeader_ShipMethod_ShipMethodID Description: Foreign key constraint referencing ShipMethod.ShipMethodID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByShipMethodId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_ShipMethod_ShipMethodID key.
            	fkSalesOrderHeaderShipMethodShipMethodId Description: Foreign key constraint referencing ShipMethod.ShipMethodID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByShipMethodId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_ShipMethod_ShipMethodID key.
            	fkSalesOrderHeaderShipMethodShipMethodId Description: Foreign key constraint referencing ShipMethod.ShipMethodID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByShipMethodId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeader_ShipMethod_ShipMethodID key.
            	FK_SalesOrderHeader_ShipMethod_ShipMethodID Description: Foreign key constraint referencing ShipMethod.ShipMethodID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shipMethodId">Shipping method. Foreign key to ShipMethod.ShipMethodID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeader objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesOrderHeaderKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_SalesOrderHeader_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesOrderHeader_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesOrderHeader_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesOrderHeader_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesOrderHeader_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesOrderHeader_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesOrderNumber(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_SalesOrderHeader_SalesOrderNumber index.
            </summary>
            <param name="_salesOrderNumber">Unique sales order identification number.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesOrderNumber(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesOrderHeader_SalesOrderNumber index.
            </summary>
            <param name="_salesOrderNumber">Unique sales order identification number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesOrderNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesOrderHeader_SalesOrderNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderNumber">Unique sales order identification number.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesOrderNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesOrderHeader_SalesOrderNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderNumber">Unique sales order identification number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesOrderNumber(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesOrderHeader_SalesOrderNumber index.
            </summary>
            <param name="_salesOrderNumber">Unique sales order identification number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesOrderNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesOrderHeader_SalesOrderNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderNumber">Unique sales order identification number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCustomerId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_SalesOrderHeader_CustomerID index.
            </summary>
            <param name="_customerId">Customer identification number. Foreign key to Customer.CustomerID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCustomerId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SalesOrderHeader_CustomerID index.
            </summary>
            <param name="_customerId">Customer identification number. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SalesOrderHeader_CustomerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Customer identification number. Foreign key to Customer.CustomerID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SalesOrderHeader_CustomerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Customer identification number. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCustomerId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SalesOrderHeader_CustomerID index.
            </summary>
            <param name="_customerId">Customer identification number. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetByCustomerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SalesOrderHeader_CustomerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Customer identification number. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesPersonId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the primary key IX_SalesOrderHeader_SalesPersonID index.
            </summary>
            <param name="_salesPersonId">Sales person who created the sales order. Foreign key to SalesPerson.SalePersonID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesPersonId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SalesOrderHeader_SalesPersonID index.
            </summary>
            <param name="_salesPersonId">Sales person who created the sales order. Foreign key to SalesPerson.SalePersonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesPersonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the IX_SalesOrderHeader_SalesPersonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Sales person who created the sales order. Foreign key to SalesPerson.SalePersonID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesPersonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SalesOrderHeader_SalesPersonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Sales person who created the sales order. Foreign key to SalesPerson.SalePersonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesPersonId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SalesOrderHeader_SalesPersonID index.
            </summary>
            <param name="_salesPersonId">Sales person who created the sales order. Foreign key to SalesPerson.SalePersonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesPersonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SalesOrderHeader_SalesPersonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesPersonId">Sales person who created the sales order. Foreign key to SalesPerson.SalePersonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesOrderId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_SalesOrderHeader_SalesOrderID index.
            </summary>
            <param name="_salesOrderId">Primary key.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesOrderId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesOrderHeader_SalesOrderID index.
            </summary>
            <param name="_salesOrderId">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesOrderHeader_SalesOrderID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesOrderHeader_SalesOrderID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesOrderId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesOrderHeader_SalesOrderID index.
            </summary>
            <param name="_salesOrderId">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.GetBySalesOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesOrderHeader_SalesOrderID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.SalesOrderHeader},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;SalesOrderHeader&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.SalesOrderHeader)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.SalesOrderHeader)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesOrderHeader,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesOrderHeader Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesOrderHeader,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.SalesOrderHeader object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.SalesOrderHeader instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesOrderHeader Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderDetailProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.Delete(System.Int32,System.Int32,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.. Primary Key.</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.. Primary Key.</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.. Primary Key.</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.. Primary Key.</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByCultureId(System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_Culture_CultureID key.
            	FK_ProductModelProductDescriptionCulture_Culture_CultureID Description: Foreign key constraint referencing Culture.CultureID.
            </summary>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByCultureId(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_Culture_CultureID key.
            	FK_ProductModelProductDescriptionCulture_Culture_CultureID Description: Foreign key constraint referencing Culture.CultureID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByCultureId(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_Culture_CultureID key.
            	FK_ProductModelProductDescriptionCulture_Culture_CultureID Description: Foreign key constraint referencing Culture.CultureID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByCultureId(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_Culture_CultureID key.
            	fkProductModelProductDescriptionCultureCultureCultureId Description: Foreign key constraint referencing Culture.CultureID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByCultureId(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_Culture_CultureID key.
            	fkProductModelProductDescriptionCultureCultureCultureId Description: Foreign key constraint referencing Culture.CultureID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByCultureId(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_Culture_CultureID key.
            	FK_ProductModelProductDescriptionCulture_Culture_CultureID Description: Foreign key constraint referencing Culture.CultureID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductDescriptionId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID key.
            	FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID Description: Foreign key constraint referencing ProductDescription.ProductDescriptionID.
            </summary>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductDescriptionId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID key.
            	FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID Description: Foreign key constraint referencing ProductDescription.ProductDescriptionID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductDescriptionId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID key.
            	FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID Description: Foreign key constraint referencing ProductDescription.ProductDescriptionID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductDescriptionId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID key.
            	fkProductModelProductDescriptionCultureProductDescriptionProductDescriptionId Description: Foreign key constraint referencing ProductDescription.ProductDescriptionID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductDescriptionId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID key.
            	fkProductModelProductDescriptionCultureProductDescriptionProductDescriptionId Description: Foreign key constraint referencing ProductDescription.ProductDescriptionID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductDescriptionId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID key.
            	FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID Description: Foreign key constraint referencing ProductDescription.ProductDescriptionID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductModelId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID key.
            	FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductModelId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID key.
            	FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductModelId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID key.
            	FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductModelId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID key.
            	fkProductModelProductDescriptionCultureProductModelProductModelId Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductModelId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID key.
            	fkProductModelProductDescriptionCultureProductModelProductModelId Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductModelId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID key.
            	FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCultureKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductModelIdProductDescriptionIdCultureId(System.Int32,System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID index.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductModelIdProductDescriptionIdCultureId(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID index.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductModelIdProductDescriptionIdCultureId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductModelIdProductDescriptionIdCultureId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductModelIdProductDescriptionIdCultureId(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID index.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.GetByProductModelIdProductDescriptionIdCultureId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_productDescriptionId">Primary key. Foreign key to ProductDescription.ProductDescriptionID.</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ProductModelProductDescriptionCulture&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureChildEntityTypes.Culture">
            <summary>
             Composite Property for <c>Culture</c> at CultureIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureChildEntityTypes.ProductDescription">
            <summary>
             Composite Property for <c>ProductDescription</c> at ProductDescriptionIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureChildEntityTypes.ProductModel">
            <summary>
             Composite Property for <c>ProductModel</c> at ProductModelIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelProductDescriptionCulture"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductModelProductDescriptionCultureSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductModelProductDescriptionCultureProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductListPriceHistoryKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.Delete(System.Int32,System.DateTime)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID. Primary Key.</param>
            <param name="_startDate">List price start date.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID. Primary Key.</param>
            <param name="_startDate">List price start date.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductListPriceHistory_Product_ProductID key.
            	FK_ProductListPriceHistory_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductListPriceHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductListPriceHistory_Product_ProductID key.
            	FK_ProductListPriceHistory_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductListPriceHistory objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductListPriceHistory_Product_ProductID key.
            	FK_ProductListPriceHistory_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductListPriceHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductListPriceHistory_Product_ProductID key.
            	fkProductListPriceHistoryProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductListPriceHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductListPriceHistory_Product_ProductID key.
            	fkProductListPriceHistoryProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductListPriceHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductListPriceHistory_Product_ProductID key.
            	FK_ProductListPriceHistory_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductListPriceHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductListPriceHistoryKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.GetByProductIdStartDate(System.Int32,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ProductListPriceHistory_ProductID_StartDate index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">List price start date.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.GetByProductIdStartDate(System.Int32,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductListPriceHistory_ProductID_StartDate index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">List price start date.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.GetByProductIdStartDate(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductListPriceHistory_ProductID_StartDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">List price start date.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.GetByProductIdStartDate(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductListPriceHistory_ProductID_StartDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">List price start date.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.GetByProductIdStartDate(System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductListPriceHistory_ProductID_StartDate index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">List price start date.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.GetByProductIdStartDate(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductListPriceHistory_ProductID_StartDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">List price start date.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ProductListPriceHistory},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ProductListPriceHistory&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ProductListPriceHistory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ProductListPriceHistory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductListPriceHistory,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductListPriceHistory Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductListPriceHistory,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ProductListPriceHistory object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ProductListPriceHistory instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductListPriceHistory Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByDocumentIdFromProductDocument(System.Int32)">
            <summary>
            	Gets Product objects from the datasource by DocumentID in the
            	ProductDocument table. Table Product is related to table Document
            	through the (M:N) relationship defined in the ProductDocument table.
            </summary>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByDocumentIdFromProductDocument(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Product objects from the datasource by DocumentID in the
            	ProductDocument table. Table Product is related to table Document
            	through the (M:N) relationship defined in the ProductDocument table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByDocumentIdFromProductDocument(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Product objects from the datasource by DocumentID in the
            	ProductDocument table. Table Product is related to table Document
            	through the (M:N) relationship defined in the ProductDocument table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByDocumentIdFromProductDocument(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Product objects from the datasource by DocumentID in the
            	ProductDocument table. Table Product is related to table Document
            	through the (M:N) relationship defined in the ProductDocument table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByDocumentIdFromProductDocument(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Product objects from the datasource by DocumentID in the
            	ProductDocument table. Table Product is related to table Document
            	through the (M:N) relationship defined in the ProductDocument table.
            </summary>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByDocumentIdFromProductDocument(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Product objects from the datasource by DocumentID in the
            	ProductDocument table. Table Product is related to table Document
            	through the (M:N) relationship defined in the ProductDocument table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_documentId">Document identification number. Foreign key to Document.DocumentID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByLocationIdFromProductInventory(System.Int16)">
            <summary>
            	Gets Product objects from the datasource by LocationID in the
            	ProductInventory table. Table Product is related to table Location
            	through the (M:N) relationship defined in the ProductInventory table.
            </summary>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByLocationIdFromProductInventory(System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Product objects from the datasource by LocationID in the
            	ProductInventory table. Table Product is related to table Location
            	through the (M:N) relationship defined in the ProductInventory table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <remarks></remarks>
            <returns>Returns a TList of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByLocationIdFromProductInventory(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16)">
            <summary>
            	Gets Product objects from the datasource by LocationID in the
            	ProductInventory table. Table Product is related to table Location
            	through the (M:N) relationship defined in the ProductInventory table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <remarks></remarks>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByLocationIdFromProductInventory(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets Product objects from the datasource by LocationID in the
            	ProductInventory table. Table Product is related to table Location
            	through the (M:N) relationship defined in the ProductInventory table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByLocationIdFromProductInventory(System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Product objects from the datasource by LocationID in the
            	ProductInventory table. Table Product is related to table Location
            	through the (M:N) relationship defined in the ProductInventory table.
            </summary>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByLocationIdFromProductInventory(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Product objects from the datasource by LocationID in the
            	ProductInventory table. Table Product is related to table Location
            	through the (M:N) relationship defined in the ProductInventory table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <remarks></remarks>
            <returns>Returns a TList of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductPhotoIdFromProductProductPhoto(System.Int32)">
            <summary>
            	Gets Product objects from the datasource by ProductPhotoID in the
            	ProductProductPhoto table. Table Product is related to table ProductPhoto
            	through the (M:N) relationship defined in the ProductProductPhoto table.
            </summary>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductPhotoIdFromProductProductPhoto(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Product objects from the datasource by ProductPhotoID in the
            	ProductProductPhoto table. Table Product is related to table ProductPhoto
            	through the (M:N) relationship defined in the ProductProductPhoto table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductPhotoIdFromProductProductPhoto(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Product objects from the datasource by ProductPhotoID in the
            	ProductProductPhoto table. Table Product is related to table ProductPhoto
            	through the (M:N) relationship defined in the ProductProductPhoto table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductPhotoIdFromProductProductPhoto(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Product objects from the datasource by ProductPhotoID in the
            	ProductProductPhoto table. Table Product is related to table ProductPhoto
            	through the (M:N) relationship defined in the ProductProductPhoto table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductPhotoIdFromProductProductPhoto(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Product objects from the datasource by ProductPhotoID in the
            	ProductProductPhoto table. Table Product is related to table ProductPhoto
            	through the (M:N) relationship defined in the ProductProductPhoto table.
            </summary>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductPhotoIdFromProductProductPhoto(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Product objects from the datasource by ProductPhotoID in the
            	ProductProductPhoto table. Table Product is related to table ProductPhoto
            	through the (M:N) relationship defined in the ProductProductPhoto table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByVendorIdFromProductVendor(System.Int32)">
            <summary>
            	Gets Product objects from the datasource by VendorID in the
            	ProductVendor table. Table Product is related to table Vendor
            	through the (M:N) relationship defined in the ProductVendor table.
            </summary>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByVendorIdFromProductVendor(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Product objects from the datasource by VendorID in the
            	ProductVendor table. Table Product is related to table Vendor
            	through the (M:N) relationship defined in the ProductVendor table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByVendorIdFromProductVendor(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Product objects from the datasource by VendorID in the
            	ProductVendor table. Table Product is related to table Vendor
            	through the (M:N) relationship defined in the ProductVendor table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByVendorIdFromProductVendor(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Product objects from the datasource by VendorID in the
            	ProductVendor table. Table Product is related to table Vendor
            	through the (M:N) relationship defined in the ProductVendor table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByVendorIdFromProductVendor(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Product objects from the datasource by VendorID in the
            	ProductVendor table. Table Product is related to table Vendor
            	through the (M:N) relationship defined in the ProductVendor table.
            </summary>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByVendorIdFromProductVendor(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Product objects from the datasource by VendorID in the
            	ProductVendor table. Table Product is related to table Vendor
            	through the (M:N) relationship defined in the ProductVendor table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetBySpecialOfferIdFromSpecialOfferProduct(System.Int32)">
            <summary>
            	Gets Product objects from the datasource by SpecialOfferID in the
            	SpecialOfferProduct table. Table Product is related to table SpecialOffer
            	through the (M:N) relationship defined in the SpecialOfferProduct table.
            </summary>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetBySpecialOfferIdFromSpecialOfferProduct(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Product objects from the datasource by SpecialOfferID in the
            	SpecialOfferProduct table. Table Product is related to table SpecialOffer
            	through the (M:N) relationship defined in the SpecialOfferProduct table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <remarks></remarks>
            <returns>Returns a TList of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetBySpecialOfferIdFromSpecialOfferProduct(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Product objects from the datasource by SpecialOfferID in the
            	SpecialOfferProduct table. Table Product is related to table SpecialOffer
            	through the (M:N) relationship defined in the SpecialOfferProduct table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetBySpecialOfferIdFromSpecialOfferProduct(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Product objects from the datasource by SpecialOfferID in the
            	SpecialOfferProduct table. Table Product is related to table SpecialOffer
            	through the (M:N) relationship defined in the SpecialOfferProduct table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetBySpecialOfferIdFromSpecialOfferProduct(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Product objects from the datasource by SpecialOfferID in the
            	SpecialOfferProduct table. Table Product is related to table SpecialOffer
            	through the (M:N) relationship defined in the SpecialOfferProduct table.
            </summary>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetBySpecialOfferIdFromSpecialOfferProduct(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Product objects from the datasource by SpecialOfferID in the
            	SpecialOfferProduct table. Table Product is related to table SpecialOffer
            	through the (M:N) relationship defined in the SpecialOfferProduct table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_specialOfferId">Primary key for SpecialOfferProduct records.</param>
            <remarks></remarks>
            <returns>Returns a TList of Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productId">Primary key for Product records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key for Product records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductModelId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_Product_ProductModel_ProductModelID key.
            	FK_Product_ProductModel_ProductModelID Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="_productModelId">Product is a member of this product model. Foreign key to ProductModel.ProductModelID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductModelId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_Product_ProductModel_ProductModelID key.
            	FK_Product_ProductModel_ProductModelID Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Product is a member of this product model. Foreign key to ProductModel.ProductModelID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductModelId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_ProductModel_ProductModelID key.
            	FK_Product_ProductModel_ProductModelID Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Product is a member of this product model. Foreign key to ProductModel.ProductModelID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductModelId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_ProductModel_ProductModelID key.
            	fkProductProductModelProductModelId Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productModelId">Product is a member of this product model. Foreign key to ProductModel.ProductModelID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductModelId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_ProductModel_ProductModelID key.
            	fkProductProductModelProductModelId Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productModelId">Product is a member of this product model. Foreign key to ProductModel.ProductModelID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductModelId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_ProductModel_ProductModelID key.
            	FK_Product_ProductModel_ProductModelID Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Product is a member of this product model. Foreign key to ProductModel.ProductModelID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductSubcategoryId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_Product_ProductSubcategory_ProductSubcategoryID key.
            	FK_Product_ProductSubcategory_ProductSubcategoryID Description: Foreign key constraint referencing ProductSubcategory.ProductSubcategoryID.
            </summary>
            <param name="_productSubcategoryId">Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. </param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductSubcategoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_Product_ProductSubcategory_ProductSubcategoryID key.
            	FK_Product_ProductSubcategory_ProductSubcategoryID Description: Foreign key constraint referencing ProductSubcategory.ProductSubcategoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productSubcategoryId">Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. </param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductSubcategoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_ProductSubcategory_ProductSubcategoryID key.
            	FK_Product_ProductSubcategory_ProductSubcategoryID Description: Foreign key constraint referencing ProductSubcategory.ProductSubcategoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productSubcategoryId">Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductSubcategoryId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_ProductSubcategory_ProductSubcategoryID key.
            	fkProductProductSubcategoryProductSubcategoryId Description: Foreign key constraint referencing ProductSubcategory.ProductSubcategoryID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productSubcategoryId">Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. </param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductSubcategoryId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_ProductSubcategory_ProductSubcategoryID key.
            	fkProductProductSubcategoryProductSubcategoryId Description: Foreign key constraint referencing ProductSubcategory.ProductSubcategoryID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productSubcategoryId">Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. </param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductSubcategoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_ProductSubcategory_ProductSubcategoryID key.
            	FK_Product_ProductSubcategory_ProductSubcategoryID Description: Foreign key constraint referencing ProductSubcategory.ProductSubcategoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productSubcategoryId">Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetBySizeUnitMeasureCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_UnitMeasure_SizeUnitMeasureCode key.
            	FK_Product_UnitMeasure_SizeUnitMeasureCode Description: Foreign key constraint referencing UnitMeasure.UnitMeasureCode.
            </summary>
            <param name="_sizeUnitMeasureCode">Unit of measure for Size column.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetBySizeUnitMeasureCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_UnitMeasure_SizeUnitMeasureCode key.
            	FK_Product_UnitMeasure_SizeUnitMeasureCode Description: Foreign key constraint referencing UnitMeasure.UnitMeasureCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_sizeUnitMeasureCode">Unit of measure for Size column.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetBySizeUnitMeasureCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_UnitMeasure_SizeUnitMeasureCode key.
            	FK_Product_UnitMeasure_SizeUnitMeasureCode Description: Foreign key constraint referencing UnitMeasure.UnitMeasureCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_sizeUnitMeasureCode">Unit of measure for Size column.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetBySizeUnitMeasureCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_UnitMeasure_SizeUnitMeasureCode key.
            	fkProductUnitMeasureSizeUnitMeasureCode Description: Foreign key constraint referencing UnitMeasure.UnitMeasureCode.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_sizeUnitMeasureCode">Unit of measure for Size column.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetBySizeUnitMeasureCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_UnitMeasure_SizeUnitMeasureCode key.
            	fkProductUnitMeasureSizeUnitMeasureCode Description: Foreign key constraint referencing UnitMeasure.UnitMeasureCode.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_sizeUnitMeasureCode">Unit of measure for Size column.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetBySizeUnitMeasureCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_UnitMeasure_SizeUnitMeasureCode key.
            	FK_Product_UnitMeasure_SizeUnitMeasureCode Description: Foreign key constraint referencing UnitMeasure.UnitMeasureCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_sizeUnitMeasureCode">Unit of measure for Size column.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByWeightUnitMeasureCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_UnitMeasure_WeightUnitMeasureCode key.
            	FK_Product_UnitMeasure_WeightUnitMeasureCode Description: Foreign key constraint referencing UnitMeasure.UnitMeasureCode.
            </summary>
            <param name="_weightUnitMeasureCode">Unit of measure for Weight column.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByWeightUnitMeasureCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_UnitMeasure_WeightUnitMeasureCode key.
            	FK_Product_UnitMeasure_WeightUnitMeasureCode Description: Foreign key constraint referencing UnitMeasure.UnitMeasureCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_weightUnitMeasureCode">Unit of measure for Weight column.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByWeightUnitMeasureCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_UnitMeasure_WeightUnitMeasureCode key.
            	FK_Product_UnitMeasure_WeightUnitMeasureCode Description: Foreign key constraint referencing UnitMeasure.UnitMeasureCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_weightUnitMeasureCode">Unit of measure for Weight column.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByWeightUnitMeasureCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_UnitMeasure_WeightUnitMeasureCode key.
            	fkProductUnitMeasureWeightUnitMeasureCode Description: Foreign key constraint referencing UnitMeasure.UnitMeasureCode.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_weightUnitMeasureCode">Unit of measure for Weight column.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByWeightUnitMeasureCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_UnitMeasure_WeightUnitMeasureCode key.
            	fkProductUnitMeasureWeightUnitMeasureCode Description: Foreign key constraint referencing UnitMeasure.UnitMeasureCode.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_weightUnitMeasureCode">Unit of measure for Weight column.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByWeightUnitMeasureCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Product_UnitMeasure_WeightUnitMeasureCode key.
            	FK_Product_UnitMeasure_WeightUnitMeasureCode Description: Foreign key constraint referencing UnitMeasure.UnitMeasureCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_weightUnitMeasureCode">Unit of measure for Weight column.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Product objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Product_Name index.
            </summary>
            <param name="_name">Name of the product.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Product_Name index.
            </summary>
            <param name="_name">Name of the product.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_Product_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Name of the product.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Product_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Name of the product.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Product_Name index.
            </summary>
            <param name="_name">Name of the product.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Product_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Name of the product.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductNumber(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Product_ProductNumber index.
            </summary>
            <param name="_productNumber">Unique product identification number.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductNumber(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Product_ProductNumber index.
            </summary>
            <param name="_productNumber">Unique product identification number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_Product_ProductNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productNumber">Unique product identification number.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Product_ProductNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productNumber">Unique product identification number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductNumber(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Product_ProductNumber index.
            </summary>
            <param name="_productNumber">Unique product identification number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Product_ProductNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productNumber">Unique product identification number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Product_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Product_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_Product_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Product_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Product_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Product_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Product_ProductID index.
            </summary>
            <param name="_productId">Primary key for Product records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Product_ProductID index.
            </summary>
            <param name="_productId">Primary key for Product records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Product_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key for Product records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Product_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key for Product records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Product_ProductID index.
            </summary>
            <param name="_productId">Primary key for Product records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Product_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key for Product records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.Product},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Product&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.Product)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.Product)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Product,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Product Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Product,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.Product object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.Product instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Product Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.Product</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.ProductModel">
            <summary>
             Composite Property for <c>ProductModel</c> at ProductModelIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.ProductSubcategory">
            <summary>
             Composite Property for <c>ProductSubcategory</c> at ProductSubcategoryIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.UnitMeasure">
            <summary>
             Composite Property for <c>UnitMeasure</c> at SizeUnitMeasureCodeSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.ProductProductPhotoCollection">
            <summary>
             Collection of <c>Product</c> as OneToMany for ProductProductPhotoCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.TransactionHistoryCollection">
            <summary>
             Collection of <c>Product</c> as OneToMany for TransactionHistoryCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.ProductVendorCollection">
            <summary>
             Collection of <c>Product</c> as OneToMany for ProductVendorCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.BillOfMaterialsCollectionGetByProductAssemblyId">
            <summary>
             Collection of <c>Product</c> as OneToMany for BillOfMaterialsCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.DocumentIdDocumentCollection_From_ProductDocument">
            <summary>
             Collection of <c>Product</c> as ManyToMany for DocumentCollection_From_ProductDocument
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.SpecialOfferProductCollection">
            <summary>
             Collection of <c>Product</c> as OneToMany for SpecialOfferProductCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.ProductPhotoIdProductPhotoCollection_From_ProductProductPhoto">
            <summary>
             Collection of <c>Product</c> as ManyToMany for ProductPhotoCollection_From_ProductProductPhoto
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.BillOfMaterialsCollectionGetByComponentId">
            <summary>
             Collection of <c>Product</c> as OneToMany for BillOfMaterialsCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.ProductInventoryCollection">
            <summary>
             Collection of <c>Product</c> as OneToMany for ProductInventoryCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.ProductDocumentCollection">
            <summary>
             Collection of <c>Product</c> as OneToMany for ProductDocumentCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.ProductReviewCollection">
            <summary>
             Collection of <c>Product</c> as OneToMany for ProductReviewCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.VendorIdVendorCollection_From_ProductVendor">
            <summary>
             Collection of <c>Product</c> as ManyToMany for VendorCollection_From_ProductVendor
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.WorkOrderCollection">
            <summary>
             Collection of <c>Product</c> as OneToMany for WorkOrderCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.PurchaseOrderDetailCollection">
            <summary>
             Collection of <c>Product</c> as OneToMany for PurchaseOrderDetailCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.LocationIdLocationCollection_From_ProductInventory">
            <summary>
             Collection of <c>Product</c> as ManyToMany for LocationCollection_From_ProductInventory
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.ProductListPriceHistoryCollection">
            <summary>
             Collection of <c>Product</c> as OneToMany for ProductListPriceHistoryCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.SpecialOfferIdSpecialOfferCollection_From_SpecialOfferProduct">
            <summary>
             Collection of <c>Product</c> as ManyToMany for SpecialOfferCollection_From_SpecialOfferProduct
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.ShoppingCartItemCollection">
            <summary>
             Collection of <c>Product</c> as OneToMany for ShoppingCartItemCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductChildEntityTypes.ProductCostHistoryCollection">
            <summary>
             Collection of <c>Product</c> as OneToMany for ProductCostHistoryCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Product"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.GetByProductModelIdFromProductModelIllustration(System.Int32)">
            <summary>
            	Gets Illustration objects from the datasource by ProductModelID in the
            	ProductModelIllustration table. Table Illustration is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelIllustration table.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <returns>Returns a typed collection of Illustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.GetByProductModelIdFromProductModelIllustration(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Illustration objects from the datasource by ProductModelID in the
            	ProductModelIllustration table. Table Illustration is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelIllustration table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Illustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.GetByProductModelIdFromProductModelIllustration(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Illustration objects from the datasource by ProductModelID in the
            	ProductModelIllustration table. Table Illustration is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelIllustration table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Illustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.GetByProductModelIdFromProductModelIllustration(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Illustration objects from the datasource by ProductModelID in the
            	ProductModelIllustration table. Table Illustration is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelIllustration table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Illustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.GetByProductModelIdFromProductModelIllustration(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Illustration objects from the datasource by ProductModelID in the
            	ProductModelIllustration table. Table Illustration is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelIllustration table.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Illustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.GetByProductModelIdFromProductModelIllustration(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Illustration objects from the datasource by ProductModelID in the
            	ProductModelIllustration table. Table Illustration is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelIllustration table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Illustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.IllustrationKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_illustrationId">Primary key for Illustration records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_illustrationId">Primary key for Illustration records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.IllustrationKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.GetByIllustrationId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Illustration_IllustrationID index.
            </summary>
            <param name="_illustrationId">Primary key for Illustration records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.GetByIllustrationId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Illustration_IllustrationID index.
            </summary>
            <param name="_illustrationId">Primary key for Illustration records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.GetByIllustrationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Illustration_IllustrationID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_illustrationId">Primary key for Illustration records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.GetByIllustrationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Illustration_IllustrationID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_illustrationId">Primary key for Illustration records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.GetByIllustrationId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Illustration_IllustrationID index.
            </summary>
            <param name="_illustrationId">Primary key for Illustration records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.GetByIllustrationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Illustration_IllustrationID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_illustrationId">Primary key for Illustration records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.Illustration},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Illustration&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.Illustration)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.Illustration)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Illustration,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Illustration Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Illustration,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.Illustration object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.Illustration instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Illustration Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.DatabaseLogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.BillOfMaterialsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.AddressProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByCustomerIdFromCustomerAddress(System.Int32)">
            <summary>
            	Gets Address objects from the datasource by CustomerID in the
            	CustomerAddress table. Table Address is related to table Customer
            	through the (M:N) relationship defined in the CustomerAddress table.
            </summary>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <returns>Returns a typed collection of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByCustomerIdFromCustomerAddress(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Address objects from the datasource by CustomerID in the
            	CustomerAddress table. Table Address is related to table Customer
            	through the (M:N) relationship defined in the CustomerAddress table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByCustomerIdFromCustomerAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Address objects from the datasource by CustomerID in the
            	CustomerAddress table. Table Address is related to table Customer
            	through the (M:N) relationship defined in the CustomerAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByCustomerIdFromCustomerAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Address objects from the datasource by CustomerID in the
            	CustomerAddress table. Table Address is related to table Customer
            	through the (M:N) relationship defined in the CustomerAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByCustomerIdFromCustomerAddress(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Address objects from the datasource by CustomerID in the
            	CustomerAddress table. Table Address is related to table Customer
            	through the (M:N) relationship defined in the CustomerAddress table.
            </summary>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByCustomerIdFromCustomerAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Address objects from the datasource by CustomerID in the
            	CustomerAddress table. Table Address is related to table Customer
            	through the (M:N) relationship defined in the CustomerAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_customerId">Primary key. Foreign key to Customer.CustomerID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByEmployeeIdFromEmployeeAddress(System.Int32)">
            <summary>
            	Gets Address objects from the datasource by EmployeeID in the
            	EmployeeAddress table. Table Address is related to table Employee
            	through the (M:N) relationship defined in the EmployeeAddress table.
            </summary>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <returns>Returns a typed collection of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByEmployeeIdFromEmployeeAddress(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Address objects from the datasource by EmployeeID in the
            	EmployeeAddress table. Table Address is related to table Employee
            	through the (M:N) relationship defined in the EmployeeAddress table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByEmployeeIdFromEmployeeAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Address objects from the datasource by EmployeeID in the
            	EmployeeAddress table. Table Address is related to table Employee
            	through the (M:N) relationship defined in the EmployeeAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByEmployeeIdFromEmployeeAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Address objects from the datasource by EmployeeID in the
            	EmployeeAddress table. Table Address is related to table Employee
            	through the (M:N) relationship defined in the EmployeeAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByEmployeeIdFromEmployeeAddress(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Address objects from the datasource by EmployeeID in the
            	EmployeeAddress table. Table Address is related to table Employee
            	through the (M:N) relationship defined in the EmployeeAddress table.
            </summary>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByEmployeeIdFromEmployeeAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Address objects from the datasource by EmployeeID in the
            	EmployeeAddress table. Table Address is related to table Employee
            	through the (M:N) relationship defined in the EmployeeAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_employeeId">Primary key. Foreign key to Employee.EmployeeID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByVendorIdFromVendorAddress(System.Int32)">
            <summary>
            	Gets Address objects from the datasource by VendorID in the
            	VendorAddress table. Table Address is related to table Vendor
            	through the (M:N) relationship defined in the VendorAddress table.
            </summary>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <returns>Returns a typed collection of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByVendorIdFromVendorAddress(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Address objects from the datasource by VendorID in the
            	VendorAddress table. Table Address is related to table Vendor
            	through the (M:N) relationship defined in the VendorAddress table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByVendorIdFromVendorAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Address objects from the datasource by VendorID in the
            	VendorAddress table. Table Address is related to table Vendor
            	through the (M:N) relationship defined in the VendorAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByVendorIdFromVendorAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Address objects from the datasource by VendorID in the
            	VendorAddress table. Table Address is related to table Vendor
            	through the (M:N) relationship defined in the VendorAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByVendorIdFromVendorAddress(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Address objects from the datasource by VendorID in the
            	VendorAddress table. Table Address is related to table Vendor
            	through the (M:N) relationship defined in the VendorAddress table.
            </summary>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByVendorIdFromVendorAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Address objects from the datasource by VendorID in the
            	VendorAddress table. Table Address is related to table Vendor
            	through the (M:N) relationship defined in the VendorAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_vendorId">Primary key. Foreign key to Vendor.VendorID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Address objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.AddressKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_addressId">Primary key for Address records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key for Address records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.AddressKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Address_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Address_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_Address_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Address_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Address_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Address_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByAddressLine1AddressLine2CityStateProvinceIdPostalCode(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode index.
            </summary>
            <param name="_addressLine1">First street address line.</param>
            <param name="_addressLine2">Second street address line.</param>
            <param name="_city">Name of the city.</param>
            <param name="_stateProvinceId">Unique identification number for the state or province. Foreign key to StateProvince table.</param>
            <param name="_postalCode">Postal code for the street address.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByAddressLine1AddressLine2CityStateProvinceIdPostalCode(System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode index.
            </summary>
            <param name="_addressLine1">First street address line.</param>
            <param name="_addressLine2">Second street address line.</param>
            <param name="_city">Name of the city.</param>
            <param name="_stateProvinceId">Unique identification number for the state or province. Foreign key to StateProvince table.</param>
            <param name="_postalCode">Postal code for the street address.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByAddressLine1AddressLine2CityStateProvinceIdPostalCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressLine1">First street address line.</param>
            <param name="_addressLine2">Second street address line.</param>
            <param name="_city">Name of the city.</param>
            <param name="_stateProvinceId">Unique identification number for the state or province. Foreign key to StateProvince table.</param>
            <param name="_postalCode">Postal code for the street address.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByAddressLine1AddressLine2CityStateProvinceIdPostalCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressLine1">First street address line.</param>
            <param name="_addressLine2">Second street address line.</param>
            <param name="_city">Name of the city.</param>
            <param name="_stateProvinceId">Unique identification number for the state or province. Foreign key to StateProvince table.</param>
            <param name="_postalCode">Postal code for the street address.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByAddressLine1AddressLine2CityStateProvinceIdPostalCode(System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode index.
            </summary>
            <param name="_addressLine1">First street address line.</param>
            <param name="_addressLine2">Second street address line.</param>
            <param name="_city">Name of the city.</param>
            <param name="_stateProvinceId">Unique identification number for the state or province. Foreign key to StateProvince table.</param>
            <param name="_postalCode">Postal code for the street address.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByAddressLine1AddressLine2CityStateProvinceIdPostalCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressLine1">First street address line.</param>
            <param name="_addressLine2">Second street address line.</param>
            <param name="_city">Name of the city.</param>
            <param name="_stateProvinceId">Unique identification number for the state or province. Foreign key to StateProvince table.</param>
            <param name="_postalCode">Postal code for the street address.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByStateProvinceId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_Address_StateProvinceID index.
            </summary>
            <param name="_stateProvinceId">Unique identification number for the state or province. Foreign key to StateProvince table.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByStateProvinceId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Address_StateProvinceID index.
            </summary>
            <param name="_stateProvinceId">Unique identification number for the state or province. Foreign key to StateProvince table.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByStateProvinceId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Address_StateProvinceID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceId">Unique identification number for the state or province. Foreign key to StateProvince table.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByStateProvinceId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Address_StateProvinceID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceId">Unique identification number for the state or province. Foreign key to StateProvince table.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByStateProvinceId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Address_StateProvinceID index.
            </summary>
            <param name="_stateProvinceId">Unique identification number for the state or province. Foreign key to StateProvince table.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByStateProvinceId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Address_StateProvinceID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_stateProvinceId">Unique identification number for the state or province. Foreign key to StateProvince table.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByAddressId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Address_AddressID index.
            </summary>
            <param name="_addressId">Primary key for Address records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByAddressId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Address_AddressID index.
            </summary>
            <param name="_addressId">Primary key for Address records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Address_AddressID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key for Address records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Address_AddressID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key for Address records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByAddressId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Address_AddressID index.
            </summary>
            <param name="_addressId">Primary key for Address records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.GetByAddressId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Address_AddressID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key for Address records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.Address},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Address&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.Address)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.Address)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Address,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Address Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Address,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.Address object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.Address instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Address Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AddressChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.Address</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.AddressChildEntityTypes.StateProvince">
            <summary>
             Composite Property for <c>StateProvince</c> at StateProvinceIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.AddressChildEntityTypes.CustomerAddressCollection">
            <summary>
             Collection of <c>Address</c> as OneToMany for CustomerAddressCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.AddressChildEntityTypes.CustomerIdCustomerCollection_From_CustomerAddress">
            <summary>
             Collection of <c>Address</c> as ManyToMany for CustomerCollection_From_CustomerAddress
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.AddressChildEntityTypes.SalesOrderHeaderCollectionGetByBillToAddressId">
            <summary>
             Collection of <c>Address</c> as OneToMany for SalesOrderHeaderCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.AddressChildEntityTypes.EmployeeAddressCollection">
            <summary>
             Collection of <c>Address</c> as OneToMany for EmployeeAddressCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.AddressChildEntityTypes.SalesOrderHeaderCollectionGetByShipToAddressId">
            <summary>
             Collection of <c>Address</c> as OneToMany for SalesOrderHeaderCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.AddressChildEntityTypes.VendorIdVendorCollection_From_VendorAddress">
            <summary>
             Collection of <c>Address</c> as ManyToMany for VendorCollection_From_VendorAddress
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.AddressChildEntityTypes.VendorAddressCollection">
            <summary>
             Collection of <c>Address</c> as OneToMany for VendorAddressCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.AddressChildEntityTypes.EmployeeIdEmployeeCollection_From_EmployeeAddress">
            <summary>
             Collection of <c>Address</c> as ManyToMany for EmployeeCollection_From_EmployeeAddress
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AddressSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Address"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the AddressSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VStateProvinceCountryRegionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.StringTokenizer">
            <summary>
            Implements a StringTokenizer class for splitting a string
            into substrings using a set of delimiters.
            </summary>
            <remarks>
            C# version of the java.util.StringTokenizer class.
            Basicly it's a wrapper class around the <c>String.Split</c> method.<pare/>
            It implements all of it's Java equivalent methods apart from those only needed by the Enumeration interface.
            All implemented Java-compilant methods have their C# equivalents in properties. They however differ in names
            since Java uses the (Hungarian-like) notation <c>runMe()</c> while C# uses Camel-cased <c>RunMe()</c> and thus
            Java's <c>nextToken()</c> method is just an alias of the <c>NextToken</c> property.
            </remarks>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringTokenizer.DefaultDelimiters">
            <summary>
            String conatining the default set of delimiters which are <c>" \t\n\r\f"</c>:
            the space character, the tab character, the newline character, the carriage-return character, and the form-feed character.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StringTokenizer.#ctor(System.String)">
            <summary>
            Constructs a string tokenizer for the specified string using the <see cref="F:DefaultDelimiters">default delimiters</see>.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StringTokenizer.#ctor(System.String,System.String)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StringTokenizer.#ctor(System.String,System.Char[])">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StringTokenizer.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters and optionally returning them as tokens.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <param name="returnDelims">If set to <c>true</c> the encountered delimiters will also be returned as tokens.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StringTokenizer.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters,
            optionally returning them as tokens. Also empty tokens may be returned using the <see cref="!:String.Empty"/> string.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <param name="returnDelims">If set to <c>true</c> the encountered delimiters will also be returned as tokens.</param>
            <param name="returnEmpty">If set to <c>true</c> empty tokens will also be returned.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StringTokenizer.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters,
            optionally returning them as tokens. Also empty tokens may be returned using the <paramref name="empty"/> string.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <param name="returnDelims">If set to <c>true</c> the encountered delimiters will also be returned as tokens.</param>
            <param name="returnEmpty">If set to <c>true</c> empty tokens will also be returned.</param>
            <param name="empty">The string to be returned as an empty token.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StringTokenizer.Reset">
            <summary>
            Resets the current position index so that the tokens can be extracted again.
            </summary>
            <remarks><see cref="!:Equivalent not available in Java!"/></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.StringTokenizer.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.StringTokenizer.HasMoreTokens">
            <summary>
            Tests if there are more tokens available from this tokenizer's string.
            If this method returns <c>true</c>, then a subsequent
            use of the <see cref="P:NextToken"/> property will successfully return a token.
            </summary>
            <value>
            	<c>true</c> if more tokens are available; otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.StringTokenizer.NextToken">
            <summary>
            Gets the next token.
            </summary>
            <value>The next token.</value>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when trying to get a token which doesn't exist.
            Usually caused by not checking if the <see cref="P:HasMoreTokens"/> property returns <c>true</c> before trying to get the next token.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.StringTokenizer.CountTokens">
            <summary>
            Counts the <see cref="!:remaining"/> tokens - the number of times the
            <see cref="P:NextToken"/> property can be used before it throws an exception.
            </summary>
            <value>The number of remaining tokens.</value>
            <seealso cref="P:Count"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.StringTokenizer.Count">
            <summary>
            Gets the total number of tokens extracted.
            </summary>
            <remarks>
            <see cref="!:Equivalent not available in Java!"/>
            This property returns the total number of extracted tokens,
            contrary to <see cref="P:CountTokens"/>.
            </remarks>
            <value>The number of tokens extracted.</value>
            <seealso cref="P:StringTokenizer.CountTokens"/>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.StringTokenizer.Item(System.Int32)">
            <summary>
            Gets the token with the specified index from the tokenizer without moving the current position index.
            </summary>
            <remarks><see cref="!:Equivalent not available in Java!"/></remarks>
            <param name="index">The index of the token to get.</param>
            <value>The token with the given index</value>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when trying to get a token which doesn't exist, that is when <see cref="!:index"/> is equal or greater then <see cref="!:Count"/> or <see cref="!:index"/> is negative.</exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.StringTokenizer.EmptyString">
            <summary>
            Gets the currently set string for empty tokens.
            </summary>
            <remarks>Default is <c>System.String.Empty</c></remarks>
            <value>The empty token string.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonQuotaHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductVendorProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductSubcategoryKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productSubcategoryId">Primary key for ProductSubcategory records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productSubcategoryId">Primary key for ProductSubcategory records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByProductCategoryId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductSubcategory_ProductCategory_ProductCategoryID key.
            	FK_ProductSubcategory_ProductCategory_ProductCategoryID Description: Foreign key constraint referencing ProductCategory.ProductCategoryID.
            </summary>
            <param name="_productCategoryId">Product category identification number. Foreign key to ProductCategory.ProductCategoryID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductSubcategory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByProductCategoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductSubcategory_ProductCategory_ProductCategoryID key.
            	FK_ProductSubcategory_ProductCategory_ProductCategoryID Description: Foreign key constraint referencing ProductCategory.ProductCategoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productCategoryId">Product category identification number. Foreign key to ProductCategory.ProductCategoryID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductSubcategory objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByProductCategoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductSubcategory_ProductCategory_ProductCategoryID key.
            	FK_ProductSubcategory_ProductCategory_ProductCategoryID Description: Foreign key constraint referencing ProductCategory.ProductCategoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productCategoryId">Product category identification number. Foreign key to ProductCategory.ProductCategoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductSubcategory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByProductCategoryId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductSubcategory_ProductCategory_ProductCategoryID key.
            	fkProductSubcategoryProductCategoryProductCategoryId Description: Foreign key constraint referencing ProductCategory.ProductCategoryID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productCategoryId">Product category identification number. Foreign key to ProductCategory.ProductCategoryID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductSubcategory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByProductCategoryId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductSubcategory_ProductCategory_ProductCategoryID key.
            	fkProductSubcategoryProductCategoryProductCategoryId Description: Foreign key constraint referencing ProductCategory.ProductCategoryID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productCategoryId">Product category identification number. Foreign key to ProductCategory.ProductCategoryID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductSubcategory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByProductCategoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductSubcategory_ProductCategory_ProductCategoryID key.
            	FK_ProductSubcategory_ProductCategory_ProductCategoryID Description: Foreign key constraint referencing ProductCategory.ProductCategoryID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productCategoryId">Product category identification number. Foreign key to ProductCategory.ProductCategoryID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductSubcategory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductSubcategoryKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_ProductSubcategory_Name index.
            </summary>
            <param name="_name">Subcategory description.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductSubcategory_Name index.
            </summary>
            <param name="_name">Subcategory description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductSubcategory_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Subcategory description.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductSubcategory_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Subcategory description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductSubcategory_Name index.
            </summary>
            <param name="_name">Subcategory description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductSubcategory_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Subcategory description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_ProductSubcategory_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductSubcategory_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductSubcategory_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductSubcategory_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductSubcategory_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductSubcategory_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByProductSubcategoryId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ProductSubcategory_ProductSubcategoryID index.
            </summary>
            <param name="_productSubcategoryId">Primary key for ProductSubcategory records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByProductSubcategoryId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductSubcategory_ProductSubcategoryID index.
            </summary>
            <param name="_productSubcategoryId">Primary key for ProductSubcategory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByProductSubcategoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductSubcategory_ProductSubcategoryID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productSubcategoryId">Primary key for ProductSubcategory records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByProductSubcategoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductSubcategory_ProductSubcategoryID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productSubcategoryId">Primary key for ProductSubcategory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByProductSubcategoryId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductSubcategory_ProductSubcategoryID index.
            </summary>
            <param name="_productSubcategoryId">Primary key for ProductSubcategory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.GetByProductSubcategoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductSubcategory_ProductSubcategoryID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productSubcategoryId">Primary key for ProductSubcategory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ProductSubcategory},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ProductSubcategory&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ProductSubcategory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ProductSubcategory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductSubcategory,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductSubcategory Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductSubcategory,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ProductSubcategory object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ProductSubcategory instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductSubcategory Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ProductSubcategory</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryChildEntityTypes.ProductCategory">
            <summary>
             Composite Property for <c>ProductCategory</c> at ProductCategoryIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryChildEntityTypes.ProductCollection">
            <summary>
             Collection of <c>ProductSubcategory</c> as OneToMany for ProductCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductSubcategorySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductSubcategory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductSubcategorySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductSubcategorySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.EmployeePayHistoryKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.Delete(System.Int32,System.DateTime)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.. Primary Key.</param>
            <param name="_rateChangeDate">Date the change in pay is effective. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.. Primary Key.</param>
            <param name="_rateChangeDate">Date the change in pay is effective. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.GetByEmployeeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeePayHistory_Employee_EmployeeID key.
            	FK_EmployeePayHistory_Employee_EmployeeID Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeePayHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeePayHistory_Employee_EmployeeID key.
            	FK_EmployeePayHistory_Employee_EmployeeID Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeePayHistory objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeePayHistory_Employee_EmployeeID key.
            	FK_EmployeePayHistory_Employee_EmployeeID Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeePayHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.GetByEmployeeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeePayHistory_Employee_EmployeeID key.
            	fkEmployeePayHistoryEmployeeEmployeeId Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeePayHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.GetByEmployeeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeePayHistory_Employee_EmployeeID key.
            	fkEmployeePayHistoryEmployeeEmployeeId Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeePayHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeePayHistory_Employee_EmployeeID key.
            	FK_EmployeePayHistory_Employee_EmployeeID Description: Foreign key constraint referencing Employee.EmployeeID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.EmployeePayHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.EmployeePayHistoryKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.GetByEmployeeIdRateChangeDate(System.Int32,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_EmployeePayHistory_EmployeeID_RateChangeDate index.
            </summary>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_rateChangeDate">Date the change in pay is effective</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.GetByEmployeeIdRateChangeDate(System.Int32,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeePayHistory_EmployeeID_RateChangeDate index.
            </summary>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_rateChangeDate">Date the change in pay is effective</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.GetByEmployeeIdRateChangeDate(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeePayHistory_EmployeeID_RateChangeDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_rateChangeDate">Date the change in pay is effective</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.GetByEmployeeIdRateChangeDate(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeePayHistory_EmployeeID_RateChangeDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_rateChangeDate">Date the change in pay is effective</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.GetByEmployeeIdRateChangeDate(System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeePayHistory_EmployeeID_RateChangeDate index.
            </summary>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_rateChangeDate">Date the change in pay is effective</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.GetByEmployeeIdRateChangeDate(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeePayHistory_EmployeeID_RateChangeDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number. Foreign key to Employee.EmployeeID.</param>
            <param name="_rateChangeDate">Date the change in pay is effective</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.EmployeePayHistory},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;EmployeePayHistory&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.EmployeePayHistory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.EmployeePayHistory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.EmployeePayHistory,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.EmployeePayHistory Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.EmployeePayHistory,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.EmployeePayHistory object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.EmployeePayHistory instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.EmployeePayHistory Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.EmployeePayHistory</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryChildEntityTypes.Employee">
            <summary>
             Composite Property for <c>Employee</c> at EmployeeIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistorySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeePayHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistorySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EmployeePayHistorySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.EmployeePayHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryChildEntityTypes.Department">
            <summary>
             Composite Property for <c>Department</c> at DepartmentIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryChildEntityTypes.Employee">
            <summary>
             Composite Property for <c>Employee</c> at EmployeeIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistoryChildEntityTypes.Shift">
            <summary>
             Composite Property for <c>Shift</c> at ShiftIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistorySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.EmployeeDepartmentHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeDepartmentHistorySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EmployeeDepartmentHistorySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.EmployeeAddressProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CustomerChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.Customer</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CustomerChildEntityTypes.SalesTerritory">
            <summary>
             Composite Property for <c>SalesTerritory</c> at TerritoryIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CustomerChildEntityTypes.Store">
            <summary>
             Entity <c>Store</c> as OneToOne for Store
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CustomerChildEntityTypes.SalesOrderHeaderCollection">
            <summary>
             Collection of <c>Customer</c> as OneToMany for SalesOrderHeaderCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CustomerChildEntityTypes.AddressIdAddressCollection_From_CustomerAddress">
            <summary>
             Collection of <c>Customer</c> as ManyToMany for AddressCollection_From_CustomerAddress
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CustomerChildEntityTypes.Individual">
            <summary>
             Entity <c>Individual</c> as OneToOne for Individual
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CustomerChildEntityTypes.CustomerAddressCollection">
            <summary>
             Collection of <c>Customer</c> as OneToMany for CustomerAddressCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CustomerSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Customer"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CustomerSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the CustomerSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VProductModelInstructions},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VProductModelInstructions)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructions"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructions"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VProductModelInstructions"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VProductModelInstructionsSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistoryProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistoryProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistory},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistoryProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistory"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistory"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistorySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VEmployeeDepartmentHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistorySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VEmployeeDepartmentHistorySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.StringBuilderExpression">
            <summary>
            Represents a SQL filter builder expression enumeration.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.Append">
            <summary>
            Append
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendEquals">
            <summary>
            AppendEquals
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendNotEquals">
            <summary>
            AppendNotEquals
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendIn">
            <summary>
            AppendIn
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendNotIn">
            <summary>
            AppendNotIn
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendInQuery">
            <summary>
            AppendInQuery
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendNotInQuery">
            <summary>
            AppendNotInQuery
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendRange">
            <summary>
            AppendRange
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendNotRange">
            <summary>
            AppendNotRange
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendIsNull">
            <summary>
            AppendIsNull
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendIsNotNull">
            <summary>
            AppendIsNotNull
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendGreaterThan">
            <summary>
            AppendGreaterThan
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendGreaterThanOrEqual">
            <summary>
            AppendGreaterThanOrEqual
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendLessThan">
            <summary>
            AppendLessThan
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendLessThanOrEqual">
            <summary>
            AppendLessThanOrEqual
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendStartsWith">
            <summary>
            AppendStartsWith
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendEndsWith">
            <summary>
            AppendEndsWith
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendContains">
            <summary>
            AppendContains
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendNotContains">
            <summary>
            AppendNotContains
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendLike">
            <summary>
            AppendLike
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.StringBuilderExpression.AppendNotLike">
            <summary>
            AppendLike
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SqlFilterParameterCollection">
            <summary>
            A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlFilterParameter"/> objects.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterParameterCollection.SetCurrentColumn(System.Object)">
            <summary>
            Sets the CurrentColumn property.
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterParameterCollection.GetParameter(System.String)">
            <summary>
            Gets the next parameter name for the specified value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlFilterParameterCollection.currentColumn">
            <summary>
            The CurrentColumn member variable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlFilterParameterCollection.filterExpression">
            <summary>
            The FilterExpression member variable.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterParameterCollection.Nettiers#AdventureWorks#Data#IFilterParameterCollection#GetParameters">
            <summary>
            Gets a list of sql parameters for the filter 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlFilterParameterCollection.CurrentColumn">
            <summary>
            Gets the CurrentColumn property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlFilterParameterCollection.FilterExpression">
            <summary>
            Gets or sets the FilterExpression property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SqlFilterParameter">
            <summary>
            Represents the information needed for a database command parameter.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterParameter.#ctor(System.Enum,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the SqlFilterParameter class.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="index"></param>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlFilterParameter.column">
            <summary>
            The Column member variable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlFilterParameter.parameterValue">
            <summary>
            The Value member variable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlFilterParameter.parameterIndex">
            <summary>
            The Index member variable.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlFilterParameter.GetValue">
            <summary>
            Gets the current value converted to the appropriate <see cref="T:System.Type"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlFilterParameter.Column">
            <summary>
            Gets or sets the Column property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlFilterParameter.Value">
            <summary>
            Gets or sets the Value property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlFilterParameter.Index">
            <summary>
            Gets the parameter index.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlFilterParameter.Name">
            <summary>
            Gets the parameter name.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlFilterParameter.DbType">
            <summary>
            Gets the <see cref="T:System.Data.SqlDbType"/> for
            the current entity column enumeration value.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlFilterParameter.SystemType">
            <summary>
            Gets the <see cref="T:System.Type"/> for
            the current entity column enumeration value.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SqlSortColumnCollection">
            <summary>
            A collection of <see cref="T:Nettiers.AdventureWorks.Data.SqlSortColumn"/> objects.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlSortColumnCollection.SetCurrentColumn(System.Object)">
            <summary>
            Sets the CurrentColumn property.
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlSortColumnCollection.ToString">
            <summary>
            Provides the actual SQL sort string.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlSortColumnCollection._currentColumn">
            <summary>
            The CurrentColumn member variable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlSortColumnCollection.sortExpression">
            <summary>
            The SortExpression member variable.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlSortColumnCollection.Nettiers#AdventureWorks#Data#ISortColumnCollection#GetSortColumns">
            <summary>
            Gets a list of sql parameters for the filter 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlSortColumnCollection.CurrentColumn">
            <summary>
            Gets the CurrentColumn property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlSortColumnCollection.SortExpression">
            <summary>
            Gets or sets the SortExpression property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.SqlSortColumn">
            <summary>
            Represents the information of a sorted column.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.SqlSortColumn.#ctor(System.Enum,Nettiers.AdventureWorks.Data.SqlSortDirection)">
            <summary>
            Initializes a new instance of the SqlSortColumn class.
            </summary>
            <param name="column"></param>
            <param name="sortDirection"></param>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlSortColumn._column">
            <summary>
            The Column member variable.
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.SqlSortColumn._sortDirection">
            <summary>
            The Value member variable.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlSortColumn.Column">
            <summary>
            Gets or sets the Column property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.SqlSortColumn.SortDirection">
            <summary>
            Gets or sets the Value property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VendorProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VendorProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByProductIdFromProductVendor(System.Int32)">
            <summary>
            	Gets Vendor objects from the datasource by ProductID in the
            	ProductVendor table. Table Vendor is related to table Product
            	through the (M:N) relationship defined in the ProductVendor table.
            </summary>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByProductIdFromProductVendor(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Vendor objects from the datasource by ProductID in the
            	ProductVendor table. Table Vendor is related to table Product
            	through the (M:N) relationship defined in the ProductVendor table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByProductIdFromProductVendor(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Vendor objects from the datasource by ProductID in the
            	ProductVendor table. Table Vendor is related to table Product
            	through the (M:N) relationship defined in the ProductVendor table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByProductIdFromProductVendor(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Vendor objects from the datasource by ProductID in the
            	ProductVendor table. Table Vendor is related to table Product
            	through the (M:N) relationship defined in the ProductVendor table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByProductIdFromProductVendor(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Vendor objects from the datasource by ProductID in the
            	ProductVendor table. Table Vendor is related to table Product
            	through the (M:N) relationship defined in the ProductVendor table.
            </summary>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByProductIdFromProductVendor(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Vendor objects from the datasource by ProductID in the
            	ProductVendor table. Table Vendor is related to table Product
            	through the (M:N) relationship defined in the ProductVendor table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_productId">Primary key. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByAddressIdFromVendorAddress(System.Int32)">
            <summary>
            	Gets Vendor objects from the datasource by AddressID in the
            	VendorAddress table. Table Vendor is related to table Address
            	through the (M:N) relationship defined in the VendorAddress table.
            </summary>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <returns>Returns a typed collection of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByAddressIdFromVendorAddress(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Vendor objects from the datasource by AddressID in the
            	VendorAddress table. Table Vendor is related to table Address
            	through the (M:N) relationship defined in the VendorAddress table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByAddressIdFromVendorAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Vendor objects from the datasource by AddressID in the
            	VendorAddress table. Table Vendor is related to table Address
            	through the (M:N) relationship defined in the VendorAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByAddressIdFromVendorAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Vendor objects from the datasource by AddressID in the
            	VendorAddress table. Table Vendor is related to table Address
            	through the (M:N) relationship defined in the VendorAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByAddressIdFromVendorAddress(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Vendor objects from the datasource by AddressID in the
            	VendorAddress table. Table Vendor is related to table Address
            	through the (M:N) relationship defined in the VendorAddress table.
            </summary>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByAddressIdFromVendorAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Vendor objects from the datasource by AddressID in the
            	VendorAddress table. Table Vendor is related to table Address
            	through the (M:N) relationship defined in the VendorAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByContactIdFromVendorContact(System.Int32)">
            <summary>
            	Gets Vendor objects from the datasource by ContactID in the
            	VendorContact table. Table Vendor is related to table Contact
            	through the (M:N) relationship defined in the VendorContact table.
            </summary>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <returns>Returns a typed collection of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByContactIdFromVendorContact(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Vendor objects from the datasource by ContactID in the
            	VendorContact table. Table Vendor is related to table Contact
            	through the (M:N) relationship defined in the VendorContact table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByContactIdFromVendorContact(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Vendor objects from the datasource by ContactID in the
            	VendorContact table. Table Vendor is related to table Contact
            	through the (M:N) relationship defined in the VendorContact table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByContactIdFromVendorContact(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Vendor objects from the datasource by ContactID in the
            	VendorContact table. Table Vendor is related to table Contact
            	through the (M:N) relationship defined in the VendorContact table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByContactIdFromVendorContact(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Vendor objects from the datasource by ContactID in the
            	VendorContact table. Table Vendor is related to table Contact
            	through the (M:N) relationship defined in the VendorContact table.
            </summary>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByContactIdFromVendorContact(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Vendor objects from the datasource by ContactID in the
            	VendorContact table. Table Vendor is related to table Contact
            	through the (M:N) relationship defined in the VendorContact table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_contactId">Contact (Vendor employee) identification number. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Vendor objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.VendorKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_vendorId">Primary key for Vendor records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key for Vendor records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.VendorKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByAccountNumber(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Vendor_AccountNumber index.
            </summary>
            <param name="_accountNumber">Vendor account (identification) number.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByAccountNumber(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Vendor_AccountNumber index.
            </summary>
            <param name="_accountNumber">Vendor account (identification) number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByAccountNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_Vendor_AccountNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_accountNumber">Vendor account (identification) number.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByAccountNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Vendor_AccountNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_accountNumber">Vendor account (identification) number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByAccountNumber(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Vendor_AccountNumber index.
            </summary>
            <param name="_accountNumber">Vendor account (identification) number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByAccountNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Vendor_AccountNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_accountNumber">Vendor account (identification) number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByVendorId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Vendor_VendorID index.
            </summary>
            <param name="_vendorId">Primary key for Vendor records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByVendorId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Vendor_VendorID index.
            </summary>
            <param name="_vendorId">Primary key for Vendor records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Vendor_VendorID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key for Vendor records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Vendor_VendorID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key for Vendor records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByVendorId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Vendor_VendorID index.
            </summary>
            <param name="_vendorId">Primary key for Vendor records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.GetByVendorId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Vendor_VendorID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_vendorId">Primary key for Vendor records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.Vendor},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Vendor&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.Vendor)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.Vendor)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Vendor,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Vendor Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Vendor,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.Vendor object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.Vendor instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Vendor Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_transactionId">Primary key for TransactionHistoryArchive records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_transactionId">Primary key for TransactionHistoryArchive records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TransactionHistoryArchiveKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_TransactionHistoryArchive_ProductID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistoryArchive_ProductID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistoryArchive_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistoryArchive_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistoryArchive_ProductID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistoryArchive_ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByReferenceOrderIdReferenceOrderLineId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID index.
            </summary>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByReferenceOrderIdReferenceOrderLineId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID index.
            </summary>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByReferenceOrderIdReferenceOrderLineId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByReferenceOrderIdReferenceOrderLineId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByReferenceOrderIdReferenceOrderLineId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID index.
            </summary>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByReferenceOrderIdReferenceOrderLineId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_referenceOrderId">Purchase order, sales order, or work order identification number.</param>
            <param name="_referenceOrderLineId">Line number associated with the purchase order, sales order, or work order.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByTransactionId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_TransactionHistoryArchive_TransactionID index.
            </summary>
            <param name="_transactionId">Primary key for TransactionHistoryArchive records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByTransactionId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TransactionHistoryArchive_TransactionID index.
            </summary>
            <param name="_transactionId">Primary key for TransactionHistoryArchive records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByTransactionId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TransactionHistoryArchive_TransactionID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_transactionId">Primary key for TransactionHistoryArchive records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByTransactionId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TransactionHistoryArchive_TransactionID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_transactionId">Primary key for TransactionHistoryArchive records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByTransactionId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_TransactionHistoryArchive_TransactionID index.
            </summary>
            <param name="_transactionId">Primary key for TransactionHistoryArchive records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.GetByTransactionId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_TransactionHistoryArchive_TransactionID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_transactionId">Primary key for TransactionHistoryArchive records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.TransactionHistoryArchive},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;TransactionHistoryArchive&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TransactionHistoryArchive)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.TransactionHistoryArchive)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TransactionHistoryArchive,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.TransactionHistoryArchive Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TransactionHistoryArchive,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.TransactionHistoryArchive object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.TransactionHistoryArchive instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.TransactionHistoryArchive Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesTerritoryKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_territoryId">Primary key for SalesTerritory records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">Primary key for SalesTerritory records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesTerritoryKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_SalesTerritory_Name index.
            </summary>
            <param name="_name">Sales territory description</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTerritory_Name index.
            </summary>
            <param name="_name">Sales territory description</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTerritory_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Sales territory description</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTerritory_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Sales territory description</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTerritory_Name index.
            </summary>
            <param name="_name">Sales territory description</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTerritory_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Sales territory description</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_SalesTerritory_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTerritory_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTerritory_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTerritory_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTerritory_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_SalesTerritory_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByTerritoryId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_SalesTerritory_TerritoryID index.
            </summary>
            <param name="_territoryId">Primary key for SalesTerritory records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByTerritoryId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesTerritory_TerritoryID index.
            </summary>
            <param name="_territoryId">Primary key for SalesTerritory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesTerritory_TerritoryID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">Primary key for SalesTerritory records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesTerritory_TerritoryID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">Primary key for SalesTerritory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByTerritoryId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesTerritory_TerritoryID index.
            </summary>
            <param name="_territoryId">Primary key for SalesTerritory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.GetByTerritoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesTerritory_TerritoryID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_territoryId">Primary key for SalesTerritory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.SalesTerritory},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;SalesTerritory&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.SalesTerritory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.SalesTerritory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesTerritory,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesTerritory Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesTerritory,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.SalesTerritory object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.SalesTerritory instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesTerritory Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.PurchaseOrderHeader</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderChildEntityTypes.Employee">
            <summary>
             Composite Property for <c>Employee</c> at EmployeeIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderChildEntityTypes.ShipMethod">
            <summary>
             Composite Property for <c>ShipMethod</c> at ShipMethodIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderChildEntityTypes.Vendor">
            <summary>
             Composite Property for <c>Vendor</c> at VendorIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderChildEntityTypes.PurchaseOrderDetailCollection">
            <summary>
             Collection of <c>PurchaseOrderHeader</c> as OneToMany for PurchaseOrderDetailCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.PurchaseOrderHeader"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.PurchaseOrderHeaderSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the PurchaseOrderHeaderSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductReviewProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.LocationChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.Location</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.LocationChildEntityTypes.WorkOrderRoutingCollection">
            <summary>
             Collection of <c>Location</c> as OneToMany for WorkOrderRoutingCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.LocationChildEntityTypes.ProductIdProductCollection_From_ProductInventory">
            <summary>
             Collection of <c>Location</c> as ManyToMany for ProductCollection_From_ProductInventory
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.LocationChildEntityTypes.ProductInventoryCollection">
            <summary>
             Collection of <c>Location</c> as OneToMany for ProductInventoryCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.LocationSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Location"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.LocationSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the LocationSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CurrencyChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.Currency</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CurrencyChildEntityTypes.CountryRegionCodeCountryRegionCollection_From_CountryRegionCurrency">
            <summary>
             Collection of <c>Currency</c> as ManyToMany for CountryRegionCollection_From_CountryRegionCurrency
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CurrencyChildEntityTypes.CountryRegionCurrencyCollection">
            <summary>
             Collection of <c>Currency</c> as OneToMany for CountryRegionCurrencyCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CurrencyChildEntityTypes.CurrencyRateCollectionGetByFromCurrencyCode">
            <summary>
             Collection of <c>Currency</c> as OneToMany for CurrencyRateCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CurrencyChildEntityTypes.CurrencyRateCollectionGetByToCurrencyCode">
            <summary>
             Collection of <c>Currency</c> as OneToMany for CurrencyRateCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CurrencySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Currency"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the CurrencySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VSalesPerson"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VSalesPersonSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VSalesPersonSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VAdditionalContactInfoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderCollection">
            <summary>
            Reprensents the strongly typed collection of NetTiersProvider.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderCollection.Add(Nettiers.AdventureWorks.Data.Bases.NetTiersProvider)">
            <summary>
            Adds the specified provider.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProviderCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:NetTiersProvider"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.UnitMeasureChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.UnitMeasure</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.UnitMeasureChildEntityTypes.BillOfMaterialsCollection">
            <summary>
             Collection of <c>UnitMeasure</c> as OneToMany for BillOfMaterialsCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.UnitMeasureChildEntityTypes.ProductCollectionGetByWeightUnitMeasureCode">
            <summary>
             Collection of <c>UnitMeasure</c> as OneToMany for ProductCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.UnitMeasureChildEntityTypes.ProductVendorCollection">
            <summary>
             Collection of <c>UnitMeasure</c> as OneToMany for ProductVendorCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.UnitMeasureChildEntityTypes.ProductCollectionGetBySizeUnitMeasureCode">
            <summary>
             Collection of <c>UnitMeasure</c> as OneToMany for ProductCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.UnitMeasureSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.UnitMeasure"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.UnitMeasureSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the UnitMeasureSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TimestampPkKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore.Delete(System.Byte[])">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_timestampPk">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Byte[])">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_timestampPk">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TimestampPkKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore.GetByTimestampPk(System.Byte[])">
            <summary>
            	Gets rows from the datasource based on the primary key PK_TimestampPK index.
            </summary>
            <param name="_timestampPk"></param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore.GetByTimestampPk(System.Byte[],System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TimestampPK index.
            </summary>
            <param name="_timestampPk"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore.GetByTimestampPk(Nettiers.AdventureWorks.Data.TransactionManager,System.Byte[])">
            <summary>
            	Gets rows from the datasource based on the PK_TimestampPK index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_timestampPk"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore.GetByTimestampPk(Nettiers.AdventureWorks.Data.TransactionManager,System.Byte[],System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TimestampPK index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_timestampPk"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore.GetByTimestampPk(System.Byte[],System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_TimestampPK index.
            </summary>
            <param name="_timestampPk"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore.GetByTimestampPk(Nettiers.AdventureWorks.Data.TransactionManager,System.Byte[],System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_TimestampPK index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_timestampPk"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.TimestampPk},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;TimestampPk&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TimestampPk)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.TimestampPk)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TimestampPk,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.TimestampPk Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TimestampPk,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.TimestampPk object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.TimestampPk instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.TimestampPk Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.StoreContactProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ShipMethodKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_shipMethodId">Primary key for ShipMethod records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shipMethodId">Primary key for ShipMethod records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ShipMethodKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_ShipMethod_Name index.
            </summary>
            <param name="_name">Shipping company name.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ShipMethod_Name index.
            </summary>
            <param name="_name">Shipping company name.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_ShipMethod_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Shipping company name.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ShipMethod_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Shipping company name.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ShipMethod_Name index.
            </summary>
            <param name="_name">Shipping company name.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ShipMethod_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Shipping company name.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_ShipMethod_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ShipMethod_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_ShipMethod_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ShipMethod_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ShipMethod_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ShipMethod_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByShipMethodId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ShipMethod_ShipMethodID index.
            </summary>
            <param name="_shipMethodId">Primary key for ShipMethod records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByShipMethodId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ShipMethod_ShipMethodID index.
            </summary>
            <param name="_shipMethodId">Primary key for ShipMethod records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByShipMethodId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ShipMethod_ShipMethodID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shipMethodId">Primary key for ShipMethod records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByShipMethodId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ShipMethod_ShipMethodID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shipMethodId">Primary key for ShipMethod records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByShipMethodId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ShipMethod_ShipMethodID index.
            </summary>
            <param name="_shipMethodId">Primary key for ShipMethod records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.GetByShipMethodId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ShipMethod_ShipMethodID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_shipMethodId">Primary key for ShipMethod records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ShipMethod},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ShipMethod&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ShipMethod)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ShipMethod)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ShipMethod,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ShipMethod Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ShipMethod,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ShipMethod object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ShipMethod instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ShipMethod Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShipMethodChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ShipMethod</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ShipMethodChildEntityTypes.SalesOrderHeaderCollection">
            <summary>
             Collection of <c>ShipMethod</c> as OneToMany for SalesOrderHeaderCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ShipMethodChildEntityTypes.PurchaseOrderHeaderCollection">
            <summary>
             Collection of <c>ShipMethod</c> as OneToMany for PurchaseOrderHeaderCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShipMethodSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ShipMethod"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ShipMethodSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ShipMethodSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ShipMethodProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductSubcategoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductModelIllustrationKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.. Primary Key.</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.. Primary Key.</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByIllustrationId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelIllustration_Illustration_IllustrationID key.
            	FK_ProductModelIllustration_Illustration_IllustrationID Description: Foreign key constraint referencing Illustration.IllustrationID.
            </summary>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelIllustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByIllustrationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelIllustration_Illustration_IllustrationID key.
            	FK_ProductModelIllustration_Illustration_IllustrationID Description: Foreign key constraint referencing Illustration.IllustrationID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelIllustration objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByIllustrationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelIllustration_Illustration_IllustrationID key.
            	FK_ProductModelIllustration_Illustration_IllustrationID Description: Foreign key constraint referencing Illustration.IllustrationID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelIllustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByIllustrationId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelIllustration_Illustration_IllustrationID key.
            	fkProductModelIllustrationIllustrationIllustrationId Description: Foreign key constraint referencing Illustration.IllustrationID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelIllustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByIllustrationId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelIllustration_Illustration_IllustrationID key.
            	fkProductModelIllustrationIllustrationIllustrationId Description: Foreign key constraint referencing Illustration.IllustrationID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelIllustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByIllustrationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelIllustration_Illustration_IllustrationID key.
            	FK_ProductModelIllustration_Illustration_IllustrationID Description: Foreign key constraint referencing Illustration.IllustrationID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelIllustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByProductModelId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelIllustration_ProductModel_ProductModelID key.
            	FK_ProductModelIllustration_ProductModel_ProductModelID Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelIllustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByProductModelId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelIllustration_ProductModel_ProductModelID key.
            	FK_ProductModelIllustration_ProductModel_ProductModelID Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelIllustration objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByProductModelId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelIllustration_ProductModel_ProductModelID key.
            	FK_ProductModelIllustration_ProductModel_ProductModelID Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelIllustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByProductModelId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelIllustration_ProductModel_ProductModelID key.
            	fkProductModelIllustrationProductModelProductModelId Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelIllustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByProductModelId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelIllustration_ProductModel_ProductModelID key.
            	fkProductModelIllustrationProductModelProductModelId Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelIllustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByProductModelId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductModelIllustration_ProductModel_ProductModelID key.
            	FK_ProductModelIllustration_ProductModel_ProductModelID Description: Foreign key constraint referencing ProductModel.ProductModelID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductModelIllustration objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductModelIllustrationKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByProductModelIdIllustrationId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ProductModelIllustration_ProductModelID_IllustrationID index.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByProductModelIdIllustrationId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductModelIllustration_ProductModelID_IllustrationID index.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByProductModelIdIllustrationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductModelIllustration_ProductModelID_IllustrationID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByProductModelIdIllustrationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductModelIllustration_ProductModelID_IllustrationID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByProductModelIdIllustrationId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductModelIllustration_ProductModelID_IllustrationID index.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.GetByProductModelIdIllustrationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductModelIllustration_ProductModelID_IllustrationID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="_illustrationId">Primary key. Foreign key to Illustration.IllustrationID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ProductModelIllustration},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ProductModelIllustration&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ProductModelIllustration)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ProductModelIllustration)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductModelIllustration,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductModelIllustration Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductModelIllustration,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ProductModelIllustration object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ProductModelIllustration instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductModelIllustration Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.JobCandidateKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_jobCandidateId">Primary key for JobCandidate records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_jobCandidateId">Primary key for JobCandidate records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.JobCandidateKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.GetByEmployeeId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the primary key IX_JobCandidate_EmployeeID index.
            </summary>
            <param name="_employeeId">Employee identification number if applicant was hired. Foreign key to Employee.EmployeeID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.GetByEmployeeId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_JobCandidate_EmployeeID index.
            </summary>
            <param name="_employeeId">Employee identification number if applicant was hired. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the IX_JobCandidate_EmployeeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number if applicant was hired. Foreign key to Employee.EmployeeID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_JobCandidate_EmployeeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number if applicant was hired. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.GetByEmployeeId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_JobCandidate_EmployeeID index.
            </summary>
            <param name="_employeeId">Employee identification number if applicant was hired. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_JobCandidate_EmployeeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Employee identification number if applicant was hired. Foreign key to Employee.EmployeeID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.GetByJobCandidateId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_JobCandidate_JobCandidateID index.
            </summary>
            <param name="_jobCandidateId">Primary key for JobCandidate records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.GetByJobCandidateId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_JobCandidate_JobCandidateID index.
            </summary>
            <param name="_jobCandidateId">Primary key for JobCandidate records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.GetByJobCandidateId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_JobCandidate_JobCandidateID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_jobCandidateId">Primary key for JobCandidate records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.GetByJobCandidateId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_JobCandidate_JobCandidateID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_jobCandidateId">Primary key for JobCandidate records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.GetByJobCandidateId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_JobCandidate_JobCandidateID index.
            </summary>
            <param name="_jobCandidateId">Primary key for JobCandidate records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.GetByJobCandidateId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_JobCandidate_JobCandidateID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_jobCandidateId">Primary key for JobCandidate records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.JobCandidate},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;JobCandidate&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.JobCandidate)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.JobCandidate)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.JobCandidate,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.JobCandidate Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.JobCandidate,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.JobCandidate object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.JobCandidate instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.JobCandidate Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.JobCandidateChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.JobCandidate</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.JobCandidateChildEntityTypes.Employee">
            <summary>
             Composite Property for <c>Employee</c> at EmployeeIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.JobCandidateSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.JobCandidate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.JobCandidateSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the JobCandidateSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.CountryRegionCurrency</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyChildEntityTypes.CountryRegion">
            <summary>
             Composite Property for <c>CountryRegion</c> at CountryRegionCodeSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencyChildEntityTypes.Currency">
            <summary>
             Composite Property for <c>Currency</c> at CurrencyCodeSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegionCurrency"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionCurrencySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the CountryRegionCurrencySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AddressProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.AddressProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VVendorSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VVendor"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VVendorSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VVendorSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.TransactionHistoryArchive</c>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TransactionHistoryArchive"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TransactionHistoryArchiveSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the TransactionHistoryArchiveSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TimestampPkChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.TimestampPk</c>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TimestampPkSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TimestampPk"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TimestampPkSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the TimestampPkSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductPhotoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductModelProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductCostHistoryKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.Delete(System.Int32,System.DateTime)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID. Primary Key.</param>
            <param name="_startDate">Product cost start date.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID. Primary Key.</param>
            <param name="_startDate">Product cost start date.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductCostHistory_Product_ProductID key.
            	FK_ProductCostHistory_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductCostHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductCostHistory_Product_ProductID key.
            	FK_ProductCostHistory_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductCostHistory objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductCostHistory_Product_ProductID key.
            	FK_ProductCostHistory_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductCostHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductCostHistory_Product_ProductID key.
            	fkProductCostHistoryProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductCostHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductCostHistory_Product_ProductID key.
            	fkProductCostHistoryProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductCostHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductCostHistory_Product_ProductID key.
            	FK_ProductCostHistory_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductCostHistory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductCostHistoryKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.GetByProductIdStartDate(System.Int32,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ProductCostHistory_ProductID_StartDate index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">Product cost start date.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.GetByProductIdStartDate(System.Int32,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductCostHistory_ProductID_StartDate index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">Product cost start date.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.GetByProductIdStartDate(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductCostHistory_ProductID_StartDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">Product cost start date.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.GetByProductIdStartDate(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductCostHistory_ProductID_StartDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">Product cost start date.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.GetByProductIdStartDate(System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductCostHistory_ProductID_StartDate index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">Product cost start date.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.GetByProductIdStartDate(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductCostHistory_ProductID_StartDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID</param>
            <param name="_startDate">Product cost start date.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ProductCostHistory},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ProductCostHistory&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ProductCostHistory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ProductCostHistory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductCostHistory,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductCostHistory Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductCostHistory,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ProductCostHistory object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ProductCostHistory instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductCostHistory Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.NullFkeyChildKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_nullFkeyChildId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_nullFkeyChildId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.GetByNullFkeyParentId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_NullFKeyChild_NullFKeyParent key.
            	FK_NullFKeyChild_NullFKeyParent Description: 
            </summary>
            <param name="_nullFkeyParentId"></param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.NullFkeyChild objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.GetByNullFkeyParentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_NullFKeyChild_NullFKeyParent key.
            	FK_NullFKeyChild_NullFKeyParent Description: 
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_nullFkeyParentId"></param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.NullFkeyChild objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.GetByNullFkeyParentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_NullFKeyChild_NullFKeyParent key.
            	FK_NullFKeyChild_NullFKeyParent Description: 
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_nullFkeyParentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.NullFkeyChild objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.GetByNullFkeyParentId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_NullFKeyChild_NullFKeyParent key.
            	fkNullFkeyChildNullFkeyParent Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_nullFkeyParentId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.NullFkeyChild objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.GetByNullFkeyParentId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_NullFKeyChild_NullFKeyParent key.
            	fkNullFkeyChildNullFkeyParent Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_nullFkeyParentId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.NullFkeyChild objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.GetByNullFkeyParentId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_NullFKeyChild_NullFKeyParent key.
            	FK_NullFKeyChild_NullFKeyParent Description: 
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_nullFkeyParentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.NullFkeyChild objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.NullFkeyChildKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.GetByNullFkeyChildId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_NullFKeyChild index.
            </summary>
            <param name="_nullFkeyChildId"></param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.GetByNullFkeyChildId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_NullFKeyChild index.
            </summary>
            <param name="_nullFkeyChildId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.GetByNullFkeyChildId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_NullFKeyChild index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_nullFkeyChildId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.GetByNullFkeyChildId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_NullFKeyChild index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_nullFkeyChildId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.GetByNullFkeyChildId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_NullFKeyChild index.
            </summary>
            <param name="_nullFkeyChildId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.GetByNullFkeyChildId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_NullFKeyChild index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_nullFkeyChildId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.NullFkeyChild},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;NullFkeyChild&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.NullFkeyChild)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.NullFkeyChild)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.NullFkeyChild,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.NullFkeyChild Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.NullFkeyChild,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.NullFkeyChild object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.NullFkeyChild instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.NullFkeyChild Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.NullFkeyChild</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildChildEntityTypes.NullFkeyParent">
            <summary>
             Composite Property for <c>NullFkeyParent</c> at NullFkeyParentIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.NullFkeyChild"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the NullFkeyChildSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.NullFkeyChildProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VIndividualCustomer},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VIndividualCustomer)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomer"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomer"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualCustomer"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VIndividualCustomerSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TestVariantKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_testVariantId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_testVariantId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TestVariantKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore.GetByTestVariantId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_TestVariant index.
            </summary>
            <param name="_testVariantId"></param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore.GetByTestVariantId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TestVariant index.
            </summary>
            <param name="_testVariantId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore.GetByTestVariantId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TestVariant index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_testVariantId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore.GetByTestVariantId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TestVariant index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_testVariantId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore.GetByTestVariantId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_TestVariant index.
            </summary>
            <param name="_testVariantId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore.GetByTestVariantId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_TestVariant index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_testVariantId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.TestVariant},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;TestVariant&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TestVariant)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.TestVariant)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TestVariant,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.TestVariant Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.TestVariant,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.TestVariant object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.TestVariant instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.TestVariant Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TestVariantChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.TestVariant</c>
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TestVariantSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.TestVariant"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.TestVariantSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the TestVariantSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StateProvinceChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.StateProvince</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.StateProvinceChildEntityTypes.CountryRegion">
            <summary>
             Composite Property for <c>CountryRegion</c> at CountryRegionCodeSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.StateProvinceChildEntityTypes.SalesTerritory">
            <summary>
             Composite Property for <c>SalesTerritory</c> at TerritoryIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.StateProvinceChildEntityTypes.AddressCollection">
            <summary>
             Collection of <c>StateProvince</c> as OneToMany for AddressCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.StateProvinceChildEntityTypes.SalesTaxRateCollection">
            <summary>
             Collection of <c>StateProvince</c> as OneToMany for SalesTaxRateCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StateProvinceSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.StateProvince"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StateProvinceSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the StateProvinceSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.SalesPerson</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesPersonChildEntityTypes.Employee">
            <summary>
             Composite Property for <c>Employee</c> at SalesPersonIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesPersonChildEntityTypes.SalesTerritory">
            <summary>
             Composite Property for <c>SalesTerritory</c> at TerritoryIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesPersonChildEntityTypes.StoreCollection">
            <summary>
             Collection of <c>SalesPerson</c> as OneToMany for StoreCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesPersonChildEntityTypes.SalesPersonQuotaHistoryCollection">
            <summary>
             Collection of <c>SalesPerson</c> as OneToMany for SalesPersonQuotaHistoryCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesPersonChildEntityTypes.SalesOrderHeaderCollection">
            <summary>
             Collection of <c>SalesPerson</c> as OneToMany for SalesOrderHeaderCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesPersonChildEntityTypes.SalesTerritoryHistoryCollection">
            <summary>
             Collection of <c>SalesPerson</c> as OneToMany for SalesTerritoryHistoryCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesPersonSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesPerson"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesPersonSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesPersonSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.SalesOrderHeader</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderChildEntityTypes.Address">
            <summary>
             Composite Property for <c>Address</c> at BillToAddressIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderChildEntityTypes.Contact">
            <summary>
             Composite Property for <c>Contact</c> at ContactIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderChildEntityTypes.CreditCard">
            <summary>
             Composite Property for <c>CreditCard</c> at CreditCardIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderChildEntityTypes.CurrencyRate">
            <summary>
             Composite Property for <c>CurrencyRate</c> at CurrencyRateIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderChildEntityTypes.Customer">
            <summary>
             Composite Property for <c>Customer</c> at CustomerIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderChildEntityTypes.SalesPerson">
            <summary>
             Composite Property for <c>SalesPerson</c> at SalesPersonIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderChildEntityTypes.SalesTerritory">
            <summary>
             Composite Property for <c>SalesTerritory</c> at TerritoryIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderChildEntityTypes.ShipMethod">
            <summary>
             Composite Property for <c>ShipMethod</c> at ShipMethodIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderChildEntityTypes.SalesOrderHeaderSalesReasonCollection">
            <summary>
             Collection of <c>SalesOrderHeader</c> as OneToMany for SalesOrderHeaderSalesReasonCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderChildEntityTypes.SalesOrderDetailCollection">
            <summary>
             Collection of <c>SalesOrderHeader</c> as OneToMany for SalesOrderDetailCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderChildEntityTypes.SalesReasonIdSalesReasonCollection_From_SalesOrderHeaderSalesReason">
            <summary>
             Collection of <c>SalesOrderHeader</c> as ManyToMany for SalesReasonCollection_From_SalesOrderHeaderSalesReason
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeader"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ProductListPriceHistory</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistoryChildEntityTypes.Product">
            <summary>
             Composite Property for <c>Product</c> at ProductIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistorySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductListPriceHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductListPriceHistorySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductListPriceHistorySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductInventoryKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.Delete(System.Int32,System.Int16)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.. Primary Key.</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. . Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int16)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.. Primary Key.</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. . Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByLocationId(System.Int16)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductInventory_Location_LocationID key.
            	FK_ProductInventory_Location_LocationID Description: Foreign key constraint referencing Location.LocationID.
            </summary>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductInventory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByLocationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductInventory_Location_LocationID key.
            	FK_ProductInventory_Location_LocationID Description: Foreign key constraint referencing Location.LocationID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductInventory objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByLocationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductInventory_Location_LocationID key.
            	FK_ProductInventory_Location_LocationID Description: Foreign key constraint referencing Location.LocationID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductInventory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByLocationId(System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductInventory_Location_LocationID key.
            	fkProductInventoryLocationLocationId Description: Foreign key constraint referencing Location.LocationID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductInventory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByLocationId(System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductInventory_Location_LocationID key.
            	fkProductInventoryLocationLocationId Description: Foreign key constraint referencing Location.LocationID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductInventory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByLocationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductInventory_Location_LocationID key.
            	FK_ProductInventory_Location_LocationID Description: Foreign key constraint referencing Location.LocationID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductInventory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductInventory_Product_ProductID key.
            	FK_ProductInventory_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductInventory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductInventory_Product_ProductID key.
            	FK_ProductInventory_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductInventory objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductInventory_Product_ProductID key.
            	FK_ProductInventory_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductInventory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductInventory_Product_ProductID key.
            	fkProductInventoryProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductInventory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductInventory_Product_ProductID key.
            	fkProductInventoryProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductInventory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductInventory_Product_ProductID key.
            	FK_ProductInventory_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductInventory objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductInventoryKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByProductIdLocationId(System.Int32,System.Int16)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ProductInventory_ProductID_LocationID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByProductIdLocationId(System.Int32,System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductInventory_ProductID_LocationID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByProductIdLocationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int16)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductInventory_ProductID_LocationID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByProductIdLocationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int16,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductInventory_ProductID_LocationID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByProductIdLocationId(System.Int32,System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductInventory_ProductID_LocationID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.GetByProductIdLocationId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int16,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductInventory_ProductID_LocationID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_locationId">Inventory location identification number. Foreign key to Location.LocationID. </param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ProductInventory},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ProductInventory&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ProductInventory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ProductInventory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductInventory,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductInventory Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductInventory,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ProductInventory object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ProductInventory instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductInventory Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductInventoryChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ProductInventory</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductInventoryChildEntityTypes.Location">
            <summary>
             Composite Property for <c>Location</c> at LocationIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductInventoryChildEntityTypes.Product">
            <summary>
             Composite Property for <c>Product</c> at ProductIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductInventorySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductInventory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductInventorySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductInventorySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.DepartmentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CurrencyRateKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_currencyRateId">Primary key for CurrencyRate records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyRateId">Primary key for CurrencyRate records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByFromCurrencyCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_CurrencyRate_Currency_FromCurrencyCode key.
            	FK_CurrencyRate_Currency_FromCurrencyCode Description: Foreign key constraint referencing Currency.FromCurrencyCode.
            </summary>
            <param name="_fromCurrencyCode">Exchange rate was converted from this currency code.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CurrencyRate objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByFromCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_CurrencyRate_Currency_FromCurrencyCode key.
            	FK_CurrencyRate_Currency_FromCurrencyCode Description: Foreign key constraint referencing Currency.FromCurrencyCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_fromCurrencyCode">Exchange rate was converted from this currency code.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CurrencyRate objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByFromCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CurrencyRate_Currency_FromCurrencyCode key.
            	FK_CurrencyRate_Currency_FromCurrencyCode Description: Foreign key constraint referencing Currency.FromCurrencyCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_fromCurrencyCode">Exchange rate was converted from this currency code.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CurrencyRate objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByFromCurrencyCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CurrencyRate_Currency_FromCurrencyCode key.
            	fkCurrencyRateCurrencyFromCurrencyCode Description: Foreign key constraint referencing Currency.FromCurrencyCode.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_fromCurrencyCode">Exchange rate was converted from this currency code.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CurrencyRate objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByFromCurrencyCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CurrencyRate_Currency_FromCurrencyCode key.
            	fkCurrencyRateCurrencyFromCurrencyCode Description: Foreign key constraint referencing Currency.FromCurrencyCode.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_fromCurrencyCode">Exchange rate was converted from this currency code.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CurrencyRate objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByFromCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CurrencyRate_Currency_FromCurrencyCode key.
            	FK_CurrencyRate_Currency_FromCurrencyCode Description: Foreign key constraint referencing Currency.FromCurrencyCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_fromCurrencyCode">Exchange rate was converted from this currency code.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CurrencyRate objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByToCurrencyCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_CurrencyRate_Currency_ToCurrencyCode key.
            	FK_CurrencyRate_Currency_ToCurrencyCode Description: Foreign key constraint referencing Currency.ToCurrencyCode.
            </summary>
            <param name="_toCurrencyCode">Exchange rate was converted to this currency code.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CurrencyRate objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByToCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_CurrencyRate_Currency_ToCurrencyCode key.
            	FK_CurrencyRate_Currency_ToCurrencyCode Description: Foreign key constraint referencing Currency.ToCurrencyCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_toCurrencyCode">Exchange rate was converted to this currency code.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CurrencyRate objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByToCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CurrencyRate_Currency_ToCurrencyCode key.
            	FK_CurrencyRate_Currency_ToCurrencyCode Description: Foreign key constraint referencing Currency.ToCurrencyCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_toCurrencyCode">Exchange rate was converted to this currency code.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CurrencyRate objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByToCurrencyCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_CurrencyRate_Currency_ToCurrencyCode key.
            	fkCurrencyRateCurrencyToCurrencyCode Description: Foreign key constraint referencing Currency.ToCurrencyCode.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_toCurrencyCode">Exchange rate was converted to this currency code.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CurrencyRate objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByToCurrencyCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CurrencyRate_Currency_ToCurrencyCode key.
            	fkCurrencyRateCurrencyToCurrencyCode Description: Foreign key constraint referencing Currency.ToCurrencyCode.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_toCurrencyCode">Exchange rate was converted to this currency code.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CurrencyRate objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByToCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CurrencyRate_Currency_ToCurrencyCode key.
            	FK_CurrencyRate_Currency_ToCurrencyCode Description: Foreign key constraint referencing Currency.ToCurrencyCode.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_toCurrencyCode">Exchange rate was converted to this currency code.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.CurrencyRate objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CurrencyRateKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByCurrencyRateDateFromCurrencyCodeToCurrencyCode(System.DateTime,System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode index.
            </summary>
            <param name="_currencyRateDate">Date and time the exchange rate was obtained.</param>
            <param name="_fromCurrencyCode">Exchange rate was converted from this currency code.</param>
            <param name="_toCurrencyCode">Exchange rate was converted to this currency code.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByCurrencyRateDateFromCurrencyCodeToCurrencyCode(System.DateTime,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode index.
            </summary>
            <param name="_currencyRateDate">Date and time the exchange rate was obtained.</param>
            <param name="_fromCurrencyCode">Exchange rate was converted from this currency code.</param>
            <param name="_toCurrencyCode">Exchange rate was converted to this currency code.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByCurrencyRateDateFromCurrencyCodeToCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.DateTime,System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyRateDate">Date and time the exchange rate was obtained.</param>
            <param name="_fromCurrencyCode">Exchange rate was converted from this currency code.</param>
            <param name="_toCurrencyCode">Exchange rate was converted to this currency code.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByCurrencyRateDateFromCurrencyCodeToCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.DateTime,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyRateDate">Date and time the exchange rate was obtained.</param>
            <param name="_fromCurrencyCode">Exchange rate was converted from this currency code.</param>
            <param name="_toCurrencyCode">Exchange rate was converted to this currency code.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByCurrencyRateDateFromCurrencyCodeToCurrencyCode(System.DateTime,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode index.
            </summary>
            <param name="_currencyRateDate">Date and time the exchange rate was obtained.</param>
            <param name="_fromCurrencyCode">Exchange rate was converted from this currency code.</param>
            <param name="_toCurrencyCode">Exchange rate was converted to this currency code.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByCurrencyRateDateFromCurrencyCodeToCurrencyCode(Nettiers.AdventureWorks.Data.TransactionManager,System.DateTime,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyRateDate">Date and time the exchange rate was obtained.</param>
            <param name="_fromCurrencyCode">Exchange rate was converted from this currency code.</param>
            <param name="_toCurrencyCode">Exchange rate was converted to this currency code.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByCurrencyRateId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_CurrencyRate_CurrencyRateID index.
            </summary>
            <param name="_currencyRateId">Primary key for CurrencyRate records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByCurrencyRateId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CurrencyRate_CurrencyRateID index.
            </summary>
            <param name="_currencyRateId">Primary key for CurrencyRate records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByCurrencyRateId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CurrencyRate_CurrencyRateID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyRateId">Primary key for CurrencyRate records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByCurrencyRateId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CurrencyRate_CurrencyRateID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyRateId">Primary key for CurrencyRate records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByCurrencyRateId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CurrencyRate_CurrencyRateID index.
            </summary>
            <param name="_currencyRateId">Primary key for CurrencyRate records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.GetByCurrencyRateId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CurrencyRate_CurrencyRateID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyRateId">Primary key for CurrencyRate records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.CurrencyRate},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;CurrencyRate&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.CurrencyRate)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.CurrencyRate)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CurrencyRate,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.CurrencyRate Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CurrencyRate,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.CurrencyRate object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.CurrencyRate instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.CurrencyRate Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CurrencyRateChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.CurrencyRate</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CurrencyRateChildEntityTypes.Currency">
            <summary>
             Composite Property for <c>Currency</c> at FromCurrencyCodeSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CurrencyRateChildEntityTypes.SalesOrderHeaderCollection">
            <summary>
             Collection of <c>CurrencyRate</c> as OneToMany for SalesOrderHeaderCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CurrencyRateSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CurrencyRate"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CurrencyRateSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the CurrencyRateSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CultureProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CultureProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByCurrencyCodeFromCountryRegionCurrency(System.String)">
            <summary>
            	Gets CountryRegion objects from the datasource by CurrencyCode in the
            	CountryRegionCurrency table. Table CountryRegion is related to table Currency
            	through the (M:N) relationship defined in the CountryRegionCurrency table.
            </summary>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <returns>Returns a typed collection of CountryRegion objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByCurrencyCodeFromCountryRegionCurrency(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.CountryRegion objects from the datasource by CurrencyCode in the
            	CountryRegionCurrency table. Table CountryRegion is related to table Currency
            	through the (M:N) relationship defined in the CountryRegionCurrency table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <remarks></remarks>
            <returns>Returns a TList of CountryRegion objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByCurrencyCodeFromCountryRegionCurrency(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets CountryRegion objects from the datasource by CurrencyCode in the
            	CountryRegionCurrency table. Table CountryRegion is related to table Currency
            	through the (M:N) relationship defined in the CountryRegionCurrency table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of CountryRegion objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByCurrencyCodeFromCountryRegionCurrency(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets CountryRegion objects from the datasource by CurrencyCode in the
            	CountryRegionCurrency table. Table CountryRegion is related to table Currency
            	through the (M:N) relationship defined in the CountryRegionCurrency table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of CountryRegion objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByCurrencyCodeFromCountryRegionCurrency(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets CountryRegion objects from the datasource by CurrencyCode in the
            	CountryRegionCurrency table. Table CountryRegion is related to table Currency
            	through the (M:N) relationship defined in the CountryRegionCurrency table.
            </summary>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of CountryRegion objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByCurrencyCodeFromCountryRegionCurrency(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets CountryRegion objects from the datasource by CurrencyCode in the
            	CountryRegionCurrency table. Table CountryRegion is related to table Currency
            	through the (M:N) relationship defined in the CountryRegionCurrency table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_currencyCode">ISO standard currency code. Foreign key to Currency.CurrencyCode.</param>
            <remarks></remarks>
            <returns>Returns a TList of CountryRegion objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CountryRegionKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_countryRegionCode">ISO standard code for countries and regions.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO standard code for countries and regions.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CountryRegionKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_CountryRegion_Name index.
            </summary>
            <param name="_name">Country or region name.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_CountryRegion_Name index.
            </summary>
            <param name="_name">Country or region name.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_CountryRegion_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Country or region name.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_CountryRegion_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Country or region name.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_CountryRegion_Name index.
            </summary>
            <param name="_name">Country or region name.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_CountryRegion_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Country or region name.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByCountryRegionCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_CountryRegion_CountryRegionCode index.
            </summary>
            <param name="_countryRegionCode">ISO standard code for countries and regions.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByCountryRegionCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CountryRegion_CountryRegionCode index.
            </summary>
            <param name="_countryRegionCode">ISO standard code for countries and regions.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByCountryRegionCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PK_CountryRegion_CountryRegionCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO standard code for countries and regions.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByCountryRegionCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CountryRegion_CountryRegionCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO standard code for countries and regions.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByCountryRegionCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CountryRegion_CountryRegionCode index.
            </summary>
            <param name="_countryRegionCode">ISO standard code for countries and regions.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.GetByCountryRegionCode(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CountryRegion_CountryRegionCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_countryRegionCode">ISO standard code for countries and regions.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.CountryRegion},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;CountryRegion&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.CountryRegion)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.CountryRegion)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CountryRegion,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.CountryRegion Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.CountryRegion,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.CountryRegion object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.CountryRegion instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.CountryRegion Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.CountryRegion</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CountryRegionChildEntityTypes.StateProvinceCollection">
            <summary>
             Collection of <c>CountryRegion</c> as OneToMany for StateProvinceCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CountryRegionChildEntityTypes.CountryRegionCurrencyCollection">
            <summary>
             Collection of <c>CountryRegion</c> as OneToMany for CountryRegionCurrencyCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.CountryRegionChildEntityTypes.CurrencyCodeCurrencyCollection_From_CountryRegionCurrency">
            <summary>
             Collection of <c>CountryRegion</c> as ManyToMany for CurrencyCollection_From_CountryRegionCurrency
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.CountryRegion"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CountryRegionSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the CountryRegionSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.AwBuildVersionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StoreChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.Store</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.StoreChildEntityTypes.Customer">
            <summary>
             Composite Property for <c>Customer</c> at CustomerIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.StoreChildEntityTypes.SalesPerson">
            <summary>
             Composite Property for <c>SalesPerson</c> at SalesPersonIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.StoreChildEntityTypes.StoreContactCollection">
            <summary>
             Collection of <c>Store</c> as OneToMany for StoreContactCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.StoreChildEntityTypes.ContactIdContactCollection_From_StoreContact">
            <summary>
             Collection of <c>Store</c> as ManyToMany for ContactCollection_From_StoreContact
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.StoreSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Store"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.StoreSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the StoreSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.. Primary Key.</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.. Primary Key.</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesOrderId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID key.
            	FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID Description: Foreign key constraint referencing SalesOrderHeader.SalesOrderID.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID key.
            	FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID Description: Foreign key constraint referencing SalesOrderHeader.SalesOrderID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID key.
            	FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID Description: Foreign key constraint referencing SalesOrderHeader.SalesOrderID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesOrderId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID key.
            	fkSalesOrderHeaderSalesReasonSalesOrderHeaderSalesOrderId Description: Foreign key constraint referencing SalesOrderHeader.SalesOrderID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesOrderId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID key.
            	fkSalesOrderHeaderSalesReasonSalesOrderHeaderSalesOrderId Description: Foreign key constraint referencing SalesOrderHeader.SalesOrderID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesOrderId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID key.
            	FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID Description: Foreign key constraint referencing SalesOrderHeader.SalesOrderID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesReasonId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID key.
            	FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID Description: Foreign key constraint referencing SalesReason.SalesReasonID.
            </summary>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesReasonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID key.
            	FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID Description: Foreign key constraint referencing SalesReason.SalesReasonID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesReasonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID key.
            	FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID Description: Foreign key constraint referencing SalesReason.SalesReasonID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesReasonId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID key.
            	fkSalesOrderHeaderSalesReasonSalesReasonSalesReasonId Description: Foreign key constraint referencing SalesReason.SalesReasonID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesReasonId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID key.
            	fkSalesOrderHeaderSalesReasonSalesReasonSalesReasonId Description: Foreign key constraint referencing SalesReason.SalesReasonID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesReasonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID key.
            	FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID Description: Foreign key constraint referencing SalesReason.SalesReasonID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReasonKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesOrderIdSalesReasonId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_SalesOrderHeaderSalesReason_SalesOrderID_SalesReasonID index.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesOrderIdSalesReasonId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesOrderHeaderSalesReason_SalesOrderID_SalesReasonID index.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesOrderIdSalesReasonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesOrderHeaderSalesReason_SalesOrderID_SalesReasonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesOrderIdSalesReasonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesOrderHeaderSalesReason_SalesOrderID_SalesReasonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesOrderIdSalesReasonId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesOrderHeaderSalesReason_SalesOrderID_SalesReasonID index.
            </summary>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.GetBySalesOrderIdSalesReasonId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SalesOrderHeaderSalesReason_SalesOrderID_SalesReasonID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_salesOrderId">Primary key. Foreign key to SalesOrderHeader.SalesOrderID.</param>
            <param name="_salesReasonId">Primary key. Foreign key to SalesReason.SalesReasonID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;SalesOrderHeaderSalesReason&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonChildEntityTypes.SalesOrderHeader">
            <summary>
             Composite Property for <c>SalesOrderHeader</c> at SalesOrderIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonChildEntityTypes.SalesReason">
            <summary>
             Composite Property for <c>SalesReason</c> at SalesReasonIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesOrderHeaderSalesReason"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesOrderHeaderSalesReasonSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ProductModelIllustration</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationChildEntityTypes.Illustration">
            <summary>
             Composite Property for <c>Illustration</c> at IllustrationIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationChildEntityTypes.ProductModel">
            <summary>
             Composite Property for <c>ProductModel</c> at ProductModelIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductModelIllustration"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductModelIllustrationSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductModelIllustrationSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ProductCostHistory</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductCostHistoryChildEntityTypes.Product">
            <summary>
             Composite Property for <c>Product</c> at ProductIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductCostHistorySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCostHistory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCostHistorySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductCostHistorySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CurrencyRateProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AddressTypeChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.AddressType</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.AddressTypeChildEntityTypes.VendorAddressCollection">
            <summary>
             Collection of <c>AddressType</c> as OneToMany for VendorAddressCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.AddressTypeChildEntityTypes.CustomerAddressCollection">
            <summary>
             Collection of <c>AddressType</c> as OneToMany for CustomerAddressCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.AddressTypeSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.AddressType"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.AddressTypeSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the AddressTypeSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistoryProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VEmployeeDepartmentHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider">
            <summary>
             The base class to implements to create a .NetTiers provider.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.SalesTerritoryProvider">
            <summary>
             Current SalesTerritoryProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.LocationProvider">
            <summary>
             Current LocationProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.SalesReasonProvider">
            <summary>
             Current SalesReasonProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.SalesPersonQuotaHistoryProvider">
            <summary>
             Current SalesPersonQuotaHistoryProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.SalesOrderHeaderProvider">
            <summary>
             Current SalesOrderHeaderProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.SalesOrderHeaderSalesReasonProvider">
            <summary>
             Current SalesOrderHeaderSalesReasonProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ProductModelProvider">
            <summary>
             Current ProductModelProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.SalesTaxRateProvider">
            <summary>
             Current SalesTaxRateProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.SalesPersonProvider">
            <summary>
             Current SalesPersonProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ProductCategoryProvider">
            <summary>
             Current ProductCategoryProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ProductSubcategoryProvider">
            <summary>
             Current ProductSubcategoryProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ProductProvider">
            <summary>
             Current ProductProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.SalesTerritoryHistoryProvider">
            <summary>
             Current SalesTerritoryHistoryProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.PurchaseOrderDetailProvider">
            <summary>
             Current PurchaseOrderDetailProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.SalesOrderDetailProvider">
            <summary>
             Current SalesOrderDetailProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ProductProductPhotoProvider">
            <summary>
             Current ProductProductPhotoProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ProductReviewProvider">
            <summary>
             Current ProductReviewProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.PurchaseOrderHeaderProvider">
            <summary>
             Current PurchaseOrderHeaderProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ProductVendorProvider">
            <summary>
             Current ProductVendorProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ScrapReasonProvider">
            <summary>
             Current ScrapReasonProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.UnitMeasureProvider">
            <summary>
             Current UnitMeasureProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ShiftProvider">
            <summary>
             Current ShiftProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.TransactionHistoryArchiveProvider">
            <summary>
             Current TransactionHistoryArchiveProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VendorProvider">
            <summary>
             Current VendorProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.AddressProvider">
            <summary>
             Current AddressProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.WorkOrderProvider">
            <summary>
             Current WorkOrderProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VendorAddressProvider">
            <summary>
             Current VendorAddressProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.TransactionHistoryProvider">
            <summary>
             Current TransactionHistoryProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VendorContactProvider">
            <summary>
             Current VendorContactProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.TimestampPkProvider">
            <summary>
             Current TimestampPkProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ShoppingCartItemProvider">
            <summary>
             Current ShoppingCartItemProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.TestVariantProvider">
            <summary>
             Current TestVariantProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.SpecialOfferProvider">
            <summary>
             Current SpecialOfferProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ShipMethodProvider">
            <summary>
             Current ShipMethodProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.SpecialOfferProductProvider">
            <summary>
             Current SpecialOfferProductProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.StateProvinceProvider">
            <summary>
             Current StateProvinceProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.StoreProvider">
            <summary>
             Current StoreProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ProductPhotoProvider">
            <summary>
             Current ProductPhotoProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.StoreContactProvider">
            <summary>
             Current StoreContactProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ProductModelProductDescriptionCultureProvider">
            <summary>
             Current ProductModelProductDescriptionCultureProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.CurrencyProvider">
            <summary>
             Current CurrencyProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.CustomerProvider">
            <summary>
             Current CustomerProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.CurrencyRateProvider">
            <summary>
             Current CurrencyRateProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.DepartmentProvider">
            <summary>
             Current DepartmentProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.CustomerAddressProvider">
            <summary>
             Current CustomerAddressProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.CultureProvider">
            <summary>
             Current CultureProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.DatabaseLogProvider">
            <summary>
             Current DatabaseLogProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.CreditCardProvider">
            <summary>
             Current CreditCardProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.BillOfMaterialsProvider">
            <summary>
             Current BillOfMaterialsProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.CountryRegionCurrencyProvider">
            <summary>
             Current CountryRegionCurrencyProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ContactProvider">
            <summary>
             Current ContactProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.AwBuildVersionProvider">
            <summary>
             Current AwBuildVersionProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.CountryRegionProvider">
            <summary>
             Current CountryRegionProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ContactCreditCardProvider">
            <summary>
             Current ContactCreditCardProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.DocumentProvider">
            <summary>
             Current DocumentProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ContactTypeProvider">
            <summary>
             Current ContactTypeProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.EmployeeProvider">
            <summary>
             Current EmployeeProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ProductDocumentProvider">
            <summary>
             Current ProductDocumentProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.EmployeeAddressProvider">
            <summary>
             Current EmployeeAddressProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ProductInventoryProvider">
            <summary>
             Current ProductInventoryProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ProductDescriptionProvider">
            <summary>
             Current ProductDescriptionProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ProductModelIllustrationProvider">
            <summary>
             Current ProductModelIllustrationProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ProductListPriceHistoryProvider">
            <summary>
             Current ProductListPriceHistoryProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ProductCostHistoryProvider">
            <summary>
             Current ProductCostHistoryProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.WorkOrderRoutingProvider">
            <summary>
             Current WorkOrderRoutingProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.NullFkeyParentProvider">
            <summary>
             Current NullFkeyParentProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.EmployeePayHistoryProvider">
            <summary>
             Current EmployeePayHistoryProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.NullFkeyChildProvider">
            <summary>
             Current NullFkeyChildProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.ErrorLogProvider">
            <summary>
             Current ErrorLogProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.EmployeeDepartmentHistoryProvider">
            <summary>
             Current EmployeeDepartmentHistoryProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.JobCandidateProvider">
            <summary>
             Current JobCandidateProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.IllustrationProvider">
            <summary>
             Current IllustrationProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.AddressTypeProvider">
            <summary>
             Current AddressTypeProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.IndividualProvider">
            <summary>
             Current IndividualProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VAdditionalContactInfoProvider">
            <summary>
             Current VAdditionalContactInfoProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VEmployeeProvider">
            <summary>
             Current VEmployeeProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VEmployeeDepartmentProvider">
            <summary>
             Current VEmployeeDepartmentProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VEmployeeDepartmentHistoryProvider">
            <summary>
             Current VEmployeeDepartmentHistoryProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VIndividualCustomerProvider">
            <summary>
             Current VIndividualCustomerProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VIndividualDemographicsProvider">
            <summary>
             Current VIndividualDemographicsProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VJobCandidateProvider">
            <summary>
             Current VJobCandidateProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VJobCandidateEducationProvider">
            <summary>
             Current VJobCandidateEducationProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VJobCandidateEmploymentProvider">
            <summary>
             Current VJobCandidateEmploymentProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VProductAndDescriptionProvider">
            <summary>
             Current VProductAndDescriptionProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VProductModelCatalogDescriptionProvider">
            <summary>
             Current VProductModelCatalogDescriptionProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VProductModelInstructionsProvider">
            <summary>
             Current VProductModelInstructionsProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VSalesPersonProvider">
            <summary>
             Current VSalesPersonProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VSalesPersonSalesByFiscalYearsProvider">
            <summary>
             Current VSalesPersonSalesByFiscalYearsProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VStateProvinceCountryRegionProvider">
            <summary>
             Current VStateProvinceCountryRegionProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VStoreWithDemographicsProvider">
            <summary>
             Current VStoreWithDemographicsProviderBase instance.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.NetTiersProvider.VVendorProvider">
            <summary>
             Current VVendorProviderBase instance.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.SalesTerritory</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryChildEntityTypes.StateProvinceCollection">
            <summary>
             Collection of <c>SalesTerritory</c> as OneToMany for StateProvinceCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryChildEntityTypes.SalesOrderHeaderCollection">
            <summary>
             Collection of <c>SalesTerritory</c> as OneToMany for SalesOrderHeaderCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryChildEntityTypes.SalesPersonCollection">
            <summary>
             Collection of <c>SalesTerritory</c> as OneToMany for SalesPersonCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryChildEntityTypes.SalesTerritoryHistoryCollection">
            <summary>
             Collection of <c>SalesTerritory</c> as OneToMany for SalesTerritoryHistoryCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryChildEntityTypes.CustomerCollection">
            <summary>
             Collection of <c>SalesTerritory</c> as OneToMany for CustomerCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritorySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesTerritory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesTerritorySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesTerritorySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesReasonChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.SalesReason</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesReasonChildEntityTypes.SalesOrderHeaderSalesReasonCollection">
            <summary>
             Collection of <c>SalesReason</c> as OneToMany for SalesOrderHeaderSalesReasonCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.SalesReasonChildEntityTypes.SalesOrderIdSalesOrderHeaderCollection_From_SalesOrderHeaderSalesReason">
            <summary>
             Collection of <c>SalesReason</c> as ManyToMany for SalesOrderHeaderCollection_From_SalesOrderHeaderSalesReason
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesReasonSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.SalesReason"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.SalesReasonSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the SalesReasonSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductInventoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByAddressIdFromEmployeeAddress(System.Int32)">
            <summary>
            	Gets Employee objects from the datasource by AddressID in the
            	EmployeeAddress table. Table Employee is related to table Address
            	through the (M:N) relationship defined in the EmployeeAddress table.
            </summary>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <returns>Returns a typed collection of Employee objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByAddressIdFromEmployeeAddress(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.Employee objects from the datasource by AddressID in the
            	EmployeeAddress table. Table Employee is related to table Address
            	through the (M:N) relationship defined in the EmployeeAddress table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Employee objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByAddressIdFromEmployeeAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets Employee objects from the datasource by AddressID in the
            	EmployeeAddress table. Table Employee is related to table Address
            	through the (M:N) relationship defined in the EmployeeAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Employee objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByAddressIdFromEmployeeAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Employee objects from the datasource by AddressID in the
            	EmployeeAddress table. Table Employee is related to table Address
            	through the (M:N) relationship defined in the EmployeeAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Employee objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByAddressIdFromEmployeeAddress(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Employee objects from the datasource by AddressID in the
            	EmployeeAddress table. Table Employee is related to table Address
            	through the (M:N) relationship defined in the EmployeeAddress table.
            </summary>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Employee objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByAddressIdFromEmployeeAddress(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Employee objects from the datasource by AddressID in the
            	EmployeeAddress table. Table Employee is related to table Address
            	through the (M:N) relationship defined in the EmployeeAddress table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_addressId">Primary key. Foreign key to Address.AddressID.</param>
            <remarks></remarks>
            <returns>Returns a TList of Employee objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.EmployeeKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_employeeId">Primary key for Employee records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Primary key for Employee records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByContactId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Employee_Contact_ContactID key.
            	FK_Employee_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="_contactId">Identifies the employee in the Contact table. Foreign key to Contact.ContactID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Employee objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Employee_Contact_ContactID key.
            	FK_Employee_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Identifies the employee in the Contact table. Foreign key to Contact.ContactID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Employee objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Employee_Contact_ContactID key.
            	FK_Employee_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Identifies the employee in the Contact table. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Employee objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByContactId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_Employee_Contact_ContactID key.
            	fkEmployeeContactContactId Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_contactId">Identifies the employee in the Contact table. Foreign key to Contact.ContactID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Employee objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByContactId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Employee_Contact_ContactID key.
            	fkEmployeeContactContactId Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_contactId">Identifies the employee in the Contact table. Foreign key to Contact.ContactID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Employee objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByContactId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Employee_Contact_ContactID key.
            	FK_Employee_Contact_ContactID Description: Foreign key constraint referencing Contact.ContactID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_contactId">Identifies the employee in the Contact table. Foreign key to Contact.ContactID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.Employee objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.EmployeeKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByLoginId(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Employee_LoginID index.
            </summary>
            <param name="_loginId">Network login.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByLoginId(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Employee_LoginID index.
            </summary>
            <param name="_loginId">Network login.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByLoginId(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_Employee_LoginID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_loginId">Network login.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByLoginId(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Employee_LoginID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_loginId">Network login.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByLoginId(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Employee_LoginID index.
            </summary>
            <param name="_loginId">Network login.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByLoginId(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Employee_LoginID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_loginId">Network login.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByNationalIdNumber(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Employee_NationalIDNumber index.
            </summary>
            <param name="_nationalIdNumber">Unique national identification number such as a social security number.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByNationalIdNumber(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Employee_NationalIDNumber index.
            </summary>
            <param name="_nationalIdNumber">Unique national identification number such as a social security number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByNationalIdNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_Employee_NationalIDNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_nationalIdNumber">Unique national identification number such as a social security number.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByNationalIdNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Employee_NationalIDNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_nationalIdNumber">Unique national identification number such as a social security number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByNationalIdNumber(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Employee_NationalIDNumber index.
            </summary>
            <param name="_nationalIdNumber">Unique national identification number such as a social security number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByNationalIdNumber(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Employee_NationalIDNumber index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_nationalIdNumber">Unique national identification number such as a social security number.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_Employee_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Employee_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_Employee_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_Employee_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Employee_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_Employee_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByManagerId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the primary key IX_Employee_ManagerID index.
            </summary>
            <param name="_managerId">Manager to whom the employee is assigned. Foreign Key to Employee.M</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByManagerId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Employee_ManagerID index.
            </summary>
            <param name="_managerId">Manager to whom the employee is assigned. Foreign Key to Employee.M</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByManagerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the IX_Employee_ManagerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_managerId">Manager to whom the employee is assigned. Foreign Key to Employee.M</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByManagerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Employee_ManagerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_managerId">Manager to whom the employee is assigned. Foreign Key to Employee.M</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByManagerId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Employee_ManagerID index.
            </summary>
            <param name="_managerId">Manager to whom the employee is assigned. Foreign Key to Employee.M</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByManagerId(Nettiers.AdventureWorks.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Employee_ManagerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_managerId">Manager to whom the employee is assigned. Foreign Key to Employee.M</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByEmployeeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Employee_EmployeeID index.
            </summary>
            <param name="_employeeId">Primary key for Employee records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByEmployeeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Employee_EmployeeID index.
            </summary>
            <param name="_employeeId">Primary key for Employee records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Employee_EmployeeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Primary key for Employee records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Employee_EmployeeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Primary key for Employee records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByEmployeeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Employee_EmployeeID index.
            </summary>
            <param name="_employeeId">Primary key for Employee records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.GetByEmployeeId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Employee_EmployeeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_employeeId">Primary key for Employee records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.Employee},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Employee&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.Employee)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.Employee)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Employee,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Employee Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.Employee,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.Employee object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.Employee instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.Employee Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.DocumentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactTypeChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ContactType</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ContactTypeChildEntityTypes.StoreContactCollection">
            <summary>
             Collection of <c>ContactType</c> as OneToMany for StoreContactCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ContactTypeChildEntityTypes.VendorContactCollection">
            <summary>
             Collection of <c>ContactType</c> as OneToMany for VendorContactCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactTypeSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ContactType"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ContactTypeSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ContactTypeSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VIndividualCustomerProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.DeepLoadType">
            <summary>
            DeepLoad options for deep loading entities
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.DeepLoadType.IncludeChildren">
            <summary>
            Will Include a child property collection 1 Level Deep
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.DeepLoadType.ExcludeChildren">
            <summary>
            Will Exclude a child property collection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.DeepLoadType.Ignore">
            <summary>
            Will ignore the request and return the entity.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.DeepSaveType">
            <summary>
            DeepSave options for deep saving entities
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.DeepSaveType.IncludeChildren">
            <summary>Will Include a child property collection</summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.DeepSaveType.ExcludeChildren">
            <summary>Will Exclude a child property collection</summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.DeepSaveType.Ignore">
            <summary>Will ignore the request and return the entity.</summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Utility">
            <summary>
            Contains some helper function for SQL.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.GetDefaultByType(System.Data.DbType)">
            <summary>
            Get a default value for a given data type
            </summary>
            <param name="dataType">Data type for which to get the default value</param>
            <returns>An object of the default value.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.GetDataValue(System.Data.IDataParameter)">
            <summary>
            Get Value or Default Value from an IDataParamater
            Based on DbType
            </summary>
            <param name="p">The IDataParameter instance type is used to determine the default value.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.DefaultToDBNull(System.Object,System.Data.DbType)">
            <summary>
            Checks to see if the Default Value has been set to the parameter.
            If it's the default value, then create.
            </summary>
            <param name="val">The value we want to check.</param>
            <param name="dbtype">The DbType from wich we take the default value.</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.GetParameterValue``1(System.Data.IDataParameter)">
            <summary>
            Generic method to return the value of a nullable parameter
            </summary>
            <typeparam name="T">Type of value to return</typeparam>
            <param name="parameter">Parameter from which to extract the value</param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.ConvertDataReaderToDataSet(System.Data.IDataReader)">
            <summary>
            Converts a IDataReader to a DataSet.  For use when a custom stored procedure returns an <see cref="T:System.Data.IDataReader"/>, it will 
            convert all result sets returned as a DataSet.
            </summary>
            <param name="reader">The reader to convert</param>
            <returns>A dataset with one table per result in the reader</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.DetectSqlInjection(System.String)">
            <summary>
            A helper method to attempt to discover known SqlInjection attacks.  
            For use when using one of the flexible non-parameterized access methods, such as GetPaged()
            </summary>
            <param name="whereClause">string of the whereClause to check</param>
            <returns>true if found, false if not found </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.DetectSqlInjection(System.String,System.String)">
            <summary>
            A helper method to attempt to discover known SqlInjection attacks.  
            For use when using one of the flexible non-parameterized access methods, such as GetPaged()
            </summary>
            <param name="whereClause">string of the whereClause to check</param>
            <param name="orderBy">string of the orderBy clause to check</param>
            <returns>true if found, false if not found </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.ParseSortExpression(System.Type,System.String)">
            <summary>
            Parses the supplied sort expression parameter to verify that it
            matches the specifed column name enumeration.
            </summary>
            <param name="columnEnum"></param>
            <param name="sortExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.ExecuteReader(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns an <see cref="T:System.Data.IDataReader"/> through which the result can be read. 
            It is the responsibility of the caller to close the connection and reader when finished. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> object.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.ExecuteReader(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns an <see cref="T:System.Data.IDataReader"/> through which the result can be read. 
            It is the responsibility of the caller to close the connection and reader when finished. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> object.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.ExecuteNonQuery(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the number of rows affected. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>The number of rows affected.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.ExecuteNonQuery(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the number of rows affected. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>The number of rows affected.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.ExecuteDataSet(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the results in a new <see cref="T:System.Data.DataSet"/>. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>A <see cref="T:System.Data.DataSet"/> containing the results of the command.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.ExecuteDataSet(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the results in a new <see cref="T:System.Data.DataSet"/>. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>A <see cref="T:System.Data.DataSet"/> containing the results of the command.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.ExecuteScalar(Nettiers.AdventureWorks.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the scalar object. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>The number of rows affected.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Utility.ExecuteScalar(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returnsthe scalar object. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>A <see cref="T:System.Data.DataSet"/> containing the results of the command.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DeepSessionEventArgs">
            <summary>
            Event Args used to transfer crucial information just before 
            and after a command is used in the data provider.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DeepSessionEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DeepSessionEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DeepSessionEventArgs.#ctor(Nettiers.AdventureWorks.Data.Bases.DeepSession,System.String,System.Enum,Nettiers.AdventureWorks.Entities.IEntity,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:DeepSessionEventArgs"/> class.
            </summary>
            <param name="deepSession">The Current Deep Session.</param>
            <param name="currentTypePropertyKey">The Current Key"</param>
            <param name="deepTypeValue">The current Deep Type Value, DeepSaveType/DeepLoadType </param>
            <param name="entity">The entity.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DeepSessionEventArgs.#ctor(Nettiers.AdventureWorks.Data.Bases.DeepSession,System.String,System.Enum,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="deepSession">The deepSession.</param>
            <param name="currentTypePropertyKey">The Current Key"</param>
            <param name="deepTypeValue">The current Deep Type Value, DeepSaveType/DeepLoadType </param>
            <param name="list">The list.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DeepSessionEventArgs.#ctor(Nettiers.AdventureWorks.Data.Bases.DeepSession,System.String,System.Enum,Nettiers.AdventureWorks.Entities.IEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="deepSession">The deepSession.</param>
            <param name="currentTypePropertyKey">The Current Key.</param>
            <param name="deepTypeValue">The current Deep Type Value, DeepSaveType/DeepLoadType </param>
            <param name="entity">The current entity.</param>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.DeepSessionEventArgs.DeepSession">
            <summary>
            Gets or sets the current DeepSession.
            </summary>
            <value>The DeepSession.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.DeepSessionEventArgs.CurrentEntity">
            <summary>
            Gets or sets the current entity which the action is 
            being acted on.  If there is no entity, this 
            value will be null.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.DeepSessionEventArgs.CurrentEntityList">
            <summary>
            Gets or sets the current .
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.DeepSessionEventArgs.CurrentTypePropertyKey">
            <summary>
            Gets or Sets the name of the current type property key that 
            will be used to determine if the property will be run in the deep session.
            </summary>
            <value>A string value of the type property key.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.DeepSessionEventArgs.DeepTypeValue">
            <summary>
             The current DeepType Value, Either <c>DeepLoadType</c>, or <c>DeepSaveType</c>.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.DeepSessionEventArgs.Cancel">
            <summary>
            Gets or sets the Cancel property of the event.
            </summary>
            <value>Current Cancel Value.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.DeepSessionEventArgs.Skip">
            <summary>
            Gets or sets the current Skip value.  
            Setting this property will skip the current Deep Property.
            </summary>
            <value>The name of the method.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CommandEventArgs">
            <summary>
            Event Args used to transfer crucial information just before 
            and after a command is used in the data provider.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CommandEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String,Nettiers.AdventureWorks.Entities.IEntity,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
            <param name="entity">The entity.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String,Nettiers.AdventureWorks.Entities.IEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
            <param name="entity">The current entity.</param>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.CommandEventArgs.Command">
            <summary>
            Gets or sets the current command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.CommandEventArgs.MethodName">
            <summary>
            Gets or sets the name of the method.
            </summary>
            <value>The name of the method.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.CommandEventArgs.CurrentEntity">
            <summary>
            Gets or sets the current entity which the action is 
            being acted on.  If there is no entity, this 
            value will be null.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.CommandEventArgs.CurrentEntityList">
            <summary>
            Gets or sets the current .
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DeepSession">
            <summary>
            Keeps a weak reference of the entire deep transaction for tracking purposes.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DeepSession.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DeepSession"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DeepSession.GetSessionObjects">
            <summary>
            Gets the set of current loaded objects.
            </summary>
            <returns>a list of already run objects</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DeepSession.AddRun(System.Object,System.String)">
            <summary>
            Adds the specified entity property to the collection of properties.
            </summary>
            <param name="entity"></param>
            <param name="key"></param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DeepSession.ContainsType(System.String)">
            <summary>
            Determines whether the specified obj has run for a specified property type.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified obj has run; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DeepSession.ContainsTypeExcluded(System.String)">
            <summary>
            Determines whether the specified obj has run for a specified property type.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified obj has run; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DeepSession.HasRun(System.Object,System.String)">
            <summary>
            Determines whether the specified obj has run.
            </summary>
            <param name="entity">The entity.</param>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified obj has run; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DeepSession.GetReference(System.Object,System.String)">
            <summary>
            Get's the reference of the object that has run
            </summary>
            <param name="entity">The entity.</param>
            <param name="key">The key.</param>
            <returns>
            	object of the run reference
            </returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.DeepSession.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.DeepSession.DeepSessionInnerList">
            <summary>
            Gets the Deep Session nner list.
            </summary>
            <value>The inner list.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.DeepSession.CancelSession">
            <summary>
            If set to true, any further requests for this deep session will be canceled.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.DeepSession.SkipChildren">
            <summary>
            If set to true, any further requests for this deep session requesting to Load a child collection will be skipped.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DeepSaveHandle`1">
            <summary>
            Handler for the deep save
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DeepSaveSingleHandle`1">
            <summary>
            Handler for the single deep save
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DeepLoadHandle`1">
            <summary>
            Handler for the deep load
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.DeepLoadSingleHandle`1">
            <summary>
            Handler for the single deep load
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ChildEntityTypeAttribute">
            <summary>
             Attribute used to decorate enumerations with underlying system type.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ChildEntityTypeAttribute.#ctor(System.Type)">
            <summary>
             Marks the underlying type of a child entity property.
             </summary>
             <param name="entityType">Type of the property to load.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ChildEntityTypeAttribute.GetType(System.Enum)">
            <summary>
            Gets the underlying system type for the specified enumeration value.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.ChildEntityTypeAttribute.EntityType">
            <summary>
            The underlying type for the ChildEntityTypes enumerations.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.IChildEntityProperty">
            <summary>
            Provides a common property used to access the child entity type enumeration value.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.IChildEntityProperty.ChildEntityType">
            <summary>
            Gets the value of the ChildEntityType property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ChildEntityProperty`1">
            <summary>
            A generic wrapper for the generated ChildEntityTypes enumerations.
            </summary>
            <typeparam name="ChildEntityTypesEnum"></typeparam>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ChildEntityProperty`1.name">
            <summary>
            The Name member variable.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.ChildEntityProperty`1.Name">
            <summary>
            Gets or sets the Name property.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.Bases.ChildEntityProperty`1.ChildEntityType">
            <summary>
            Gets the value of the ChildEntityType property.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VendorContactProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SpecialOfferProductProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesTerritoryHistoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.SalesOrderHeaderSalesReasonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductDocumentChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ProductDocument</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductDocumentChildEntityTypes.Document">
            <summary>
             Composite Property for <c>Document</c> at DocumentIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductDocumentChildEntityTypes.Product">
            <summary>
             Composite Property for <c>Product</c> at ProductIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductDocumentSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDocument"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDocumentSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductDocumentSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByCultureIdFromProductModelProductDescriptionCulture(System.String)">
            <summary>
            	Gets ProductDescription objects from the datasource by CultureID in the
            	ProductModelProductDescriptionCulture table. Table ProductDescription is related to table Culture
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <returns>Returns a typed collection of ProductDescription objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByCultureIdFromProductModelProductDescriptionCulture(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.ProductDescription objects from the datasource by CultureID in the
            	ProductModelProductDescriptionCulture table. Table ProductDescription is related to table Culture
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <remarks></remarks>
            <returns>Returns a TList of ProductDescription objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByCultureIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets ProductDescription objects from the datasource by CultureID in the
            	ProductModelProductDescriptionCulture table. Table ProductDescription is related to table Culture
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductDescription objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByCultureIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets ProductDescription objects from the datasource by CultureID in the
            	ProductModelProductDescriptionCulture table. Table ProductDescription is related to table Culture
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductDescription objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByCultureIdFromProductModelProductDescriptionCulture(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ProductDescription objects from the datasource by CultureID in the
            	ProductModelProductDescriptionCulture table. Table ProductDescription is related to table Culture
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductDescription objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByCultureIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ProductDescription objects from the datasource by CultureID in the
            	ProductModelProductDescriptionCulture table. Table ProductDescription is related to table Culture
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_cultureId">Culture identification number. Foreign key to Culture.CultureID.</param>
            <remarks></remarks>
            <returns>Returns a TList of ProductDescription objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByProductModelIdFromProductModelProductDescriptionCulture(System.Int32)">
            <summary>
            	Gets ProductDescription objects from the datasource by ProductModelID in the
            	ProductModelProductDescriptionCulture table. Table ProductDescription is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <returns>Returns a typed collection of ProductDescription objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByProductModelIdFromProductModelProductDescriptionCulture(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets Nettiers.AdventureWorks.Entities.ProductDescription objects from the datasource by ProductModelID in the
            	ProductModelProductDescriptionCulture table. Table ProductDescription is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <remarks></remarks>
            <returns>Returns a TList of ProductDescription objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByProductModelIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets ProductDescription objects from the datasource by ProductModelID in the
            	ProductModelProductDescriptionCulture table. Table ProductDescription is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductDescription objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByProductModelIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets ProductDescription objects from the datasource by ProductModelID in the
            	ProductModelProductDescriptionCulture table. Table ProductDescription is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductDescription objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByProductModelIdFromProductModelProductDescriptionCulture(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ProductDescription objects from the datasource by ProductModelID in the
            	ProductModelProductDescriptionCulture table. Table ProductDescription is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductDescription objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByProductModelIdFromProductModelProductDescriptionCulture(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ProductDescription objects from the datasource by ProductModelID in the
            	ProductModelProductDescriptionCulture table. Table ProductDescription is related to table ProductModel
            	through the (M:N) relationship defined in the ProductModelProductDescriptionCulture table.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <param name="_productModelId">Primary key. Foreign key to ProductModel.ProductModelID.</param>
            <remarks></remarks>
            <returns>Returns a TList of ProductDescription objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductDescriptionKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productDescriptionId">Primary key for ProductDescription records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productDescriptionId">Primary key for ProductDescription records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductDescriptionKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_ProductDescription_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductDescription_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductDescription_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductDescription_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductDescription_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductDescription_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByProductDescriptionId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ProductDescription_ProductDescriptionID index.
            </summary>
            <param name="_productDescriptionId">Primary key for ProductDescription records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByProductDescriptionId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductDescription_ProductDescriptionID index.
            </summary>
            <param name="_productDescriptionId">Primary key for ProductDescription records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByProductDescriptionId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductDescription_ProductDescriptionID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productDescriptionId">Primary key for ProductDescription records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByProductDescriptionId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductDescription_ProductDescriptionID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productDescriptionId">Primary key for ProductDescription records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByProductDescriptionId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductDescription_ProductDescriptionID index.
            </summary>
            <param name="_productDescriptionId">Primary key for ProductDescription records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.GetByProductDescriptionId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductDescription_ProductDescriptionID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productDescriptionId">Primary key for ProductDescription records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ProductDescription},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ProductDescription&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ProductDescription)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ProductDescription)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductDescription,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductDescription Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductDescription,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ProductDescription object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ProductDescription instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductDescription Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductCategoryKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productCategoryId">Primary key for ProductCategory records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productCategoryId">Primary key for ProductCategory records.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductCategoryKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_ProductCategory_Name index.
            </summary>
            <param name="_name">Category description.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductCategory_Name index.
            </summary>
            <param name="_name">Category description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductCategory_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Category description.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductCategory_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Category description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductCategory_Name index.
            </summary>
            <param name="_name">Category description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByName(Nettiers.AdventureWorks.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductCategory_Name index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_name">Category description.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByRowguid(System.Guid)">
            <summary>
            	Gets rows from the datasource based on the primary key AK_ProductCategory_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductCategory_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductCategory_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductCategory_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByRowguid(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductCategory_rowguid index.
            </summary>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByRowguid(Nettiers.AdventureWorks.Data.TransactionManager,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AK_ProductCategory_rowguid index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_rowguid">ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByProductCategoryId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ProductCategory_ProductCategoryID index.
            </summary>
            <param name="_productCategoryId">Primary key for ProductCategory records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByProductCategoryId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductCategory_ProductCategoryID index.
            </summary>
            <param name="_productCategoryId">Primary key for ProductCategory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByProductCategoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductCategory_ProductCategoryID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productCategoryId">Primary key for ProductCategory records.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByProductCategoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductCategory_ProductCategoryID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productCategoryId">Primary key for ProductCategory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByProductCategoryId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductCategory_ProductCategoryID index.
            </summary>
            <param name="_productCategoryId">Primary key for ProductCategory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.GetByProductCategoryId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductCategory_ProductCategoryID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productCategoryId">Primary key for ProductCategory records.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ProductCategory},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ProductCategory&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ProductCategory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ProductCategory)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductCategory,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductCategory Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductCategory,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ProductCategory object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ProductCategory instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductCategory Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductCategoryChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ProductCategory</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductCategoryChildEntityTypes.ProductSubcategoryCollection">
            <summary>
             Collection of <c>ProductCategory</c> as OneToMany for ProductSubcategoryCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductCategorySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductCategory"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductCategorySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductCategorySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductCategoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.Employee</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeeChildEntityTypes.Contact">
            <summary>
             Composite Property for <c>Contact</c> at ContactIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeeChildEntityTypes.Employee">
            <summary>
             Composite Property for <c>Employee</c> at ManagerIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeeChildEntityTypes.EmployeeCollection">
            <summary>
             Collection of <c>Employee</c> as OneToMany for EmployeeCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeeChildEntityTypes.JobCandidateCollection">
            <summary>
             Collection of <c>Employee</c> as OneToMany for JobCandidateCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeeChildEntityTypes.SalesPerson">
            <summary>
             Entity <c>SalesPerson</c> as OneToOne for SalesPerson
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeeChildEntityTypes.EmployeeAddressCollection">
            <summary>
             Collection of <c>Employee</c> as OneToMany for EmployeeAddressCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeeChildEntityTypes.EmployeePayHistoryCollection">
            <summary>
             Collection of <c>Employee</c> as OneToMany for EmployeePayHistoryCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeeChildEntityTypes.PurchaseOrderHeaderCollection">
            <summary>
             Collection of <c>Employee</c> as OneToMany for PurchaseOrderHeaderCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeeChildEntityTypes.AddressIdAddressCollection_From_EmployeeAddress">
            <summary>
             Collection of <c>Employee</c> as ManyToMany for AddressCollection_From_EmployeeAddress
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.EmployeeChildEntityTypes.EmployeeDepartmentHistoryCollection">
            <summary>
             Collection of <c>Employee</c> as OneToMany for EmployeeDepartmentHistoryCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.EmployeeSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Employee"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.EmployeeSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EmployeeSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CountryRegionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VProductModelInstructionsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VList{Nettiers.AdventureWorks.Entities.VJobCandidateEmployment},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.VList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.VJobCandidateEmployment)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmployment"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmployment"/> object to refresh.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VJobCandidateEmployment"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VJobCandidateEmploymentSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VIndividualDemographics"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VIndividualDemographicsSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VIndividualDemographicsSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.TransactionManager">
            <summary>
            TransactionManager is utility class that decorates a <see cref="T:System.Data.IDbTransaction"/> instance.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> class.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> class.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionManager.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> class.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="providerInvariantName">Name of the provider invariant.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionManager.BeginTransaction">
            <summary>
            Begins a transaction.
            </summary>
            <remarks>The default <see cref="T:System.Data.IsolationLevel"/> mode is ReadCommitted</remarks>
            <exception cref="T:System.InvalidOperationException">If a transaction is already open.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionManager.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins a transaction.
            </summary>
            <param name="isolationLevel">The <see cref="T:System.Data.IsolationLevel"/> level of the transaction</param>
            <exception cref="T:System.InvalidOperationException">If a transaction is already open.</exception>
            <exception cref="T:System.Data.DataException"></exception>
            <exception cref="T:System.Data.Common.DbException"></exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionManager.Commit">
            <summary>
            Commit the transaction to the datasource.
            </summary>
            <exception cref="T:System.InvalidOperationException">If a transaction is not open.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionManager.Rollback">
            <summary>
            Rollback the transaction.
            </summary>
            <exception cref="T:System.InvalidOperationException">If a transaction is not open.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.TransactionManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.TransactionManager.ConnectionString">
            <summary>
            Gets or sets the configuration key for database service.
            </summary>
            <remark>Do not change during a transaction.</remark>
            <exception cref="T:System.InvalidOperationException">
            If an attempt to set when the connection is currently open.
            </exception>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.TransactionManager.InvariantProviderName">
            <summary>
            Gets or sets the name of the invariant provider.
            </summary>
            <value>The name of the invariant provider.</value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.TransactionManager.Database">
            <summary>
            Gets the <see cref="P:Nettiers.AdventureWorks.Data.TransactionManager.Database"/> instance.
            </summary>
            <value></value>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.TransactionManager.TransactionObject">
            <summary>
            Gets the underlying <see cref="T:System.Data.Common.DbTransaction"/> object.
            </summary>
        </member>
        <member name="P:Nettiers.AdventureWorks.Data.TransactionManager.IsOpen">
            <summary>
            Gets a value that indicates if a transaction is currently open and operating. 
            </summary>
            <value>Return true if a transaction session is currently open and operating; otherwise false.</value>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.Vendor</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.VendorChildEntityTypes.VendorAddressCollection">
            <summary>
             Collection of <c>Vendor</c> as OneToMany for VendorAddressCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.VendorChildEntityTypes.ProductIdProductCollection_From_ProductVendor">
            <summary>
             Collection of <c>Vendor</c> as ManyToMany for ProductCollection_From_ProductVendor
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.VendorChildEntityTypes.AddressIdAddressCollection_From_VendorAddress">
            <summary>
             Collection of <c>Vendor</c> as ManyToMany for AddressCollection_From_VendorAddress
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.VendorChildEntityTypes.ContactIdContactCollection_From_VendorContact">
            <summary>
             Collection of <c>Vendor</c> as ManyToMany for ContactCollection_From_VendorContact
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.VendorChildEntityTypes.VendorContactCollection">
            <summary>
             Collection of <c>Vendor</c> as OneToMany for VendorContactCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.VendorChildEntityTypes.PurchaseOrderHeaderCollection">
            <summary>
             Collection of <c>Vendor</c> as OneToMany for PurchaseOrderHeaderCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.VendorChildEntityTypes.ProductVendorCollection">
            <summary>
             Collection of <c>Vendor</c> as OneToMany for ProductVendorCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VendorSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Vendor"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VendorSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VendorSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.TestVariantProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ScrapReasonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductProductPhotoKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.Delete(System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.. Primary Key.</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.Delete(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.. Primary Key.</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductProductPhoto_Product_ProductID key.
            	FK_ProductProductPhoto_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductProductPhoto_Product_ProductID key.
            	FK_ProductProductPhoto_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductProductPhoto objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductProductPhoto_Product_ProductID key.
            	FK_ProductProductPhoto_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductProductPhoto_Product_ProductID key.
            	fkProductProductPhotoProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductProductPhoto_Product_ProductID key.
            	fkProductProductPhotoProductProductId Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductProductPhoto_Product_ProductID key.
            	FK_ProductProductPhoto_Product_ProductID Description: Foreign key constraint referencing Product.ProductID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductPhotoId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductProductPhoto_ProductPhoto_ProductPhotoID key.
            	FK_ProductProductPhoto_ProductPhoto_ProductPhotoID Description: Foreign key constraint referencing ProductPhoto.ProductPhotoID.
            </summary>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductPhotoId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductProductPhoto_ProductPhoto_ProductPhotoID key.
            	FK_ProductProductPhoto_ProductPhoto_ProductPhotoID Description: Foreign key constraint referencing ProductPhoto.ProductPhotoID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductProductPhoto objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductPhotoId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductProductPhoto_ProductPhoto_ProductPhotoID key.
            	FK_ProductProductPhoto_ProductPhoto_ProductPhotoID Description: Foreign key constraint referencing ProductPhoto.ProductPhotoID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductPhotoId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductProductPhoto_ProductPhoto_ProductPhotoID key.
            	fkProductProductPhotoProductPhotoProductPhotoId Description: Foreign key constraint referencing ProductPhoto.ProductPhotoID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductPhotoId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductProductPhoto_ProductPhoto_ProductPhotoID key.
            	fkProductProductPhotoProductPhotoProductPhotoId Description: Foreign key constraint referencing ProductPhoto.ProductPhotoID.
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductPhotoId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ProductProductPhoto_ProductPhoto_ProductPhotoID key.
            	FK_ProductProductPhoto_ProductPhoto_ProductPhotoID Description: Foreign key constraint referencing ProductPhoto.ProductPhotoID.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of Nettiers.AdventureWorks.Entities.ProductProductPhoto objects.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.Get(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductProductPhotoKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductIdProductPhotoId(System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ProductProductPhoto_ProductID_ProductPhotoID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductIdProductPhotoId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductProductPhoto_ProductID_ProductPhotoID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductIdProductPhotoId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductProductPhoto_ProductID_ProductPhotoID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductIdProductPhotoId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductProductPhoto_ProductID_ProductPhotoID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductIdProductPhotoId(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductProductPhoto_ProductID_ProductPhotoID index.
            </summary>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.GetByProductIdProductPhotoId(Nettiers.AdventureWorks.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ProductProductPhoto_ProductID_ProductPhotoID index.
            </summary>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="_productId">Product identification number. Foreign key to Product.ProductID.</param>
            <param name="_productPhotoId">Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> class.</returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.Fill(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.TList{Nettiers.AdventureWorks.Entities.ProductProductPhoto},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;ProductProductPhoto&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:Nettiers.AdventureWorks.Entities.TList`1"/></returns>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.RefreshEntity(System.Data.IDataReader,Nettiers.AdventureWorks.Entities.ProductProductPhoto)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> object to refresh.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.RefreshEntity(System.Data.DataSet,Nettiers.AdventureWorks.Entities.ProductProductPhoto)">
            <summary>
            Refreshes the <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> object.</param>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.DeepLoad(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductProductPhoto,System.Boolean,Nettiers.AdventureWorks.Data.DeepLoadType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:Nettiers.AdventureWorks.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:Nettiers.AdventureWorks.Data.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:Nettiers.AdventureWorks.Data.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductProductPhoto Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBaseCore.DeepSave(Nettiers.AdventureWorks.Data.TransactionManager,Nettiers.AdventureWorks.Entities.ProductProductPhoto,Nettiers.AdventureWorks.Data.DeepSaveType,System.Type[],Nettiers.AdventureWorks.Data.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the Nettiers.AdventureWorks.Entities.ProductProductPhoto object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">Nettiers.AdventureWorks.Entities.ProductProductPhoto instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Nettiers.AdventureWorks.Entities.ProductProductPhoto Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ProductProductPhoto</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoChildEntityTypes.Product">
            <summary>
             Composite Property for <c>Product</c> at ProductIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoChildEntityTypes.ProductPhoto">
            <summary>
             Composite Property for <c>ProductPhoto</c> at ProductPhotoIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductProductPhoto"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductProductPhotoSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ProductProductPhotoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.ProductDescription</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionChildEntityTypes.ProductModelProductDescriptionCultureCollection">
            <summary>
             Collection of <c>ProductDescription</c> as OneToMany for ProductModelProductDescriptionCultureCollection
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionChildEntityTypes.ProductModelIdProductModelCollection_From_ProductModelProductDescriptionCulture">
            <summary>
             Collection of <c>ProductDescription</c> as ManyToMany for ProductModelCollection_From_ProductModelProductDescriptionCulture
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionChildEntityTypes.CultureIdCultureCollection_From_ProductModelProductDescriptionCulture">
            <summary>
             Collection of <c>ProductDescription</c> as ManyToMany for CultureCollection_From_ProductModelProductDescriptionCulture
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.ProductDescription"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.ProductDescriptionSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the ProductDescriptionSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.JobCandidateProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.IndividualChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.Individual</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.IndividualChildEntityTypes.Contact">
            <summary>
             Composite Property for <c>Contact</c> at ContactIdSource
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.IndividualChildEntityTypes.Customer">
            <summary>
             Composite Property for <c>Customer</c> at CustomerIdSource
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.IndividualSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Individual"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IndividualSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the IndividualSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.IllustrationChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>Nettiers.AdventureWorks.Entities.Illustration</c>
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.IllustrationChildEntityTypes.ProductModelIdProductModelCollection_From_ProductModelIllustration">
            <summary>
             Collection of <c>Illustration</c> as ManyToMany for ProductModelCollection_From_ProductModelIllustration
            </summary>
        </member>
        <member name="F:Nettiers.AdventureWorks.Data.Bases.IllustrationChildEntityTypes.ProductModelIllustrationCollection">
            <summary>
             Collection of <c>Illustration</c> as OneToMany for ProductModelIllustrationCollection
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.IllustrationSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.Illustration"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.IllustrationSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the IllustrationSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.CustomerAddressProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.ContactCreditCardProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VProductModelCatalogDescriptionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:Nettiers.AdventureWorks.Data.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:Nettiers.AdventureWorks.Entities.VProductAndDescription"/> object.
            </summary>
        </member>
        <member name="M:Nettiers.AdventureWorks.Data.Bases.VProductAndDescriptionSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VProductAndDescriptionSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEmploymentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateEducationProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateProviderBase">
            <summary>
             This class is the base class for any <see cref="T:Nettiers.AdventureWorks.Data.Bases.VJobCandidateProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
    </members>
</doc>
